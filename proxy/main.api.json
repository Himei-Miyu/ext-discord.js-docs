{
  "metadata": {
    "toolPackage": "@discordjs/api-extractor",
    "toolVersion": "7.38.1",
    "schemaVersion": 1012,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/discordjs/discord.js/tree/main/packages/proxy",
  "kind": "Package",
  "canonicalReference": "@discordjs/proxy!",
  "docComment": "",
  "name": "@discordjs/proxy",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@discordjs/proxy!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!populateAbortErrorResponse:function(1)",
          "docComment": "/**\n * Populates a server response with data relevant for a timeout\n *\n * @param res - The sever response to populate\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "populateAbortErrorResponse",
              "canonicalReference": "@discordjs/proxy!populateAbortErrorResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/responseHelpers.ts",
          "fileLine": 60,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "populateAbortErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!populateErrorResponse:function(1)",
          "docComment": "/**\n * Tries to populate a server response from an error object\n *\n * @param res - The server response to populate\n *\n * @param error - The error to check and use\n *\n * @returns - True if the error is known and the response object was populated, otherwise false\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "populateErrorResponse",
              "canonicalReference": "@discordjs/proxy!populateErrorResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "error",
              "canonicalReference": "@discordjs/proxy!~error"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/responseHelpers.ts",
          "fileLine": 72,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            },
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "populateErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!populateGeneralErrorResponse:function(1)",
          "docComment": "/**\n * Populates a server response with the data from a Discord non-2xx REST response that is NOT a 429\n *\n * @param res - The server response to populate\n *\n * @param error - The error to populate the response with\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "populateGeneralErrorResponse",
              "canonicalReference": "@discordjs/proxy!populateGeneralErrorResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "error",
              "canonicalReference": "@discordjs/proxy!~error"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "DiscordAPIError",
              "canonicalReference": "@discordjs/rest!DiscordAPIError:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "HTTPError",
              "canonicalReference": "@discordjs/rest!HTTPError:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/responseHelpers.ts",
          "fileLine": 35,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            },
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 12
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "populateGeneralErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!populateRatelimitErrorResponse:function(1)",
          "docComment": "/**\n * Populates a server response with the data from a Discord 429 REST response\n *\n * @param res - The server response to populate\n *\n * @param error - The error to populate the response with\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "populateRatelimitErrorResponse",
              "canonicalReference": "@discordjs/proxy!populateRatelimitErrorResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "error",
              "canonicalReference": "@discordjs/proxy!~error"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "RateLimitError",
              "canonicalReference": "@discordjs/rest!RateLimitError:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/responseHelpers.ts",
          "fileLine": 50,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 12
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            },
            {
              "parameterName": "error",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "populateRatelimitErrorResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!populateSuccessfulResponse:function(1)",
          "docComment": "/**\n * Populates a server response with the data from a Discord 2xx REST response\n *\n * @param res - The server response to populate\n *\n * @param data - The data to populate the response with\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "populateSuccessfulResponse",
              "canonicalReference": "@discordjs/proxy!populateSuccessfulResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/proxy!~data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ResponseLike",
              "canonicalReference": "@discordjs/rest!ResponseLike:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/responseHelpers.ts",
          "fileLine": 12,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 11,
            "endIndex": 15
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            },
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "populateSuccessfulResponse"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/proxy!proxyRequests:function(1)",
          "docComment": "/**\n * Creates an HTTP handler used to forward requests to Discord\n *\n * @param rest - REST instance to use for the requests\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "proxyRequests",
              "canonicalReference": "@discordjs/proxy!proxyRequests"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "rest",
              "canonicalReference": "@discordjs/proxy!~rest"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "REST",
              "canonicalReference": "@discordjs/rest!REST:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "RequestHandler",
              "canonicalReference": "@discordjs/proxy!RequestHandler:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/handlers/proxyRequests.ts",
          "fileLine": 11,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "rest",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "proxyRequests"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/proxy!RequestHandler:type",
          "docComment": "/**\n * Represents a simple HTTP request handler\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RequestHandler",
              "canonicalReference": "@discordjs/proxy!RequestHandler:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "req",
              "canonicalReference": "@discordjs/proxy!~req"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "IncomingMessage",
              "canonicalReference": "!\"\\\"http\\\"\".IncomingMessage:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/proxy!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ServerResponse",
              "canonicalReference": "!\"\\\"http\\\"\".ServerResponse:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Awaitable",
              "canonicalReference": "@discordjs/util!Awaitable:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/util.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequestHandler",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 16
          }
        }
      ]
    }
  ]
}
