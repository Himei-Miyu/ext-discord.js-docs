{"meta":{"tpk":"@discordjs/api-extractor","tv":"7.52.7","v":1013,"ov":1013,"ts":{"$schema":"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json","noStandardTags":true,"tagDefinitions":[{"tagName":"@alpha","syntaxKind":"modifier"},{"tagName":"@beta","syntaxKind":"modifier"},{"tagName":"@defaultValue","syntaxKind":"block"},{"tagName":"@decorator","syntaxKind":"block","allowMultiple":true},{"tagName":"@deprecated","syntaxKind":"block"},{"tagName":"@eventProperty","syntaxKind":"modifier"},{"tagName":"@example","syntaxKind":"block","allowMultiple":true},{"tagName":"@experimental","syntaxKind":"modifier"},{"tagName":"@inheritDoc","syntaxKind":"inline"},{"tagName":"@internal","syntaxKind":"modifier"},{"tagName":"@label","syntaxKind":"inline"},{"tagName":"@link","syntaxKind":"inline","allowMultiple":true},{"tagName":"@override","syntaxKind":"modifier"},{"tagName":"@packageDocumentation","syntaxKind":"modifier"},{"tagName":"@param","syntaxKind":"block","allowMultiple":true},{"tagName":"@privateRemarks","syntaxKind":"block"},{"tagName":"@public","syntaxKind":"modifier"},{"tagName":"@readonly","syntaxKind":"modifier"},{"tagName":"@remarks","syntaxKind":"block"},{"tagName":"@returns","syntaxKind":"block"},{"tagName":"@sealed","syntaxKind":"modifier"},{"tagName":"@see","syntaxKind":"block"},{"tagName":"@throws","syntaxKind":"block","allowMultiple":true},{"tagName":"@typeParam","syntaxKind":"block","allowMultiple":true},{"tagName":"@virtual","syntaxKind":"modifier"},{"tagName":"@betaDocumentation","syntaxKind":"modifier"},{"tagName":"@internalRemarks","syntaxKind":"block"},{"tagName":"@preapproved","syntaxKind":"modifier"},{"tagName":"@mixes","syntaxKind":"block"}],"supportForTags":{"@alpha":true,"@beta":true,"@defaultValue":true,"@decorator":true,"@deprecated":true,"@eventProperty":true,"@example":true,"@experimental":true,"@inheritDoc":true,"@internal":true,"@label":true,"@link":true,"@override":true,"@packageDocumentation":true,"@param":true,"@privateRemarks":true,"@public":true,"@readonly":true,"@remarks":true,"@returns":true,"@sealed":true,"@see":true,"@throws":true,"@typeParam":true,"@virtual":true,"@betaDocumentation":true,"@internalRemarks":true,"@preapproved":true,"@mixes":true},"reportUnsupportedHtmlElements":false}},"pdir":"https://github.com/discordjs/discord.js/tree/main/packages/structures","dp":{"@discordjs/formatters":"0.6.1"},"k":"Package","c":"@discordjs/structures!","d":"","n":"@discordjs/structures","pmo":true,"ms":[{"k":"EntryPoint","c":"@discordjs/structures!","n":"","pmo":false,"ms":[{"k":"Class","c":"@discordjs/structures!AnnouncementChannel:class","d":"/**\n * Sample Implementation of a structure for announcement channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"AnnouncementChannel","c":"@discordjs/structures!AnnouncementChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APINewsChannel","c":"discord-api-types/v10!APINewsChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/AnnouncementChannel.ts","l":29,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"AnnouncementChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!AnnouncementChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `AnnouncementChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APINewsChannel","c":"discord-api-types/v10!APINewsChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":32,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!AnnouncementChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AnnouncementChannel","c":"@discordjs/structures!AnnouncementChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APINewsChannel","c":"discord-api-types/v10!APINewsChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/AnnouncementChannel.ts","l":13,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"AnnouncementChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":42,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!AnnouncementThreadChannel:class","d":"/**\n * Sample Implementation of a structure for announcement threads, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"AnnouncementThreadChannel","c":"@discordjs/structures!AnnouncementThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIAnnouncementThreadChannel","c":"discord-api-types/v10!APIAnnouncementThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/AnnouncementThreadChannel.ts","l":31,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"AnnouncementThreadChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!AnnouncementThreadChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `AnnouncementThreadChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIAnnouncementThreadChannel","c":"discord-api-types/v10!APIAnnouncementThreadChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":34,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!AnnouncementThreadChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AnnouncementThreadChannel","c":"@discordjs/structures!AnnouncementThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIAnnouncementThreadChannel","c":"discord-api-types/v10!APIAnnouncementThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types/v10!ChannelType.AnnouncementThread:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/AnnouncementThreadChannel.ts","l":14,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"AnnouncementThreadChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":46,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Interface","c":"@discordjs/structures!APIActualInvite:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"APIInvite","c":"discord-api-types/v10!APIInvite:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIExtendedInvite","c":"discord-api-types/v10!APIExtendedInvite:interface"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"APIInvite","c":"discord-api-types/v10!APIInvite:interface"},{"k":"Content","t":">"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/invites/Invite.ts","l":6,"co":1,"r":"Public","n":"APIActualInvite","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":14,"tps":[{"st":7,"en":13}]}]},{"k":"Class","c":"@discordjs/structures!AppliedTagsMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"AppliedTagsMixin","c":"@discordjs/structures!AppliedTagsMixin:class"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/AppliedTagsMixin.ts","l":7,"co":1,"r":"Public","ab":false,"n":"AppliedTagsMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!AppliedTagsMixin#appliedTags:member","d":"/**\n * The ids of the set of tags that have been applied to a thread in a {@link (ForumChannel:class)} or a {@link (MediaChannel:class)}.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"appliedTags","c":"@discordjs/structures!AppliedTagsMixin#appliedTags"},{"k":"Content","t":"(): "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"string"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"appliedTags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!AppliedTagsMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AppliedTagsMixin","c":"@discordjs/structures!AppliedTagsMixin:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/AppliedTagsMixin.ts","l":5,"co":1,"r":"Public","n":"AppliedTagsMixin","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Class","c":"@discordjs/structures!AvatarDecorationData:class","d":"/**\n * Represents metadata of an avatar decoration of a User.\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"AvatarDecorationData","c":"@discordjs/structures!AvatarDecorationData:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/users/AvatarDecorationData.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"AvatarDecorationData","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!AvatarDecorationData:constructor(1)","d":"/**\n * Constructs a new instance of the `AvatarDecorationData` class\n *\n * @param data - The raw data received from the API for the connection\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":23,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!AvatarDecorationData#asset:member","d":"/**\n * The asset of this avatar decoration.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"asset","c":"@discordjs/structures!AvatarDecorationData#asset"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"asset\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"asset\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":37,"co":2,"ro":true,"op":false,"r":"Public","n":"asset","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!AvatarDecorationData.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Connection\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!AvatarDecorationData.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!AvatarDecorationData#skuId:member","d":"/**\n * The id of the SKU this avatar decoration is part of.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"skuId","c":"@discordjs/structures!AvatarDecorationData#skuId"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"sku_id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"sku_id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIAvatarDecorationData","c":"discord-api-types/v10!APIAvatarDecorationData:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":30,"co":2,"ro":true,"op":false,"r":"Public","n":"skuId","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!BitField:class","d":"/**\n * Data structure that makes it easy to interact with a bit field.\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":"> "}],"pat":"src/bitfields/BitField.ts","l":23,"co":1,"r":"Public","tps":[{"tp":"Flags","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":true,"n":"BitField","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!BitField#[Symbol.iterator]:member(1)","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"Symbol.iterator","c":"!SymbolConstructor#iterator"},{"k":"Content","t":"](..."},{"k":"Reference","t":"hasParams","c":"@discordjs/structures!~hasParams"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Generator","c":"!Generator:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"void"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":175,"co":10,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hasParams","ptr":{"st":5,"en":7},"op":false,"rs":true}],"op":false,"ab":false,"n":"[Symbol.iterator]"},{"k":"Constructor","c":"@discordjs/structures!BitField:constructor(1)","d":"/**\n * Constructs a new instance of the `BitField` class\n *\n * @param bits - Bit(s) to read from\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"bits","c":"@discordjs/structures!~bits"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":43,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/structures!BitField#add:member(1)","d":"/**\n * Adds bits to these ones.\n *\n * @param bits - Bits to add\n *\n * @returns These bits or new BitField if the instance is frozen.\n */\n","ex":[{"k":"Reference","t":"add","c":"@discordjs/structures!BitField#add"},{"k":"Content","t":"(..."},{"k":"Reference","t":"bits","c":"@discordjs/structures!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":104,"co":9,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"add"},{"k":"Method","c":"@discordjs/structures!BitField#any:member(1)","d":"/**\n * Checks whether the bit field has a bit, or any of multiple bits.\n *\n * @param bit - Bit(s) to check for\n *\n * @returns Whether the bit field has the bit(s)\n */\n","ex":[{"k":"Reference","t":"any","c":"@discordjs/structures!BitField#any"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"@discordjs/structures!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":4,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"any"},{"k":"Property","c":"@discordjs/structures!BitField#bitField:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Reference","t":"bitField","c":"@discordjs/structures!BitField#bitField"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":36,"co":9,"ro":false,"op":false,"r":"Public","n":"bitField","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!BitField#constructor:member","d":"","ex":[{"k":"Content","t":"['constructor']: "},{"k":"Reference","t":"NonAbstract","c":"@discordjs/structures!NonAbstract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":38,"co":17,"ro":false,"op":false,"r":"Public","n":"constructor","prtr":{"st":1,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!BitField.DefaultBit:member","d":"","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DefaultBit","c":"@discordjs/structures!BitField.DefaultBit"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":31,"co":2,"ro":true,"op":false,"r":"Public","n":"DefaultBit","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!BitField#equals:member(1)","d":"/**\n * Checks if this bit field equals another\n *\n * @param bit - Bit(s) to check for\n *\n * @returns Whether this bit field equals the other\n */\n","ex":[{"k":"Reference","t":"equals","c":"@discordjs/structures!BitField#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"@discordjs/structures!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":4,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"@discordjs/structures!BitField.Flags:member","d":"/**\n * Numeric bit field flags.\n *\n * @remarks\n *\n * Defined in extension classes\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"Flags","c":"@discordjs/structures!BitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"EnumLike","c":"@discordjs/structures!EnumLike:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":11},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!BitField#freeze:member(1)","d":"/**\n * Freezes these bits, making them immutable.\n *\n * @returns This bit field but frozen\n */\n","ex":[{"k":"Reference","t":"freeze","c":"@discordjs/structures!BitField#freeze"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":94,"co":9,"sta":false,"rtr":{"st":2,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"freeze"},{"k":"Method","c":"@discordjs/structures!BitField#has:member(1)","d":"/**\n * Checks whether the bit field has a bit, or multiple bits.\n *\n * @param bit - Bit(s) to check for\n *\n * @returns Whether the bit field has the bit(s)\n */\n","ex":[{"k":"Reference","t":"has","c":"@discordjs/structures!BitField#has"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"@discordjs/structures!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":", ..."},{"k":"Reference","t":"_hasParams","c":"@discordjs/structures!~_hasParams"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":4,"en":8},"op":false,"rs":false},{"pn":"_hasParams","ptr":{"st":11,"en":13},"op":false,"rs":true}],"op":false,"ab":false,"n":"has"},{"k":"Method","c":"@discordjs/structures!BitField#missing:member(1)","d":"/**\n * Gets all given bits that are missing from the bit field.\n *\n * @param bits - Bit(s) to check for\n *\n * @param hasParams - Additional parameters for the has method, if any\n *\n * @returns A bit field containing the missing bits\n */\n","ex":[{"k":"Reference","t":"missing","c":"@discordjs/structures!BitField#missing"},{"k":"Content","t":"("},{"k":"Reference","t":"bits","c":"@discordjs/structures!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":", ..."},{"k":"Reference","t":"hasParams","c":"@discordjs/structures!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Flags"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":85,"co":9,"sta":false,"rtr":{"st":15,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":4,"en":8},"op":false,"rs":false},{"pn":"hasParams","ptr":{"st":11,"en":14},"op":false,"rs":true}],"op":false,"ab":false,"n":"missing"},{"k":"Method","c":"@discordjs/structures!BitField#remove:member(1)","d":"/**\n * Removes bits from these.\n *\n * @param bits - Bits to remove\n *\n * @returns These bits or new BitField if the instance is frozen.\n */\n","ex":[{"k":"Reference","t":"remove","c":"@discordjs/structures!BitField#remove"},{"k":"Content","t":"(..."},{"k":"Reference","t":"bits","c":"@discordjs/structures!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":121,"co":9,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"@discordjs/structures!BitField.resolve:member(1)","d":"/**\n * Resolves bit fields to their numeric form.\n *\n * @param bit - bit(s) to resolve\n *\n * @returns the numeric value of the bit fields\n */\n","ex":[{"k":"Content","t":"static "},{"k":"Reference","t":"resolve","c":"@discordjs/structures!BitField.resolve"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":">("},{"k":"Reference","t":"bit","c":"@discordjs/structures!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":187,"co":2,"tps":[{"tp":"Flags","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"sta":true,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":11,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"@discordjs/structures!BitField#serialize:member(1)","d":"/**\n * Gets an object mapping field names to a boolean indicating whether the bit is available.\n *\n * @param hasParams - Additional parameters for the has method, if any\n *\n * @returns An object mapping field names to a boolean indicating whether the bit is available\n */\n","ex":[{"k":"Reference","t":"serialize","c":"@discordjs/structures!BitField#serialize"},{"k":"Content","t":"(..."},{"k":"Reference","t":"hasParams","c":"@discordjs/structures!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":138,"co":9,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hasParams","ptr":{"st":4,"en":7},"op":false,"rs":true}],"op":false,"ab":false,"n":"serialize"},{"k":"Method","c":"@discordjs/structures!BitField#toArray:member(1)","d":"/**\n * Gets an Array of bit field names based on the bits available.\n *\n * @param hasParams - Additional parameters for the has method, if any\n *\n * @returns An Array of bit field names\n */\n","ex":[{"k":"Reference","t":"toArray","c":"@discordjs/structures!BitField#toArray"},{"k":"Content","t":"(..."},{"k":"Reference","t":"hasParams","c":"@discordjs/structures!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Flags"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":153,"co":9,"sta":false,"rtr":{"st":8,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hasParams","ptr":{"st":4,"en":7},"op":false,"rs":true}],"op":false,"ab":false,"n":"toArray"},{"k":"Method","c":"@discordjs/structures!BitField#toJSON:member(1)","d":"","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!BitField#toJSON"},{"k":"Content","t":"("},{"k":"Reference","t":"asNumber","c":"@discordjs/structures!~asNumber"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":157,"co":9,"sta":false,"rtr":{"st":6,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"asNumber","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"@discordjs/structures!BitField#valueOf:member(1)","d":"","ex":[{"k":"Reference","t":"valueOf","c":"@discordjs/structures!BitField#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":171,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"itrs":[]},{"k":"TypeAlias","c":"@discordjs/structures!BitFieldResolvable:type","d":"/**\n * Data that can be resolved to give a bit field. This can be: A bit number (this can be a number literal or a value taken from {@link (BitField:class).Flags}) A string bit number An instance of BitField An Array of BitFieldResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Flags"},{"k":"Content","t":" | "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">> | "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"@discordjs/structures!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" | "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">> | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | `${"},{"k":"Reference","t":"bigint"},{"k":"Content","t":"}`> | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | `${"},{"k":"Reference","t":"bigint"},{"k":"Content","t":"}`"},{"k":"Content","t":";"}],"pat":"src/bitfields/BitField.ts","l":12,"co":1,"r":"Public","n":"BitFieldResolvable","tps":[{"tp":"Flags","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":37}},{"k":"Class","c":"@discordjs/structures!CategoryChannel:class","d":"/**\n * Sample Implementation of a structure for category channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"CategoryChannel","c":"@discordjs/structures!CategoryChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildCategoryChannel","c":"discord-api-types/v10!APIGuildCategoryChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types/v10!ChannelType.GuildCategory:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/CategoryChannel.ts","l":18,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"CategoryChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!CategoryChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `CategoryChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildCategoryChannel","c":"discord-api-types/v10!APIGuildCategoryChannel:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":21,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!CategoryChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CategoryChannel","c":"@discordjs/structures!CategoryChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildCategoryChannel","c":"discord-api-types/v10!APIGuildCategoryChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types/v10!ChannelType.GuildCategory:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types/v10!ChannelType.GuildCategory:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types/v10!ChannelType.GuildCategory:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/CategoryChannel.ts","l":9,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"CategoryChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":26,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!Channel:class","d":"/**\n * Represents any channel on Discord.\n *\n * @remarks\n *\n * Although this class _can_ be instantiated directly for any channel type, it's intended to be subclassed with the appropriate mixins for each channel type.\n *\n * @typeParam Type - Specify the type of the channel being constructed for more accurate data types\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType","c":"discord-api-types/v10!ChannelType:enum"},{"k":"Content","t":" | 'unknown'"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType","c":"discord-api-types/v10!ChannelType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":"> | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/Channel.ts","l":34,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":7},"dtr":{"st":8,"en":9}},{"tp":"Omitted","ctr":{"st":12,"en":17},"dtr":{"st":18,"en":19}}],"ab":false,"n":"Channel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!Channel:constructor(1)","d":"/**\n * Constructs a new instance of the `Channel` class\n *\n * @param data - The raw data received from the API for the channel\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">, "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":49,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":11},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!Channel#createdAt:member","d":"/**\n * The time the channel was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdAt","c":"@discordjs/structures!Channel#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":109,"co":2,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Channel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdTimestamp","c":"@discordjs/structures!Channel#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":102,"co":2,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Channel.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Channel.\n *\n * @remarks\n *\n * This template is only guaranteed to apply to channels constructed directly via `new Channel()`. Use the appropriate subclass template to remove data from that channel type.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!Channel.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIChannel","c":"discord-api-types/v10!APIChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":44,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Channel#flags:member","d":"/**\n * The flags that are applied to the channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"flags","c":"@discordjs/structures!Channel#flags"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelFlagsBitField","c":"@discordjs/structures!ChannelFlagsBitField:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":93,"co":2,"ro":true,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Channel#id:member","d":"/**\n * The id of the channel\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"id","c":"@discordjs/structures!Channel#id"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"id\"]"},{"k":"Content","t":";"}],"l":65,"co":2,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!Channel#isDMBased:member(1)","d":"/**\n * Indicates whether this channel is a DM or DM Group\n */\n","ex":[{"k":"Reference","t":"isDMBased","c":"@discordjs/structures!Channel#isDMBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":146,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isDMBased"},{"k":"Method","c":"@discordjs/structures!Channel#isGuildBased:member(1)","d":"/**\n * Indicates whether this channel is in a guild\n */\n","ex":[{"k":"Reference","t":"isGuildBased","c":"@discordjs/structures!Channel#isGuildBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":137,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isGuildBased"},{"k":"Method","c":"@discordjs/structures!Channel#isPermissionCapable:member(1)","d":"/**\n * Indicates whether this channel can have permission overwrites\n */\n","ex":[{"k":"Reference","t":"isPermissionCapable","c":"@discordjs/structures!Channel#isPermissionCapable"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":173,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isPermissionCapable"},{"k":"Method","c":"@discordjs/structures!Channel#isTextBased:member(1)","d":"/**\n * Indicates whether this channel can contain messages\n */\n","ex":[{"k":"Reference","t":"isTextBased","c":"@discordjs/structures!Channel#isTextBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":128,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isTextBased"},{"k":"Method","c":"@discordjs/structures!Channel#isThread:member(1)","d":"/**\n * Indicates whether this channel is a thread channel\n */\n","ex":[{"k":"Reference","t":"isThread","c":"@discordjs/structures!Channel#isThread"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":119,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThread"},{"k":"Method","c":"@discordjs/structures!Channel#isThreadOnly:member(1)","d":"/**\n * Indicates whether this channel only allows thread creation\n */\n","ex":[{"k":"Reference","t":"isThreadOnly","c":"@discordjs/structures!Channel#isThreadOnly"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":164,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThreadOnly"},{"k":"Method","c":"@discordjs/structures!Channel#isVoiceBased:member(1)","d":"/**\n * Indicates whether this channel has voice connection capabilities\n */\n","ex":[{"k":"Reference","t":"isVoiceBased","c":"@discordjs/structures!Channel#isVoiceBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":155,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isVoiceBased"},{"k":"Method","c":"@discordjs/structures!Channel#isWebhookCapable:member(1)","d":"/**\n * Indicates whether this channel can have webhooks\n */\n","ex":[{"k":"Reference","t":"isWebhookCapable","c":"@discordjs/structures!Channel#isWebhookCapable"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":182,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isWebhookCapable"},{"k":"Property","c":"@discordjs/structures!Channel#name:member","d":"/**\n * The name of the channel, null for DMs\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"name","c":"@discordjs/structures!Channel#name"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"name\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":83,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":13},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Channel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"type","c":"@discordjs/structures!Channel#type"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends \"unknown\" ? "},{"k":"Reference","t":"number"},{"k":"Content","t":" : "},{"k":"Reference","t":"Type"},{"k":"Content","t":";"}],"l":72,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false}],"etr":{"st":20,"en":29,"tps":[{"st":22,"en":26},{"st":27,"en":28}]},"itrs":[]},{"k":"TypeAlias","c":"@discordjs/structures!ChannelDataType:type","d":"/**\n * The data stored by a {@link Channel} structure based on its {@link (Channel:class).\"type\"} property.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType","c":"discord-api-types/v10!ChannelType:enum"},{"k":"Content","t":" | 'unknown'"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType","c":"discord-api-types/v10!ChannelType:enum"},{"k":"Content","t":" ? "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIChannel","c":"discord-api-types/v10!APIChannel:type"},{"k":"Content","t":", {  "},{"k":"Reference","t":"type","c":"@discordjs/structures!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":";}> : "},{"k":"Reference","t":"APIPartialChannel","c":"discord-api-types/v10!APIPartialChannel:interface"},{"k":"Content","t":";"}],"pat":"src/channels/Channel.ts","l":22,"co":1,"r":"Public","n":"ChannelDataType","tps":[{"tp":"Type","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"ttr":{"st":8,"en":21}},{"k":"Class","c":"@discordjs/structures!ChannelFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link (Channel:class).flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelFlagsBitField","c":"@discordjs/structures!ChannelFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ChannelFlags","c":"discord-api-types/v10!ChannelFlags:enum"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/bitfields/ChannelFlagsBitField.ts","l":7,"co":1,"r":"Public","ab":false,"n":"ChannelFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelFlagsBitField.Flags:member","d":"/**\n * Numeric guild channel flags.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"Flags","c":"@discordjs/structures!ChannelFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ChannelFlags","c":"discord-api-types/v10!ChannelFlags:enum"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!ChannelFlagsBitField#toJSON:member(1)","d":"","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!ChannelFlagsBitField#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":13,"co":18,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":8,"tps":[{"st":5,"en":7}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!ChannelOwnerMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ChannelOwnerMixin.ts","l":7,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ChannelOwnerMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelOwnerMixin#ownerId:member","d":"/**\n * The id of the creator of the group DM or thread\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"ownerId","c":"@discordjs/structures!ChannelOwnerMixin#ownerId"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"owner_id\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"ownerId","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ChannelOwnerMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelOwnerMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"n":"ChannelOwnerMixin","pmo":false,"ms":[],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"Class","c":"@discordjs/structures!ChannelParentMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types/v10!ChannelType.GuildCategory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types/v10!ChannelType.GuildDirectory:member"},{"k":"Content","t":">"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelParentMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":13},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ChannelParentMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelParentMixin#nsfw:member","d":"/**\n * Whether the channel is nsfw\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"nsfw","c":"@discordjs/structures!ChannelParentMixin#nsfw"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"nsfw\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ChannelParentMixin#parentId:member","d":"/**\n * The id of the parent category for a channel (each parent category can contain up to 50 channels) or id of the parent channel for a thread\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"parentId","c":"@discordjs/structures!ChannelParentMixin#parentId"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"parent_id\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"parentId","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"etr":{"st":14,"en":18,"tps":[{"st":16,"en":17}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!ChannelPermissionMixin:class","d":"/**\n * @remarks\n *\n * has an array of sub-structures {@link PermissionOverwrite} that extending mixins should add to their DataTemplate and _optimizeData\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types/v10!ChannelType.GuildDirectory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types/v10!ChannelType.GuildDirectory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ChannelPermissionMixin.ts","l":15,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":13},"dtr":{"st":14,"en":22}}],"ab":false,"n":"ChannelPermissionMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!ChannelPermissionMixin#isPermissionCapable:member(1)","d":"/**\n * Indicates whether this channel can have permission overwrites\n */\n","ex":[{"k":"Reference","t":"isPermissionCapable","c":"@discordjs/structures!ChannelPermissionMixin#isPermissionCapable"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":31,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isPermissionCapable"},{"k":"Property","c":"@discordjs/structures!ChannelPermissionMixin#position:member","d":"/**\n * The sorting position of the channel\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"position","c":"@discordjs/structures!ChannelPermissionMixin#position"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"position\"]"},{"k":"Content","t":";"}],"l":24,"co":2,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ChannelPermissionMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types/v10!ChannelType.GuildDirectory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types/v10!ChannelType.GuildDirectory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelPermissionMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":13},"dtr":{"st":14,"en":22}}],"n":"ChannelPermissionMixin","pmo":false,"ms":[],"etrs":[{"st":23,"en":27,"tps":[{"st":25,"en":26}]}]},{"k":"Class","c":"@discordjs/structures!ChannelPinMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ChannelPinMixin.ts","l":9,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":12},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ChannelPinMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelPinMixin#[kLastPinTimestamp]:member","d":"/**\n * The timestamp of when the last pin in the channel happened\n */\n","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kLastPinTimestamp","c":"@discordjs/structures!~kLastPinTimestamp:var"},{"k":"Content","t":"]: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":15,"co":2,"ro":false,"op":false,"r":"Public","n":"[kLastPinTimestamp]","prtr":{"st":3,"en":6},"sta":false,"pr":true,"ab":false},{"k":"Method","c":"@discordjs/structures!ChannelPinMixin#[kMixinConstruct]:member(1)","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"kMixinConstruct","c":"@discordjs/structures!~kMixinConstruct:var"},{"k":"Content","t":"](): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":26,"co":9,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"[kMixinConstruct]"},{"k":"Method","c":"@discordjs/structures!ChannelPinMixin#[kMixinToJSON]:member(1)","d":"/**\n * Adds data from optimized properties omitted from [kData].\n *\n * @param data - the result of {@link (Structure:class).toJSON}\n */\n","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kMixinToJSON","c":"@discordjs/structures!~kMixinToJSON:var"},{"k":"Content","t":"]("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":59,"co":2,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":true,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"[kMixinToJSON]"},{"k":"Property","c":"@discordjs/structures!ChannelPinMixin.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Channel.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!ChannelPinMixin.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":20,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":15},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ChannelPinMixin#lastPinAt:member","d":"/**\n * The Date of when the last pin in the channel happened\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"lastPinAt","c":"@discordjs/structures!ChannelPinMixin#lastPinAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":49,"co":2,"ro":true,"op":false,"r":"Public","n":"lastPinAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ChannelPinMixin#lastPinTimestamp:member","d":"/**\n * The timestamp of when the last pin in the channel happened.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"lastPinTimestamp","c":"@discordjs/structures!ChannelPinMixin#lastPinTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":42,"co":2,"ro":true,"op":false,"r":"Public","n":"lastPinTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!ChannelPinMixin#optimizeData:member(1)","d":"/**\n * Function called to ensure stored raw data is in optimized formats, used in tandem with a data template\n *\n * @remarks\n *\n * Additionally, when implementing, ensure to call `super._optimizeData` if any class in the super chain aside from Structure contains an implementation. Note: mixins do not need to call super ever as the process of mixing walks the prototype chain.\n *\n * @param _data - the raw data received from the API to optimize\n */\n","ex":[{"k":"Content","t":"protected "},{"k":"Reference","t":"optimizeData","c":"@discordjs/structures!ChannelPinMixin#optimizeData"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":33,"co":2,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":true,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"optimizeData"}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ChannelPinMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelPinMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":12},"dtr":{"st":0,"en":0}}],"n":"ChannelPinMixin","pmo":false,"ms":[],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16}]}]},{"k":"Class","c":"@discordjs/structures!ChannelSlowmodeMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildTextChannelType","c":"discord-api-types/v10!GuildTextChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelSlowmodeMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ChannelSlowmodeMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelSlowmodeMixin#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) of this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"rateLimitPerUser","c":"@discordjs/structures!ChannelSlowmodeMixin#rateLimitPerUser"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"rate_limit_per_user\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":9,"co":2,"ro":true,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"etr":{"st":7,"en":11,"tps":[{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!ChannelTopicMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelTopicMixin.ts","l":10,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":12},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ChannelTopicMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ChannelTopicMixin#defaultAutoArchiveDuration:member","d":"/**\n * The duration after which new threads get archived by default on this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"defaultAutoArchiveDuration","c":"@discordjs/structures!ChannelTopicMixin#defaultAutoArchiveDuration"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"default_auto_archive_duration\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":23,"co":2,"ro":true,"op":false,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ChannelTopicMixin#defaultThreadRateLimitPerUser:member","d":"/**\n * The default value for rate limit per user (slowmode) on new threads in this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"defaultThreadRateLimitPerUser","c":"@discordjs/structures!ChannelTopicMixin#defaultThreadRateLimitPerUser"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"default_thread_rate_limit_per_user\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":30,"co":2,"ro":true,"op":false,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ChannelTopicMixin#topic:member","d":"/**\n * The topic of this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"topic","c":"@discordjs/structures!ChannelTopicMixin#topic"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"topic\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":true,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"etr":{"st":13,"en":17,"tps":[{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ChannelTopicMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types/v10!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelTopicMixin.ts","l":6,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":12},"dtr":{"st":0,"en":0}}],"n":"ChannelTopicMixin","pmo":false,"ms":[],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16}]}]},{"k":"Class","c":"@discordjs/structures!ChannelWebhookMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTextChannelType","c":"discord-api-types/v10!GuildTextChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTextChannelType","c":"discord-api-types/v10!GuildTextChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ChannelWebhookMixin.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":15},"dtr":{"st":16,"en":26}}],"ab":false,"n":"ChannelWebhookMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!ChannelWebhookMixin#isWebhookCapable:member(1)","d":"/**\n * Indicates whether this channel can have webhooks\n */\n","ex":[{"k":"Reference","t":"isWebhookCapable","c":"@discordjs/structures!ChannelWebhookMixin#isWebhookCapable"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":20,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isWebhookCapable"}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ChannelWebhookMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTextChannelType","c":"discord-api-types/v10!GuildTextChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTextChannelType","c":"discord-api-types/v10!GuildTextChannelType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":">"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ChannelWebhookMixin.ts","l":4,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":15},"dtr":{"st":16,"en":26}}],"n":"ChannelWebhookMixin","pmo":false,"ms":[],"etrs":[{"st":27,"en":31,"tps":[{"st":29,"en":30}]}]},{"k":"TypeAlias","c":"@discordjs/structures!CollapseUnion:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CollapseUnion","c":"@discordjs/structures!CollapseUnion:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends infer "},{"k":"Reference","t":"Union"},{"k":"Content","t":" ? {  ["},{"k":"Reference","t":"Key"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Union"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Union"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"];} : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":5,"co":1,"r":"Public","n":"CollapseUnion","tps":[{"tp":"Type","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":18}},{"k":"Class","c":"@discordjs/structures!Connection:class","d":"/**\n * Represents a user's connection on Discord.\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"Connection","c":"@discordjs/structures!Connection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/users/Connection.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"Connection","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!Connection:constructor(1)","d":"/**\n * Constructs a new instance of the `Connection` class\n *\n * @param data - The raw data received from the API for the connection\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":20,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!Connection.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Connection\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!Connection.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":15,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#friendSync:member","d":"/**\n * Whether friend sync is enabled for this connection\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"friendSync","c":"@discordjs/structures!Connection#friendSync"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"friend_sync\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"friend_sync\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":71,"co":2,"ro":true,"op":false,"r":"Public","n":"friendSync","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#id:member","d":"/**\n * The id of the connection account\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"id","c":"@discordjs/structures!Connection#id"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":36,"co":2,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#name:member","d":"/**\n * The username of the connection account\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"name","c":"@discordjs/structures!Connection#name"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"name\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"name\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":43,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#revoked:member","d":"/**\n * Whether the connection is revoked\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"revoked","c":"@discordjs/structures!Connection#revoked"},{"k":"Content","t":"(): "},{"k":"Content","t":"false | "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<\"revoked\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"revoked\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":57,"co":2,"ro":true,"op":false,"r":"Public","n":"revoked","prtr":{"st":3,"en":24},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#showActivity:member","d":"/**\n * Whether activities related to this connection are shown in the users presence\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"showActivity","c":"@discordjs/structures!Connection#showActivity"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"show_activity\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"show_activity\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":78,"co":2,"ro":true,"op":false,"r":"Public","n":"showActivity","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#twoWayLink:member","d":"/**\n * Whether this connection has an Oauth2 token for console voice transfer\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"twoWayLink","c":"@discordjs/structures!Connection#twoWayLink"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"two_way_link\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"two_way_link\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":85,"co":2,"ro":true,"op":false,"r":"Public","n":"twoWayLink","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#type:member","d":"/**\n * The type of service this connection is for\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"type","c":"@discordjs/structures!Connection#type"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"type\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"type\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":50,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#verified:member","d":"/**\n * Whether the connection is verified\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"verified","c":"@discordjs/structures!Connection#verified"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"verified\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"verified\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":64,"co":2,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Connection#visibility:member","d":"/**\n * The visibility state for this connection\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"visibility","c":"@discordjs/structures!Connection#visibility"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"visibility\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"visibility\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIConnection","c":"discord-api-types/v10!APIConnection:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":92,"co":2,"ro":true,"op":false,"r":"Public","n":"visibility","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Variable","c":"@discordjs/structures!DataTemplatePropertyName:var","d":"","ex":[{"k":"Reference","t":"DataTemplatePropertyName","c":"@discordjs/structures!DataTemplatePropertyName"},{"k":"Content","t":" = "},{"k":"Content","t":"\"DataTemplate\""}],"pat":"src/Structure.ts","l":4,"co":14,"itr":{"st":2,"en":3},"ro":true,"r":"Public","n":"DataTemplatePropertyName","vtr":{"st":0,"en":0}},{"k":"Class","c":"@discordjs/structures!DMChannel:class","d":"/**\n * Sample Implementation of a structure for dm channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"DMChannel","c":"@discordjs/structures!DMChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIDMChannel","c":"discord-api-types/v10!APIDMChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/DMChannel.ts","l":19,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"DMChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!DMChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `DMChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIDMChannel","c":"discord-api-types/v10!APIDMChannel:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":19,"co":110,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!DMChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"DMChannel","c":"@discordjs/structures!DMChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIDMChannel","c":"discord-api-types/v10!APIDMChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/DMChannel.ts","l":10,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"DMChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":30,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!DMChannelMixin:class","d":"/**\n * @remarks\n *\n * has recipients, an array of sub-structures {@link User} that extending mixins should add to their DataTemplate and _optimizeData\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/DMChannelMixin.ts","l":13,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"ab":false,"n":"DMChannelMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!DMChannelMixin#isDMBased:member(1)","d":"/**\n * Indicates whether this channel is a DM or DM Group\n */\n","ex":[{"k":"Reference","t":"isDMBased","c":"@discordjs/structures!DMChannelMixin#isDMBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":24,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isDMBased"},{"k":"Property","c":"@discordjs/structures!DMChannelMixin#url:member","d":"/**\n * The URL to this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"url","c":"@discordjs/structures!DMChannelMixin#url"},{"k":"Content","t":"(): "},{"k":"Content","t":"`https://discord.com/channels/@me/${import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"id\"]}`"},{"k":"Content","t":";"}],"l":17,"co":2,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!DMChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types/v10!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/DMChannelMixin.ts","l":6,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"DMChannelMixin","pmo":false,"ms":[],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16}]}]},{"k":"TypeAlias","c":"@discordjs/structures!EnumLike:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"EnumLike","c":"@discordjs/structures!EnumLike:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":25,"co":1,"r":"Public","n":"EnumLike","tps":[{"tp":"Enum","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":13}},{"k":"Function","c":"@discordjs/structures!extendTemplate:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"extendTemplate","c":"@discordjs/structures!extendTemplate"},{"k":"Content","t":"<"},{"k":"Reference","t":"SuperTemplate"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":">("},{"k":"Reference","t":"superTemplate","c":"@discordjs/structures!~superTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"SuperTemplate"},{"k":"Content","t":", "},{"k":"Reference","t":"additions","c":"@discordjs/structures!~additions"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"> & "},{"k":"Reference","t":"SuperTemplate"},{"k":"Content","t":";"}],"pat":"src/utils/optimization.ts","l":1,"co":1,"rtr":{"st":25,"en":32},"r":"Public","oi":1,"ps":[{"pn":"superTemplate","ptr":{"st":14,"en":15},"op":false,"rs":false},{"pn":"additions","ptr":{"st":18,"en":24},"op":false,"rs":false}],"tps":[{"tp":"SuperTemplate","ctr":{"st":5,"en":11},"dtr":{"st":0,"en":0}}],"n":"extendTemplate"},{"k":"Class","c":"@discordjs/structures!ForumChannel:class","d":"/**\n * Sample Implementation of a structure for forum channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ForumChannel","c":"@discordjs/structures!ForumChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildForumChannel","c":"discord-api-types/v10!APIGuildForumChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/ForumChannel.ts","l":26,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"ForumChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!ForumChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `ForumChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildForumChannel","c":"discord-api-types/v10!APIGuildForumChannel:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":29,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!ForumChannel#defaultForumLayout:member","d":"/**\n * The default forum layout view used to display posts in this channel. Defaults to 0, which indicates a layout view has not been set by a channel admin.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"defaultForumLayout","c":"@discordjs/structures!ForumChannel#defaultForumLayout"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"default_forum_layout\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"default_forum_layout\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumChannel","c":"discord-api-types/v10!APIGuildForumChannel:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":39,"co":2,"ro":true,"op":false,"r":"Public","n":"defaultForumLayout","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ForumChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ForumChannel","c":"@discordjs/structures!ForumChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildForumChannel","c":"discord-api-types/v10!APIGuildForumChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/ForumChannel.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"ForumChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":34,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!ForumTag:class","d":"/**\n * Represents metadata of a thread channel on Discord.\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ForumTag","c":"@discordjs/structures!ForumTag:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/ForumTag.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"ForumTag","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!ForumTag:constructor(1)","d":"/**\n * Constructs a new instance of the `ForumTag` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":117,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!ForumTag#emoji:member","d":"/**\n * The textual representation of this tag's emoji. Either a unicode character or a guild emoji mention.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"emoji","c":"@discordjs/structures!ForumTag#emoji"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<\"emoji_name\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"emoji_name\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":54,"co":2,"ro":true,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":25},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ForumTag#emojiId:member","d":"/**\n * The id of a guild's custom emoji.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"emojiId","c":"@discordjs/structures!ForumTag#emojiId"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"emoji_id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"emoji_id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":40,"co":2,"ro":true,"op":false,"r":"Public","n":"emojiId","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ForumTag#emojiName:member","d":"/**\n * The unicode character of the emoji.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"emojiName","c":"@discordjs/structures!ForumTag#emojiName"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"emoji_name\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"emoji_name\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":47,"co":2,"ro":true,"op":false,"r":"Public","n":"emojiName","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ForumTag#id:member","d":"/**\n * The id of the tag.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"id","c":"@discordjs/structures!ForumTag#id"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":19,"co":2,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ForumTag#moderated:member","d":"/**\n * Whether this tag can only be added to or removed from threads by a member with the {@link discord-api-types/v10#(PermissionFlagsBits:variable) | ManageThreads} permission.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"moderated","c":"@discordjs/structures!ForumTag#moderated"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"moderated\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"moderated\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":33,"co":2,"ro":true,"op":false,"r":"Public","n":"moderated","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ForumTag#name:member","d":"/**\n * The name of the tag.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"name","c":"@discordjs/structures!ForumTag#name"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"name\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"name\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIGuildForumTag","c":"discord-api-types/v10!APIGuildForumTag:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!GroupDMChannel:class","d":"/**\n * Sample Implementation of a structure for group dm channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"GroupDMChannel","c":"@discordjs/structures!GroupDMChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGroupDMChannel","c":"discord-api-types/v10!APIGroupDMChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/GroupDMChannel.ts","l":25,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"GroupDMChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!GroupDMChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `GroupDMChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGroupDMChannel","c":"discord-api-types/v10!APIGroupDMChannel:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":28,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!GroupDMChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GroupDMChannel","c":"@discordjs/structures!GroupDMChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGroupDMChannel","c":"discord-api-types/v10!APIGroupDMChannel:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"DMChannelMixin","c":"@discordjs/structures!DMChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"GroupDMMixin","c":"@discordjs/structures!GroupDMMixin:class"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"src/channels/GroupDMChannel.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"GroupDMChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":32,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!GroupDMMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"GroupDMMixin","c":"@discordjs/structures!GroupDMMixin:class"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/GroupDMMixin.ts","l":7,"co":1,"r":"Public","ab":false,"n":"GroupDMMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!GroupDMMixin#applicationId:member","d":"/**\n * The application id of the group DM creator if it is bot-created.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"applicationId","c":"@discordjs/structures!GroupDMMixin#applicationId"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":25,"co":2,"ro":true,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!GroupDMMixin#icon:member","d":"/**\n * The icon hash of the group DM.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"icon","c":"@discordjs/structures!GroupDMMixin#icon"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!GroupDMMixin#managed:member","d":"/**\n * Whether the channel is managed by an application via the `gdm.join` OAuth2 scope.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"managed","c":"@discordjs/structures!GroupDMMixin#managed"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"managed","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!GroupDMMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GroupDMMixin","c":"@discordjs/structures!GroupDMMixin:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types/v10!ChannelType.GroupDM:member"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/GroupDMMixin.ts","l":5,"co":1,"r":"Public","n":"GroupDMMixin","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Class","c":"@discordjs/structures!GuildChannelMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/GuildChannelMixin.ts","l":9,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"GuildChannelMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!GuildChannelMixin#flags:member","d":"/**\n * The flags that are applied to the channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"flags","c":"@discordjs/structures!GuildChannelMixin#flags"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelFlagsBitField","c":"@discordjs/structures!ChannelFlagsBitField:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":true,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!GuildChannelMixin#guildId:member","d":"/**\n * THe id of the guild this channel is in.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"guildId","c":"@discordjs/structures!GuildChannelMixin#guildId"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"guild_id\"]>"},{"k":"Content","t":";"}],"l":23,"co":2,"ro":true,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!GuildChannelMixin#isGuildBased:member(1)","d":"/**\n * Indicates whether this channel is in a guild\n */\n","ex":[{"k":"Reference","t":"isGuildBased","c":"@discordjs/structures!GuildChannelMixin#isGuildBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":37,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isGuildBased"},{"k":"Property","c":"@discordjs/structures!GuildChannelMixin#url:member","d":"/**\n * The URL to this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"url","c":"@discordjs/structures!GuildChannelMixin#url"},{"k":"Content","t":"(): "},{"k":"Content","t":"`https://discord.com/channels/${"},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"guild_id\"]>}/${import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"id\"]}`"},{"k":"Content","t":";"}],"l":30,"co":2,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":18},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!GuildChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildChannelMixin","c":"@discordjs/structures!GuildChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildChannelType","c":"discord-api-types/v10!GuildChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/GuildChannelMixin.ts","l":7,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"GuildChannelMixin","pmo":false,"ms":[],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"TypeAlias","c":"@discordjs/structures!If:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"If","c":"@discordjs/structures!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Check"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"True"},{"k":"Content","t":", "},{"k":"Reference","t":"False"},{"k":"Content","t":" = "},{"k":"Reference","t":"never"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Check"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":" ? ("},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Check"},{"k":"Content","t":" ? "},{"k":"Reference","t":"True"},{"k":"Content","t":" : "},{"k":"Reference","t":"False"},{"k":"Content","t":") : "},{"k":"Reference","t":"False"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":27,"co":1,"r":"Public","n":"If","tps":[{"tp":"Check","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"True","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"False","ctr":{"st":0,"en":0},"dtr":{"st":11,"en":12}}],"ttr":{"st":13,"en":26}},{"k":"Class","c":"@discordjs/structures!Invite:class","d":"/**\n * Represents an invitation to a Discord channel\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"Invite","c":"@discordjs/structures!Invite:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"'created_at' | 'expires_at'"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/invites/Invite.ts","l":13,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"Invite","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!Invite:constructor(1)","d":"/**\n * Constructs a new instance of the `Invite` class\n *\n * @param data - The raw data received from the API for the invite\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":45,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!Invite#approximateMemberCount:member","d":"/**\n * The approximate total number of members of the guild this invite is for\n *\n * @remarks\n *\n * Only available when the invite was fetched from `GET /invites/<code>` with counts\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"approximateMemberCount","c":"@discordjs/structures!Invite#approximateMemberCount"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"approximate_member_count\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"approximate_member_count\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":110,"co":2,"ro":true,"op":false,"r":"Public","n":"approximateMemberCount","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#approximatePresenceCount:member","d":"/**\n * The approximate number of online members of the guild this invite is for\n *\n * @remarks\n *\n * Only available when the invite was fetched from `GET /invites/<code>` with counts\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"approximatePresenceCount","c":"@discordjs/structures!Invite#approximatePresenceCount"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"approximate_presence_count\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"approximate_presence_count\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":101,"co":2,"ro":true,"op":false,"r":"Public","n":"approximatePresenceCount","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#code:member","d":"/**\n * The code for this invite\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"code","c":"@discordjs/structures!Invite#code"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"code\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"code\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":78,"co":2,"ro":true,"op":false,"r":"Public","n":"code","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#createdAt:member","d":"/**\n * The time the invite was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdAt","c":"@discordjs/structures!Invite#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":177,"co":2,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#createdTimestamp:member","d":"/**\n * The timestamp this invite was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdTimestamp","c":"@discordjs/structures!Invite#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":170,"co":2,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Invite\n *\n * @remarks\n *\n * This template has defaults, if you want to remove additional data and keep the defaults, use `Object.defineProperties`. To override the defaults, set this value directly.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!Invite.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":23,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#expiresAt:member","d":"/**\n * The time the invite will expire at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"expiresAt","c":"@discordjs/structures!Invite#expiresAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":134,"co":2,"ro":true,"op":false,"r":"Public","n":"expiresAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#expiresTimestamp:member","d":"/**\n * The timestamp this invite will expire at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"expiresTimestamp","c":"@discordjs/structures!Invite#expiresTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":117,"co":2,"ro":true,"op":false,"r":"Public","n":"expiresTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#maxAge:member","d":"/**\n * The maximum age of the invite, in seconds, 0 for non-expiring\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"maxAge","c":"@discordjs/structures!Invite#maxAge"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"max_age\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"max_age\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":156,"co":2,"ro":true,"op":false,"r":"Public","n":"maxAge","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#maxUses:member","d":"/**\n * The maximum number of times this invite can be used\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"maxUses","c":"@discordjs/structures!Invite#maxUses"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"max_uses\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"max_uses\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":149,"co":2,"ro":true,"op":false,"r":"Public","n":"maxUses","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#targetType:member","d":"/**\n * The target type (for voice channel invites)\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"targetType","c":"@discordjs/structures!Invite#targetType"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"target_type\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"target_type\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":85,"co":2,"ro":true,"op":false,"r":"Public","n":"targetType","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#temporary:member","d":"/**\n * Whether this invite only grants temporary membership\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"temporary","c":"@discordjs/structures!Invite#temporary"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"temporary\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"temporary\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":163,"co":2,"ro":true,"op":false,"r":"Public","n":"temporary","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!Invite#toJSON:member(1)","d":"/**\n * Transforms this object to its JSON format with raw API data (or close to it), automatically called by `JSON.stringify()` when this structure is stringified\n *\n * @remarks\n *\n * The type of this data is determined by omissions at runtime and is only guaranteed for default omissions\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!Invite#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":";"}],"l":201,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"@discordjs/structures!Invite#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n *\n * @returns The URL to the invite or an empty string if it doesn't have a code\n */\n","ex":[{"k":"Reference","t":"toString","c":"@discordjs/structures!Invite#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":194,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"@discordjs/structures!Invite#type:member","d":"/**\n * The type of this invite\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"type","c":"@discordjs/structures!Invite#type"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"type\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"type\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":92,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#url:member","d":"/**\n * The URL to the invite\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"url","c":"@discordjs/structures!Invite#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":185,"co":2,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!Invite#uses:member","d":"/**\n * The number of times this invite has been used\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"uses","c":"@discordjs/structures!Invite#uses"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"uses\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"uses\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIActualInvite","c":"@discordjs/structures!APIActualInvite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":142,"co":2,"ro":true,"op":false,"r":"Public","n":"uses","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!Invite#valueOf:member(1)","d":"/**\n * Returns the primitive value of the specified object.\n */\n","ex":[{"k":"Reference","t":"valueOf","c":"@discordjs/structures!Invite#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Object","c":"!Object:interface"},{"k":"Content","t":";"}],"l":217,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!MediaChannel:class","d":"/**\n * Sample Implementation of a structure for media channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"MediaChannel","c":"@discordjs/structures!MediaChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildMediaChannel","c":"discord-api-types/v10!APIGuildMediaChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/MediaChannel.ts","l":25,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"MediaChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!MediaChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `MediaChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildMediaChannel","c":"discord-api-types/v10!APIGuildMediaChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":28,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!MediaChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MediaChannel","c":"@discordjs/structures!MediaChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildMediaChannel","c":"discord-api-types/v10!APIGuildMediaChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/MediaChannel.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"MediaChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":34,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"@discordjs/structures!MergePrototype:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MergePrototype","c":"@discordjs/structures!MergePrototype:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class1"},{"k":"Content","t":", "},{"k":"Reference","t":"Class2"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class1"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Class1"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"Class2"},{"k":"Content","t":">> & "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Class2"},{"k":"Content","t":", "},{"k":"Reference","t":"OptionalPropertyNames","c":"@discordjs/structures!OptionalPropertyNames:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":">>> & "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"OptionalPropertyNames","c":"@discordjs/structures!OptionalPropertyNames:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":">, keyof "},{"k":"Reference","t":"Class1"},{"k":"Content","t":">> & {  ["},{"k":"Reference","t":"Prop"},{"k":"Content","t":" in "},{"k":"Reference","t":"OptionalPropertyNames","c":"@discordjs/structures!OptionalPropertyNames:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":"> & keyof "},{"k":"Reference","t":"Class1"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Class1"},{"k":"Content","t":"["},{"k":"Reference","t":"Prop"},{"k":"Content","t":"] | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class2"},{"k":"Content","t":"["},{"k":"Reference","t":"Prop"},{"k":"Content","t":"], "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">;}"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":11,"co":1,"r":"Public","n":"MergePrototype","tps":[{"tp":"Class1","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Class2","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":61}},{"k":"TypeAlias","c":"@discordjs/structures!MergePrototypes:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MergePrototypes","c":"@discordjs/structures!MergePrototypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClassArray"},{"k":"Content","t":" extends "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"> = "},{"k":"Reference","t":"ClassArray"},{"k":"Content","t":" extends [infer "},{"k":"Reference","t":"Class1"},{"k":"Content","t":"] ? "},{"k":"Reference","t":"Class1"},{"k":"Content","t":" : "},{"k":"Reference","t":"ClassArray"},{"k":"Content","t":" extends [infer "},{"k":"Reference","t":"Class1"},{"k":"Content","t":", ...infer "},{"k":"Reference","t":"Rest"},{"k":"Content","t":"] ? "},{"k":"Reference","t":"MergePrototype","c":"@discordjs/structures!MergePrototype:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Class1"},{"k":"Content","t":", "},{"k":"Reference","t":"MergePrototypes","c":"@discordjs/structures!MergePrototypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Rest"},{"k":"Content","t":">> : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":17,"co":1,"r":"Public","n":"MergePrototypes","tps":[{"tp":"ClassArray","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"ttr":{"st":9,"en":30}},{"k":"Function","c":"@discordjs/structures!Mixin:function(1)","d":"/**\n * Copies the prototype (getters, setters, and methods) of all mixins to the destination class. For type information see {@link MixinTypes}\n *\n * @remarks\n *\n * All mixins should be \"pure\" in that they only contain getters, setters, and methods. The runtime code will only copy these, and adding properties to the class only results in the types of the mixed class being wrong.\n *\n * @param destination - The class to apply the mixins to, must extend the base that the mixins expect it to.\n *\n * @param mixins - Classes that contain \"pure\" prototypes to be copied on top of the destination class prototype\n *\n * @typeParam DestinationClass - The class to be mixed, ensures that the mixins provided can be used with this destination\n *\n * @example\n * ```\n * // Interface merging on the mixin to give type access to props on the base and kData that are available once copied\n * interface TextMixin extends Channel {}\n * class TextMixin {\n * \t// Methods / getters\n * }\n *\n * // Interface merging on the mixed class to give it accurate type information within the declaration and when instantiated\n * interface TextChannel extends MixinTypes<Channel, [TextMixin]> {}\n * class TextChannel extends Channel {}\n *\n * // Apply for runtime\n * Mixin(TextChannel, [TextMixin])\n * ```\n *\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"Mixin","c":"@discordjs/structures!Mixin"},{"k":"Content","t":"<"},{"k":"Reference","t":"DestinationClass"},{"k":"Content","t":" extends "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<{}>"},{"k":"Content","t":">("},{"k":"Reference","t":"destination","c":"@discordjs/structures!~destination"},{"k":"Content","t":": "},{"k":"Reference","t":"DestinationClass"},{"k":"Content","t":", "},{"k":"Reference","t":"mixins","c":"@discordjs/structures!~mixins"},{"k":"Content","t":": "},{"k":"Reference","t":"Mixinable","c":"@discordjs/structures!Mixinable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MixinBase","c":"@discordjs/structures!MixinBase:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"DestinationClass"},{"k":"Content","t":"['prototype']>>[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/Mixin.ts","l":35,"co":1,"rtr":{"st":23,"en":24},"r":"Public","oi":1,"ps":[{"pn":"destination","ptr":{"st":12,"en":13},"op":false,"rs":false},{"pn":"mixins","ptr":{"st":16,"en":22},"op":false,"rs":false}],"tps":[{"tp":"DestinationClass","ctr":{"st":5,"en":9},"dtr":{"st":0,"en":0}}],"n":"Mixin"},{"k":"TypeAlias","c":"@discordjs/structures!Mixinable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Mixinable","c":"@discordjs/structures!Mixinable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClassType"},{"k":"Content","t":"> = "},{"k":"Content","t":"new (..."},{"k":"Reference","t":"args","c":"@discordjs/structures!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"ClassType"},{"k":"Content","t":";"}],"pat":"src/Mixin.ts","l":4,"co":1,"r":"Public","n":"Mixinable","tps":[{"tp":"ClassType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":11}},{"k":"TypeAlias","c":"@discordjs/structures!MixinBase:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MixinBase","c":"@discordjs/structures!MixinBase:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<{}>"},{"k":"Content","t":"> = "},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"DataType"},{"k":"Content","t":", infer "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":"> ? "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":"> : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"src/Mixin.ts","l":6,"co":1,"r":"Public","n":"MixinBase","tps":[{"tp":"BaseClass","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"ttr":{"st":8,"en":23}},{"k":"TypeAlias","c":"@discordjs/structures!MixinTypes:type","d":"/**\n * Type utility to provide accurate types for the runtime effects of {@link Mixin}\n *\n * @typeParam BaseClass - The class that is being directly extended, must match the class that the mixins are expecting\n *\n * @typeParam Mixins - The mixins that will be applied to this class via a {@link Mixin} call\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<{}>"},{"k":"Content","t":", "},{"k":"Reference","t":"Mixins"},{"k":"Content","t":" extends "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"MixinBase","c":"@discordjs/structures!MixinBase:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":">[]"},{"k":"Content","t":"> = "},{"k":"Reference","t":"CollapseUnion","c":"@discordjs/structures!CollapseUnion:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"DataType"},{"k":"Content","t":", infer "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":"> ? "},{"k":"Reference","t":"Mixins"},{"k":"Content","t":"["},{"k":"Reference","t":"number"},{"k":"Content","t":"] extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":"> \t? // prettier-ignore  "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">["},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"kData","c":"@discordjs/structures!~kData:var"},{"k":"Content","t":"] extends  // @ts-expect-error kData is protected  "},{"k":"Reference","t":"Mixins"},{"k":"Content","t":"["},{"k":"Reference","t":"number"},{"k":"Content","t":"]["},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"kData","c":"@discordjs/structures!~kData:var"},{"k":"Content","t":"]  ? "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MergePrototypes","c":"@discordjs/structures!MergePrototypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Mixins"},{"k":"Content","t":">, keyof "},{"k":"Reference","t":"BaseClass"},{"k":"Content","t":" | "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"kMixinConstruct","c":"@discordjs/structures!~kMixinConstruct:var"},{"k":"Content","t":">  : "},{"k":"Reference","t":"never"},{"k":"Content","t":" \t: "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"dist-docs/MixinTypes.d.ts","l":12,"co":1,"r":"Public","n":"MixinTypes","tps":[{"tp":"BaseClass","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}},{"tp":"Mixins","ctr":{"st":10,"en":15},"dtr":{"st":0,"en":0}}],"ttr":{"st":16,"en":72}},{"k":"TypeAlias","c":"@discordjs/structures!NonAbstract:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"NonAbstract","c":"@discordjs/structures!NonAbstract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Content","t":"abstract new (..."},{"k":"Reference","t":"args","c":"@discordjs/structures!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":") => "},{"k":"Reference","t":"any"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends abstract new (..."},{"k":"Reference","t":"args","c":"@discordjs/structures!~args"},{"k":"Content","t":": infer "},{"k":"Reference","t":"Args"},{"k":"Content","t":") => infer "},{"k":"Reference","t":"Instance"},{"k":"Content","t":" ? "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"Type"},{"k":"Content","t":"> & (new (..."},{"k":"Reference","t":"args","c":"@discordjs/structures!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"Args"},{"k":"Content","t":") => "},{"k":"Reference","t":"Instance"},{"k":"Content","t":") : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":29,"co":1,"r":"Public","n":"NonAbstract","tps":[{"tp":"Type","ctr":{"st":5,"en":11},"dtr":{"st":0,"en":0}}],"ttr":{"st":12,"en":33}},{"k":"Variable","c":"@discordjs/structures!OptimizeDataPropertyName:var","d":"","ex":[{"k":"Reference","t":"OptimizeDataPropertyName","c":"@discordjs/structures!OptimizeDataPropertyName"},{"k":"Content","t":" = "},{"k":"Content","t":"\"optimizeData\""}],"pat":"src/Structure.ts","l":5,"co":14,"itr":{"st":2,"en":3},"ro":true,"r":"Public","n":"OptimizeDataPropertyName","vtr":{"st":0,"en":0}},{"k":"TypeAlias","c":"@discordjs/structures!OptionalPropertyNames:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"OptionalPropertyNames","c":"@discordjs/structures!OptionalPropertyNames:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":"> = "},{"k":"Content","t":"{  ["},{"k":"Reference","t":"Key"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Type"},{"k":"Content","t":"]-?: {} extends {    ["},{"k":"Reference","t":"Prop"},{"k":"Content","t":" in "},{"k":"Reference","t":"Key"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Type"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"];  } ? "},{"k":"Reference","t":"Key"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";}[keyof "},{"k":"Reference","t":"Type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":7,"co":1,"r":"Public","n":"OptionalPropertyNames","tps":[{"tp":"Type","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":24}},{"k":"TypeAlias","c":"@discordjs/structures!PartialChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PartialChannel","c":"@discordjs/structures!PartialChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types/v10!ChannelType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"APIChannel","c":"discord-api-types/v10!APIChannel:type"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"APIPartialChannel","c":"discord-api-types/v10!APIPartialChannel:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/channels/Channel.ts","l":17,"co":1,"r":"Public","n":"PartialChannel","ttr":{"st":3,"en":13}},{"k":"TypeAlias","c":"@discordjs/structures!Partialize:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"Type"},{"k":"Content","t":" | ''"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":"> & "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":", ''>>>"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":35,"co":1,"r":"Public","n":"Partialize","tps":[{"tp":"Type","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Omitted","ctr":{"st":7,"en":10},"dtr":{"st":0,"en":0}}],"ttr":{"st":11,"en":27}},{"k":"Class","c":"@discordjs/structures!PermissionOverwrite:class","d":"/**\n * Represents metadata of a thread channel on Discord.\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"PermissionOverwrite","c":"@discordjs/structures!PermissionOverwrite:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"'allow' | 'deny'"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/PermissionOverwrite.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"PermissionOverwrite","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#[kAllow]:member","d":"","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kAllow","c":"@discordjs/structures!~kAllow:var"},{"k":"Content","t":"]: "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":false,"op":false,"r":"Public","n":"[kAllow]","prtr":{"st":3,"en":6},"sta":false,"pr":true,"ab":false},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#[kDeny]:member","d":"","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kDeny","c":"@discordjs/structures!~kDeny:var"},{"k":"Content","t":"]: "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":false,"op":false,"r":"Public","n":"[kDeny]","prtr":{"st":3,"en":6},"sta":false,"pr":true,"ab":false},{"k":"Constructor","c":"@discordjs/structures!PermissionOverwrite:constructor(1)","d":"/**\n * Constructs a new instance of the `PermissionOverwrite` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":18,"co":42,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#allow:member","d":"/**\n * The permission bit set allowed by this overwrite.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"allow","c":"@discordjs/structures!PermissionOverwrite#allow"},{"k":"Content","t":"(): "},{"k":"Reference","t":"PermissionsBitField","c":"@discordjs/structures!PermissionsBitField:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":52,"co":2,"ro":true,"op":false,"r":"Public","n":"allow","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each ThreadMetadata\n *\n * @remarks\n *\n * This template has defaults, if you want to remove additional data and keep the defaults, use `Object.defineProperties`. To override the defaults, set this value directly.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!PermissionOverwrite.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":31,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#deny:member","d":"/**\n * The permission bit set denied by this overwrite.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"deny","c":"@discordjs/structures!PermissionOverwrite#deny"},{"k":"Content","t":"(): "},{"k":"Reference","t":"PermissionsBitField","c":"@discordjs/structures!PermissionsBitField:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":2,"ro":true,"op":false,"r":"Public","n":"deny","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#id:member","d":"/**\n * The role or user id for this overwrite.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"id","c":"@discordjs/structures!PermissionOverwrite#id"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":68,"co":2,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!PermissionOverwrite#optimizeData:member(1)","d":"/**\n * Function called to ensure stored raw data is in optimized formats, used in tandem with a data template\n *\n * @remarks\n *\n * Additionally, when implementing, ensure to call `super._optimizeData` if any class in the super chain aside from Structure contains an implementation. Note: mixins do not need to call super ever as the process of mixing walks the prototype chain.\n *\n * @param _data - the raw data received from the API to optimize\n */\n","ex":[{"k":"Content","t":"protected "},{"k":"Reference","t":"optimizeData","c":"@discordjs/structures!PermissionOverwrite#optimizeData"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":39,"co":2,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":true,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"optimizeData"},{"k":"Method","c":"@discordjs/structures!PermissionOverwrite#toJSON:member(1)","d":"/**\n * Transforms this object to its JSON format with raw API data (or close to it), automatically called by `JSON.stringify()` when this structure is stringified\n *\n * @remarks\n *\n * The type of this data is determined by omissions at runtime and is only guaranteed for default omissions\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!PermissionOverwrite#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":";"}],"l":82,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/structures!PermissionOverwrite#type:member","d":"/**\n * The type of this overwrite.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"type","c":"@discordjs/structures!PermissionOverwrite#type"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"type\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"type\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types/v10!APIOverwrite:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":75,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!PermissionsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a permission bit field. All {@link GuildMember}s have a set of permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrite}s for the member that override their default permissions.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"PermissionsBitField","c":"@discordjs/structures!PermissionsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"@discordjs/structures!BitField:class"},{"k":"Content","t":"<"},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types/payloads!PermissionFlagsBits:var"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/bitfields/PermissionsBitField.ts","l":11,"co":1,"r":"Public","ab":false,"n":"PermissionsBitField","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!PermissionsBitField.All:member","d":"/**\n * Bit field representing every permission combined\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"All","c":"@discordjs/structures!PermissionsBitField.All"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":22,"co":2,"ro":true,"op":false,"r":"Public","n":"All","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!PermissionsBitField#any:member(1)","d":"/**\n * Checks whether the bit field has a permission, or any of multiple permissions.\n *\n * @param permission - Permission(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n *\n * @returns Whether the bit field has the permission(s)\n */\n","ex":[{"k":"Reference","t":"any","c":"@discordjs/structures!PermissionsBitField#any"},{"k":"Content","t":"("},{"k":"Reference","t":"permission","c":"@discordjs/structures!~permission"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types/payloads!PermissionFlagsBits:var"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"@discordjs/structures!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":53,"co":18,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permission","ptr":{"st":4,"en":10},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"any"},{"k":"Property","c":"@discordjs/structures!PermissionsBitField.Default:member","d":"/**\n * Bit field representing the default permissions for users\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"Default","c":"@discordjs/structures!PermissionsBitField.Default"},{"k":"Content","t":" = "},{"k":"Content","t":"104324673n"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":false,"r":"Public","n":"Default","prtr":{"st":0,"en":0},"itr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!PermissionsBitField.Flags:member","d":"/**\n * Numeric permission flags.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags}\n */\n","ex":[{"k":"Content","t":"static "},{"k":"Reference","t":"Flags","c":"@discordjs/structures!PermissionsBitField.Flags"},{"k":"Content","t":": "},{"k":"Content","t":"{    readonly "},{"k":"Reference","t":"CreateInstantInvite","c":"@discordjs/structures!~__type#CreateInstantInvite"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"KickMembers","c":"@discordjs/structures!~__type#KickMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"BanMembers","c":"@discordjs/structures!~__type#BanMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"Administrator","c":"@discordjs/structures!~__type#Administrator"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageChannels","c":"@discordjs/structures!~__type#ManageChannels"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageGuild","c":"@discordjs/structures!~__type#ManageGuild"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"AddReactions","c":"@discordjs/structures!~__type#AddReactions"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ViewAuditLog","c":"@discordjs/structures!~__type#ViewAuditLog"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"PrioritySpeaker","c":"@discordjs/structures!~__type#PrioritySpeaker"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"Stream","c":"@discordjs/structures!~__type#Stream"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ViewChannel","c":"@discordjs/structures!~__type#ViewChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"SendMessages","c":"@discordjs/structures!~__type#SendMessages"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"SendTTSMessages","c":"@discordjs/structures!~__type#SendTTSMessages"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageMessages","c":"@discordjs/structures!~__type#ManageMessages"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"EmbedLinks","c":"@discordjs/structures!~__type#EmbedLinks"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"AttachFiles","c":"@discordjs/structures!~__type#AttachFiles"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ReadMessageHistory","c":"@discordjs/structures!~__type#ReadMessageHistory"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"MentionEveryone","c":"@discordjs/structures!~__type#MentionEveryone"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseExternalEmojis","c":"@discordjs/structures!~__type#UseExternalEmojis"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ViewGuildInsights","c":"@discordjs/structures!~__type#ViewGuildInsights"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"Connect","c":"@discordjs/structures!~__type#Connect"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"Speak","c":"@discordjs/structures!~__type#Speak"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"MuteMembers","c":"@discordjs/structures!~__type#MuteMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"DeafenMembers","c":"@discordjs/structures!~__type#DeafenMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"MoveMembers","c":"@discordjs/structures!~__type#MoveMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseVAD","c":"@discordjs/structures!~__type#UseVAD"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ChangeNickname","c":"@discordjs/structures!~__type#ChangeNickname"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageNicknames","c":"@discordjs/structures!~__type#ManageNicknames"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageRoles","c":"@discordjs/structures!~__type#ManageRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageWebhooks","c":"@discordjs/structures!~__type#ManageWebhooks"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageEmojisAndStickers","c":"@discordjs/structures!~__type#ManageEmojisAndStickers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageGuildExpressions","c":"@discordjs/structures!~__type#ManageGuildExpressions"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseApplicationCommands","c":"@discordjs/structures!~__type#UseApplicationCommands"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"RequestToSpeak","c":"@discordjs/structures!~__type#RequestToSpeak"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageEvents","c":"@discordjs/structures!~__type#ManageEvents"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ManageThreads","c":"@discordjs/structures!~__type#ManageThreads"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"CreatePublicThreads","c":"@discordjs/structures!~__type#CreatePublicThreads"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"CreatePrivateThreads","c":"@discordjs/structures!~__type#CreatePrivateThreads"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseExternalStickers","c":"@discordjs/structures!~__type#UseExternalStickers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"SendMessagesInThreads","c":"@discordjs/structures!~__type#SendMessagesInThreads"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseEmbeddedActivities","c":"@discordjs/structures!~__type#UseEmbeddedActivities"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ModerateMembers","c":"@discordjs/structures!~__type#ModerateMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"ViewCreatorMonetizationAnalytics","c":"@discordjs/structures!~__type#ViewCreatorMonetizationAnalytics"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseSoundboard","c":"@discordjs/structures!~__type#UseSoundboard"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"CreateGuildExpressions","c":"@discordjs/structures!~__type#CreateGuildExpressions"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"CreateEvents","c":"@discordjs/structures!~__type#CreateEvents"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseExternalSounds","c":"@discordjs/structures!~__type#UseExternalSounds"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"SendVoiceMessages","c":"@discordjs/structures!~__type#SendVoiceMessages"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"SendPolls","c":"@discordjs/structures!~__type#SendPolls"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";    readonly "},{"k":"Reference","t":"UseExternalApps","c":"@discordjs/structures!~__type#UseExternalApps"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";  }"},{"k":"Content","t":";"}],"l":17,"co":2,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":204},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!PermissionsBitField#has:member(1)","d":"/**\n * Checks whether the bit field has a permission, or multiple permissions.\n *\n * @param permission - Permission(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n *\n * @returns Whether the bit field has the permission(s)\n */\n","ex":[{"k":"Reference","t":"has","c":"@discordjs/structures!PermissionsBitField#has"},{"k":"Content","t":"("},{"k":"Reference","t":"permission","c":"@discordjs/structures!~permission"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types/payloads!PermissionFlagsBits:var"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"@discordjs/structures!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":64,"co":18,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permission","ptr":{"st":4,"en":10},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"has"},{"k":"Method","c":"@discordjs/structures!PermissionsBitField#missing:member(1)","d":"/**\n * Gets all given bits that are missing from the bit field.\n *\n * @param bits - Bit(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n *\n * @returns A bit field containing the missing permissions\n */\n","ex":[{"k":"Reference","t":"missing","c":"@discordjs/structures!PermissionsBitField#missing"},{"k":"Content","t":"("},{"k":"Reference","t":"bits","c":"@discordjs/structures!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"@discordjs/structures!BitFieldResolvable:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types/payloads!PermissionFlagsBits:var"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"@discordjs/structures!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"(\"CreateInstantInvite\" | \"KickMembers\" | \"BanMembers\" | \"Administrator\" | \"ManageChannels\" | \"ManageGuild\" | \"AddReactions\" | \"ViewAuditLog\" | \"PrioritySpeaker\" | \"Stream\" | \"ViewChannel\" | \"SendMessages\" | \"SendTTSMessages\" | \"ManageMessages\" | \"EmbedLinks\" | \"AttachFiles\" | \"ReadMessageHistory\" | \"MentionEveryone\" | \"UseExternalEmojis\" | \"ViewGuildInsights\" | \"Connect\" | \"Speak\" | \"MuteMembers\" | \"DeafenMembers\" | \"MoveMembers\" | \"UseVAD\" | \"ChangeNickname\" | \"ManageNicknames\" | \"ManageRoles\" | \"ManageWebhooks\" | \"ManageEmojisAndStickers\" | \"ManageGuildExpressions\" | \"UseApplicationCommands\" | \"RequestToSpeak\" | \"ManageEvents\" | \"ManageThreads\" | \"CreatePublicThreads\" | \"CreatePrivateThreads\" | \"UseExternalStickers\" | \"SendMessagesInThreads\" | \"UseEmbeddedActivities\" | \"ModerateMembers\" | \"ViewCreatorMonetizationAnalytics\" | \"UseSoundboard\" | \"CreateGuildExpressions\" | \"CreateEvents\" | \"UseExternalSounds\" | \"SendVoiceMessages\" | \"SendPolls\" | \"UseExternalApps\")[]"},{"k":"Content","t":";"}],"l":42,"co":18,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":4,"en":10},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"missing"},{"k":"Property","c":"@discordjs/structures!PermissionsBitField.StageModerator:member","d":"/**\n * Bit field representing the permissions required for moderators of stage channels\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"StageModerator","c":"@discordjs/structures!PermissionsBitField.StageModerator"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":32,"co":2,"ro":true,"op":false,"r":"Public","n":"StageModerator","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!PermissionsBitField#toArray:member(1)","d":"/**\n * Gets an Array of bitfield names based on the permissions available.\n *\n * @returns An Array of permission names\n */\n","ex":[{"k":"Reference","t":"toArray","c":"@discordjs/structures!PermissionsBitField#toArray"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"CreateInstantInvite\" | \"KickMembers\" | \"BanMembers\" | \"Administrator\" | \"ManageChannels\" | \"ManageGuild\" | \"AddReactions\" | \"ViewAuditLog\" | \"PrioritySpeaker\" | \"Stream\" | \"ViewChannel\" | \"SendMessages\" | \"SendTTSMessages\" | \"ManageMessages\" | \"EmbedLinks\" | \"AttachFiles\" | \"ReadMessageHistory\" | \"MentionEveryone\" | \"UseExternalEmojis\" | \"ViewGuildInsights\" | \"Connect\" | \"Speak\" | \"MuteMembers\" | \"DeafenMembers\" | \"MoveMembers\" | \"UseVAD\" | \"ChangeNickname\" | \"ManageNicknames\" | \"ManageRoles\" | \"ManageWebhooks\" | \"ManageEmojisAndStickers\" | \"ManageGuildExpressions\" | \"UseApplicationCommands\" | \"RequestToSpeak\" | \"ManageEvents\" | \"ManageThreads\" | \"CreatePublicThreads\" | \"CreatePrivateThreads\" | \"UseExternalStickers\" | \"SendMessagesInThreads\" | \"UseEmbeddedActivities\" | \"ModerateMembers\" | \"ViewCreatorMonetizationAnalytics\" | \"UseSoundboard\" | \"CreateGuildExpressions\" | \"CreateEvents\" | \"UseExternalSounds\" | \"SendVoiceMessages\" | \"SendPolls\" | \"UseExternalApps\")[]"},{"k":"Content","t":";"}],"l":73,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toArray"}],"etr":{"st":3,"en":10,"tps":[{"st":5,"en":9}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!PrivateThreadChannel:class","d":"/**\n * Sample Implementation of a structure for private thread channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"PrivateThreadChannel","c":"@discordjs/structures!PrivateThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIPrivateThreadChannel","c":"discord-api-types/v10!APIPrivateThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/PrivateThreadChannel.ts","l":29,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"PrivateThreadChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!PrivateThreadChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `PrivateThreadChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIPrivateThreadChannel","c":"discord-api-types/v10!APIPrivateThreadChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":32,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!PrivateThreadChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PrivateThreadChannel","c":"@discordjs/structures!PrivateThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIPrivateThreadChannel","c":"discord-api-types/v10!APIPrivateThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types/v10!ChannelType.PrivateThread:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/PrivateThreadChannel.ts","l":13,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"PrivateThreadChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":42,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!PublicThreadChannel:class","d":"/**\n * Sample Implementation of a structure for public thread channels, usable by direct end consumers.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"PublicThreadChannel","c":"@discordjs/structures!PublicThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIPublicThreadChannel","c":"discord-api-types/v10!APIPublicThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/PublicThreadChannel.ts","l":31,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"PublicThreadChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!PublicThreadChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `PublicThreadChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIPublicThreadChannel","c":"discord-api-types/v10!APIPublicThreadChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":34,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!PublicThreadChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PublicThreadChannel","c":"@discordjs/structures!PublicThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIPublicThreadChannel","c":"discord-api-types/v10!APIPublicThreadChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelOwnerMixin","c":"@discordjs/structures!ChannelOwnerMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types/v10!ChannelType.PublicThread:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"AppliedTagsMixin","c":"@discordjs/structures!AppliedTagsMixin:class"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"src/channels/PublicThreadChannel.ts","l":14,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"PublicThreadChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":44,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Interface","c":"@discordjs/structures!RecursiveReadonlyArray:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"@discordjs/structures!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ReadonlyArray","c":"!ReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":" | "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"@discordjs/structures!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">>"},{"k":"Content","t":" "}],"pat":"src/utils/types.ts","l":23,"co":1,"r":"Public","tps":[{"tp":"ItemType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"RecursiveReadonlyArray","pmo":false,"ms":[],"etrs":[{"st":5,"en":13,"tps":[{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"Data"},{"k":"Content","t":" | ''"},{"k":"Content","t":", "},{"k":"Reference","t":"Data"},{"k":"Content","t":"> = "},{"k":"Content","t":"{  ["},{"k":"Reference","t":"Key"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Data"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Key"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"Data"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"];}"},{"k":"Content","t":";"}],"pat":"src/utils/types.ts","l":1,"co":1,"r":"Public","n":"ReplaceOmittedWithUnknown","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}},{"tp":"Data","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":11,"en":26}},{"k":"Class","c":"@discordjs/structures!StageChannel:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"StageChannel","c":"@discordjs/structures!StageChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildStageVoiceChannel","c":"discord-api-types/v10!APIGuildStageVoiceChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/StageChannel.ts","l":24,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"StageChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!StageChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `StageChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildStageVoiceChannel","c":"discord-api-types/v10!APIGuildStageVoiceChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":27,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!StageChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StageChannel","c":"@discordjs/structures!StageChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildStageVoiceChannel","c":"discord-api-types/v10!APIGuildStageVoiceChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/StageChannel.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"StageChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":38,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!Structure:class","d":"/**\n * Represents a data model from the Discord API\n *\n * @remarks\n *\n * The constructor for this class is marked as internal. Third-party code should not call the constructor directly or create subclasses that extend the `Structure` class.\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":" extends "},{"k":"Content","t":"{}"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"DataType"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> "}],"pat":"src/Structure.ts","l":22,"co":1,"r":"Public","tps":[{"tp":"DataType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Omitted","ctr":{"st":9,"en":12},"dtr":{"st":13,"en":14}}],"ab":true,"n":"Structure","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!Structure.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each Structure.\n *\n * @remarks\n *\n * This template should be overridden in all subclasses to provide more accurate type information. The template in the base {@link Structure} class will have no effect on most subclasses for this reason.\n */\n","ex":[{"k":"Content","t":"protected static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!Structure.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":49,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":9},"sta":true,"pr":true,"ab":false},{"k":"Method","c":"@discordjs/structures!Structure#toJSON:member(1)","d":"/**\n * Transforms this object to its JSON format with raw API data (or close to it), automatically called by `JSON.stringify()` when this structure is stringified\n *\n * @remarks\n *\n * The type of this data is determined by omissions at runtime and is only guaranteed for default omissions\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!Structure#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"DataType"},{"k":"Content","t":";"}],"l":132,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Class","c":"@discordjs/structures!TextChannel:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"TextChannel","c":"@discordjs/structures!TextChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APITextChannel","c":"discord-api-types/v10!APITextChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/TextChannel.ts","l":26,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"TextChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!TextChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `TextChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextChannel","c":"discord-api-types/v10!APITextChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":29,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!TextChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"TextChannel","c":"@discordjs/structures!TextChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APITextChannel","c":"discord-api-types/v10!APITextChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPinMixin","c":"@discordjs/structures!ChannelPinMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelTopicMixin","c":"@discordjs/structures!ChannelTopicMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types/v10!ChannelType.GuildText:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/TextChannel.ts","l":13,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"TextChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":42,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!TextChannelMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextChannelType","c":"discord-api-types/v10!TextChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextChannelType","c":"discord-api-types/v10!TextChannelType:type"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/TextChannelMixin.ts","l":7,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"TextChannelMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!TextChannelMixin#isTextBased:member(1)","d":"/**\n * Indicates whether this channel can contain messages\n */\n","ex":[{"k":"Reference","t":"isTextBased","c":"@discordjs/structures!TextChannelMixin#isTextBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":18,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isTextBased"},{"k":"Property","c":"@discordjs/structures!TextChannelMixin#lastMessageId:member","d":"/**\n * The id of the last message sent in this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"lastMessageId","c":"@discordjs/structures!TextChannelMixin#lastMessageId"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"last_message_id\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"lastMessageId","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!TextChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextChannelType","c":"discord-api-types/v10!TextChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextChannelType","c":"discord-api-types/v10!TextChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/TextChannelMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"TextChannelMixin","pmo":false,"ms":[],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"Class","c":"@discordjs/structures!ThreadChannelMixin:class","d":"/**\n * @remarks\n *\n * has a sub-structure {@link ThreadMetadata} that extending mixins should add to their DataTemplate and _optimizeData\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ThreadChannelMixin.ts","l":10,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ThreadChannelMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/structures!ThreadChannelMixin#isThread:member(1)","d":"/**\n * Indicates whether this channel is a thread channel\n */\n","ex":[{"k":"Reference","t":"isThread","c":"@discordjs/structures!ThreadChannelMixin#isThread"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":36,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThread"},{"k":"Property","c":"@discordjs/structures!ThreadChannelMixin#memberCount:member","d":"/**\n * The approximate count of users in a thread, stops counting at 50\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"memberCount","c":"@discordjs/structures!ThreadChannelMixin#memberCount"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"member_count\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":14,"co":2,"ro":true,"op":false,"r":"Public","n":"memberCount","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadChannelMixin#messageCount:member","d":"/**\n * The number of messages (not including the initial message or deleted messages) in a thread.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"messageCount","c":"@discordjs/structures!ThreadChannelMixin#messageCount"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"message_count\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":21,"co":2,"ro":true,"op":false,"r":"Public","n":"messageCount","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadChannelMixin#totalMessageSent:member","d":"/**\n * The number of messages ever sent in a thread, it's similar to message_count on message creation, but will not decrement the number when a message is deleted.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"totalMessageSent","c":"@discordjs/structures!ThreadChannelMixin#totalMessageSent"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"total_message_sent\"] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":false,"r":"Public","n":"totalMessageSent","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ThreadChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ThreadChannelMixin","c":"@discordjs/structures!ThreadChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ThreadChannelType","c":"discord-api-types/v10!ThreadChannelType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ThreadChannelMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"ThreadChannelMixin","pmo":false,"ms":[],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"Class","c":"@discordjs/structures!ThreadMetadata:class","d":"/**\n * Represents metadata of a thread channel on Discord.\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ThreadMetadata","c":"@discordjs/structures!ThreadMetadata:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"'archive_timestamp' | 'create_timestamp'"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/ThreadMetadata.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"ThreadMetadata","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ThreadMetadata#[kArchiveTimestamp]:member","d":"","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kArchiveTimestamp","c":"@discordjs/structures!~kArchiveTimestamp:var"},{"k":"Content","t":"]: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":14,"co":2,"ro":false,"op":false,"r":"Public","n":"[kArchiveTimestamp]","prtr":{"st":3,"en":6},"sta":false,"pr":true,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#[kCreatedTimestamp]:member","d":"","ex":[{"k":"Content","t":"protected ["},{"k":"Reference","t":"kCreatedTimestamp","c":"@discordjs/structures!~kCreatedTimestamp:var"},{"k":"Content","t":"]: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":false,"op":false,"r":"Public","n":"[kCreatedTimestamp]","prtr":{"st":3,"en":6},"sta":false,"pr":true,"ab":false},{"k":"Constructor","c":"@discordjs/structures!ThreadMetadata:constructor(1)","d":"/**\n * Constructs a new instance of the `ThreadMetadata` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":16,"co":54,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#archived:member","d":"/**\n * Whether the thread is archived.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"archived","c":"@discordjs/structures!ThreadMetadata#archived"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"archived\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"archived\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":50,"co":2,"ro":true,"op":false,"r":"Public","n":"archived","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#archivedAt:member","d":"/**\n * The time the thread was archived at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"archivedAt","c":"@discordjs/structures!ThreadMetadata#archivedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":92,"co":2,"ro":true,"op":false,"r":"Public","n":"archivedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#archivedTimestamp:member","d":"/**\n * The timestamp when the thread's archive status was last changed, used for calculating recent activity.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"archivedTimestamp","c":"@discordjs/structures!ThreadMetadata#archivedTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":57,"co":2,"ro":true,"op":false,"r":"Public","n":"archivedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#autoArchiveDuration:member","d":"/**\n * The thread will stop showing in the channel list after auto_archive_duration minutes of inactivity,\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"autoArchiveDuration","c":"@discordjs/structures!ThreadMetadata#autoArchiveDuration"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"auto_archive_duration\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"auto_archive_duration\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":71,"co":2,"ro":true,"op":false,"r":"Public","n":"autoArchiveDuration","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#createdAt:member","d":"/**\n * The time the thread was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdAt","c":"@discordjs/structures!ThreadMetadata#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":100,"co":2,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#createdTimestamp:member","d":"/**\n * The timestamp when the thread was created; only populated for threads created after 2022-01-09.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdTimestamp","c":"@discordjs/structures!ThreadMetadata#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":64,"co":2,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each ThreadMetadata\n *\n * @remarks\n *\n * This template has defaults, if you want to remove additional data and keep the defaults, use `Object.defineProperties`. To override the defaults, set this value directly.\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!ThreadMetadata.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#invitable:member","d":"/**\n * Whether non-moderators can add other non-moderators to a thread; only available on private threads.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"invitable","c":"@discordjs/structures!ThreadMetadata#invitable"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"invitable\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"invitable\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":78,"co":2,"ro":true,"op":false,"r":"Public","n":"invitable","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadMetadata#locked:member","d":"/**\n * Whether the thread is locked; when a thread is locked, only users with {@link discord-api-types/v10#(PermissionFlagsBits:variable) | ManageThreads} can unarchive it.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"locked","c":"@discordjs/structures!ThreadMetadata#locked"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"locked\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"locked\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":85,"co":2,"ro":true,"op":false,"r":"Public","n":"locked","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!ThreadMetadata#optimizeData:member(1)","d":"/**\n * Function called to ensure stored raw data is in optimized formats, used in tandem with a data template\n *\n * @remarks\n *\n * Additionally, when implementing, ensure to call `super._optimizeData` if any class in the super chain aside from Structure contains an implementation. Note: mixins do not need to call super ever as the process of mixing walks the prototype chain.\n *\n * @param _data - the raw data received from the API to optimize\n */\n","ex":[{"k":"Content","t":"protected "},{"k":"Reference","t":"optimizeData","c":"@discordjs/structures!ThreadMetadata#optimizeData"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":37,"co":2,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":true,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"optimizeData"},{"k":"Method","c":"@discordjs/structures!ThreadMetadata#toJSON:member(1)","d":"/**\n * Transforms this object to its JSON format with raw API data (or close to it), automatically called by `JSON.stringify()` when this structure is stringified\n *\n * @remarks\n *\n * The type of this data is determined by omissions at runtime and is only guaranteed for default omissions\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/structures!ThreadMetadata#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIThreadMetadata","c":"discord-api-types/v10!APIThreadMetadata:interface"},{"k":"Content","t":";"}],"l":108,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!ThreadOnlyChannelMixin:class","d":"/**\n * @remarks\n *\n * has an array of sub-structures {@link ForumTag} that extending mixins should add to their DataTemplate and _optimizeData\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":"> "}],"pat":"src/channels/mixins/ThreadOnlyChannelMixin.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"ab":false,"n":"ThreadOnlyChannelMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!ThreadOnlyChannelMixin#defaultReactionEmoji:member","d":"/**\n * The emoji to show in the add reaction button on a thread in this channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"defaultReactionEmoji","c":"@discordjs/structures!ThreadOnlyChannelMixin#defaultReactionEmoji"},{"k":"Content","t":"(): "},{"k":"Content","t":"import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"default_reaction_emoji\"]"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!ThreadOnlyChannelMixin#defaultSortOrder:member","d":"/**\n * The default sort order type used to order posts in this channel.\n *\n * @defaultValue\n *\n * `null` – indicates a preferred sort order hasn't been set.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"defaultSortOrder","c":"@discordjs/structures!ThreadOnlyChannelMixin#defaultSortOrder"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"default_sort_order\"]>"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":false,"r":"Public","n":"defaultSortOrder","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!ThreadOnlyChannelMixin#isThreadOnly:member(1)","d":"/**\n * Indicates whether this channel only allows thread creation\n */\n","ex":[{"k":"Reference","t":"isThreadOnly","c":"@discordjs/structures!ThreadOnlyChannelMixin#isThreadOnly"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":34,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThreadOnly"}],"itrs":[]},{"k":"Interface","c":"@discordjs/structures!ThreadOnlyChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ThreadOnlyChannelMixin","c":"@discordjs/structures!ThreadOnlyChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types/v10!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types/v10!ChannelType.GuildMedia:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/ThreadOnlyChannelMixin.ts","l":5,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"ThreadOnlyChannelMixin","pmo":false,"ms":[],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16}]}]},{"k":"Class","c":"@discordjs/structures!User:class","d":"/**\n * Represents any user on Discord.\n *\n * @remarks\n *\n * has a substructure `AvatarDecorationData`, which needs to be instantiated and stored by an extending class using it\n *\n * @typeParam Omitted - Specify the properties that will not be stored in the raw data field as a union, implement via `DataTemplate`\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"User","c":"@discordjs/structures!User:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Structure","c":"@discordjs/structures!Structure:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/users/User.ts","l":14,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"User","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!User:constructor(1)","d":"/**\n * Constructs a new instance of the `User` class\n *\n * @param data - The raw data received from the API for the user\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":23,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/structures!User#accentColor:member","d":"/**\n * The base 10 accent color of the user's banner\n *\n * @remarks\n *\n * This property is only set when the user was manually fetched\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"accentColor","c":"@discordjs/structures!User#accentColor"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"accent_color\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"accent_color\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":115,"co":2,"ro":true,"op":false,"r":"Public","n":"accentColor","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#avatar:member","d":"/**\n * The user avatar's hash\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"avatar","c":"@discordjs/structures!User#avatar"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"avatar\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"avatar\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":74,"co":2,"ro":true,"op":false,"r":"Public","n":"avatar","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#banner:member","d":"/**\n * The user's banner hash\n *\n * @remarks\n *\n * This property is only set when the user was manually fetched\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"banner","c":"@discordjs/structures!User#banner"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"banner\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"banner\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":106,"co":2,"ro":true,"op":false,"r":"Public","n":"banner","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#bot:member","d":"/**\n * Whether the user is a bot\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"bot","c":"@discordjs/structures!User#bot"},{"k":"Content","t":"(): "},{"k":"Content","t":"false | "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<\"bot\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"bot\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":81,"co":2,"ro":true,"op":false,"r":"Public","n":"bot","prtr":{"st":3,"en":24},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#createdAt:member","d":"/**\n * The time the user was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdAt","c":"@discordjs/structures!User#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":165,"co":2,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#createdTimestamp:member","d":"/**\n * The timestamp the user was created at\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdTimestamp","c":"@discordjs/structures!User#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":158,"co":2,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User.DataTemplate:member","d":"/**\n * The template used for removing data from the raw data stored for each User\n */\n","ex":[{"k":"Content","t":"static readonly "},{"k":"Reference","t":"DataTemplate","c":"@discordjs/structures!User.DataTemplate"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"DataTemplate","prtr":{"st":3,"en":7},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#discriminator:member","d":"/**\n * The user's 4 digit tag, if a bot\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"discriminator","c":"@discordjs/structures!User#discriminator"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"discriminator\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"discriminator\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":53,"co":2,"ro":true,"op":false,"r":"Public","n":"discriminator","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#displayName:member","d":"/**\n * The name displayed in the client for this user when no nickname is set\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"displayName","c":"@discordjs/structures!User#displayName"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"username\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"username\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<\"global_name\" extends infer "},{"k":"Reference","t":"T_1"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T_1"},{"k":"Content","t":" extends \"global_name\" ? "},{"k":"Reference","t":"T_1"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T_1"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":67,"co":2,"ro":true,"op":false,"r":"Public","n":"displayName","prtr":{"st":3,"en":42},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#email:member","d":"/**\n * The user's email\n *\n * @remarks\n *\n * This property is only set when the user was fetched with an OAuth2 token and the `email` scope\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"email","c":"@discordjs/structures!User#email"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"email\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"email\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":142,"co":2,"ro":true,"op":false,"r":"Public","n":"email","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#globalName:member","d":"/**\n * The user's display name, the application name for bots\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"globalName","c":"@discordjs/structures!User#globalName"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"global_name\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"global_name\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":60,"co":2,"ro":true,"op":false,"r":"Public","n":"globalName","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#hexAccentColor:member","d":"/**\n * The hexadecimal version of the user accent color, with a leading hash\n *\n * @remarks\n *\n * This property is only set when the user was manually fetched\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"hexAccentColor","c":"@discordjs/structures!User#hexAccentColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | (\"accent_color\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"accent_color\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":175,"co":2,"ro":true,"op":false,"r":"Public","n":"hexAccentColor","prtr":{"st":3,"en":24},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#id:member","d":"/**\n * The user's id\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"id","c":"@discordjs/structures!User#id"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"id\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"id\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":39,"co":2,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#locale:member","d":"/**\n * The user's primary Discord language\n *\n * @remarks\n *\n * This property is only set when the user was fetched with an Oauth2 token and the `identify` scope\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"locale","c":"@discordjs/structures!User#locale"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"locale\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"locale\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":124,"co":2,"ro":true,"op":false,"r":"Public","n":"locale","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#mfaEnabled:member","d":"/**\n * Whether the user has mfa enabled\n *\n * @remarks\n *\n * This property is only set when the user was fetched with an OAuth2 token and the `identify` scope\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"mfaEnabled","c":"@discordjs/structures!User#mfaEnabled"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"mfa_enabled\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"mfa_enabled\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":97,"co":2,"ro":true,"op":false,"r":"Public","n":"mfaEnabled","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#premiumType:member","d":"/**\n * The type of nitro subscription on the user's account\n *\n * @remarks\n *\n * This property is only set when the user was fetched with an OAuth2 token and the `identify` scope\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"premiumType","c":"@discordjs/structures!User#premiumType"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"premium_type\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"premium_type\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":151,"co":2,"ro":true,"op":false,"r":"Public","n":"premiumType","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#system:member","d":"/**\n * Whether the user is an Official Discord System user\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"system","c":"@discordjs/structures!User#system"},{"k":"Content","t":"(): "},{"k":"Content","t":"false | "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<\"system\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"system\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":88,"co":2,"ro":true,"op":false,"r":"Public","n":"system","prtr":{"st":3,"en":24},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#username:member","d":"/**\n * The username of the user\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"username","c":"@discordjs/structures!User#username"},{"k":"Content","t":"(): "},{"k":"Content","t":"\"username\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"username\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":46,"co":2,"ro":true,"op":false,"r":"Public","n":"username","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!User#verified:member","d":"/**\n * Whether the email on the user's account has been verified\n *\n * @remarks\n *\n * This property is only set when the user was fetched with an OAuth2 token and the `email` scope\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"verified","c":"@discordjs/structures!User#verified"},{"k":"Content","t":"(): "},{"k":"Content","t":"(\"verified\" extends infer "},{"k":"Reference","t":"T"},{"k":"Content","t":" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends \"verified\" ? "},{"k":"Reference","t":"T"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" ? "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" : "},{"k":"Reference","t":"APIUser","c":"discord-api-types/v10!APIUser:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"T"},{"k":"Content","t":"] : "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":") | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":133,"co":2,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Class","c":"@discordjs/structures!VoiceChannel:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"VoiceChannel","c":"@discordjs/structures!VoiceChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildVoiceChannel","c":"discord-api-types/v10!APIGuildVoiceChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/VoiceChannel.ts","l":24,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"ab":false,"n":"VoiceChannel","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/structures!VoiceChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `VoiceChannel` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/structures!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partialize","c":"@discordjs/structures!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIGuildVoiceChannel","c":"discord-api-types/v10!APIGuildVoiceChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Omitted"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":27,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":false,"rs":false}]}],"etr":{"st":11,"en":17,"tps":[{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!VoiceChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"VoiceChannel","c":"@discordjs/structures!VoiceChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omitted"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"APIGuildVoiceChannel","c":"discord-api-types/v10!APIGuildVoiceChannel:type"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MixinTypes","c":"@discordjs/structures!MixinTypes:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">"},{"k":"Content","t":", [  "},{"k":"Reference","t":"ChannelParentMixin","c":"@discordjs/structures!ChannelParentMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelPermissionMixin","c":"@discordjs/structures!ChannelPermissionMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelSlowmodeMixin","c":"@discordjs/structures!ChannelSlowmodeMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"ChannelWebhookMixin","c":"@discordjs/structures!ChannelWebhookMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">,  "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/channels/VoiceChannel.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Omitted","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"VoiceChannel","pmo":false,"ms":[],"etrs":[{"st":11,"en":38,"tps":[{"st":13,"en":17},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/structures!VoiceChannelMixin:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"TextChannelMixin","c":"@discordjs/structures!TextChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/VoiceChannelMixin.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"ab":false,"n":"VoiceChannelMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/structures!VoiceChannelMixin#bitrate:member","d":"/**\n * The bitrate (in bits) of the voice channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"bitrate","c":"@discordjs/structures!VoiceChannelMixin#bitrate"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"bitrate\"]>"},{"k":"Content","t":";"}],"l":20,"co":2,"ro":true,"op":false,"r":"Public","n":"bitrate","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/structures!VoiceChannelMixin#isVoiceBased:member(1)","d":"/**\n * Indicates whether this channel has voice connection capabilities\n */\n","ex":[{"k":"Reference","t":"isVoiceBased","c":"@discordjs/structures!VoiceChannelMixin#isVoiceBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":" & this"},{"k":"Content","t":";"}],"l":48,"co":18,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isVoiceBased"},{"k":"Property","c":"@discordjs/structures!VoiceChannelMixin#rtcRegion:member","d":"/**\n * The voice region id for this channel, automatic when set to null.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"rtcRegion","c":"@discordjs/structures!VoiceChannelMixin#rtcRegion"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"rtc_region\"]>"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":false,"r":"Public","n":"rtcRegion","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!VoiceChannelMixin#userLimit:member","d":"/**\n * The user limit of the voice channel.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"userLimit","c":"@discordjs/structures!VoiceChannelMixin#userLimit"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"user_limit\"]>"},{"k":"Content","t":";"}],"l":41,"co":2,"ro":true,"op":false,"r":"Public","n":"userLimit","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/structures!VoiceChannelMixin#videoQualityMode:member","d":"/**\n * The camera video quality mode of the voice channel, {@link discord-api-types/v10#(VideoQualityMode:enum) | Auto} when not present.\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"videoQualityMode","c":"@discordjs/structures!VoiceChannelMixin#videoQualityMode"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<import(\"../../index.js\")."},{"k":"Reference","t":"ReplaceOmittedWithUnknown","c":"@discordjs/structures!ReplaceOmittedWithUnknown:type"},{"k":"Content","t":"<\"\", import(\"../Channel.js\")."},{"k":"Reference","t":"ChannelDataType","c":"@discordjs/structures!ChannelDataType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">>[\"video_quality_mode\"]>"},{"k":"Content","t":";"}],"l":34,"co":2,"ro":true,"op":false,"r":"Public","n":"videoQualityMode","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false}],"etr":{"st":13,"en":17,"tps":[{"st":15,"en":16}]},"itrs":[]},{"k":"Interface","c":"@discordjs/structures!VoiceChannelMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"VoiceChannelMixin","c":"@discordjs/structures!VoiceChannelMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types/v10!ChannelType.GuildStageVoice:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types/v10!ChannelType.GuildVoice:member"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Channel","c":"@discordjs/structures!Channel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/channels/mixins/VoiceChannelMixin.ts","l":6,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"VoiceChannelMixin","pmo":false,"ms":[],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16}]}]}]}]}