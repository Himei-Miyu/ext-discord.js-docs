{"meta":{"tpk":"@discordjs/api-extractor","tv":"7.38.1","v":1013,"ov":1013,"ts":{"undefined":false}},"pdir":"https://github.com/discordjs/discord.js/tree/@discordjs/builders@1.12.0/packages/builders","dp":{"@discordjs/formatters":"0.6.1","@discordjs/util":"1.1.1"},"k":"Package","c":"@discordjs/builders!","d":"","n":"@discordjs/builders","pmo":false,"ms":[{"k":"EntryPoint","c":"@discordjs/builders!","n":"","pmo":false,"ms":[{"k":"Class","c":"@discordjs/builders!ActionRowBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for action rows.\n *\n * @typeParam ComponentType - The types of components this action row holds\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInMessageActionRow","c":"discord-api-types!APIComponentInMessageActionRow:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIComponentInModalActionRow","c":"discord-api-types!APIComponentInModalActionRow:type"},{"k":"Content","t":">"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/ActionRow.ts","l":52,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ActionRowBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ActionRowBuilder:constructor(1)","d":"/**\n * Creates a new action row from API data.\n *\n * @param data - The API data to create this action row with\n *\n * @example\n *\n * Creating an action row from an API data object:\n * ```ts\n * const actionRow = new ActionRowBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcustom_id: \"custom id\",\n * \t\t\tlabel: \"Type something\",\n * \t\t\tstyle: TextInputStyle.Short,\n * \t\t\ttype: ComponentType.TextInput,\n * \t\t},\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating an action row using setters and API data:\n * ```ts\n * const actionRow = new ActionRowBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcustom_id: \"custom id\",\n * \t\t\tlabel: \"Click me\",\n * \t\t\tstyle: ButtonStyle.Primary,\n * \t\t\ttype: ComponentType.Button,\n * \t\t},\n * \t],\n * })\n * \t.addComponents(button2, button3);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":", ..."},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":" }?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInActionRow","c":"discord-api-types!APIComponentInActionRow:type"},{"k":"Content","t":">>"},{"k":"Content","t":");"}],"l":94,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ components, ...data }","ptr":{"st":5,"en":11},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ActionRowBuilder#addComponents:member(1)","d":"/**\n * Adds components to this action row.\n *\n * @param components - The components to add\n */\n","ex":[{"k":"Reference","t":"addComponents","c":"@discordjs/builders!ActionRowBuilder#addComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":104,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addComponents"},{"k":"Property","c":"@discordjs/builders!ActionRowBuilder#components:member","d":"/**\n * The components within this action row.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"components","c":"@discordjs/builders!ActionRowBuilder#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":58,"co":2,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ActionRowBuilder#setComponents:member(1)","d":"/**\n * Sets components for this action row.\n *\n * @param components - The components to set\n */\n","ex":[{"k":"Reference","t":"setComponents","c":"@discordjs/builders!ActionRowBuilder#setComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":114,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setComponents"},{"k":"Method","c":"@discordjs/builders!ActionRowBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ActionRowBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType","c":"!ReturnType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"['toJSON']>>"},{"k":"Content","t":";"}],"l":122,"co":9,"sta":false,"rtr":{"st":2,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":7,"en":16,"tps":[{"st":9,"en":15}]},"itrs":[]},{"k":"TypeAlias","c":"@discordjs/builders!AnyAPIActionRowComponent:type","d":"/**\n * Any action row component data represented as an object.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AnyAPIActionRowComponent","c":"@discordjs/builders!AnyAPIActionRowComponent:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInActionRow","c":"discord-api-types!APIComponentInActionRow:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIComponentInActionRow","c":"discord-api-types!APIComponentInActionRow:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIModalComponent","c":"discord-api-types!APIModalComponent:type"},{"k":"Content","t":";"}],"pat":"src/components/Component.ts","l":15,"co":1,"r":"Public","n":"AnyAPIActionRowComponent","ttr":{"st":3,"en":12}},{"k":"TypeAlias","c":"@discordjs/builders!AnyComponentBuilder:type","d":"/**\n * Any builder.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":";"}],"pat":"src/components/ActionRow.ts","l":45,"co":1,"r":"Public","n":"AnyComponentBuilder","ttr":{"st":3,"en":6}},{"k":"Class","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class","d":"/**\n * This mixin holds minimum and maximum symbols used for options.\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"ApplicationCommandNumericOptionMinMaxValueMixin","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandNumericOptionMinMaxValueMixin.ts","l":4,"co":1,"r":"Public","ab":true,"n":"ApplicationCommandNumericOptionMinMaxValueMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#max_value:member","d":"/**\n * The maximum value of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"max_value","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#max_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":8,"co":2,"ro":true,"op":true,"r":"Public","n":"max_value","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#min_value:member","d":"/**\n * The minimum value of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"min_value","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#min_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":13,"co":2,"ro":true,"op":true,"r":"Public","n":"min_value","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMaxValue:member(1)","d":"/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n","ex":[{"k":"Content","t":"abstract "},{"k":"Reference","t":"setMaxValue","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMaxValue"},{"k":"Content","t":"("},{"k":"Reference","t":"max","c":"@discordjs/builders!~max"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":20,"co":2,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"max","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":true,"n":"setMaxValue"},{"k":"Method","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMinValue:member(1)","d":"/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n","ex":[{"k":"Content","t":"abstract "},{"k":"Reference","t":"setMinValue","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMinValue"},{"k":"Content","t":"("},{"k":"Reference","t":"min","c":"@discordjs/builders!~min"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":27,"co":2,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"min","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":true,"n":"setMinValue"}],"itrs":[]},{"k":"TypeAlias","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type","d":"/**\n * The type of allowed channel types used for a channel option.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"allowedChannelTypes","c":"@discordjs/builders!~allowedChannelTypes:var"},{"k":"Content","t":")["},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.ts","l":27,"co":1,"r":"Public","n":"ApplicationCommandOptionAllowedChannelTypes","ttr":{"st":3,"en":10}},{"k":"Class","c":"@discordjs/builders!ApplicationCommandOptionBase:class","d":"/**\n * The base application command option builder that contains common symbols for application command builders.\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandOptionBase.ts","l":8,"co":1,"r":"Public","ab":true,"n":"ApplicationCommandOptionBase","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionBase#required:member","d":"/**\n * Whether this option is required.\n *\n * @defaultValue\n *\n * `false`\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"required","c":"@discordjs/builders!ApplicationCommandOptionBase#required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":19,"co":2,"ro":true,"op":false,"r":"Public","n":"required","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionBase#runRequiredValidations:member(1)","d":"/**\n * This method runs required validators on this builder.\n */\n","ex":[{"k":"Content","t":"protected "},{"k":"Reference","t":"runRequiredValidations","c":"@discordjs/builders!ApplicationCommandOptionBase#runRequiredValidations"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":47,"co":2,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":true,"oi":1,"ps":[],"op":false,"ab":false,"n":"runRequiredValidations"},{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionBase#setRequired:member(1)","d":"/**\n * Sets whether this option is required.\n *\n * @param required - Whether this option should be required\n */\n","ex":[{"k":"Reference","t":"setRequired","c":"@discordjs/builders!ApplicationCommandOptionBase#setRequired"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"@discordjs/builders!~required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":26,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"required","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setRequired"},{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionBase#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Content","t":"abstract "},{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ApplicationCommandOptionBase#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandBasicOption","c":"discord-api-types!APIApplicationCommandBasicOption:type"},{"k":"Content","t":";"}],"l":42,"co":2,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":true,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionBase#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"abstract readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!ApplicationCommandOptionBase#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":";"}],"l":12,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":true}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class","d":"/**\n * This mixin holds channel type symbols used for options.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ApplicationCommandOptionChannelTypesMixin","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.ts","l":34,"co":1,"r":"Public","ab":false,"n":"ApplicationCommandOptionChannelTypesMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#addChannelTypes:member(1)","d":"/**\n * Adds channel types to this option.\n *\n * @param channelTypes - The channel types\n */\n","ex":[{"k":"Reference","t":"addChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#addChannelTypes"},{"k":"Content","t":"(..."},{"k":"Reference","t":"channelTypes","c":"@discordjs/builders!~channelTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":45,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channelTypes","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addChannelTypes"},{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#channel_types:member","d":"/**\n * The channel types of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"channel_types","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#channel_types"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":38,"co":2,"ro":true,"op":true,"r":"Public","n":"channel_types","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin:class","d":"/**\n * This mixin holds choices and autocomplete symbols used for options.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ApplicationCommandOptionWithAutocompleteMixin","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandOptionWithAutocompleteMixin.ts","l":9,"co":1,"r":"Public","ab":false,"n":"ApplicationCommandOptionWithAutocompleteMixin","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#autocomplete:member","d":"/**\n * Whether this option utilizes autocomplete.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"autocomplete","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#autocomplete"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":13,"co":2,"ro":true,"op":true,"r":"Public","n":"autocomplete","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#setAutocomplete:member(1)","d":"/**\n * Whether this option uses autocomplete.\n *\n * @param autocomplete - Whether this option should use autocomplete\n */\n","ex":[{"k":"Reference","t":"setAutocomplete","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#setAutocomplete"},{"k":"Content","t":"("},{"k":"Reference","t":"autocomplete","c":"@discordjs/builders!~autocomplete"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":27,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autocomplete","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setAutocomplete"},{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":";"}],"l":20,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin:class","d":"/**\n * This mixin holds choices and autocomplete symbols used for options.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ApplicationCommandOptionWithChoicesMixin","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChoiceType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":"> "}],"pat":"src/interactions/slashCommands/mixins/ApplicationCommandOptionWithChoicesMixin.ts","l":19,"co":1,"r":"Public","tps":[{"tp":"ChoiceType","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ApplicationCommandOptionWithChoicesMixin","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#addChoices:member(1)","d":"/**\n * Adds multiple choices to this option.\n *\n * @param choices - The choices to add\n */\n","ex":[{"k":"Reference","t":"addChoices","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#addChoices"},{"k":"Content","t":"(..."},{"k":"Reference","t":"choices","c":"@discordjs/builders!~choices"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIApplicationCommandOptionChoice","c":"discord-api-types!APIApplicationCommandOptionChoice:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChoiceType"},{"k":"Content","t":">>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":37,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"choices","ptr":{"st":4,"en":10},"op":false,"rs":true}],"op":false,"ab":false,"n":"addChoices"},{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#choices:member","d":"/**\n * The choices of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"choices","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#choices"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIApplicationCommandOptionChoice","c":"discord-api-types!APIApplicationCommandOptionChoice:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChoiceType"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":23,"co":2,"ro":true,"op":true,"r":"Public","n":"choices","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#setChoices:member(1)","d":"/**\n * Sets multiple choices for this option.\n *\n * @param choices - The choices to set\n */\n","ex":[{"k":"Reference","t":"setChoices","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#setChoices"},{"k":"Content","t":"<"},{"k":"Reference","t":"Input"},{"k":"Content","t":" extends "},{"k":"Reference","t":"APIApplicationCommandOptionChoice","c":"discord-api-types!APIApplicationCommandOptionChoice:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChoiceType"},{"k":"Content","t":">"},{"k":"Content","t":">(..."},{"k":"Reference","t":"choices","c":"@discordjs/builders!~choices"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Input"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":70,"co":9,"tps":[{"tp":"Input","ctr":{"st":4,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"choices","ptr":{"st":11,"en":15},"op":false,"rs":true}],"op":false,"ab":false,"n":"setChoices"},{"k":"Property","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":";"}],"l":30,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!BaseSelectMenuBuilder:class","d":"/**\n * The base select menu builder that contains common symbols for select menu builders.\n *\n * @typeParam SelectMenuType - The type of select menu this would be instantiated for.\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuType"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/BaseSelectMenu.ts","l":11,"co":1,"r":"Public","tps":[{"tp":"SelectMenuType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":true,"n":"BaseSelectMenuBuilder","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setCustomId:member(1)","d":"/**\n * Sets the custom id for this select menu.\n *\n * @param customId - The custom id to use\n */\n","ex":[{"k":"Reference","t":"setCustomId","c":"@discordjs/builders!BaseSelectMenuBuilder#setCustomId"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":49,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setCustomId"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setDisabled:member(1)","d":"/**\n * Sets whether this select menu is disabled.\n *\n * @param disabled - Whether this select menu is disabled\n */\n","ex":[{"k":"Reference","t":"setDisabled","c":"@discordjs/builders!BaseSelectMenuBuilder#setDisabled"},{"k":"Content","t":"("},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~disabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":59,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"disabled","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDisabled"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setMaxValues:member(1)","d":"/**\n * Sets the maximum values that must be selected in the select menu.\n *\n * @param maxValues - The maximum values that must be selected\n */\n","ex":[{"k":"Reference","t":"setMaxValues","c":"@discordjs/builders!BaseSelectMenuBuilder#setMaxValues"},{"k":"Content","t":"("},{"k":"Reference","t":"maxValues","c":"@discordjs/builders!~maxValues"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":39,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"maxValues","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMaxValues"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setMinValues:member(1)","d":"/**\n * Sets the minimum values that must be selected in the select menu.\n *\n * @param minValues - The minimum values that must be selected\n */\n","ex":[{"k":"Reference","t":"setMinValues","c":"@discordjs/builders!BaseSelectMenuBuilder#setMinValues"},{"k":"Content","t":"("},{"k":"Reference","t":"minValues","c":"@discordjs/builders!~minValues"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":29,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"minValues","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMinValues"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setPlaceholder:member(1)","d":"/**\n * Sets the placeholder for this select menu.\n *\n * @param placeholder - The placeholder to use\n */\n","ex":[{"k":"Reference","t":"setPlaceholder","c":"@discordjs/builders!BaseSelectMenuBuilder#setPlaceholder"},{"k":"Content","t":"("},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":19,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"placeholder","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setPlaceholder"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#setRequired:member(1)","d":"/**\n * Sets whether this select menu is required.\n *\n * @remarks\n *\n * Only for use in modals.\n *\n * @param required - Whether this select menu is required\n */\n","ex":[{"k":"Reference","t":"setRequired","c":"@discordjs/builders!BaseSelectMenuBuilder#setRequired"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"@discordjs/builders!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":70,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"required","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRequired"},{"k":"Method","c":"@discordjs/builders!BaseSelectMenuBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!BaseSelectMenuBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"SelectMenuType"},{"k":"Content","t":";"}],"l":78,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":7,"en":11,"tps":[{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!ButtonBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for buttons.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/button/Button.ts","l":25,"co":1,"r":"Public","ab":false,"n":"ButtonBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ButtonBuilder:constructor(1)","d":"/**\n * Creates a new button from API data.\n *\n * @param data - The API data to create this button with\n *\n * @example\n *\n * Creating a button from an API data object:\n * ```ts\n * const button = new ButtonBuilder({\n * \tcustom_id: 'a cool button',\n * \tstyle: ButtonStyle.Primary,\n * \tlabel: 'Click Me',\n * \temoji: {\n * \t\tname: 'smile',\n * \t\tid: '123456789012345678',\n * \t},\n * });\n * ```\n *\n * @example\n *\n * Creating a button using setters and API data:\n * ```ts\n * const button = new ButtonBuilder({\n * \tstyle: ButtonStyle.Secondary,\n * \tlabel: 'Click Me',\n * })\n * \t.setEmoji({ name: '🙂' })\n * \t.setCustomId('another cool button');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":54,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setCustomId:member(1)","d":"/**\n * Sets the custom id for this button.\n *\n * @remarks\n *\n * This method is only applicable to buttons that are not using the `Link` button style.\n *\n * @param customId - The custom id to use\n */\n","ex":[{"k":"Reference","t":"setCustomId","c":"@discordjs/builders!ButtonBuilder#setCustomId"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":88,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setCustomId"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setDisabled:member(1)","d":"/**\n * Sets whether this button is disabled.\n *\n * @param disabled - Whether to disable this button\n */\n","ex":[{"k":"Reference","t":"setDisabled","c":"@discordjs/builders!ButtonBuilder#setDisabled"},{"k":"Content","t":"("},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~disabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":119,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"disabled","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDisabled"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setEmoji:member(1)","d":"/**\n * Sets the emoji to display on this button.\n *\n * @param emoji - The emoji to use\n */\n","ex":[{"k":"Reference","t":"setEmoji","c":"@discordjs/builders!ButtonBuilder#setEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"@discordjs/builders!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponentEmoji","c":"discord-api-types!APIMessageComponentEmoji:interface"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":109,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setEmoji"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setLabel:member(1)","d":"/**\n * Sets the label for this button.\n *\n * @param label - The label to use\n */\n","ex":[{"k":"Reference","t":"setLabel","c":"@discordjs/builders!ButtonBuilder#setLabel"},{"k":"Content","t":"("},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":129,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"label","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setLabel"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setSKUId:member(1)","d":"/**\n * Sets the SKU id that represents a purchasable SKU for this button.\n *\n * @remarks\n *\n * Only available when using premium-style buttons.\n *\n * @param skuId - The SKU id to use\n */\n","ex":[{"k":"Reference","t":"setSKUId","c":"@discordjs/builders!ButtonBuilder#setSKUId"},{"k":"Content","t":"("},{"k":"Reference","t":"skuId","c":"@discordjs/builders!~skuId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":99,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"skuId","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setSKUId"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setStyle:member(1)","d":"/**\n * Sets the style of this button.\n *\n * @param style - The style to use\n */\n","ex":[{"k":"Reference","t":"setStyle","c":"@discordjs/builders!ButtonBuilder#setStyle"},{"k":"Content","t":"("},{"k":"Reference","t":"style","c":"@discordjs/builders!~style"},{"k":"Content","t":": "},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"style","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setStyle"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#setURL:member(1)","d":"/**\n * Sets the URL for this button.\n *\n * @remarks\n *\n * This method is only available to buttons using the `Link` button style. Only three types of URL schemes are currently supported: `https://`, `http://`, and `discord://`.\n *\n * @param url - The URL to use\n */\n","ex":[{"k":"Reference","t":"setURL","c":"@discordjs/builders!ButtonBuilder#setURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":76,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setURL"},{"k":"Method","c":"@discordjs/builders!ButtonBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ButtonBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":";"}],"l":137,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!ChannelSelectMenuBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for channel select menus.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/ChannelSelectMenu.ts","l":15,"co":1,"r":"Public","ab":false,"n":"ChannelSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ChannelSelectMenuBuilder:constructor(1)","d":"/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new ChannelSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new ChannelSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.addChannelTypes(ChannelType.GuildText, ChannelType.GuildAnnouncement)\n * \t.setMinValues(2);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":39,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ChannelSelectMenuBuilder#addChannelTypes:member(1)","d":"/**\n * Adds channel types to this select menu.\n *\n * @param types - The channel types to use\n */\n","ex":[{"k":"Reference","t":"addChannelTypes","c":"@discordjs/builders!ChannelSelectMenuBuilder#addChannelTypes"},{"k":"Content","t":"(..."},{"k":"Reference","t":"types","c":"@discordjs/builders!~types"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":48,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"types","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addChannelTypes"},{"k":"Method","c":"@discordjs/builders!ChannelSelectMenuBuilder#addDefaultChannels:member(1)","d":"/**\n * Adds default channels to this auto populated select menu.\n *\n * @param channels - The channels to add\n */\n","ex":[{"k":"Reference","t":"addDefaultChannels","c":"@discordjs/builders!ChannelSelectMenuBuilder#addDefaultChannels"},{"k":"Content","t":"(..."},{"k":"Reference","t":"channels","c":"@discordjs/builders!~channels"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":72,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channels","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultChannels"},{"k":"Method","c":"@discordjs/builders!ChannelSelectMenuBuilder#setChannelTypes:member(1)","d":"/**\n * Sets channel types for this select menu.\n *\n * @param types - The channel types to use\n */\n","ex":[{"k":"Reference","t":"setChannelTypes","c":"@discordjs/builders!ChannelSelectMenuBuilder#setChannelTypes"},{"k":"Content","t":"(..."},{"k":"Reference","t":"types","c":"@discordjs/builders!~types"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":60,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"types","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setChannelTypes"},{"k":"Method","c":"@discordjs/builders!ChannelSelectMenuBuilder#setDefaultChannels:member(1)","d":"/**\n * Sets default channels for this auto populated select menu.\n *\n * @param channels - The channels to set\n */\n","ex":[{"k":"Reference","t":"setDefaultChannels","c":"@discordjs/builders!ChannelSelectMenuBuilder#setDefaultChannels"},{"k":"Content","t":"(..."},{"k":"Reference","t":"channels","c":"@discordjs/builders!~channels"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":92,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channels","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setDefaultChannels"},{"k":"Method","c":"@discordjs/builders!ChannelSelectMenuBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ChannelSelectMenuBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":";"}],"l":107,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Namespace","c":"@discordjs/builders!ComponentAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":6,"co":8,"r":"None","n":"ComponentAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.buttonLabelValidator:var","d":"","ex":[{"k":"Reference","t":"buttonLabelValidator","c":"@discordjs/builders!ComponentAssertions.buttonLabelValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":31,"co":14,"ro":true,"r":"Public","n":"buttonLabelValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.buttonStyleValidator:var","d":"","ex":[{"k":"Reference","t":"buttonStyleValidator","c":"@discordjs/builders!ComponentAssertions.buttonStyleValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NativeEnumValidator","c":"@sapphire/shapeshift!NativeEnumValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":37,"co":14,"ro":true,"r":"Public","n":"buttonStyleValidator","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.channelTypesValidator:var","d":"","ex":[{"k":"Reference","t":"channelTypesValidator","c":"@discordjs/builders!ComponentAssertions.channelTypesValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":"[], "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":88,"co":14,"ro":true,"r":"Public","n":"channelTypesValidator","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.customIdValidator:var","d":"","ex":[{"k":"Reference","t":"customIdValidator","c":"@discordjs/builders!ComponentAssertions.customIdValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":13,"co":14,"ro":true,"r":"Public","n":"customIdValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.defaultValidator:var","d":"","ex":[{"k":"Reference","t":"defaultValidator","c":"@discordjs/builders!ComponentAssertions.defaultValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"BooleanValidator","c":"@sapphire/shapeshift!BooleanValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":81,"co":14,"ro":true,"r":"Public","n":"defaultValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.disabledValidator:var","d":"","ex":[{"k":"Reference","t":"disabledValidator","c":"@discordjs/builders!ComponentAssertions.disabledValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"BooleanValidator","c":"@sapphire/shapeshift!BooleanValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":29,"co":14,"ro":true,"r":"Public","n":"disabledValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.emojiValidator:var","d":"","ex":[{"k":"Reference","t":"emojiValidator","c":"@discordjs/builders!ComponentAssertions.emojiValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"animated","c":"@discordjs/builders!~__type#animated"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"animated","c":"@discordjs/builders!~__type#animated"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/components/Assertions.ts","l":19,"co":14,"ro":true,"r":"Public","n":"emojiValidator","vtr":{"st":2,"en":43}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.idValidator:var","d":"","ex":[{"k":"Reference","t":"idValidator","c":"@discordjs/builders!ComponentAssertions.idValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":6,"co":14,"ro":true,"r":"Public","n":"idValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.jsonOptionValidator:var","d":"","ex":[{"k":"Reference","t":"jsonOptionValidator","c":"@discordjs/builders!ComponentAssertions.jsonOptionValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"label","c":"@discordjs/builders!~__type#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"description","c":"@discordjs/builders!~__type#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"emoji","c":"@discordjs/builders!~__type#emoji"},{"k":"Content","t":": import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";    "},{"k":"Reference","t":"animated","c":"@discordjs/builders!~__type#animated"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  }> | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"default","c":"@discordjs/builders!~__type#default"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"label","c":"@discordjs/builders!~__type#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"description","c":"@discordjs/builders!~__type#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"emoji","c":"@discordjs/builders!~__type#emoji"},{"k":"Content","t":": import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";    "},{"k":"Reference","t":"animated","c":"@discordjs/builders!~__type#animated"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  }> | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"default","c":"@discordjs/builders!~__type#default"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/components/Assertions.ts","l":53,"co":14,"ro":true,"r":"Public","n":"jsonOptionValidator","vtr":{"st":2,"en":95}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.labelValueDescriptionValidator:var","d":"","ex":[{"k":"Reference","t":"labelValueDescriptionValidator","c":"@discordjs/builders!ComponentAssertions.labelValueDescriptionValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":47,"co":14,"ro":true,"r":"Public","n":"labelValueDescriptionValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.minMaxValidator:var","d":"","ex":[{"k":"Reference","t":"minMaxValidator","c":"@discordjs/builders!ComponentAssertions.minMaxValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":40,"co":14,"ro":true,"r":"Public","n":"minMaxValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.optionsLengthValidator:var","d":"","ex":[{"k":"Reference","t":"optionsLengthValidator","c":"@discordjs/builders!ComponentAssertions.optionsLengthValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":69,"co":14,"ro":true,"r":"Public","n":"optionsLengthValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.optionsValidator:var","d":"","ex":[{"k":"Reference","t":"optionsValidator","c":"@discordjs/builders!ComponentAssertions.optionsValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":"[], "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":65,"co":14,"ro":true,"r":"Public","n":"optionsValidator","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.optionValidator:var","d":"","ex":[{"k":"Reference","t":"optionValidator","c":"@discordjs/builders!ComponentAssertions.optionValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"InstanceValidator","c":"@sapphire/shapeshift!InstanceValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":63,"co":14,"ro":true,"r":"Public","n":"optionValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.placeholderValidator:var","d":"","ex":[{"k":"Reference","t":"placeholderValidator","c":"@discordjs/builders!ComponentAssertions.placeholderValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":39,"co":14,"ro":true,"r":"Public","n":"placeholderValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentAssertions.urlValidator:var","d":"","ex":[{"k":"Reference","t":"urlValidator","c":"@discordjs/builders!ComponentAssertions.urlValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/Assertions.ts","l":90,"co":14,"ro":true,"r":"Public","n":"urlValidator","vtr":{"st":2,"en":7}},{"k":"Function","c":"@discordjs/builders!ComponentAssertions.validateRequiredButtonParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredButtonParameters","c":"@discordjs/builders!ComponentAssertions.validateRequiredButtonParameters"},{"k":"Content","t":"("},{"k":"Reference","t":"style","c":"@discordjs/builders!~style"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"emoji","c":"@discordjs/builders!~emoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIMessageComponentEmoji","c":"discord-api-types!APIMessageComponentEmoji:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"skuId","c":"@discordjs/builders!~skuId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/components/Assertions.ts","l":97,"co":1,"rtr":{"st":27,"en":28},"r":"Public","oi":1,"ps":[{"pn":"style","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"label","ptr":{"st":9,"en":10},"op":true,"rs":false},{"pn":"emoji","ptr":{"st":13,"en":14},"op":true,"rs":false},{"pn":"customId","ptr":{"st":17,"en":18},"op":true,"rs":false},{"pn":"skuId","ptr":{"st":21,"en":22},"op":true,"rs":false},{"pn":"url","ptr":{"st":25,"en":26},"op":true,"rs":false}],"n":"validateRequiredButtonParameters"},{"k":"Function","c":"@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuOptionParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredSelectMenuOptionParameters","c":"@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuOptionParameters"},{"k":"Content","t":"("},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/components/Assertions.ts","l":83,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":1,"ps":[{"pn":"label","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"value","ptr":{"st":9,"en":10},"op":true,"rs":false}],"n":"validateRequiredSelectMenuOptionParameters"},{"k":"Function","c":"@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredSelectMenuParameters","c":"@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuParameters"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/components/Assertions.ts","l":76,"co":1,"rtr":{"st":12,"en":13},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"customId","ptr":{"st":10,"en":11},"op":true,"rs":false}],"n":"validateRequiredSelectMenuParameters"}]},{"k":"Class","c":"@discordjs/builders!ComponentBuilder:class","d":"/**\n * The base component builder that contains common symbols for all sorts of components.\n *\n * @typeParam DataType - The type of internal API data that is stored within the component\n */\n","ex":[{"k":"Content","t":"export declare abstract class "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIBaseComponent","c":"discord-api-types!APIBaseComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":">>"},{"k":"Content","t":" = "},{"k":"Reference","t":"APIBaseComponent","c":"discord-api-types!APIBaseComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"> implements "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyAPIActionRowComponent","c":"@discordjs/builders!AnyAPIActionRowComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/Component.ts","l":26,"co":1,"r":"Public","tps":[{"tp":"DataType","ctr":{"st":5,"en":11},"dtr":{"st":12,"en":16}}],"ab":true,"n":"ComponentBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ComponentBuilder:constructor(1)","d":"/**\n * Constructs a new kind of component.\n *\n * @param data - The data to construct a component out of\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":49,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":false,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ComponentBuilder#clearId:member(1)","d":"/**\n * Clears the id of this component, defaulting to a default incremented id.\n */\n","ex":[{"k":"Reference","t":"clearId","c":"@discordjs/builders!ComponentBuilder#clearId"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":66,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearId"},{"k":"Property","c":"@discordjs/builders!ComponentBuilder#data:member","d":"/**\n * The API data associated with this component.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"data","c":"@discordjs/builders!ComponentBuilder#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"DataType"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":33,"co":2,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ComponentBuilder#setId:member(1)","d":"/**\n * Sets the id (not the custom id) for this component.\n *\n * @param id - The id for this component\n */\n","ex":[{"k":"Reference","t":"setId","c":"@discordjs/builders!ComponentBuilder#setId"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"@discordjs/builders!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":58,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setId"},{"k":"Method","c":"@discordjs/builders!ComponentBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Content","t":"abstract "},{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ComponentBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"AnyAPIActionRowComponent","c":"@discordjs/builders!AnyAPIActionRowComponent:type"},{"k":"Content","t":";"}],"l":42,"co":2,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":true,"n":"toJSON"}],"itrs":[{"st":17,"en":21,"tps":[{"st":19,"en":20}]}]},{"k":"Namespace","c":"@discordjs/builders!ComponentsV2Assertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":40,"co":8,"r":"None","n":"ComponentsV2Assertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.accessoryPredicate:var","d":"","ex":[{"k":"Reference","t":"accessoryPredicate","c":"@discordjs/builders!ComponentsV2Assertions.accessoryPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":49,"co":14,"ro":true,"r":"Public","n":"accessoryPredicate","vtr":{"st":2,"en":9}},{"k":"Function","c":"@discordjs/builders!ComponentsV2Assertions.assertReturnOfBuilder:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"assertReturnOfBuilder","c":"@discordjs/builders!ComponentsV2Assertions.assertReturnOfBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":">("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"ExpectedInstanceOf","c":"@discordjs/builders!~ExpectedInstanceOf"},{"k":"Content","t":": "},{"k":"Content","t":"new () => "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":" is "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":";"}],"pat":"src/components/v2/Assertions.ts","l":56,"co":1,"rtr":{"st":18,"en":22},"r":"Public","oi":1,"ps":[{"pn":"input","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"ExpectedInstanceOf","ptr":{"st":15,"en":17},"op":false,"rs":false}],"tps":[{"tp":"ReturnType","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"n":"assertReturnOfBuilder"},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.containerColorPredicate:var","d":"","ex":[{"k":"Reference","t":"containerColorPredicate","c":"@discordjs/builders!ComponentsV2Assertions.containerColorPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":" | ["},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":"] | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":54,"co":14,"ro":true,"r":"Public","n":"containerColorPredicate","vtr":{"st":2,"en":17}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.descriptionPredicate:var","d":"","ex":[{"k":"Reference","t":"descriptionPredicate","c":"@discordjs/builders!ComponentsV2Assertions.descriptionPredicate_2"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":23,"co":14,"ro":true,"r":"Public","n":"descriptionPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.dividerPredicate:var","d":"","ex":[{"k":"Reference","t":"dividerPredicate","c":"@discordjs/builders!ComponentsV2Assertions.dividerPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"BooleanValidator","c":"@sapphire/shapeshift!BooleanValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":39,"co":14,"ro":true,"r":"Public","n":"dividerPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.filePredicate:var","d":"","ex":[{"k":"Reference","t":"filePredicate","c":"@discordjs/builders!ComponentsV2Assertions.filePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";}>>"}],"pat":"src/components/v2/Assertions.ts","l":29,"co":14,"ro":true,"r":"Public","n":"filePredicate","vtr":{"st":2,"en":15}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.spacingPredicate:var","d":"","ex":[{"k":"Reference","t":"spacingPredicate","c":"@discordjs/builders!ComponentsV2Assertions.spacingPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NativeEnumValidator","c":"@sapphire/shapeshift!NativeEnumValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"SeparatorSpacingSize","c":"discord-api-types!SeparatorSpacingSize:enum"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":41,"co":14,"ro":true,"r":"Public","n":"spacingPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.spoilerPredicate:var","d":"","ex":[{"k":"Reference","t":"spoilerPredicate","c":"@discordjs/builders!ComponentsV2Assertions.spoilerPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"BooleanValidator","c":"@sapphire/shapeshift!BooleanValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":37,"co":14,"ro":true,"r":"Public","n":"spoilerPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.textDisplayContentPredicate:var","d":"","ex":[{"k":"Reference","t":"textDisplayContentPredicate","c":"@discordjs/builders!ComponentsV2Assertions.textDisplayContentPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/v2/Assertions.ts","l":43,"co":14,"ro":true,"r":"Public","n":"textDisplayContentPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!ComponentsV2Assertions.unfurledMediaItemPredicate:var","d":"","ex":[{"k":"Reference","t":"unfurledMediaItemPredicate","c":"@discordjs/builders!ComponentsV2Assertions.unfurledMediaItemPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";}>>"}],"pat":"src/components/v2/Assertions.ts","l":12,"co":14,"ro":true,"r":"Public","n":"unfurledMediaItemPredicate","vtr":{"st":2,"en":15}},{"k":"Function","c":"@discordjs/builders!ComponentsV2Assertions.validateComponentArray:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateComponentArray","c":"@discordjs/builders!ComponentsV2Assertions.validateComponentArray"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ContainerComponentBuilder","c":"@discordjs/builders!ContainerComponentBuilder:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":" = "},{"k":"Reference","t":"ContainerComponentBuilder","c":"@discordjs/builders!ContainerComponentBuilder:type"},{"k":"Content","t":">("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"min","c":"@discordjs/builders!~min"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"max","c":"@discordjs/builders!~max"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"ExpectedInstanceOf","c":"@discordjs/builders!~ExpectedInstanceOf"},{"k":"Content","t":"?: "},{"k":"Content","t":"new () => "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":" is "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"src/components/v2/Assertions.ts","l":63,"co":1,"rtr":{"st":28,"en":33},"r":"Public","oi":1,"ps":[{"pn":"input","ptr":{"st":13,"en":14},"op":false,"rs":false},{"pn":"min","ptr":{"st":17,"en":18},"op":false,"rs":false},{"pn":"max","ptr":{"st":21,"en":22},"op":false,"rs":false},{"pn":"ExpectedInstanceOf","ptr":{"st":25,"en":27},"op":true,"rs":false}],"tps":[{"tp":"ReturnType","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":10}}],"n":"validateComponentArray"}]},{"k":"Class","c":"@discordjs/builders!ContainerBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for a container.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ContainerBuilder","c":"@discordjs/builders!ContainerBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIContainerComponent","c":"discord-api-types!APIContainerComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/Container.ts","l":41,"co":1,"r":"Public","ab":false,"n":"ContainerBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ContainerBuilder:constructor(1)","d":"/**\n * Creates a new container from API data.\n *\n * @param data - The API data to create this container with\n *\n * @example\n *\n * Creating a container from an API data object:\n * ```ts\n * const container = new ContainerBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcontent: \"Some text here\",\n * \t\t\ttype: ComponentType.TextDisplay,\n * \t\t},\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating a container using setters and API data:\n * ```ts\n * const container = new ContainerBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcontent: \"# Heading\",\n * \t\t\ttype: ComponentType.TextDisplay,\n * \t\t},\n * \t],\n * })\n * \t.addComponents(separator, section);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":", ..."},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":" }?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIContainerComponent","c":"discord-api-types!APIContainerComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":77,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ components, ...data }","ptr":{"st":5,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addActionRowComponents:member(1)","d":"/**\n * Adds action row components to this container.\n *\n * @param components - The action row components to add\n */\n","ex":[{"k":"Reference","t":"addActionRowComponents","c":"@discordjs/builders!ContainerBuilder#addActionRowComponents"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":">(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInMessageActionRow","c":"discord-api-types!APIComponentInMessageActionRow:type"},{"k":"Content","t":"> | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">) => "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">)>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":115,"co":9,"tps":[{"tp":"ComponentType","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":29,"en":30},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":8,"en":28},"op":false,"rs":true}],"op":false,"ab":false,"n":"addActionRowComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addFileComponents:member(1)","d":"/**\n * Adds file components to this container.\n *\n * @param components - The file components to add\n */\n","ex":[{"k":"Reference","t":"addFileComponents","c":"@discordjs/builders!ContainerBuilder#addFileComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIFileComponent","c":"discord-api-types!APIFileComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":133,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addFileComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addMediaGalleryComponents:member(1)","d":"/**\n * Adds media gallery components to this container.\n *\n * @param components - The media gallery components to add\n */\n","ex":[{"k":"Reference","t":"addMediaGalleryComponents","c":"@discordjs/builders!ContainerBuilder#addMediaGalleryComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryComponent","c":"discord-api-types!APIMediaGalleryComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":145,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addMediaGalleryComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addSectionComponents:member(1)","d":"/**\n * Adds section components to this container.\n *\n * @param components - The section components to add\n */\n","ex":[{"k":"Reference","t":"addSectionComponents","c":"@discordjs/builders!ContainerBuilder#addSectionComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISectionComponent","c":"discord-api-types!APISectionComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":161,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addSectionComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addSeparatorComponents:member(1)","d":"/**\n * Adds separator components to this container.\n *\n * @param components - The separator components to add\n */\n","ex":[{"k":"Reference","t":"addSeparatorComponents","c":"@discordjs/builders!ContainerBuilder#addSeparatorComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISeparatorComponent","c":"discord-api-types!APISeparatorComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":173,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addSeparatorComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#addTextDisplayComponents:member(1)","d":"/**\n * Adds text display components to this container.\n *\n * @param components - The text display components to add\n */\n","ex":[{"k":"Reference","t":"addTextDisplayComponents","c":"@discordjs/builders!ContainerBuilder#addTextDisplayComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextDisplayComponent","c":"discord-api-types!APITextDisplayComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":187,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addTextDisplayComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#clearAccentColor:member(1)","d":"/**\n * Clears the accent color of this container.\n */\n","ex":[{"k":"Reference","t":"clearAccentColor","c":"@discordjs/builders!ContainerBuilder#clearAccentColor"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":105,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearAccentColor"},{"k":"Property","c":"@discordjs/builders!ContainerBuilder#components:member","d":"/**\n * The components within this container.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"components","c":"@discordjs/builders!ContainerBuilder#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ContainerComponentBuilder","c":"@discordjs/builders!ContainerComponentBuilder:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":45,"co":2,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#setAccentColor:member(1)","d":"/**\n * Sets the accent color of this container.\n *\n * @param color - The color to use\n */\n","ex":[{"k":"Reference","t":"setAccentColor","c":"@discordjs/builders!ContainerBuilder#setAccentColor"},{"k":"Content","t":"("},{"k":"Reference","t":"color","c":"@discordjs/builders!~color"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RGBTuple","c":"@discordjs/builders!RGBTuple:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":88,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"color","ptr":{"st":4,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAccentColor"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#setSpoiler:member(1)","d":"/**\n * Sets the spoiler status of this container.\n *\n * @param spoiler - The spoiler status to use\n */\n","ex":[{"k":"Reference","t":"setSpoiler","c":"@discordjs/builders!ContainerBuilder#setSpoiler"},{"k":"Content","t":"("},{"k":"Reference","t":"spoiler","c":"@discordjs/builders!~spoiler"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":225,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spoiler","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSpoiler"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#spliceComponents:member(1)","d":"/**\n * Removes, replaces, or inserts components for this container.\n *\n * @param index - The index to start removing, replacing or inserting components\n *\n * @param deleteCount - The amount of components to remove\n *\n * @param components - The components to set\n */\n","ex":[{"k":"Reference","t":"spliceComponents","c":"@discordjs/builders!ContainerBuilder#spliceComponents"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInContainer","c":"discord-api-types!APIComponentInContainer:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ContainerComponentBuilder","c":"@discordjs/builders!ContainerComponentBuilder:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":205,"co":9,"sta":false,"rtr":{"st":19,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"components","ptr":{"st":12,"en":18},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceComponents"},{"k":"Method","c":"@discordjs/builders!ContainerBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ContainerBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIContainerComponent","c":"discord-api-types!APIContainerComponent:interface"},{"k":"Content","t":";"}],"l":233,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"@discordjs/builders!ContainerComponentBuilder:type","d":"/**\n * The builders that may be used within a container.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ContainerComponentBuilder","c":"@discordjs/builders!ContainerComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":";"}],"pat":"src/components/v2/Container.ts","l":30,"co":1,"r":"Public","n":"ContainerComponentBuilder","ttr":{"st":3,"en":16}},{"k":"Namespace","c":"@discordjs/builders!ContextMenuCommandAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":72,"co":8,"r":"None","n":"ContextMenuCommandAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!ContextMenuCommandAssertions.contextsPredicate:var","d":"","ex":[{"k":"Reference","t":"contextsPredicate","c":"@discordjs/builders!ContextMenuCommandAssertions.contextsPredicate_2"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":"[], "},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":">"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":58,"co":14,"ro":true,"r":"Public","n":"contextsPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!ContextMenuCommandAssertions.integrationTypesPredicate:var","d":"","ex":[{"k":"Reference","t":"integrationTypesPredicate","c":"@discordjs/builders!ContextMenuCommandAssertions.integrationTypesPredicate_2"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":"[], "},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":">"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":62,"co":14,"ro":true,"r":"Public","n":"integrationTypesPredicate","vtr":{"st":2,"en":9}},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDefaultMemberPermissions:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDefaultMemberPermissions","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDefaultMemberPermissions_2"},{"k":"Content","t":"("},{"k":"Reference","t":"permissions","c":"@discordjs/builders!~permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":54,"co":1,"rtr":{"st":7,"en":12},"r":"Public","oi":1,"ps":[{"pn":"permissions","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDefaultMemberPermissions"},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDefaultPermission:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDefaultPermission","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDefaultPermission_2"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":17,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDefaultPermission"},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDMPermission:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDMPermission","c":"@discordjs/builders!ContextMenuCommandAssertions.validateDMPermission_2"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":39,"co":1,"rtr":{"st":7,"en":15},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDMPermission"},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateName:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateName","c":"@discordjs/builders!ContextMenuCommandAssertions.validateName_2"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":" is "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":21,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateName"},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateRequiredParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredParameters","c":"@discordjs/builders!ContextMenuCommandAssertions.validateRequiredParameters_4"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"type","c":"@discordjs/builders!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":29,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"type","ptr":{"st":9,"en":10},"op":false,"rs":false}],"n":"validateRequiredParameters"},{"k":"Function","c":"@discordjs/builders!ContextMenuCommandAssertions.validateType:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateType","c":"@discordjs/builders!ContextMenuCommandAssertions.validateType"},{"k":"Content","t":"("},{"k":"Reference","t":"type","c":"@discordjs/builders!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"type","c":"@discordjs/builders!~type"},{"k":"Content","t":" is "},{"k":"Reference","t":"ContextMenuCommandType","c":"@discordjs/builders!ContextMenuCommandType:type"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/Assertions.ts","l":25,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"type","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateType"}]},{"k":"Class","c":"@discordjs/builders!ContextMenuCommandBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for context menu commands.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ContextMenuCommandBuilder","c":"@discordjs/builders!ContextMenuCommandBuilder:class"},{"k":"Content","t":" "}],"pat":"src/interactions/contextMenuCommands/ContextMenuCommandBuilder.ts","l":32,"co":1,"r":"Public","ab":false,"n":"ContextMenuCommandBuilder","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#contexts:member","d":"/**\n * The contexts for this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"contexts","c":"@discordjs/builders!ContextMenuCommandBuilder#contexts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":51,"co":2,"ro":true,"op":true,"r":"Public","n":"contexts","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#default_member_permissions:member","d":"/**\n * The set of permissions represented as a bit set for the command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_member_permissions","c":"@discordjs/builders!ContextMenuCommandBuilder#default_member_permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Permissions","c":"discord-api-types!Permissions:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":63,"co":2,"ro":true,"op":false,"r":"Public","n":"default_member_permissions","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#default_permission:member","d":"/**\n * Whether this command is enabled by default when the application is added to a guild.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_permission","c":"@discordjs/builders!ContextMenuCommandBuilder#default_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":58,"co":2,"ro":true,"op":false,"r":"Public","n":"default_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#dm_permission:member","d":"/**\n * Indicates whether the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This property is only for global commands.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.contexts} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"dm_permission","c":"@discordjs/builders!ContextMenuCommandBuilder#dm_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":73,"co":2,"ro":true,"op":false,"r":"Public","n":"dm_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#integration_types:member","d":"/**\n * The integration types for this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"integration_types","c":"@discordjs/builders!ContextMenuCommandBuilder#integration_types"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":78,"co":2,"ro":true,"op":true,"r":"Public","n":"integration_types","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#name_localizations:member","d":"/**\n * The name localizations of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name_localizations","c":"@discordjs/builders!ContextMenuCommandBuilder#name_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":41,"co":2,"ro":true,"op":true,"r":"Public","n":"name_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#name:member","d":"/**\n * The name of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!ContextMenuCommandBuilder#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":36,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setContexts:member(1)","d":"/**\n * Sets the contexts of this command.\n *\n * @param contexts - The contexts\n */\n","ex":[{"k":"Reference","t":"setContexts","c":"@discordjs/builders!ContextMenuCommandBuilder#setContexts"},{"k":"Content","t":"(..."},{"k":"Reference","t":"contexts","c":"@discordjs/builders!~contexts"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":85,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"contexts","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setContexts"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setDefaultMemberPermissions:member(1)","d":"/**\n * Sets the default permissions a member should have in order to run this command.\n *\n * @remarks\n *\n * You can set this to `'0'` to disable the command by default.\n *\n * @param permissions - The permissions bit field to set\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDefaultMemberPermissions","c":"@discordjs/builders!ContextMenuCommandBuilder#setDefaultMemberPermissions"},{"k":"Content","t":"("},{"k":"Reference","t":"permissions","c":"@discordjs/builders!~permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Permissions","c":"discord-api-types!Permissions:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":156,"co":9,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permissions","ptr":{"st":4,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDefaultMemberPermissions"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setDefaultPermission:member(1)","d":"/**\n * Sets whether the command is enabled by default when the application is added to a guild.\n *\n * @remarks\n *\n * If set to `false`, you will have to later `PUT` the permissions for this command.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n *\n * @param value - Whether to enable this command by default\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDefaultPermission","c":"@discordjs/builders!ContextMenuCommandBuilder#setDefaultPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":139,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"value","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDefaultPermission"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setDMPermission:member(1)","d":"/**\n * Sets if the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This method is only for global commands.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setContexts} instead.\n *\n * @param enabled - Whether the command should be enabled in direct messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDMPermission","c":"@discordjs/builders!ContextMenuCommandBuilder#setDMPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"enabled","c":"@discordjs/builders!~enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":174,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"enabled","ptr":{"st":4,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDMPermission"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setIntegrationTypes:member(1)","d":"/**\n * Sets integration types of this command.\n *\n * @param integrationTypes - The integration types\n */\n","ex":[{"k":"Reference","t":"setIntegrationTypes","c":"@discordjs/builders!ContextMenuCommandBuilder#setIntegrationTypes"},{"k":"Content","t":"(..."},{"k":"Reference","t":"integrationTypes","c":"@discordjs/builders!~integrationTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":96,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"integrationTypes","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setIntegrationTypes"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setName:member(1)","d":"/**\n * Sets the name of this command.\n *\n * @param name - The name to use\n */\n","ex":[{"k":"Reference","t":"setName","c":"@discordjs/builders!ContextMenuCommandBuilder#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":107,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setNameLocalization:member(1)","d":"/**\n * Sets a name localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedName - The localized name for the given `locale`\n */\n","ex":[{"k":"Reference","t":"setNameLocalization","c":"@discordjs/builders!ContextMenuCommandBuilder#setNameLocalization"},{"k":"Content","t":"("},{"k":"Reference","t":"locale","c":"@discordjs/builders!~locale"},{"k":"Content","t":": "},{"k":"Reference","t":"LocaleString","c":"discord-api-types!LocaleString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"localizedName","c":"@discordjs/builders!~localizedName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":189,"co":9,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"locale","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"localizedName","ptr":{"st":8,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"setNameLocalization"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setNameLocalizations:member(1)","d":"/**\n * Sets the name localizations for this command.\n *\n * @param localizedNames - The object of localized names to set\n */\n","ex":[{"k":"Reference","t":"setNameLocalizations","c":"@discordjs/builders!ContextMenuCommandBuilder#setNameLocalizations"},{"k":"Content","t":"("},{"k":"Reference","t":"localizedNames","c":"@discordjs/builders!~localizedNames"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":212,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"localizedNames","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setNameLocalizations"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#setType:member(1)","d":"/**\n * Sets the type of this command.\n *\n * @param type - The type to use\n */\n","ex":[{"k":"Reference","t":"setType","c":"@discordjs/builders!ContextMenuCommandBuilder#setType"},{"k":"Content","t":"("},{"k":"Reference","t":"type","c":"@discordjs/builders!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"ContextMenuCommandType","c":"@discordjs/builders!ContextMenuCommandType:type"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":121,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"type","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setType"},{"k":"Method","c":"@discordjs/builders!ContextMenuCommandBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ContextMenuCommandBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"RESTPostAPIContextMenuApplicationCommandsJSONBody","c":"discord-api-types!RESTPostAPIContextMenuApplicationCommandsJSONBody:interface"},{"k":"Content","t":";"}],"l":232,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!ContextMenuCommandBuilder#type:member","d":"/**\n * The type of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!ContextMenuCommandBuilder#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ContextMenuCommandType","c":"@discordjs/builders!ContextMenuCommandType:type"},{"k":"Content","t":";"}],"l":46,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"TypeAlias","c":"@discordjs/builders!ContextMenuCommandType:type","d":"/**\n * The type a context menu command can be.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ContextMenuCommandType","c":"@discordjs/builders!ContextMenuCommandType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ApplicationCommandType.Message","c":"discord-api-types!ApplicationCommandType.Message:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandType.User","c":"discord-api-types!ApplicationCommandType.User:member"},{"k":"Content","t":";"}],"pat":"src/interactions/contextMenuCommands/ContextMenuCommandBuilder.ts","l":27,"co":1,"r":"Public","n":"ContextMenuCommandType","ttr":{"st":3,"en":6}},{"k":"Function","c":"@discordjs/builders!createComponentBuilder:function(1)","d":"/**\n * Factory for creating components from API data.\n *\n * @param data - The API data to transform to a component class\n *\n * @typeParam ComponentType - The type of component to use\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"createComponentBuilder","c":"@discordjs/builders!createComponentBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"MappedComponentTypes","c":"@discordjs/builders!MappedComponentTypes:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"APIModalComponent","c":"discord-api-types!APIModalComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":") & {  "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":";}"},{"k":"Content","t":"): "},{"k":"Reference","t":"MappedComponentTypes","c":"@discordjs/builders!MappedComponentTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/components/Components.ts","l":116,"co":1,"rtr":{"st":20,"en":24},"r":"Public","oi":1,"ps":[{"pn":"data","ptr":{"st":10,"en":19},"op":false,"rs":false}],"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"n":"createComponentBuilder"},{"k":"Function","c":"@discordjs/builders!createComponentBuilder:function(2)","d":"/**\n * Factory for creating components from API data.\n *\n * @param data - The API data to transform to a component class\n *\n * @typeParam ComponentBuilder - The type of component to use\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"createComponentBuilder","c":"@discordjs/builders!createComponentBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentBuilder"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentBuilder","c":"@discordjs/builders!MessageComponentBuilder:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalComponentBuilder","c":"@discordjs/builders!ModalComponentBuilder:type"},{"k":"Content","t":">("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentBuilder"},{"k":"Content","t":"): "},{"k":"Reference","t":"ComponentBuilder"},{"k":"Content","t":";"}],"pat":"src/components/Components.ts","l":127,"co":1,"rtr":{"st":13,"en":14},"r":"Public","oi":2,"ps":[{"pn":"data","ptr":{"st":11,"en":12},"op":false,"rs":false}],"tps":[{"tp":"ComponentBuilder","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"n":"createComponentBuilder"},{"k":"Function","c":"@discordjs/builders!disableValidators:function(1)","d":"/**\n * Disables validators.\n *\n * @returns Whether validation is occurring.\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"disableValidators","c":"@discordjs/builders!disableValidators"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/util/validation.ts","l":17,"co":1,"rtr":{"st":3,"en":4},"r":"Public","oi":1,"ps":[],"n":"disableValidators"},{"k":"Namespace","c":"@discordjs/builders!EmbedAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":1,"co":8,"r":"None","n":"EmbedAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.authorNamePredicate:var","d":"","ex":[{"k":"Reference","t":"authorNamePredicate","c":"@discordjs/builders!EmbedAssertions.authorNamePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":27,"co":14,"ro":true,"r":"Public","n":"authorNamePredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.colorPredicate:var","d":"","ex":[{"k":"Reference","t":"colorPredicate","c":"@discordjs/builders!EmbedAssertions.colorPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":" | ["},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":"] | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":62,"co":14,"ro":true,"r":"Public","n":"colorPredicate","vtr":{"st":2,"en":15}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.descriptionPredicate:var","d":"","ex":[{"k":"Reference","t":"descriptionPredicate","c":"@discordjs/builders!EmbedAssertions.descriptionPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":71,"co":14,"ro":true,"r":"Public","n":"descriptionPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.embedAuthorPredicate:var","d":"","ex":[{"k":"Reference","t":"embedAuthorPredicate","c":"@discordjs/builders!EmbedAssertions.embedAuthorPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"iconURL","c":"@discordjs/builders!~__type#iconURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"iconURL","c":"@discordjs/builders!~__type#iconURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"url","c":"@discordjs/builders!~__type#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/messages/embed/Assertions.ts","l":48,"co":14,"ro":true,"r":"Public","n":"embedAuthorPredicate","vtr":{"st":2,"en":51}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.embedFieldPredicate:var","d":"","ex":[{"k":"Reference","t":"embedFieldPredicate","c":"@discordjs/builders!EmbedAssertions.embedFieldPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"inline","c":"@discordjs/builders!~__type#inline"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"inline","c":"@discordjs/builders!~__type#inline"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/messages/embed/Assertions.ts","l":11,"co":14,"ro":true,"r":"Public","n":"embedFieldPredicate","vtr":{"st":2,"en":35}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.embedFieldsArrayPredicate:var","d":"","ex":[{"k":"Reference","t":"embedFieldsArrayPredicate","c":"@discordjs/builders!EmbedAssertions.embedFieldsArrayPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"inline","c":"@discordjs/builders!~__type#inline"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>[], import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"name","c":"@discordjs/builders!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"inline","c":"@discordjs/builders!~__type#inline"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/messages/embed/Assertions.ts","l":19,"co":14,"ro":true,"r":"Public","n":"embedFieldsArrayPredicate","vtr":{"st":2,"en":37}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.embedFooterPredicate:var","d":"","ex":[{"k":"Reference","t":"embedFooterPredicate","c":"@discordjs/builders!EmbedAssertions.embedFooterPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"text","c":"@discordjs/builders!~__type#text"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"iconURL","c":"@discordjs/builders!~__type#iconURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"text","c":"@discordjs/builders!~__type#text"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"iconURL","c":"@discordjs/builders!~__type#iconURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/messages/embed/Assertions.ts","l":85,"co":14,"ro":true,"r":"Public","n":"embedFooterPredicate","vtr":{"st":2,"en":35}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.fieldInlinePredicate:var","d":"","ex":[{"k":"Reference","t":"fieldInlinePredicate","c":"@discordjs/builders!EmbedAssertions.fieldInlinePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":9,"co":14,"ro":true,"r":"Public","n":"fieldInlinePredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.fieldLengthPredicate:var","d":"","ex":[{"k":"Reference","t":"fieldLengthPredicate","c":"@discordjs/builders!EmbedAssertions.fieldLengthPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":21,"co":14,"ro":true,"r":"Public","n":"fieldLengthPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.fieldNamePredicate:var","d":"","ex":[{"k":"Reference","t":"fieldNamePredicate","c":"@discordjs/builders!EmbedAssertions.fieldNamePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":5,"co":14,"ro":true,"r":"Public","n":"fieldNamePredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.fieldValuePredicate:var","d":"","ex":[{"k":"Reference","t":"fieldValuePredicate","c":"@discordjs/builders!EmbedAssertions.fieldValuePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":7,"co":14,"ro":true,"r":"Public","n":"fieldValuePredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.footerTextPredicate:var","d":"","ex":[{"k":"Reference","t":"footerTextPredicate","c":"@discordjs/builders!EmbedAssertions.footerTextPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":78,"co":14,"ro":true,"r":"Public","n":"footerTextPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.imageURLPredicate:var","d":"","ex":[{"k":"Reference","t":"imageURLPredicate","c":"@discordjs/builders!EmbedAssertions.imageURLPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":32,"co":14,"ro":true,"r":"Public","n":"imageURLPredicate","vtr":{"st":2,"en":11}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.RGBPredicate:var","d":"","ex":[{"k":"Reference","t":"RGBPredicate","c":"@discordjs/builders!EmbedAssertions.RGBPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":56,"co":14,"ro":true,"r":"Public","n":"RGBPredicate","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.timestampPredicate:var","d":"","ex":[{"k":"Reference","t":"timestampPredicate","c":"@discordjs/builders!EmbedAssertions.timestampPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":92,"co":14,"ro":true,"r":"Public","n":"timestampPredicate","vtr":{"st":2,"en":11}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.titlePredicate:var","d":"","ex":[{"k":"Reference","t":"titlePredicate","c":"@discordjs/builders!EmbedAssertions.titlePredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":94,"co":14,"ro":true,"r":"Public","n":"titlePredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!EmbedAssertions.urlPredicate:var","d":"","ex":[{"k":"Reference","t":"urlPredicate","c":"@discordjs/builders!EmbedAssertions.urlPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">"}],"pat":"src/messages/embed/Assertions.ts","l":40,"co":14,"ro":true,"r":"Public","n":"urlPredicate","vtr":{"st":2,"en":11}},{"k":"Function","c":"@discordjs/builders!EmbedAssertions.validateFieldLength:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateFieldLength","c":"@discordjs/builders!EmbedAssertions.validateFieldLength"},{"k":"Content","t":"("},{"k":"Reference","t":"amountAdding","c":"@discordjs/builders!~amountAdding"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"fields","c":"@discordjs/builders!~fields"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/messages/embed/Assertions.ts","l":23,"co":1,"rtr":{"st":12,"en":13},"r":"Public","oi":1,"ps":[{"pn":"amountAdding","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"fields","ptr":{"st":9,"en":11},"op":true,"rs":false}],"n":"validateFieldLength"}]},{"k":"Interface","c":"@discordjs/builders!EmbedAuthorData:interface","d":"/**\n * Represents the author data of an embed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedAuthorData","c":"@discordjs/builders!EmbedAuthorData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"IconData","c":"@discordjs/builders!IconData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedAuthor","c":"discord-api-types!APIEmbedAuthor:interface"},{"k":"Content","t":", 'icon_url' | 'proxy_icon_url'>"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":40,"co":1,"r":"Public","n":"EmbedAuthorData","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8},{"st":0,"en":0}]}]},{"k":"Interface","c":"@discordjs/builders!EmbedAuthorOptions:interface","d":"/**\n * Represents the author options of an embed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedAuthorOptions","c":"@discordjs/builders!EmbedAuthorOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"EmbedAuthorData","c":"@discordjs/builders!EmbedAuthorData:interface"},{"k":"Content","t":", 'proxyIconURL'>"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":45,"co":1,"r":"Public","n":"EmbedAuthorOptions","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/builders!EmbedBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for embeds.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"EmbedBuilder","c":"@discordjs/builders!EmbedBuilder:class"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":70,"co":1,"r":"Public","ab":false,"n":"EmbedBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!EmbedBuilder:constructor(1)","d":"/**\n * Creates a new embed from API data.\n *\n * @param data - The API data to create this embed with\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":");"}],"l":81,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":4},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#addFields:member(1)","d":"/**\n * Appends fields to the embed.\n *\n * @remarks\n *\n * This method accepts either an array of fields or a variable number of field parameters. The maximum amount of fields that can be added is 25.\n *\n * @param fields - The fields to add\n *\n * @example\n *\n * Using an array:\n * ```ts\n * const fields: APIEmbedField[] = ...;\n * const embed = new EmbedBuilder()\n * \t.addFields(fields);\n * ```\n *\n * @example\n *\n * Using rest parameters (variadic):\n * ```ts\n * const embed = new EmbedBuilder()\n * \t.addFields(\n * \t\t{ name: 'Field 1', value: 'Value 1' },\n * \t\t{ name: 'Field 2', value: 'Value 2' },\n * \t);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"addFields","c":"@discordjs/builders!EmbedBuilder#addFields"},{"k":"Content","t":"(..."},{"k":"Reference","t":"fields","c":"@discordjs/builders!~fields"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":110,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fields","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addFields"},{"k":"Property","c":"@discordjs/builders!EmbedBuilder#data:member","d":"/**\n * The API data associated with this embed.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"data","c":"@discordjs/builders!EmbedBuilder#data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":";"}],"l":74,"co":2,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setAuthor:member(1)","d":"/**\n * Sets the author of this embed.\n *\n * @param options - The options to use\n */\n","ex":[{"k":"Reference","t":"setAuthor","c":"@discordjs/builders!EmbedBuilder#setAuthor"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"EmbedAuthorOptions","c":"@discordjs/builders!EmbedAuthorOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":184,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setAuthor"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setColor:member(1)","d":"/**\n * Sets the color of this embed.\n *\n * @param color - The color to use\n */\n","ex":[{"k":"Reference","t":"setColor","c":"@discordjs/builders!EmbedBuilder#setColor"},{"k":"Content","t":"("},{"k":"Reference","t":"color","c":"@discordjs/builders!~color"},{"k":"Content","t":": "},{"k":"Reference","t":"RGBTuple","c":"@discordjs/builders!RGBTuple:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":202,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"color","ptr":{"st":4,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"setColor"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setDescription:member(1)","d":"/**\n * Sets the description of this embed.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!EmbedBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":221,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setFields:member(1)","d":"/**\n * Sets the fields for this embed.\n *\n * @remarks\n *\n * This method is an alias for {@link EmbedBuilder.spliceFields}. More specifically, it splices the entire array of fields, replacing them with the provided fields.\n *\n * You can set a maximum of 25 fields.\n *\n * @param fields - The fields to set\n */\n","ex":[{"k":"Reference","t":"setFields","c":"@discordjs/builders!EmbedBuilder#setFields"},{"k":"Content","t":"(..."},{"k":"Reference","t":"fields","c":"@discordjs/builders!~fields"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":173,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fields","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setFields"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setFooter:member(1)","d":"/**\n * Sets the footer of this embed.\n *\n * @param options - The footer to use\n */\n","ex":[{"k":"Reference","t":"setFooter","c":"@discordjs/builders!EmbedBuilder#setFooter"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"EmbedFooterOptions","c":"@discordjs/builders!EmbedFooterOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":234,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setFooter"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setImage:member(1)","d":"/**\n * Sets the image of this embed.\n *\n * @param url - The image URL to use\n */\n","ex":[{"k":"Reference","t":"setImage","c":"@discordjs/builders!EmbedBuilder#setImage"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":252,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setImage"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setThumbnail:member(1)","d":"/**\n * Sets the thumbnail of this embed.\n *\n * @param url - The thumbnail URL to use\n */\n","ex":[{"k":"Reference","t":"setThumbnail","c":"@discordjs/builders!EmbedBuilder#setThumbnail"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":265,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setThumbnail"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setTimestamp:member(1)","d":"/**\n * Sets the timestamp of this embed.\n *\n * @param timestamp - The timestamp or date to use\n */\n","ex":[{"k":"Reference","t":"setTimestamp","c":"@discordjs/builders!EmbedBuilder#setTimestamp"},{"k":"Content","t":"("},{"k":"Reference","t":"timestamp","c":"@discordjs/builders!~timestamp"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":278,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"timestamp","ptr":{"st":4,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"setTimestamp"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setTitle:member(1)","d":"/**\n * Sets the title for this embed.\n *\n * @param title - The title to use\n */\n","ex":[{"k":"Reference","t":"setTitle","c":"@discordjs/builders!EmbedBuilder#setTitle"},{"k":"Content","t":"("},{"k":"Reference","t":"title","c":"@discordjs/builders!~title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":291,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"title","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setTitle"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#setURL:member(1)","d":"/**\n * Sets the URL of this embed.\n *\n * @param url - The URL to use\n */\n","ex":[{"k":"Reference","t":"setURL","c":"@discordjs/builders!EmbedBuilder#setURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":304,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setURL"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#spliceFields:member(1)","d":"/**\n * Removes, replaces, or inserts fields for this embed.\n *\n * @remarks\n *\n * This method behaves similarly to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice | Array.prototype.splice()}. The maximum amount of fields that can be added is 25.\n *\n * It's useful for modifying and adjusting order of the already-existing fields of an embed.\n *\n * @param index - The index to start at\n *\n * @param deleteCount - The number of fields to remove\n *\n * @param fields - The replacing field objects\n *\n * @example\n *\n * Remove the first field:\n * ```ts\n * embed.spliceFields(0, 1);\n * ```\n *\n * @example\n *\n * Remove the first n fields:\n * ```ts\n * const n = 4;\n * embed.spliceFields(0, n);\n * ```\n *\n * @example\n *\n * Remove the last field:\n * ```ts\n * embed.spliceFields(-1, 1);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"spliceFields","c":"@discordjs/builders!EmbedBuilder#spliceFields"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"fields","c":"@discordjs/builders!~fields"},{"k":"Content","t":": "},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":152,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"fields","ptr":{"st":12,"en":14},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceFields"},{"k":"Method","c":"@discordjs/builders!EmbedBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!EmbedBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":";"}],"l":319,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Interface","c":"@discordjs/builders!EmbedFooterData:interface","d":"/**\n * Represents the footer data of an embed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedFooterData","c":"@discordjs/builders!EmbedFooterData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"IconData","c":"@discordjs/builders!IconData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedFooter","c":"discord-api-types!APIEmbedFooter:interface"},{"k":"Content","t":", 'icon_url' | 'proxy_icon_url'>"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":50,"co":1,"r":"Public","n":"EmbedFooterData","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8},{"st":0,"en":0}]}]},{"k":"Interface","c":"@discordjs/builders!EmbedFooterOptions:interface","d":"/**\n * Represents the footer options of an embed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedFooterOptions","c":"@discordjs/builders!EmbedFooterOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"EmbedFooterData","c":"@discordjs/builders!EmbedFooterData:interface"},{"k":"Content","t":", 'proxyIconURL'>"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":55,"co":1,"r":"Public","n":"EmbedFooterOptions","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"@discordjs/builders!EmbedImageData:interface","d":"/**\n * Represents the image data of an embed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedImageData","c":"@discordjs/builders!EmbedImageData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedImage","c":"discord-api-types!APIEmbedImage:interface"},{"k":"Content","t":", 'proxy_url'>"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":60,"co":1,"r":"Public","n":"EmbedImageData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/builders!EmbedImageData#proxyURL:member","d":"/**\n * The proxy URL for the image.\n */\n","ex":[{"k":"Reference","t":"proxyURL","c":"@discordjs/builders!EmbedImageData#proxyURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":64,"co":2,"ro":false,"op":true,"r":"Public","n":"proxyURL","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Function","c":"@discordjs/builders!embedLength:function(1)","d":"/**\n * Calculates the length of the embed.\n *\n * @param data - The embed data to check\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"embedLength","c":"@discordjs/builders!embedLength"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/util/componentUtil.ts","l":8,"co":1,"rtr":{"st":7,"en":8},"r":"Public","oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"embedLength"},{"k":"Function","c":"@discordjs/builders!enableValidators:function(1)","d":"/**\n * Enables validators.\n *\n * @returns Whether validation is occurring.\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"enableValidators","c":"@discordjs/builders!enableValidators"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/util/validation.ts","l":8,"co":1,"rtr":{"st":3,"en":4},"r":"Public","oi":1,"ps":[],"n":"enableValidators"},{"k":"Class","c":"@discordjs/builders!FileBuilder:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIFileComponent","c":"discord-api-types!APIFileComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/File.ts","l":5,"co":1,"r":"Public","ab":false,"n":"FileBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!FileBuilder:constructor(1)","d":"/**\n * Creates a new file from API data.\n *\n * @param data - The API data to create this file with\n *\n * @example\n *\n * Creating a file from an API data object:\n * ```ts\n * const file = new FileBuilder({\n * \tspoiler: true,\n * \tfile: {\n * \t\turl: 'attachment://file.png',\n * \t},\n * });\n * ```\n *\n * @example\n *\n * Creating a file using setters and API data:\n * ```ts\n * const file = new FileBuilder({\n * \tfile: {\n * \t\turl: 'attachment://image.jpg',\n * \t},\n * })\n * \t.setSpoiler(false);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIFileComponent","c":"discord-api-types!APIFileComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":31,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!FileBuilder#setSpoiler:member(1)","d":"/**\n * Sets the spoiler status of this file.\n *\n * @param spoiler - The spoiler status to use\n */\n","ex":[{"k":"Reference","t":"setSpoiler","c":"@discordjs/builders!FileBuilder#setSpoiler"},{"k":"Content","t":"("},{"k":"Reference","t":"spoiler","c":"@discordjs/builders!~spoiler"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":40,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spoiler","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSpoiler"},{"k":"Method","c":"@discordjs/builders!FileBuilder#setURL:member(1)","d":"/**\n * Sets the media URL of this file.\n *\n * @param url - The URL to use\n */\n","ex":[{"k":"Reference","t":"setURL","c":"@discordjs/builders!FileBuilder#setURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":50,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setURL"},{"k":"Method","c":"@discordjs/builders!FileBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!FileBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIFileComponent","c":"discord-api-types!APIFileComponent:interface"},{"k":"Content","t":";"}],"l":58,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"@discordjs/builders!IconData:interface","d":"/**\n * The base icon data typically used in payloads.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"IconData","c":"@discordjs/builders!IconData:interface"},{"k":"Content","t":" "}],"pat":"src/messages/embed/Embed.ts","l":26,"co":1,"r":"Public","n":"IconData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/builders!IconData#iconURL:member","d":"/**\n * The URL of the icon.\n */\n","ex":[{"k":"Reference","t":"iconURL","c":"@discordjs/builders!IconData#iconURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":30,"co":2,"ro":false,"op":true,"r":"Public","n":"iconURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/builders!IconData#proxyIconURL:member","d":"/**\n * The proxy URL of the icon.\n */\n","ex":[{"k":"Reference","t":"proxyIconURL","c":"@discordjs/builders!IconData#proxyIconURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":34,"co":2,"ro":false,"op":true,"r":"Public","n":"proxyIconURL","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"@discordjs/builders!isValidationEnabled:function(1)","d":"/**\n * Checks whether validation is occurring.\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"isValidationEnabled","c":"@discordjs/builders!isValidationEnabled"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/util/validation.ts","l":24,"co":1,"rtr":{"st":3,"en":4},"r":"Public","oi":1,"ps":[],"n":"isValidationEnabled"},{"k":"Namespace","c":"@discordjs/builders!LabelAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":38,"co":8,"r":"None","n":"LabelAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!LabelAssertions.labelPredicate:var","d":"","ex":[{"k":"Reference","t":"labelPredicate","c":"@discordjs/builders!LabelAssertions.labelPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"label","c":"@discordjs/builders!~__type#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"description","c":"@discordjs/builders!~__type#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"component","c":"@discordjs/builders!~__type#component"},{"k":"Content","t":": import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"style","c":"@discordjs/builders!~__type#style"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_length","c":"@discordjs/builders!~__type#min_length"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_length","c":"@discordjs/builders!~__type#max_length"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"required","c":"@discordjs/builders!~__type#required"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"default_values","c":"@discordjs/builders!~__type#default_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"default_values","c":"@discordjs/builders!~__type#default_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"options","c":"@discordjs/builders!~__type#options"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }>;}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"label","c":"@discordjs/builders!~__type#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"description","c":"@discordjs/builders!~__type#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"component","c":"@discordjs/builders!~__type#component"},{"k":"Content","t":": import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"style","c":"@discordjs/builders!~__type#style"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_length","c":"@discordjs/builders!~__type#min_length"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_length","c":"@discordjs/builders!~__type#max_length"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"required","c":"@discordjs/builders!~__type#required"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"default_values","c":"@discordjs/builders!~__type#default_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"default_values","c":"@discordjs/builders!~__type#default_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }> | import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{    "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"min_values","c":"@discordjs/builders!~__type#min_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"max_values","c":"@discordjs/builders!~__type#max_values"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"disabled","c":"@discordjs/builders!~__type#disabled"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  } & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";    "},{"k":"Reference","t":"options","c":"@discordjs/builders!~__type#options"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":";  }>;}>>"}],"pat":"src/components/label/Assertions.ts","l":14,"co":14,"ro":true,"r":"Public","n":"labelPredicate","vtr":{"st":2,"en":331}}]},{"k":"Class","c":"@discordjs/builders!LabelBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for labels.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"LabelBuilderData","c":"@discordjs/builders!LabelBuilderData:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/label/Label.ts","l":34,"co":1,"r":"Public","ab":false,"n":"LabelBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!LabelBuilder:constructor(1)","d":"/**\n * Creates a new label.\n *\n * @param data - The API data to create this label with\n *\n * @example\n *\n * Creating a label from an API data object:\n * ```ts\n * const label = new LabelBuilder({\n * \tlabel: \"label\",\n * \tcomponent,\n * });\n * ```\n *\n * @example\n *\n * Creating a label using setters and API data:\n * ```ts\n * const label = new LabelBuilder({\n * \tlabel: 'label',\n * \tcomponent,\n * }).setLabel('new text');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":61,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!LabelBuilder#clearDescription:member(1)","d":"/**\n * Clears the description for this label.\n */\n","ex":[{"k":"Reference","t":"clearDescription","c":"@discordjs/builders!LabelBuilder#clearDescription"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":96,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearDescription"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setChannelSelectMenuComponent:member(1)","d":"/**\n * Sets a channel select menu component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setChannelSelectMenuComponent","c":"@discordjs/builders!LabelBuilder#setChannelSelectMenuComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":160,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setChannelSelectMenuComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setDescription:member(1)","d":"/**\n * Sets the description for this label.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!LabelBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":88,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setLabel:member(1)","d":"/**\n * Sets the label for this label.\n *\n * @param label - The label to use\n */\n","ex":[{"k":"Reference","t":"setLabel","c":"@discordjs/builders!LabelBuilder#setLabel"},{"k":"Content","t":"("},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":78,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"label","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setLabel"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setMentionableSelectMenuComponent:member(1)","d":"/**\n * Sets a mentionable select menu component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setMentionableSelectMenuComponent","c":"@discordjs/builders!LabelBuilder#setMentionableSelectMenuComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":145,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMentionableSelectMenuComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setRoleSelectMenuComponent:member(1)","d":"/**\n * Sets a role select menu component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setRoleSelectMenuComponent","c":"@discordjs/builders!LabelBuilder#setRoleSelectMenuComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":133,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setRoleSelectMenuComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setStringSelectMenuComponent:member(1)","d":"/**\n * Sets a string select menu component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setStringSelectMenuComponent","c":"@discordjs/builders!LabelBuilder#setStringSelectMenuComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":106,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setStringSelectMenuComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setTextInputComponent:member(1)","d":"/**\n * Sets a text input component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setTextInputComponent","c":"@discordjs/builders!LabelBuilder#setTextInputComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":175,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setTextInputComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#setUserSelectMenuComponent:member(1)","d":"/**\n * Sets a user select menu component to this label.\n *\n * @param input - A function that returns a component builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"setUserSelectMenuComponent","c":"@discordjs/builders!LabelBuilder#setUserSelectMenuComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":121,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setUserSelectMenuComponent"},{"k":"Method","c":"@discordjs/builders!LabelBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!LabelBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":";"}],"l":185,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"@discordjs/builders!LabelBuilderData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"LabelBuilderData","c":"@discordjs/builders!LabelBuilderData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":", 'component'>"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/label/Label.ts","l":21,"co":1,"r":"Public","n":"LabelBuilderData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/builders!LabelBuilderData#component:member","d":"","ex":[{"k":"Reference","t":"component","c":"@discordjs/builders!LabelBuilderData#component"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":22,"co":2,"ro":false,"op":true,"r":"Public","n":"component","prtr":{"st":2,"en":13}}],"etrs":[{"st":3,"en":10,"tps":[{"st":5,"en":9}]}]},{"k":"Interface","c":"@discordjs/builders!MappedComponentTypes:interface","d":"/**\n * Components here are mapped to their respective builder.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MappedComponentTypes","c":"@discordjs/builders!MappedComponentTypes:interface"},{"k":"Content","t":" "}],"pat":"src/components/Components.ts","l":43,"co":1,"r":"Public","n":"MappedComponentTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"1\":member","d":"/**\n * The action row component type is associated with an {@link ActionRowBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":47,"co":2,"ro":false,"op":false,"r":"Public","n":"\"1\"","prtr":{"st":3,"en":7}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"10\":member","d":"/**\n * The text display component type is associated with a {@link TextDisplayBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.TextDisplay","c":"discord-api-types!ComponentType.TextDisplay:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":";"}],"l":91,"co":2,"ro":false,"op":false,"r":"Public","n":"\"10\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"11\":member","d":"/**\n * The thumbnail component type is associated with a {@link ThumbnailBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Thumbnail","c":"discord-api-types!ComponentType.Thumbnail:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":";"}],"l":95,"co":2,"ro":false,"op":false,"r":"Public","n":"\"11\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"12\":member","d":"/**\n * The media gallery component type is associated with a {@link MediaGalleryBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.MediaGallery","c":"discord-api-types!ComponentType.MediaGallery:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":";"}],"l":103,"co":2,"ro":false,"op":false,"r":"Public","n":"\"12\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"13\":member","d":"/**\n * The file component type is associated with a {@link FileBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.File","c":"discord-api-types!ComponentType.File:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":";"}],"l":79,"co":2,"ro":false,"op":false,"r":"Public","n":"\"13\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"14\":member","d":"/**\n * The separator component type is associated with a {@link SeparatorBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Separator","c":"discord-api-types!ComponentType.Separator:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":";"}],"l":83,"co":2,"ro":false,"op":false,"r":"Public","n":"\"14\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"17\":member","d":"/**\n * The container component type is associated with a {@link ContainerBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Container","c":"discord-api-types!ComponentType.Container:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ContainerBuilder","c":"@discordjs/builders!ContainerBuilder:class"},{"k":"Content","t":";"}],"l":87,"co":2,"ro":false,"op":false,"r":"Public","n":"\"17\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"18\":member","d":"/**\n * The label component type is associated with a {@link LabelBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Label","c":"discord-api-types!ComponentType.Label:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":";"}],"l":107,"co":2,"ro":false,"op":false,"r":"Public","n":"\"18\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"2\":member","d":"/**\n * The button component type is associated with a {@link ButtonBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":";"}],"l":51,"co":2,"ro":false,"op":false,"r":"Public","n":"\"2\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"3\":member","d":"/**\n * The string select component type is associated with a {@link StringSelectMenuBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":55,"co":2,"ro":false,"op":false,"r":"Public","n":"\"3\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"4\":member","d":"/**\n * The text input component type is associated with a {@link TextInputBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":";"}],"l":59,"co":2,"ro":false,"op":false,"r":"Public","n":"\"4\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"5\":member","d":"/**\n * The user select component type is associated with a {@link UserSelectMenuBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":63,"co":2,"ro":false,"op":false,"r":"Public","n":"\"5\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"6\":member","d":"/**\n * The role select component type is associated with a {@link RoleSelectMenuBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":67,"co":2,"ro":false,"op":false,"r":"Public","n":"\"6\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"7\":member","d":"/**\n * The mentionable select component type is associated with a {@link MentionableSelectMenuBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":71,"co":2,"ro":false,"op":false,"r":"Public","n":"\"7\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"8\":member","d":"/**\n * The channel select component type is associated with a {@link ChannelSelectMenuBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":75,"co":2,"ro":false,"op":false,"r":"Public","n":"\"8\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"@discordjs/builders!MappedComponentTypes#\"9\":member","d":"/**\n * The section component type is associated with a {@link SectionBuilder}.\n */\n","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Section","c":"discord-api-types!ComponentType.Section:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":";"}],"l":99,"co":2,"ro":false,"op":false,"r":"Public","n":"\"9\"","prtr":{"st":3,"en":4}}],"etrs":[]},{"k":"Class","c":"@discordjs/builders!MediaGalleryBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for a container.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryComponent","c":"discord-api-types!APIMediaGalleryComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/MediaGallery.ts","l":14,"co":1,"r":"Public","ab":false,"n":"MediaGalleryBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!MediaGalleryBuilder:constructor(1)","d":"/**\n * Creates a new media gallery from API data.\n *\n * @param data - The API data to create this media gallery with\n *\n * @example\n *\n * Creating a media gallery from an API data object:\n * ```ts\n * const mediaGallery = new MediaGalleryBuilder({\n * \titems: [\n * \t\t{\n * \t\t\tdescription: \"Some text here\",\n * \t\t\tmedia: {\n * \t\t\t\turl: 'https://cdn.discordapp.com/embed/avatars/2.png',\n * \t\t\t},\n * \t\t},\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating a media gallery using setters and API data:\n * ```ts\n * const mediaGallery = new MediaGalleryBuilder({\n * \titems: [\n * \t\t{\n * \t\t\tdescription: \"alt text\",\n * \t\t\tmedia: {\n * \t\t\t\turl: 'https://cdn.discordapp.com/embed/avatars/5.png',\n * \t\t\t},\n * \t\t},\n * \t],\n * })\n * \t.addItems(item2, item3);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"items","c":"@discordjs/builders!~items"},{"k":"Content","t":", ..."},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":" }?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryComponent","c":"discord-api-types!APIMediaGalleryComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":54,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ items, ...data }","ptr":{"st":5,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!MediaGalleryBuilder#addItems:member(1)","d":"/**\n * Adds items to this media gallery.\n *\n * @param items - The items to add\n */\n","ex":[{"k":"Reference","t":"addItems","c":"@discordjs/builders!MediaGalleryBuilder#addItems"},{"k":"Content","t":"(..."},{"k":"Reference","t":"items","c":"@discordjs/builders!~items"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":64,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"items","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addItems"},{"k":"Property","c":"@discordjs/builders!MediaGalleryBuilder#items:member","d":"/**\n * The components within this container.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"items","c":"@discordjs/builders!MediaGalleryBuilder#items"},{"k":"Content","t":": "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":18,"co":2,"ro":true,"op":false,"r":"Public","n":"items","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!MediaGalleryBuilder#spliceItems:member(1)","d":"/**\n * Removes, replaces, or inserts media gallery items for this media gallery.\n *\n * @param index - The index to start removing, replacing or inserting items\n *\n * @param deleteCount - The amount of items to remove\n *\n * @param items - The items to insert\n */\n","ex":[{"k":"Reference","t":"spliceItems","c":"@discordjs/builders!MediaGalleryBuilder#spliceItems"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"items","c":"@discordjs/builders!~items"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":87,"co":9,"sta":false,"rtr":{"st":25,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"items","ptr":{"st":12,"en":24},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceItems"},{"k":"Method","c":"@discordjs/builders!MediaGalleryBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!MediaGalleryBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIMediaGalleryComponent","c":"discord-api-types!APIMediaGalleryComponent:interface"},{"k":"Content","t":";"}],"l":110,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!MediaGalleryItemBuilder:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"MediaGalleryItemBuilder","c":"@discordjs/builders!MediaGalleryItemBuilder:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/MediaGalleryItem.ts","l":5,"co":1,"r":"Public","ab":false,"n":"MediaGalleryItemBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!MediaGalleryItemBuilder:constructor(1)","d":"/**\n * Creates a new media gallery item from API data.\n *\n * @param data - The API data to create this media gallery item with\n *\n * @example\n *\n * Creating a media gallery item from an API data object:\n * ```ts\n * const item = new MediaGalleryItemBuilder({\n * \tdescription: \"Some text here\",\n * \tmedia: {\n * \t\turl: 'https://cdn.discordapp.com/embed/avatars/2.png',\n * \t},\n * });\n * ```\n *\n * @example\n *\n * Creating a media gallery item using setters and API data:\n * ```ts\n * const item = new MediaGalleryItemBuilder({\n * \tmedia: {\n * \t\turl: 'https://cdn.discordapp.com/embed/avatars/5.png',\n * \t},\n * })\n * \t.setDescription(\"alt text\");\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":36,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!MediaGalleryItemBuilder#clearDescription:member(1)","d":"/**\n * Clears the description of this media gallery item.\n */\n","ex":[{"k":"Reference","t":"clearDescription","c":"@discordjs/builders!MediaGalleryItemBuilder#clearDescription"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearDescription"},{"k":"Property","c":"@discordjs/builders!MediaGalleryItemBuilder#data:member","d":"/**\n * The API data associated with this media gallery item.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"data","c":"@discordjs/builders!MediaGalleryItemBuilder#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":9,"co":2,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!MediaGalleryItemBuilder#setDescription:member(1)","d":"/**\n * Sets the description of this media gallery item.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!MediaGalleryItemBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":45,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!MediaGalleryItemBuilder#setSpoiler:member(1)","d":"/**\n * Sets the spoiler status of this media gallery item.\n *\n * @param spoiler - The spoiler status to use\n */\n","ex":[{"k":"Reference","t":"setSpoiler","c":"@discordjs/builders!MediaGalleryItemBuilder#setSpoiler"},{"k":"Content","t":"("},{"k":"Reference","t":"spoiler","c":"@discordjs/builders!~spoiler"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spoiler","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSpoiler"},{"k":"Method","c":"@discordjs/builders!MediaGalleryItemBuilder#setURL:member(1)","d":"/**\n * Sets the media URL of this media gallery item.\n *\n * @param url - The URL to use\n */\n","ex":[{"k":"Reference","t":"setURL","c":"@discordjs/builders!MediaGalleryItemBuilder#setURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setURL"},{"k":"Method","c":"@discordjs/builders!MediaGalleryItemBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!MediaGalleryItemBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIMediaGalleryItem","c":"discord-api-types!APIMediaGalleryItem:interface"},{"k":"Content","t":";"}],"l":85,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Class","c":"@discordjs/builders!MentionableSelectMenuBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for mentionable select menus.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/MentionableSelectMenu.ts","l":15,"co":1,"r":"Public","ab":false,"n":"MentionableSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!MentionableSelectMenuBuilder:constructor(1)","d":"/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new MentionableSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new MentionableSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":38,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultRoles:member(1)","d":"/**\n * Adds default roles to this auto populated select menu.\n *\n * @param roles - The roles to add\n */\n","ex":[{"k":"Reference","t":"addDefaultRoles","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultRoles"},{"k":"Content","t":"(..."},{"k":"Reference","t":"roles","c":"@discordjs/builders!~roles"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":47,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultRoles"},{"k":"Method","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultUsers:member(1)","d":"/**\n * Adds default users to this auto populated select menu.\n *\n * @param users - The users to add\n */\n","ex":[{"k":"Reference","t":"addDefaultUsers","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultUsers"},{"k":"Content","t":"(..."},{"k":"Reference","t":"users","c":"@discordjs/builders!~users"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":67,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"users","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultUsers"},{"k":"Method","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultValues:member(1)","d":"/**\n * Adds default values to this auto populated select menu.\n *\n * @param values - The values to add\n */\n","ex":[{"k":"Reference","t":"addDefaultValues","c":"@discordjs/builders!MentionableSelectMenuBuilder#addDefaultValues"},{"k":"Content","t":"(..."},{"k":"Reference","t":"values","c":"@discordjs/builders!~values"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuDefaultValue","c":"discord-api-types!APISelectMenuDefaultValue:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuDefaultValueType.Role","c":"discord-api-types!SelectMenuDefaultValueType.Role:member"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuDefaultValue","c":"discord-api-types!APISelectMenuDefaultValue:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuDefaultValueType.User","c":"discord-api-types!SelectMenuDefaultValueType.User:member"},{"k":"Content","t":">>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":87,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"values","ptr":{"st":4,"en":14},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultValues"},{"k":"Method","c":"@discordjs/builders!MentionableSelectMenuBuilder#setDefaultValues:member(1)","d":"/**\n * Sets default values for this auto populated select menu.\n *\n * @param values - The values to set\n */\n","ex":[{"k":"Reference","t":"setDefaultValues","c":"@discordjs/builders!MentionableSelectMenuBuilder#setDefaultValues"},{"k":"Content","t":"(..."},{"k":"Reference","t":"values","c":"@discordjs/builders!~values"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuDefaultValue","c":"discord-api-types!APISelectMenuDefaultValue:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuDefaultValueType.Role","c":"discord-api-types!SelectMenuDefaultValueType.Role:member"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuDefaultValue","c":"discord-api-types!APISelectMenuDefaultValue:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SelectMenuDefaultValueType.User","c":"discord-api-types!SelectMenuDefaultValueType.User:member"},{"k":"Content","t":">>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":105,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"values","ptr":{"st":4,"en":14},"op":false,"rs":true}],"op":false,"ab":false,"n":"setDefaultValues"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"@discordjs/builders!MessageActionRowComponentBuilder:type","d":"/**\n * The builders that may be used within an action row for messages.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":";"}],"pat":"src/components/ActionRow.ts","l":29,"co":1,"r":"Public","n":"MessageActionRowComponentBuilder","ttr":{"st":3,"en":14}},{"k":"TypeAlias","c":"@discordjs/builders!MessageComponentBuilder:type","d":"/**\n * The builders that may be used for messages.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageComponentBuilder","c":"@discordjs/builders!MessageComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ContainerBuilder","c":"@discordjs/builders!ContainerBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"FileBuilder","c":"@discordjs/builders!FileBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaGalleryBuilder","c":"@discordjs/builders!MediaGalleryBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":";"}],"pat":"src/components/Components.ts","l":29,"co":1,"r":"Public","n":"MessageComponentBuilder","ttr":{"st":3,"en":22}},{"k":"TypeAlias","c":"@discordjs/builders!ModalActionRowComponentBuilder:type","d":"/**\n * The builders that may be used within an action row for modals.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":";"}],"pat":"src/components/ActionRow.ts","l":40,"co":1,"r":"Public","n":"ModalActionRowComponentBuilder","ttr":{"st":3,"en":4}},{"k":"Namespace","c":"@discordjs/builders!ModalAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":14,"co":8,"r":"None","n":"ModalAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!ModalAssertions.componentsValidator:var","d":"","ex":[{"k":"Reference","t":"componentsValidator","c":"@discordjs/builders!ModalAssertions.componentsValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<["},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<import(\"../../components/ActionRow.js\")."},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":">, ...("},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<import(\"../../components/ActionRow.js\")."},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":">)[]], "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<import(\"../../components/ActionRow.js\")."},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":">>"}],"pat":"src/interactions/modals/Assertions.ts","l":12,"co":14,"ro":true,"r":"Public","n":"componentsValidator","vtr":{"st":2,"en":23}},{"k":"Variable","c":"@discordjs/builders!ModalAssertions.titleValidator:var","d":"","ex":[{"k":"Reference","t":"titleValidator","c":"@discordjs/builders!ModalAssertions.titleValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/interactions/modals/Assertions.ts","l":7,"co":14,"ro":true,"r":"Public","n":"titleValidator","vtr":{"st":2,"en":7}},{"k":"Function","c":"@discordjs/builders!ModalAssertions.validateRequiredParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredParameters","c":"@discordjs/builders!ModalAssertions.validateRequiredParameters_2"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"title","c":"@discordjs/builders!~title"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":")[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/interactions/modals/Assertions.ts","l":18,"co":1,"rtr":{"st":21,"en":22},"r":"Public","oi":1,"ps":[{"pn":"customId","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"title","ptr":{"st":9,"en":10},"op":true,"rs":false},{"pn":"components","ptr":{"st":13,"en":20},"op":true,"rs":false}],"n":"validateRequiredParameters"}]},{"k":"Class","c":"@discordjs/builders!ModalBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for modals.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ModalBuilder","c":"@discordjs/builders!ModalBuilder:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/interactions/modals/Modal.ts","l":23,"co":1,"r":"Public","ab":false,"n":"ModalBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ModalBuilder:constructor(1)","d":"/**\n * Creates a new modal from API data.\n *\n * @param data - The API data to create this modal with\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":", ..."},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":" }?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":39,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ components, ...data }","ptr":{"st":5,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ModalBuilder#addActionRowComponents:member(1)","d":"/**\n * Adds action rows to this modal.\n *\n * @deprecated\n *\n * Use {@link ModalBuilder.addLabelComponents} instead\n *\n * @param components - The components to add\n */\n","ex":[{"k":"Reference","t":"addActionRowComponents","c":"@discordjs/builders!ModalBuilder#addActionRowComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInModalActionRow","c":"discord-api-types!APIComponentInModalActionRow:type"},{"k":"Content","t":"> | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":">) => "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":">)>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":137,"co":9,"sta":false,"rtr":{"st":25,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":24},"op":false,"rs":true}],"op":false,"ab":false,"n":"addActionRowComponents"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#addComponents:member(1)","d":"/**\n * Adds components to this modal.\n *\n * @deprecated\n *\n * Use {@link ModalBuilder.addLabelComponents} or {@link ModalBuilder.addActionRowComponents} instead\n *\n * @param components - The components to add\n */\n","ex":[{"k":"Reference","t":"addComponents","c":"@discordjs/builders!ModalBuilder#addComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIComponentInModalActionRow","c":"discord-api-types!APIComponentInModalActionRow:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":22},"op":false,"rs":true}],"op":false,"ab":false,"n":"addComponents"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#addLabelComponents:member(1)","d":"/**\n * Adds label components to this modal.\n *\n * @param components - The components to add\n */\n","ex":[{"k":"Reference","t":"addLabelComponents","c":"@discordjs/builders!ModalBuilder#addLabelComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":120,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"addLabelComponents"},{"k":"Property","c":"@discordjs/builders!ModalBuilder#components:member","d":"/**\n * The components within this modal.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"components","c":"@discordjs/builders!ModalBuilder#components"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":")[]"},{"k":"Content","t":";"}],"l":32,"co":2,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!ModalBuilder#data:member","d":"/**\n * The API data associated with this modal.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"data","c":"@discordjs/builders!ModalBuilder#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!ModalBuilder#setComponents:member(1)","d":"/**\n * Sets components for this modal.\n *\n * @deprecated\n *\n * Use {@link ModalBuilder.setLabelComponents} instead\n *\n * @param components - The components to set\n */\n","ex":[{"k":"Reference","t":"setComponents","c":"@discordjs/builders!ModalBuilder#setComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":214,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":12},"op":false,"rs":true}],"op":false,"ab":false,"n":"setComponents"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#setCustomId:member(1)","d":"/**\n * Sets the custom id of this modal.\n *\n * @param customId - The custom id to use\n */\n","ex":[{"k":"Reference","t":"setCustomId","c":"@discordjs/builders!ModalBuilder#setCustomId"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":62,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setCustomId"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#setLabelComponents:member(1)","d":"/**\n * Sets the labels for this modal.\n *\n * @param components - The components to set\n */\n","ex":[{"k":"Reference","t":"setLabelComponents","c":"@discordjs/builders!ModalBuilder#setLabelComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":159,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":16},"op":false,"rs":true}],"op":false,"ab":false,"n":"setLabelComponents"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#setTitle:member(1)","d":"/**\n * Sets the title of this modal.\n *\n * @param title - The title to use\n */\n","ex":[{"k":"Reference","t":"setTitle","c":"@discordjs/builders!ModalBuilder#setTitle"},{"k":"Content","t":"("},{"k":"Reference","t":"title","c":"@discordjs/builders!~title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":52,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"title","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setTitle"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#spliceLabelComponents:member(1)","d":"/**\n * Removes, replaces, or inserts labels for this modal.\n *\n * @remarks\n *\n * This method behaves similarly to {@link https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array/splice | Array.prototype.splice()}. The maximum amount of labels that can be added is 5.\n *\n * It's useful for modifying and adjusting order of the already-existing labels of a modal.\n *\n * @param index - The index to start at\n *\n * @param deleteCount - The number of labels to remove\n *\n * @param labels - The replacing label objects\n *\n * @example\n *\n * Remove the first label:\n * ```ts\n * modal.spliceLabelComponents(0, 1);\n * ```\n *\n * @example\n *\n * Remove the first n labels:\n * ```ts\n * const n = 4;\n * modal.spliceLabelComponents(0, n);\n * ```\n *\n * @example\n *\n * Remove the last label:\n * ```ts\n * modal.spliceLabelComponents(-1, 1);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"spliceLabelComponents","c":"@discordjs/builders!ModalBuilder#spliceLabelComponents"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"labels","c":"@discordjs/builders!~labels"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"APILabelComponent","c":"discord-api-types!APILabelComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"LabelBuilder","c":"@discordjs/builders!LabelBuilder:class"},{"k":"Content","t":"))[]"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":197,"co":9,"sta":false,"rtr":{"st":24,"en":25},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"labels","ptr":{"st":12,"en":23},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceLabelComponents"},{"k":"Method","c":"@discordjs/builders!ModalBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ModalBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":";"}],"l":222,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"TypeAlias","c":"@discordjs/builders!ModalComponentBuilder:type","d":"/**\n * The builders that may be used for modals.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ModalComponentBuilder","c":"@discordjs/builders!ModalComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ActionRowBuilder","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":";"}],"pat":"src/components/ActionRow.ts","l":24,"co":1,"r":"Public","n":"ModalComponentBuilder","ttr":{"st":3,"en":8}},{"k":"Function","c":"@discordjs/builders!normalizeArray:function(1)","d":"/**\n * Normalizes data that is a rest parameter or an array into an array with a depth of 1.\n *\n * @param arr - The (possibly variadic) data to normalize\n *\n * @typeParam ItemType - The data that must satisfy {@link RestOrArray}.\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"normalizeArray","c":"@discordjs/builders!normalizeArray"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">("},{"k":"Reference","t":"arr","c":"@discordjs/builders!~arr"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"ItemType"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"src/util/normalizeArray.ts","l":7,"co":1,"rtr":{"st":12,"en":14},"r":"Public","oi":1,"ps":[{"pn":"arr","ptr":{"st":7,"en":11},"op":false,"rs":false}],"tps":[{"tp":"ItemType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"normalizeArray"},{"k":"Function","c":"@discordjs/builders!resolveBuilder:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"resolveBuilder","c":"@discordjs/builders!resolveBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PropertyKey","c":"!PropertyKey:type"},{"k":"Content","t":", "},{"k":"Reference","t":"any"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"Builder"},{"k":"Content","t":" extends "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"any"},{"k":"Content","t":">"},{"k":"Content","t":">("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"Builder"},{"k":"Content","t":" | "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"Builder"},{"k":"Content","t":") => "},{"k":"Reference","t":"Builder"},{"k":"Content","t":")"},{"k":"Content","t":", "},{"k":"Reference","t":"Constructor","c":"@discordjs/builders!~Constructor"},{"k":"Content","t":": "},{"k":"Content","t":"new ("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":") => "},{"k":"Reference","t":"Builder"},{"k":"Content","t":"): "},{"k":"Reference","t":"Builder"},{"k":"Content","t":";"}],"pat":"src/components/Components.ts","l":184,"co":1,"rtr":{"st":41,"en":42},"r":"Public","oi":1,"ps":[{"pn":"builder","ptr":{"st":21,"en":31},"op":false,"rs":false},{"pn":"Constructor","ptr":{"st":34,"en":40},"op":false,"rs":false}],"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":11},"dtr":{"st":0,"en":0}},{"tp":"Builder","ctr":{"st":14,"en":18},"dtr":{"st":0,"en":0}}],"n":"resolveBuilder"},{"k":"TypeAlias","c":"@discordjs/builders!RestOrArray:type","d":"/**\n * Represents data that may be an array or came from a rest parameter.\n *\n * @remarks\n *\n * This type is used throughout builders to ensure both an array and variadic arguments may be used. It is normalized with {@link normalizeArray}.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Type"},{"k":"Content","t":"[] | ["},{"k":"Reference","t":"Type"},{"k":"Content","t":"[]]"},{"k":"Content","t":";"}],"pat":"src/util/normalizeArray.ts","l":19,"co":1,"r":"Public","n":"RestOrArray","tps":[{"tp":"Type","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":9}},{"k":"TypeAlias","c":"@discordjs/builders!RGBTuple:type","d":"/**\n * A tuple satisfying the RGB color model.\n *\n * @see\n *\n * {@link https://developer.mozilla.org/docs/Glossary/RGB}\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RGBTuple","c":"@discordjs/builders!RGBTuple:type"},{"k":"Content","t":" = "},{"k":"Content","t":"[red: "},{"k":"Reference","t":"number"},{"k":"Content","t":", green: "},{"k":"Reference","t":"number"},{"k":"Content","t":", blue: "},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/messages/embed/Embed.ts","l":21,"co":1,"r":"Public","n":"RGBTuple","ttr":{"st":3,"en":10}},{"k":"Class","c":"@discordjs/builders!RoleSelectMenuBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for role select menus.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/RoleSelectMenu.ts","l":14,"co":1,"r":"Public","ab":false,"n":"RoleSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!RoleSelectMenuBuilder:constructor(1)","d":"/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new RoleSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new RoleSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":37,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!RoleSelectMenuBuilder#addDefaultRoles:member(1)","d":"/**\n * Adds default roles to this auto populated select menu.\n *\n * @param roles - The roles to add\n */\n","ex":[{"k":"Reference","t":"addDefaultRoles","c":"@discordjs/builders!RoleSelectMenuBuilder#addDefaultRoles"},{"k":"Content","t":"(..."},{"k":"Reference","t":"roles","c":"@discordjs/builders!~roles"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":46,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultRoles"},{"k":"Method","c":"@discordjs/builders!RoleSelectMenuBuilder#setDefaultRoles:member(1)","d":"/**\n * Sets default roles for this auto populated select menu.\n *\n * @param roles - The roles to set\n */\n","ex":[{"k":"Reference","t":"setDefaultRoles","c":"@discordjs/builders!RoleSelectMenuBuilder#setDefaultRoles"},{"k":"Content","t":"(..."},{"k":"Reference","t":"roles","c":"@discordjs/builders!~roles"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":66,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setDefaultRoles"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SectionBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for a section.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SectionBuilder","c":"@discordjs/builders!SectionBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISectionComponent","c":"discord-api-types!APISectionComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/Section.ts","l":20,"co":1,"r":"Public","ab":false,"n":"SectionBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!SectionBuilder:constructor(1)","d":"/**\n * Creates a new section from API data.\n *\n * @param data - The API data to create this section with\n *\n * @example\n *\n * Creating a section from an API data object:\n * ```ts\n * const section = new SectionBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcontent: \"Some text here\",\n * \t\t\ttype: ComponentType.TextDisplay,\n * \t\t},\n * \t],\n *  accessory: {\n *      media: {\n *          url: 'https://cdn.discordapp.com/embed/avatars/3.png',\n *      },\n *  }\n * });\n * ```\n *\n * @example\n *\n * Creating a section using setters and API data:\n * ```ts\n * const section = new SectionBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcontent: \"# Heading\",\n * \t\t\ttype: ComponentType.TextDisplay,\n * \t\t},\n * \t],\n * })\n * \t.setPrimaryButtonAccessory(button);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":", "},{"k":"Reference","t":"accessory","c":"@discordjs/builders!~accessory"},{"k":"Content","t":", ..."},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":" }?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISectionComponent","c":"discord-api-types!APISectionComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":66,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ components, accessory, ...data }","ptr":{"st":7,"en":11},"op":true,"rs":false}]},{"k":"Property","c":"@discordjs/builders!SectionBuilder#accessory:member","d":"/**\n * The accessory of this section.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"accessory","c":"@discordjs/builders!SectionBuilder#accessory"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":true,"r":"Public","n":"accessory","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SectionBuilder#addTextDisplayComponents:member(1)","d":"/**\n * Adds text display components to this section.\n *\n * @param components - The text display components to add\n */\n","ex":[{"k":"Reference","t":"addTextDisplayComponents","c":"@discordjs/builders!SectionBuilder#addTextDisplayComponents"},{"k":"Content","t":"(..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":101,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":4,"en":14},"op":false,"rs":true}],"op":false,"ab":false,"n":"addTextDisplayComponents"},{"k":"Property","c":"@discordjs/builders!SectionBuilder#components:member","d":"/**\n * The components within this section.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"components","c":"@discordjs/builders!SectionBuilder#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":24,"co":2,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SectionBuilder#setButtonAccessory:member(1)","d":"/**\n * Sets the accessory of this section to a button.\n *\n * @param accessory - The accessory to use\n */\n","ex":[{"k":"Reference","t":"setButtonAccessory","c":"@discordjs/builders!SectionBuilder#setButtonAccessory"},{"k":"Content","t":"("},{"k":"Reference","t":"accessory","c":"@discordjs/builders!~accessory"},{"k":"Content","t":": "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"ButtonBuilder","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":77,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"accessory","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setButtonAccessory"},{"k":"Method","c":"@discordjs/builders!SectionBuilder#setThumbnailAccessory:member(1)","d":"/**\n * Sets the accessory of this section to a thumbnail.\n *\n * @param accessory - The accessory to use\n */\n","ex":[{"k":"Reference","t":"setThumbnailAccessory","c":"@discordjs/builders!SectionBuilder#setThumbnailAccessory"},{"k":"Content","t":"("},{"k":"Reference","t":"accessory","c":"@discordjs/builders!~accessory"},{"k":"Content","t":": "},{"k":"Reference","t":"APIThumbnailComponent","c":"discord-api-types!APIThumbnailComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":89,"co":9,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"accessory","ptr":{"st":4,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"setThumbnailAccessory"},{"k":"Method","c":"@discordjs/builders!SectionBuilder#spliceTextDisplayComponents:member(1)","d":"/**\n * Removes, replaces, or inserts text display components for this section.\n *\n * @param index - The index to start removing, replacing or inserting text display components\n *\n * @param deleteCount - The amount of text display components to remove\n *\n * @param components - The text display components to insert\n */\n","ex":[{"k":"Reference","t":"spliceTextDisplayComponents","c":"@discordjs/builders!SectionBuilder#spliceTextDisplayComponents"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"components","c":"@discordjs/builders!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextDisplayComponent","c":"discord-api-types!APITextDisplayComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":")>"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":122,"co":9,"sta":false,"rtr":{"st":25,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"components","ptr":{"st":12,"en":24},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceTextDisplayComponents"},{"k":"Method","c":"@discordjs/builders!SectionBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SectionBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APISectionComponent","c":"discord-api-types!APISectionComponent:interface"},{"k":"Content","t":";"}],"l":145,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SeparatorBuilder:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SeparatorBuilder","c":"@discordjs/builders!SeparatorBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISeparatorComponent","c":"discord-api-types!APISeparatorComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/Separator.ts","l":6,"co":1,"r":"Public","ab":false,"n":"SeparatorBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!SeparatorBuilder:constructor(1)","d":"/**\n * Creates a new separator from API data.\n *\n * @param data - The API data to create this separator with\n *\n * @example\n *\n * Creating a separator from an API data object:\n * ```ts\n * const separator = new SeparatorBuilder({\n * \tspacing: SeparatorSpacingSize.Small,\n *  divider: true,\n * });\n * ```\n *\n * @example\n *\n * Creating a separator using setters and API data:\n * ```ts\n * const separator = new SeparatorBuilder({\n * \tspacing: SeparatorSpacingSize.Large,\n * })\n * \t.setDivider(false);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISeparatorComponent","c":"discord-api-types!APISeparatorComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":28,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!SeparatorBuilder#clearSpacing:member(1)","d":"/**\n * Clears the spacing of this separator.\n */\n","ex":[{"k":"Reference","t":"clearSpacing","c":"@discordjs/builders!SeparatorBuilder#clearSpacing"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":58,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearSpacing"},{"k":"Method","c":"@discordjs/builders!SeparatorBuilder#setDivider:member(1)","d":"/**\n * Sets whether this separator should show a divider line.\n *\n * @param divider - Whether to show a divider line\n */\n","ex":[{"k":"Reference","t":"setDivider","c":"@discordjs/builders!SeparatorBuilder#setDivider"},{"k":"Content","t":"("},{"k":"Reference","t":"divider","c":"@discordjs/builders!~divider"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":40,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"divider","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDivider"},{"k":"Method","c":"@discordjs/builders!SeparatorBuilder#setSpacing:member(1)","d":"/**\n * Sets the spacing of this separator.\n *\n * @param spacing - The spacing to use\n */\n","ex":[{"k":"Reference","t":"setSpacing","c":"@discordjs/builders!SeparatorBuilder#setSpacing"},{"k":"Content","t":"("},{"k":"Reference","t":"spacing","c":"@discordjs/builders!~spacing"},{"k":"Content","t":": "},{"k":"Reference","t":"SeparatorSpacingSize","c":"discord-api-types!SeparatorSpacingSize:enum"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":50,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spacing","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setSpacing"},{"k":"Method","c":"@discordjs/builders!SeparatorBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SeparatorBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APISeparatorComponent","c":"discord-api-types!APISeparatorComponent:interface"},{"k":"Content","t":";"}],"l":66,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SharedNameAndDescription:class","d":"/**\n * This mixin holds name and description symbols for slash commands.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/NameAndDescription.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SharedNameAndDescription","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!SharedNameAndDescription#description_localizations:member","d":"/**\n * The description localizations of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description_localizations","c":"@discordjs/builders!SharedNameAndDescription#description_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":true,"op":true,"r":"Public","n":"description_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedNameAndDescription#description:member","d":"/**\n * The description of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description","c":"@discordjs/builders!SharedNameAndDescription#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":21,"co":2,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedNameAndDescription#name_localizations:member","d":"/**\n * The name localizations of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name_localizations","c":"@discordjs/builders!SharedNameAndDescription#name_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":true,"op":true,"r":"Public","n":"name_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedNameAndDescription#name:member","d":"/**\n * The name of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!SharedNameAndDescription#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setDescription:member(1)","d":"/**\n * Sets the description of this command.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!SharedNameAndDescription#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":47,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setDescriptionLocalization:member(1)","d":"/**\n * Sets a description localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedDescription - The localized description for the given locale\n */\n","ex":[{"k":"Reference","t":"setDescriptionLocalization","c":"@discordjs/builders!SharedNameAndDescription#setDescriptionLocalization"},{"k":"Content","t":"("},{"k":"Reference","t":"locale","c":"@discordjs/builders!~locale"},{"k":"Content","t":": "},{"k":"Reference","t":"LocaleString","c":"discord-api-types!LocaleString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"localizedDescription","c":"@discordjs/builders!~localizedDescription"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":106,"co":9,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"locale","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"localizedDescription","ptr":{"st":8,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescriptionLocalization"},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setDescriptionLocalizations:member(1)","d":"/**\n * Sets the description localizations for this command.\n *\n * @param localizedDescriptions - The object of localized descriptions to set\n */\n","ex":[{"k":"Reference","t":"setDescriptionLocalizations","c":"@discordjs/builders!SharedNameAndDescription#setDescriptionLocalizations"},{"k":"Content","t":"("},{"k":"Reference","t":"localizedDescriptions","c":"@discordjs/builders!~localizedDescriptions"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":129,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"localizedDescriptions","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescriptionLocalizations"},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setName:member(1)","d":"/**\n * Sets the name of this command.\n *\n * @param name - The name to use\n */\n","ex":[{"k":"Reference","t":"setName","c":"@discordjs/builders!SharedNameAndDescription#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":33,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setNameLocalization:member(1)","d":"/**\n * Sets a name localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedName - The localized name for the given `locale`\n */\n","ex":[{"k":"Reference","t":"setNameLocalization","c":"@discordjs/builders!SharedNameAndDescription#setNameLocalization"},{"k":"Content","t":"("},{"k":"Reference","t":"locale","c":"@discordjs/builders!~locale"},{"k":"Content","t":": "},{"k":"Reference","t":"LocaleString","c":"discord-api-types!LocaleString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"localizedName","c":"@discordjs/builders!~localizedName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":62,"co":9,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"locale","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"localizedName","ptr":{"st":8,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"setNameLocalization"},{"k":"Method","c":"@discordjs/builders!SharedNameAndDescription#setNameLocalizations:member(1)","d":"/**\n * Sets the name localizations for this command.\n *\n * @param localizedNames - The object of localized names to set\n */\n","ex":[{"k":"Reference","t":"setNameLocalizations","c":"@discordjs/builders!SharedNameAndDescription#setNameLocalizations"},{"k":"Content","t":"("},{"k":"Reference","t":"localizedNames","c":"@discordjs/builders!~localizedNames"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":85,"co":9,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"localizedNames","ptr":{"st":4,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setNameLocalizations"}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!SharedSlashCommand:class","d":"/**\n * This mixin holds symbols that can be shared in slashcommands independent of options or subcommands.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SharedSlashCommand","c":"@discordjs/builders!SharedSlashCommand:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/mixins/SharedSlashCommand.ts","l":26,"co":1,"r":"Public","ab":false,"n":"SharedSlashCommand","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#contexts:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"contexts","c":"@discordjs/builders!SharedSlashCommand#contexts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":37,"co":2,"ro":true,"op":true,"r":"Public","n":"contexts","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#default_member_permissions:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_member_permissions","c":"@discordjs/builders!SharedSlashCommand#default_member_permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Permissions","c":"discord-api-types!Permissions:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":44,"co":2,"ro":true,"op":false,"r":"Public","n":"default_member_permissions","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#default_permission:member","d":"/**\n * @deprecated\n *\n * Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_permission","c":"@discordjs/builders!SharedSlashCommand#default_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":42,"co":2,"ro":true,"op":false,"r":"Public","n":"default_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#description_localizations:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description_localizations","c":"@discordjs/builders!SharedSlashCommand#description_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":33,"co":2,"ro":true,"op":true,"r":"Public","n":"description_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#description:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description","c":"@discordjs/builders!SharedSlashCommand#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":31,"co":2,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#dm_permission:member","d":"/**\n * @deprecated\n *\n * Use {@link SharedSlashCommand.contexts} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"dm_permission","c":"@discordjs/builders!SharedSlashCommand#dm_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":49,"co":2,"ro":true,"op":false,"r":"Public","n":"dm_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#integration_types:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"integration_types","c":"@discordjs/builders!SharedSlashCommand#integration_types"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":51,"co":2,"ro":true,"op":true,"r":"Public","n":"integration_types","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#name_localizations:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name_localizations","c":"@discordjs/builders!SharedSlashCommand#name_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":true,"r":"Public","n":"name_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#name:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!SharedSlashCommand#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#nsfw:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"nsfw","c":"@discordjs/builders!SharedSlashCommand#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":53,"co":2,"ro":true,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SharedSlashCommand#options:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SharedSlashCommand#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":35,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setContexts:member(1)","d":"/**\n * Sets the contexts of this command.\n *\n * @param contexts - The contexts\n */\n","ex":[{"k":"Reference","t":"setContexts","c":"@discordjs/builders!SharedSlashCommand#setContexts"},{"k":"Content","t":"(..."},{"k":"Reference","t":"contexts","c":"@discordjs/builders!~contexts"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":60,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"contexts","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setContexts"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setDefaultMemberPermissions:member(1)","d":"/**\n * Sets the default permissions a member should have in order to run the command.\n *\n * @remarks\n *\n * You can set this to `'0'` to disable the command by default.\n *\n * @param permissions - The permissions bit field to set\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDefaultMemberPermissions","c":"@discordjs/builders!SharedSlashCommand#setDefaultMemberPermissions"},{"k":"Content","t":"("},{"k":"Reference","t":"permissions","c":"@discordjs/builders!~permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Permissions","c":"discord-api-types!Permissions:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":103,"co":9,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permissions","ptr":{"st":4,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDefaultMemberPermissions"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setDefaultPermission:member(1)","d":"/**\n * Sets whether the command is enabled by default when the application is added to a guild.\n *\n * @remarks\n *\n * If set to `false`, you will have to later `PUT` the permissions for this command.\n *\n * @deprecated\n *\n * Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n *\n * @param value - Whether or not to enable this command by default\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDefaultPermission","c":"@discordjs/builders!SharedSlashCommand#setDefaultPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":86,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"value","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDefaultPermission"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setDMPermission:member(1)","d":"/**\n * Sets if the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This method is only for global commands.\n *\n * @deprecated\n *\n * Use {@link SharedSlashCommand.setContexts} instead.\n *\n * @param enabled - Whether the command should be enabled in direct messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n","ex":[{"k":"Reference","t":"setDMPermission","c":"@discordjs/builders!SharedSlashCommand#setDMPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"enabled","c":"@discordjs/builders!~enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":122,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"enabled","ptr":{"st":4,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDMPermission"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setIntegrationTypes:member(1)","d":"/**\n * Sets the integration types of this command.\n *\n * @param integrationTypes - The integration types\n */\n","ex":[{"k":"Reference","t":"setIntegrationTypes","c":"@discordjs/builders!SharedSlashCommand#setIntegrationTypes"},{"k":"Content","t":"(..."},{"k":"Reference","t":"integrationTypes","c":"@discordjs/builders!~integrationTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":71,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"integrationTypes","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setIntegrationTypes"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#setNSFW:member(1)","d":"/**\n * Sets whether this command is NSFW.\n *\n * @param nsfw - Whether this command is NSFW\n */\n","ex":[{"k":"Reference","t":"setNSFW","c":"@discordjs/builders!SharedSlashCommand#setNSFW"},{"k":"Content","t":"("},{"k":"Reference","t":"nsfw","c":"@discordjs/builders!~nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":136,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nsfw","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setNSFW"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommand#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SharedSlashCommand#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"RESTPostAPIChatInputApplicationCommandsJSONBody","c":"discord-api-types!RESTPostAPIChatInputApplicationCommandsJSONBody:interface"},{"k":"Content","t":";"}],"l":150,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!SharedSlashCommandOptions:class","d":"/**\n * This mixin holds symbols that can be shared in slash command options.\n *\n * @typeParam TypeAfterAddingOptions - The type this class should return after adding an option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SharedSlashCommandOptions","c":"@discordjs/builders!SharedSlashCommandOptions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedSlashCommandOptions","c":"@discordjs/builders!SharedSlashCommandOptions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":">"},{"k":"Content","t":"> "}],"pat":"src/interactions/slashCommands/mixins/SharedSlashCommandOptions.ts","l":19,"co":1,"r":"Public","tps":[{"tp":"TypeAfterAddingOptions","ctr":{"st":5,"en":9},"dtr":{"st":0,"en":0}}],"ab":false,"n":"SharedSlashCommandOptions","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addAttachmentOption:member(1)","d":"/**\n * Adds an attachment option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addAttachmentOption","c":"@discordjs/builders!SharedSlashCommandOptions#addAttachmentOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandAttachmentOption","c":"@discordjs/builders!SlashCommandAttachmentOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandAttachmentOption","c":"@discordjs/builders!SlashCommandAttachmentOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandAttachmentOption","c":"@discordjs/builders!SlashCommandAttachmentOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":69,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addAttachmentOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addBooleanOption:member(1)","d":"/**\n * Adds a boolean option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addBooleanOption","c":"@discordjs/builders!SharedSlashCommandOptions#addBooleanOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandBooleanOption","c":"@discordjs/builders!SlashCommandBooleanOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandBooleanOption","c":"@discordjs/builders!SlashCommandBooleanOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandBooleanOption","c":"@discordjs/builders!SlashCommandBooleanOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":29,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addBooleanOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addChannelOption:member(1)","d":"/**\n * Adds a channel option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addChannelOption","c":"@discordjs/builders!SharedSlashCommandOptions#addChannelOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandChannelOption","c":"@discordjs/builders!SlashCommandChannelOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandChannelOption","c":"@discordjs/builders!SlashCommandChannelOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandChannelOption","c":"@discordjs/builders!SlashCommandChannelOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":49,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addChannelOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addIntegerOption:member(1)","d":"/**\n * Adds an integer option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addIntegerOption","c":"@discordjs/builders!SharedSlashCommandOptions#addIntegerOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandIntegerOption","c":"@discordjs/builders!SlashCommandIntegerOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandIntegerOption","c":"@discordjs/builders!SlashCommandIntegerOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandIntegerOption","c":"@discordjs/builders!SlashCommandIntegerOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":102,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addIntegerOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addMentionableOption:member(1)","d":"/**\n * Adds a mentionable option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addMentionableOption","c":"@discordjs/builders!SharedSlashCommandOptions#addMentionableOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandMentionableOption","c":"@discordjs/builders!SlashCommandMentionableOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandMentionableOption","c":"@discordjs/builders!SlashCommandMentionableOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandMentionableOption","c":"@discordjs/builders!SlashCommandMentionableOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":80,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addMentionableOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addNumberOption:member(1)","d":"/**\n * Adds a number option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addNumberOption","c":"@discordjs/builders!SharedSlashCommandOptions#addNumberOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandNumberOption","c":"@discordjs/builders!SlashCommandNumberOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandNumberOption","c":"@discordjs/builders!SlashCommandNumberOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandNumberOption","c":"@discordjs/builders!SlashCommandNumberOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":113,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addNumberOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addRoleOption:member(1)","d":"/**\n * Adds a role option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addRoleOption","c":"@discordjs/builders!SharedSlashCommandOptions#addRoleOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandRoleOption","c":"@discordjs/builders!SlashCommandRoleOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandRoleOption","c":"@discordjs/builders!SlashCommandRoleOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandRoleOption","c":"@discordjs/builders!SlashCommandRoleOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":60,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addRoleOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addStringOption:member(1)","d":"/**\n * Adds a string option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addStringOption","c":"@discordjs/builders!SharedSlashCommandOptions#addStringOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandStringOption","c":"@discordjs/builders!SlashCommandStringOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandStringOption","c":"@discordjs/builders!SlashCommandStringOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandStringOption","c":"@discordjs/builders!SlashCommandStringOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":91,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addStringOption"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandOptions#addUserOption:member(1)","d":"/**\n * Adds a user option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addUserOption","c":"@discordjs/builders!SharedSlashCommandOptions#addUserOption"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandUserOption","c":"@discordjs/builders!SlashCommandUserOption:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"builder","c":"@discordjs/builders!~builder"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandUserOption","c":"@discordjs/builders!SlashCommandUserOption:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandUserOption","c":"@discordjs/builders!SlashCommandUserOption:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingOptions"},{"k":"Content","t":";"}],"l":40,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addUserOption"},{"k":"Property","c":"@discordjs/builders!SharedSlashCommandOptions#options:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SharedSlashCommandOptions#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":22,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"@discordjs/builders!SharedSlashCommandSubcommands:class","d":"/**\n * This mixin holds symbols that can be shared in slash subcommands.\n *\n * @typeParam TypeAfterAddingSubcommands - The type this class should return after adding a subcommand or subcommand group.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SharedSlashCommandSubcommands","c":"@discordjs/builders!SharedSlashCommandSubcommands:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"TypeAfterAddingSubcommands"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedSlashCommandSubcommands","c":"@discordjs/builders!SharedSlashCommandSubcommands:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"TypeAfterAddingSubcommands"},{"k":"Content","t":">"},{"k":"Content","t":"> "}],"pat":"src/interactions/slashCommands/mixins/SharedSubcommands.ts","l":10,"co":1,"r":"Public","tps":[{"tp":"TypeAfterAddingSubcommands","ctr":{"st":5,"en":9},"dtr":{"st":0,"en":0}}],"ab":false,"n":"SharedSlashCommandSubcommands","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SharedSlashCommandSubcommands#addSubcommand:member(1)","d":"/**\n * Adds a new subcommand to this command.\n *\n * @param input - A function that returns a subcommand builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addSubcommand","c":"@discordjs/builders!SharedSlashCommandSubcommands#addSubcommand"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"subcommandGroup","c":"@discordjs/builders!~subcommandGroup"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingSubcommands"},{"k":"Content","t":";"}],"l":46,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addSubcommand"},{"k":"Method","c":"@discordjs/builders!SharedSlashCommandSubcommands#addSubcommandGroup:member(1)","d":"/**\n * Adds a new subcommand group to this command.\n *\n * @param input - A function that returns a subcommand group builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addSubcommandGroup","c":"@discordjs/builders!SharedSlashCommandSubcommands#addSubcommandGroup"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"subcommandGroup","c":"@discordjs/builders!~subcommandGroup"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Reference","t":"TypeAfterAddingSubcommands"},{"k":"Content","t":";"}],"l":20,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addSubcommandGroup"},{"k":"Property","c":"@discordjs/builders!SharedSlashCommandSubcommands#options:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SharedSlashCommandSubcommands#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":13,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Namespace","c":"@discordjs/builders!SlashCommandAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":50,"co":8,"r":"None","n":"SlashCommandAssertions","pmo":false,"ms":[{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.assertReturnOfBuilder:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"assertReturnOfBuilder","c":"@discordjs/builders!SlashCommandAssertions.assertReturnOfBuilder_2"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":">("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"ExpectedInstanceOf","c":"@discordjs/builders!~ExpectedInstanceOf"},{"k":"Content","t":": "},{"k":"Content","t":"new () => "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":" is "},{"k":"Reference","t":"ReturnType"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":76,"co":1,"rtr":{"st":20,"en":24},"r":"Public","oi":1,"ps":[{"pn":"input","ptr":{"st":13,"en":14},"op":false,"rs":false},{"pn":"ExpectedInstanceOf","ptr":{"st":17,"en":19},"op":false,"rs":false}],"tps":[{"tp":"ReturnType","ctr":{"st":5,"en":10},"dtr":{"st":0,"en":0}}],"n":"assertReturnOfBuilder"},{"k":"Variable","c":"@discordjs/builders!SlashCommandAssertions.contextsPredicate:var","d":"","ex":[{"k":"Reference","t":"contextsPredicate","c":"@discordjs/builders!SlashCommandAssertions.contextsPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":"[], "},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":">"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":117,"co":14,"ro":true,"r":"Public","n":"contextsPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!SlashCommandAssertions.integrationTypesPredicate:var","d":"","ex":[{"k":"Reference","t":"integrationTypesPredicate","c":"@discordjs/builders!SlashCommandAssertions.integrationTypesPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ArrayValidator","c":"@sapphire/shapeshift!ArrayValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":"[], "},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":">"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":121,"co":14,"ro":true,"r":"Public","n":"integrationTypesPredicate","vtr":{"st":2,"en":9}},{"k":"Variable","c":"@discordjs/builders!SlashCommandAssertions.localizationMapPredicate:var","d":"","ex":[{"k":"Reference","t":"localizationMapPredicate","c":"@discordjs/builders!SlashCommandAssertions.localizationMapPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UnionValidator","c":"@sapphire/shapeshift!UnionValidator:class"},{"k":"Content","t":"<import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">>> | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":82,"co":14,"ro":true,"r":"Public","n":"localizationMapPredicate","vtr":{"st":2,"en":21}},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateChoicesLength:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateChoicesLength","c":"@discordjs/builders!SlashCommandAssertions.validateChoicesLength"},{"k":"Content","t":"("},{"k":"Reference","t":"amountAdding","c":"@discordjs/builders!~amountAdding"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"choices","c":"@discordjs/builders!~choices"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIApplicationCommandOptionChoice","c":"discord-api-types!APIApplicationCommandOptionChoice:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":72,"co":1,"rtr":{"st":12,"en":13},"r":"Public","oi":1,"ps":[{"pn":"amountAdding","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"choices","ptr":{"st":9,"en":11},"op":true,"rs":false}],"n":"validateChoicesLength"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateDefaultMemberPermissions:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDefaultMemberPermissions","c":"@discordjs/builders!SlashCommandAssertions.validateDefaultMemberPermissions"},{"k":"Content","t":"("},{"k":"Reference","t":"permissions","c":"@discordjs/builders!~permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":109,"co":1,"rtr":{"st":7,"en":12},"r":"Public","oi":1,"ps":[{"pn":"permissions","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDefaultMemberPermissions"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateDefaultPermission:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDefaultPermission","c":"@discordjs/builders!SlashCommandAssertions.validateDefaultPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":62,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDefaultPermission"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateDescription:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDescription","c":"@discordjs/builders!SlashCommandAssertions.validateDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":" is "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":32,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"description","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDescription"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateDMPermission:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateDMPermission","c":"@discordjs/builders!SlashCommandAssertions.validateDMPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":94,"co":1,"rtr":{"st":7,"en":15},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateDMPermission"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateLocale:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateLocale","c":"@discordjs/builders!SlashCommandAssertions.validateLocale"},{"k":"Content","t":"("},{"k":"Reference","t":"locale","c":"@discordjs/builders!~locale"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":37,"co":1,"rtr":{"st":7,"en":8},"r":"Public","oi":1,"ps":[{"pn":"locale","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateLocale"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateLocalizationMap:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateLocalizationMap","c":"@discordjs/builders!SlashCommandAssertions.validateLocalizationMap"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":88,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateLocalizationMap"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateMaxOptionsLength:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateMaxOptionsLength","c":"@discordjs/builders!SlashCommandAssertions.validateMaxOptionsLength"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":" is "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":41,"co":1,"rtr":{"st":7,"en":12},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateMaxOptionsLength"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateName:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateName","c":"@discordjs/builders!SlashCommandAssertions.validateName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":" is "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":21,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateName"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateNSFW:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateNSFW","c":"@discordjs/builders!SlashCommandAssertions.validateNSFW"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":113,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"value","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateNSFW"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateRequired:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequired","c":"@discordjs/builders!SlashCommandAssertions.validateRequired"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"@discordjs/builders!~required"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"asserts "},{"k":"Reference","t":"required","c":"@discordjs/builders!~required"},{"k":"Content","t":" is "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":66,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"required","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"validateRequired"},{"k":"Function","c":"@discordjs/builders!SlashCommandAssertions.validateRequiredParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredParameters","c":"@discordjs/builders!SlashCommandAssertions.validateRequiredParameters_3"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"@discordjs/builders!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/interactions/slashCommands/Assertions.ts","l":45,"co":1,"rtr":{"st":16,"en":17},"r":"Public","oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"description","ptr":{"st":9,"en":10},"op":false,"rs":false},{"pn":"options","ptr":{"st":13,"en":15},"op":false,"rs":false}],"n":"validateRequiredParameters"}]},{"k":"Class","c":"@discordjs/builders!SlashCommandAttachmentOption:class","d":"/**\n * A slash command attachment option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandAttachmentOption","c":"@discordjs/builders!SlashCommandAttachmentOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/attachment.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SlashCommandAttachmentOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandAttachmentOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandAttachmentOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandAttachmentOption","c":"discord-api-types!APIApplicationCommandAttachmentOption:type"},{"k":"Content","t":";"}],"l":16,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandAttachmentOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandAttachmentOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Attachment","c":"discord-api-types!ApplicationCommandOptionType.Attachment:member"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SlashCommandBooleanOption:class","d":"/**\n * A slash command boolean option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandBooleanOption","c":"@discordjs/builders!SlashCommandBooleanOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/boolean.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SlashCommandBooleanOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandBooleanOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandBooleanOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandBooleanOption","c":"discord-api-types!APIApplicationCommandBooleanOption:type"},{"k":"Content","t":";"}],"l":16,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandBooleanOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandBooleanOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Boolean","c":"discord-api-types!ApplicationCommandOptionType.Boolean:member"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SlashCommandBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for slash commands.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandBuilder","c":"@discordjs/builders!SlashCommandBuilder:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandBuilder.ts","l":17,"co":1,"r":"Public","ab":false,"n":"SlashCommandBuilder","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#contexts:member","d":"/**\n * The contexts for this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"contexts","c":"@discordjs/builders!SlashCommandBuilder#contexts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionContextType","c":"discord-api-types!InteractionContextType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":47,"co":2,"ro":true,"op":true,"r":"Public","n":"contexts","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#default_member_permissions:member","d":"/**\n * The set of permissions represented as a bit set for the command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_member_permissions","c":"@discordjs/builders!SlashCommandBuilder#default_member_permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Permissions","c":"discord-api-types!Permissions:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":59,"co":2,"ro":true,"op":false,"r":"Public","n":"default_member_permissions","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#default_permission:member","d":"/**\n * Whether this command is enabled by default when the application is added to a guild.\n *\n * @deprecated\n *\n * Use {@link SharedSlashCommand.setDefaultMemberPermissions} or {@link SharedSlashCommand.setDMPermission} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"default_permission","c":"@discordjs/builders!SlashCommandBuilder#default_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":54,"co":2,"ro":true,"op":false,"r":"Public","n":"default_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#description_localizations:member","d":"/**\n * The description localizations of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description_localizations","c":"@discordjs/builders!SlashCommandBuilder#description_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":37,"co":2,"ro":true,"op":true,"r":"Public","n":"description_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#description:member","d":"/**\n * The description of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description","c":"@discordjs/builders!SlashCommandBuilder#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":32,"co":2,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#dm_permission:member","d":"/**\n * Indicates whether the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This property is only for global commands.\n *\n * @deprecated\n *\n * Use {@link SlashCommandBuilder.contexts} instead.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"dm_permission","c":"@discordjs/builders!SlashCommandBuilder#dm_permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":69,"co":2,"ro":true,"op":false,"r":"Public","n":"dm_permission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#integration_types:member","d":"/**\n * The integration types for this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"integration_types","c":"@discordjs/builders!SlashCommandBuilder#integration_types"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationIntegrationType","c":"discord-api-types!ApplicationIntegrationType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":74,"co":2,"ro":true,"op":true,"r":"Public","n":"integration_types","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#name_localizations:member","d":"/**\n * The name localizations of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name_localizations","c":"@discordjs/builders!SlashCommandBuilder#name_localizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":true,"op":true,"r":"Public","n":"name_localizations","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#name:member","d":"/**\n * The name of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!SlashCommandBuilder#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":22,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#nsfw:member","d":"/**\n * Whether this command is NSFW.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"nsfw","c":"@discordjs/builders!SlashCommandBuilder#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":79,"co":2,"ro":true,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandBuilder#options:member","d":"/**\n * The options of this command.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SlashCommandBuilder#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":42,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"@discordjs/builders!SlashCommandBuilder:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandBuilder","c":"@discordjs/builders!SlashCommandBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommandOptions","c":"@discordjs/builders!SharedSlashCommandOptions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SlashCommandOptionsOnlyBuilder","c":"@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommandSubcommands","c":"@discordjs/builders!SharedSlashCommandSubcommands:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SlashCommandSubcommandsOnlyBuilder","c":"@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommand","c":"@discordjs/builders!SharedSlashCommand:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandBuilder.ts","l":82,"co":1,"r":"Public","n":"SlashCommandBuilder","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8}]},{"st":10,"en":14,"tps":[{"st":12,"en":13}]},{"st":15,"en":16,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandChannelOption:class","d":"/**\n * A slash command channel option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandChannelOption","c":"@discordjs/builders!SlashCommandChannelOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/channel.ts","l":9,"co":1,"r":"Public","ab":false,"n":"SlashCommandChannelOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandChannelOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandChannelOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandChannelOption","c":"discord-api-types!APIApplicationCommandChannelOption:interface"},{"k":"Content","t":";"}],"l":19,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandChannelOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandChannelOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Channel","c":"discord-api-types!ApplicationCommandOptionType.Channel:member"},{"k":"Content","t":";"}],"l":14,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"@discordjs/builders!SlashCommandChannelOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandChannelOption","c":"@discordjs/builders!SlashCommandChannelOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionChannelTypesMixin","c":"@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/channel.ts","l":26,"co":1,"r":"Public","n":"SlashCommandChannelOption","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandIntegerOption:class","d":"/**\n * A slash command integer option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandIntegerOption","c":"@discordjs/builders!SlashCommandIntegerOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"ApplicationCommandNumericOptionMinMaxValueMixin","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/integer.ts","l":14,"co":1,"r":"Public","ab":false,"n":"SlashCommandIntegerOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandIntegerOption#setMaxValue:member(1)","d":"/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n","ex":[{"k":"Reference","t":"setMaxValue","c":"@discordjs/builders!SlashCommandIntegerOption#setMaxValue"},{"k":"Content","t":"("},{"k":"Reference","t":"max","c":"@discordjs/builders!~max"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":31,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"max","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMaxValue"},{"k":"Method","c":"@discordjs/builders!SlashCommandIntegerOption#setMinValue:member(1)","d":"/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n","ex":[{"k":"Reference","t":"setMinValue","c":"@discordjs/builders!SlashCommandIntegerOption#setMinValue"},{"k":"Content","t":"("},{"k":"Reference","t":"min","c":"@discordjs/builders!~min"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":42,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"min","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMinValue"},{"k":"Method","c":"@discordjs/builders!SlashCommandIntegerOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandIntegerOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandIntegerOption","c":"discord-api-types!APIApplicationCommandIntegerOption:type"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandIntegerOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandIntegerOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Integer","c":"discord-api-types!ApplicationCommandOptionType.Integer:member"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[{"st":5,"en":6,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandIntegerOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandIntegerOption","c":"@discordjs/builders!SlashCommandIntegerOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandNumericOptionMinMaxValueMixin","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionWithChoicesMixin","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionWithAutocompleteMixin","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/integer.ts","l":64,"co":1,"r":"Public","n":"SlashCommandIntegerOption","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":0,"en":0}]},{"st":10,"en":11,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandMentionableOption:class","d":"/**\n * A slash command mentionable option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandMentionableOption","c":"@discordjs/builders!SlashCommandMentionableOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/mentionable.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SlashCommandMentionableOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandMentionableOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandMentionableOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandMentionableOption","c":"discord-api-types!APIApplicationCommandMentionableOption:type"},{"k":"Content","t":";"}],"l":16,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandMentionableOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandMentionableOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Mentionable","c":"discord-api-types!ApplicationCommandOptionType.Mentionable:member"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SlashCommandNumberOption:class","d":"/**\n * A slash command number option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandNumberOption","c":"@discordjs/builders!SlashCommandNumberOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"ApplicationCommandNumericOptionMinMaxValueMixin","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/number.ts","l":14,"co":1,"r":"Public","ab":false,"n":"SlashCommandNumberOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandNumberOption#setMaxValue:member(1)","d":"/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n","ex":[{"k":"Reference","t":"setMaxValue","c":"@discordjs/builders!SlashCommandNumberOption#setMaxValue"},{"k":"Content","t":"("},{"k":"Reference","t":"max","c":"@discordjs/builders!~max"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":31,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"max","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMaxValue"},{"k":"Method","c":"@discordjs/builders!SlashCommandNumberOption#setMinValue:member(1)","d":"/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n","ex":[{"k":"Reference","t":"setMinValue","c":"@discordjs/builders!SlashCommandNumberOption#setMinValue"},{"k":"Content","t":"("},{"k":"Reference","t":"min","c":"@discordjs/builders!~min"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":42,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"min","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMinValue"},{"k":"Method","c":"@discordjs/builders!SlashCommandNumberOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandNumberOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandNumberOption","c":"discord-api-types!APIApplicationCommandNumberOption:type"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandNumberOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandNumberOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Number","c":"discord-api-types!ApplicationCommandOptionType.Number:member"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[{"st":5,"en":6,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandNumberOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandNumberOption","c":"@discordjs/builders!SlashCommandNumberOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandNumericOptionMinMaxValueMixin","c":"@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionWithChoicesMixin","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionWithAutocompleteMixin","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/number.ts","l":64,"co":1,"r":"Public","n":"SlashCommandNumberOption","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":0,"en":0}]},{"st":10,"en":11,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface","d":"/**\n * An interface specifically for slash command options.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandOptionsOnlyBuilder","c":"@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommandOptions","c":"@discordjs/builders!SharedSlashCommandOptions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SlashCommandOptionsOnlyBuilder","c":"@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommand","c":"@discordjs/builders!SharedSlashCommand:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandBuilder.ts","l":99,"co":1,"r":"Public","n":"SlashCommandOptionsOnlyBuilder","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8}]},{"st":10,"en":11,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandRoleOption:class","d":"/**\n * A slash command role option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandRoleOption","c":"@discordjs/builders!SlashCommandRoleOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/role.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SlashCommandRoleOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandRoleOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandRoleOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandRoleOption","c":"discord-api-types!APIApplicationCommandRoleOption:type"},{"k":"Content","t":";"}],"l":16,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandRoleOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandRoleOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Role","c":"discord-api-types!ApplicationCommandOptionType.Role:member"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!SlashCommandStringOption:class","d":"/**\n * A slash command string option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandStringOption","c":"@discordjs/builders!SlashCommandStringOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/string.ts","l":14,"co":1,"r":"Public","ab":false,"n":"SlashCommandStringOption","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!SlashCommandStringOption#max_length:member","d":"/**\n * The maximum length of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"max_length","c":"@discordjs/builders!SlashCommandStringOption#max_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":24,"co":2,"ro":true,"op":true,"r":"Public","n":"max_length","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandStringOption#min_length:member","d":"/**\n * The minimum length of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"min_length","c":"@discordjs/builders!SlashCommandStringOption#min_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":29,"co":2,"ro":true,"op":true,"r":"Public","n":"min_length","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SlashCommandStringOption#setMaxLength:member(1)","d":"/**\n * Sets the maximum length of this string option.\n *\n * @param max - The maximum length this option can be\n */\n","ex":[{"k":"Reference","t":"setMaxLength","c":"@discordjs/builders!SlashCommandStringOption#setMaxLength"},{"k":"Content","t":"("},{"k":"Reference","t":"max","c":"@discordjs/builders!~max"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":36,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"max","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMaxLength"},{"k":"Method","c":"@discordjs/builders!SlashCommandStringOption#setMinLength:member(1)","d":"/**\n * Sets the minimum length of this string option.\n *\n * @param min - The minimum length this option can be\n */\n","ex":[{"k":"Reference","t":"setMinLength","c":"@discordjs/builders!SlashCommandStringOption#setMinLength"},{"k":"Content","t":"("},{"k":"Reference","t":"min","c":"@discordjs/builders!~min"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":49,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"min","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMinLength"},{"k":"Method","c":"@discordjs/builders!SlashCommandStringOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandStringOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandStringOption","c":"discord-api-types!APIApplicationCommandStringOption:type"},{"k":"Content","t":";"}],"l":60,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandStringOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandStringOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":";"}],"l":19,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"@discordjs/builders!SlashCommandStringOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandStringOption","c":"@discordjs/builders!SlashCommandStringOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionWithChoicesMixin","c":"@discordjs/builders!ApplicationCommandOptionWithChoicesMixin:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionWithAutocompleteMixin","c":"@discordjs/builders!ApplicationCommandOptionWithAutocompleteMixin:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/string.ts","l":71,"co":1,"r":"Public","n":"SlashCommandStringOption","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":0,"en":0}]},{"st":8,"en":9,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for slash command subcommands.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandSubcommands.ts","l":91,"co":1,"r":"Public","ab":false,"n":"SlashCommandSubcommandBuilder","pmo":false,"ms":[{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandBuilder#description:member","d":"/**\n * The description of this subcommand.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description","c":"@discordjs/builders!SlashCommandSubcommandBuilder#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":101,"co":2,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandBuilder#name:member","d":"/**\n * The name of this subcommand.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!SlashCommandSubcommandBuilder#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":96,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandBuilder#options:member","d":"/**\n * The options within this subcommand.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SlashCommandSubcommandBuilder#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":106,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SlashCommandSubcommandBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandSubcommandBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandSubcommandOption","c":"discord-api-types!APIApplicationCommandSubcommandOption:interface"},{"k":"Content","t":";"}],"l":115,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandSubcommandBuilder:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommandOptions","c":"@discordjs/builders!SharedSlashCommandOptions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandSubcommands.ts","l":129,"co":1,"r":"Public","n":"SlashCommandSubcommandBuilder","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8}]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class","d":"/**\n * Represents a folder for subcommands.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandSubcommands.ts","l":18,"co":1,"r":"Public","ab":false,"n":"SlashCommandSubcommandGroupBuilder","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#addSubcommand:member(1)","d":"/**\n * Adds a new subcommand to this group.\n *\n * @param input - A function that returns a subcommand builder or an already built builder\n */\n","ex":[{"k":"Reference","t":"addSubcommand","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#addSubcommand"},{"k":"Content","t":"("},{"k":"Reference","t":"input","c":"@discordjs/builders!~input"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":" | (("},{"k":"Reference","t":"subcommandGroup","c":"@discordjs/builders!~subcommandGroup"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":")"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":40,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"input","ptr":{"st":4,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"addSubcommand"},{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#description:member","d":"/**\n * The description of this subcommand group.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"description","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":28,"co":2,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#name:member","d":"/**\n * The name of this subcommand group.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"name","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":23,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#options:member","d":"/**\n * The subcommands within this subcommand group.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#options"},{"k":"Content","t":": "},{"k":"Reference","t":"SlashCommandSubcommandBuilder","c":"@discordjs/builders!SlashCommandSubcommandBuilder:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":33,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandSubcommandGroupOption","c":"discord-api-types!APIApplicationCommandSubcommandGroupOption:interface"},{"k":"Content","t":";"}],"l":70,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandSubcommandGroupBuilder","c":"@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandSubcommands.ts","l":84,"co":1,"r":"Public","n":"SlashCommandSubcommandGroupBuilder","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface","d":"/**\n * An interface specifically for slash command subcommands.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SlashCommandSubcommandsOnlyBuilder","c":"@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"SharedNameAndDescription","c":"@discordjs/builders!SharedNameAndDescription:class"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommandSubcommands","c":"@discordjs/builders!SharedSlashCommandSubcommands:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SlashCommandSubcommandsOnlyBuilder","c":"@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"SharedSlashCommand","c":"@discordjs/builders!SharedSlashCommand:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandBuilder.ts","l":91,"co":1,"r":"Public","n":"SlashCommandSubcommandsOnlyBuilder","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8}]},{"st":10,"en":11,"tps":[]}]},{"k":"Class","c":"@discordjs/builders!SlashCommandUserOption:class","d":"/**\n * A slash command user option.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"SlashCommandUserOption","c":"@discordjs/builders!SlashCommandUserOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandOptionBase","c":"@discordjs/builders!ApplicationCommandOptionBase:class"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/options/user.ts","l":7,"co":1,"r":"Public","ab":false,"n":"SlashCommandUserOption","pmo":false,"ms":[{"k":"Method","c":"@discordjs/builders!SlashCommandUserOption#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!SlashCommandUserOption#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandUserOption","c":"discord-api-types!APIApplicationCommandUserOption:type"},{"k":"Content","t":";"}],"l":16,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"@discordjs/builders!SlashCommandUserOption#type:member","d":"/**\n * The type of this option.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"type","c":"@discordjs/builders!SlashCommandUserOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.User","c":"discord-api-types!ApplicationCommandOptionType.User:member"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!StringSelectMenuBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for string select menus.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/StringSelectMenu.ts","l":11,"co":1,"r":"Public","ab":false,"n":"StringSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!StringSelectMenuBuilder:constructor(1)","d":"/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new StringSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * \toptions: [\n * \t\t{ label: 'option 1', value: '1' },\n * \t\t{ label: 'option 2', value: '2' },\n * \t\t{ label: 'option 3', value: '3' },\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new StringSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1)\n * \t.addOptions({\n * \t\tlabel: 'Catchy',\n * \t\tvalue: 'catch',\n * \t});\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":48,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!StringSelectMenuBuilder#addOptions:member(1)","d":"/**\n * Adds options to this select menu.\n *\n * @param options - The options to add\n */\n","ex":[{"k":"Reference","t":"addOptions","c":"@discordjs/builders!StringSelectMenuBuilder#addOptions"},{"k":"Content","t":"(..."},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":59,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":10},"op":false,"rs":true}],"op":false,"ab":false,"n":"addOptions"},{"k":"Property","c":"@discordjs/builders!StringSelectMenuBuilder#options:member","d":"/**\n * The options within this select menu.\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/builders!StringSelectMenuBuilder#options"},{"k":"Content","t":": "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":15,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!StringSelectMenuBuilder#setOptions:member(1)","d":"/**\n * Sets the options for this select menu.\n *\n * @param options - The options to set\n */\n","ex":[{"k":"Reference","t":"setOptions","c":"@discordjs/builders!StringSelectMenuBuilder#setOptions"},{"k":"Content","t":"(..."},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":77,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":10},"op":false,"rs":true}],"op":false,"ab":false,"n":"setOptions"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuBuilder#spliceOptions:member(1)","d":"/**\n * Removes, replaces, or inserts options for this select menu.\n *\n * @remarks\n *\n * This method behaves similarly to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice | Array.prototype.splice()}. It's useful for modifying and adjusting the order of existing options.\n *\n * @param index - The index to start at\n *\n * @param deleteCount - The number of options to remove\n *\n * @param options - The replacing option objects or builders\n *\n * @example\n *\n * Remove the first option:\n * ```ts\n * selectMenu.spliceOptions(0, 1);\n * ```\n *\n * @example\n *\n * Remove the first n option:\n * ```ts\n * const n = 4;\n * selectMenu.spliceOptions(0, n);\n * ```\n *\n * @example\n *\n * Remove the last option:\n * ```ts\n * selectMenu.spliceOptions(-1, 1);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"spliceOptions","c":"@discordjs/builders!StringSelectMenuBuilder#spliceOptions"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/builders!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"deleteCount","c":"@discordjs/builders!~deleteCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", ..."},{"k":"Reference","t":"options","c":"@discordjs/builders!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":108,"co":9,"sta":false,"rtr":{"st":19,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"deleteCount","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":18},"op":false,"rs":true}],"op":false,"ab":false,"n":"spliceOptions"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!StringSelectMenuBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":";"}],"l":135,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for string select menu options.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":" implements "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/StringSelectMenuOption.ts","l":13,"co":1,"r":"Public","ab":false,"n":"StringSelectMenuOptionBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!StringSelectMenuOptionBuilder:constructor(1)","d":"/**\n * Creates a new string select menu option from API data.\n *\n * @param data - The API data to create this string select menu option with\n *\n * @example\n *\n * Creating a string select menu option from an API data object:\n * ```ts\n * const selectMenuOption = new SelectMenuOptionBuilder({\n * \tlabel: 'catchy label',\n * \tvalue: '1',\n * });\n * ```\n *\n * @example\n *\n * Creating a string select menu option using setters and API data:\n * ```ts\n * const selectMenuOption = new SelectMenuOptionBuilder({\n * \tdefault: true,\n * \tvalue: '1',\n * })\n * \t.setLabel('woah');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":36,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Property","c":"@discordjs/builders!StringSelectMenuOptionBuilder#data:member","d":"","ex":[{"k":"Reference","t":"data","c":"@discordjs/builders!StringSelectMenuOptionBuilder#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":36,"co":28,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":2,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setDefault:member(1)","d":"/**\n * Sets whether this option is selected by default.\n *\n * @param isDefault - Whether this option is selected by default\n */\n","ex":[{"k":"Reference","t":"setDefault","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setDefault"},{"k":"Content","t":"("},{"k":"Reference","t":"isDefault","c":"@discordjs/builders!~isDefault"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"isDefault","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefault"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setDescription:member(1)","d":"/**\n * Sets the description for this option.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setEmoji:member(1)","d":"/**\n * Sets the emoji to display for this option.\n *\n * @param emoji - The emoji to use\n */\n","ex":[{"k":"Reference","t":"setEmoji","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"@discordjs/builders!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponentEmoji","c":"discord-api-types!APIMessageComponentEmoji:interface"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":83,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setEmoji"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setLabel:member(1)","d":"/**\n * Sets the label for this option.\n *\n * @param label - The label to use\n */\n","ex":[{"k":"Reference","t":"setLabel","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setLabel"},{"k":"Content","t":"("},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":43,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"label","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setLabel"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setValue:member(1)","d":"/**\n * Sets the value for this option.\n *\n * @param value - The value to use\n */\n","ex":[{"k":"Reference","t":"setValue","c":"@discordjs/builders!StringSelectMenuOptionBuilder#setValue"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"value","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setValue"},{"k":"Method","c":"@discordjs/builders!StringSelectMenuOptionBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!StringSelectMenuOptionBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":";"}],"l":91,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Class","c":"@discordjs/builders!TextDisplayBuilder:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"TextDisplayBuilder","c":"@discordjs/builders!TextDisplayBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextDisplayComponent","c":"discord-api-types!APITextDisplayComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/TextDisplay.ts","l":6,"co":1,"r":"Public","ab":false,"n":"TextDisplayBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!TextDisplayBuilder:constructor(1)","d":"/**\n * Creates a new text display from API data.\n *\n * @param data - The API data to create this text display with\n *\n * @example\n *\n * Creating a text display from an API data object:\n * ```ts\n * const textDisplay = new TextDisplayBuilder({\n * \tcontent: 'some text',\n * });\n * ```\n *\n * @example\n *\n * Creating a text display using setters and API data:\n * ```ts\n * const textDisplay = new TextDisplayBuilder({\n * \tcontent: 'old text',\n * })\n * \t.setContent('new text');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextDisplayComponent","c":"discord-api-types!APITextDisplayComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":27,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!TextDisplayBuilder#setContent:member(1)","d":"/**\n * Sets the text of this text display.\n *\n * @param content - The text to use\n */\n","ex":[{"k":"Reference","t":"setContent","c":"@discordjs/builders!TextDisplayBuilder#setContent"},{"k":"Content","t":"("},{"k":"Reference","t":"content","c":"@discordjs/builders!~content"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":39,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setContent"},{"k":"Method","c":"@discordjs/builders!TextDisplayBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!TextDisplayBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APITextDisplayComponent","c":"discord-api-types!APITextDisplayComponent:interface"},{"k":"Content","t":";"}],"l":47,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Namespace","c":"@discordjs/builders!TextInputAssertions:namespace","d":"","ex":[],"pat":"src/index.ts","l":12,"co":8,"r":"None","n":"TextInputAssertions","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.labelValidator:var","d":"","ex":[{"k":"Reference","t":"labelValidator","c":"@discordjs/builders!TextInputAssertions.labelValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":22,"co":14,"ro":true,"r":"Public","n":"labelValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.maxLengthValidator:var","d":"","ex":[{"k":"Reference","t":"maxLengthValidator","c":"@discordjs/builders!TextInputAssertions.maxLengthValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":13,"co":14,"ro":true,"r":"Public","n":"maxLengthValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.minLengthValidator:var","d":"","ex":[{"k":"Reference","t":"minLengthValidator","c":"@discordjs/builders!TextInputAssertions.minLengthValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NumberValidator","c":"@sapphire/shapeshift!NumberValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":7,"co":14,"ro":true,"r":"Public","n":"minLengthValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.placeholderValidator:var","d":"","ex":[{"k":"Reference","t":"placeholderValidator","c":"@discordjs/builders!TextInputAssertions.placeholderValidator_2"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":21,"co":14,"ro":true,"r":"Public","n":"placeholderValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.requiredValidator:var","d":"","ex":[{"k":"Reference","t":"requiredValidator","c":"@discordjs/builders!TextInputAssertions.requiredValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"BooleanValidator","c":"@sapphire/shapeshift!BooleanValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":19,"co":14,"ro":true,"r":"Public","n":"requiredValidator","vtr":{"st":2,"en":7}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.textInputPredicate:var","d":"","ex":[{"k":"Reference","t":"textInputPredicate","c":"@discordjs/builders!TextInputAssertions.textInputPredicate"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"ObjectValidator","c":"@sapphire/shapeshift!ObjectValidator:class"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"style","c":"@discordjs/builders!~__type#style"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"min_length","c":"@discordjs/builders!~__type#min_length"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"max_length","c":"@discordjs/builders!~__type#max_length"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"required","c":"@discordjs/builders!~__type#required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}, import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"UndefinedToOptional","c":"@sapphire/shapeshift!UndefinedToOptional:type"},{"k":"Content","t":"<{  "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"custom_id","c":"@discordjs/builders!~__type#custom_id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"style","c":"@discordjs/builders!~__type#style"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":";  "},{"k":"Reference","t":"id","c":"@discordjs/builders!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"min_length","c":"@discordjs/builders!~__type#min_length"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"max_length","c":"@discordjs/builders!~__type#max_length"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~__type#placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"value","c":"@discordjs/builders!~__type#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";  "},{"k":"Reference","t":"required","c":"@discordjs/builders!~__type#required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";}>>"}],"pat":"src/components/textInput/Assertions.ts","l":28,"co":14,"ro":true,"r":"Public","n":"textInputPredicate","vtr":{"st":2,"en":103}},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.textInputStyleValidator:var","d":"","ex":[{"k":"Reference","t":"textInputStyleValidator","c":"@discordjs/builders!TextInputAssertions.textInputStyleValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"NativeEnumValidator","c":"@sapphire/shapeshift!NativeEnumValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":6,"co":14,"ro":true,"r":"Public","n":"textInputStyleValidator","vtr":{"st":2,"en":9}},{"k":"Function","c":"@discordjs/builders!TextInputAssertions.validateRequiredParameters:function(1)","d":"","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"validateRequiredParameters","c":"@discordjs/builders!TextInputAssertions.validateRequiredParameters"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"style","c":"@discordjs/builders!~style"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"src/components/textInput/Assertions.ts","l":42,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":1,"ps":[{"pn":"customId","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"style","ptr":{"st":9,"en":10},"op":true,"rs":false}],"n":"validateRequiredParameters"},{"k":"Variable","c":"@discordjs/builders!TextInputAssertions.valueValidator:var","d":"","ex":[{"k":"Reference","t":"valueValidator","c":"@discordjs/builders!TextInputAssertions.valueValidator"},{"k":"Content","t":": "},{"k":"Content","t":"import(\"@sapphire/shapeshift\")."},{"k":"Reference","t":"StringValidator","c":"@sapphire/shapeshift!StringValidator:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"}],"pat":"src/components/textInput/Assertions.ts","l":20,"co":14,"ro":true,"r":"Public","n":"valueValidator","vtr":{"st":2,"en":7}}]},{"k":"Class","c":"@discordjs/builders!TextInputBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for text inputs.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"TextInputBuilder","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" implements "},{"k":"Reference","t":"Equatable","c":"@discordjs/util!Equatable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":">>"},{"k":"Content","t":" "}],"pat":"src/components/textInput/TextInput.ts","l":20,"co":1,"r":"Public","ab":false,"n":"TextInputBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!TextInputBuilder:constructor(1)","d":"/**\n * Creates a new text input from API data.\n *\n * @param data - The API data to create this text input with\n *\n * @example\n *\n * Creating a text input from an API data object:\n * ```ts\n * const textInput = new TextInputBuilder({\n * \tcustom_id: 'a cool text input',\n * \tplaceholder: 'Type something',\n * \tstyle: TextInputStyle.Short,\n * });\n * ```\n *\n * @example\n *\n * Creating a text input using setters and API data:\n * ```ts\n * const textInput = new TextInputBuilder({\n * \tplaceholder: 'Type something else',\n * })\n * \t.setCustomId('woah')\n * \t.setStyle(TextInputStyle.Paragraph);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":" & {    "},{"k":"Reference","t":"type","c":"@discordjs/builders!~__type#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":";  }"},{"k":"Content","t":");"}],"l":47,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#equals:member(1)","d":"/**\n * Whether this is equal to another structure.\n */\n","ex":[{"k":"Reference","t":"equals","c":"@discordjs/builders!TextInputBuilder#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"@discordjs/builders!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":146,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":4,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setCustomId:member(1)","d":"/**\n * Sets the custom id for this text input.\n *\n * @param customId - The custom id to use\n */\n","ex":[{"k":"Reference","t":"setCustomId","c":"@discordjs/builders!TextInputBuilder#setCustomId"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"@discordjs/builders!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":56,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setCustomId"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setLabel:member(1)","d":"/**\n * Sets the label for this text input.\n *\n * @deprecated\n *\n * Use a label builder to create a label (and optionally a description) instead.\n *\n * @param label - The label to use\n */\n","ex":[{"k":"Reference","t":"setLabel","c":"@discordjs/builders!TextInputBuilder#setLabel"},{"k":"Content","t":"("},{"k":"Reference","t":"label","c":"@discordjs/builders!~label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":67,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"label","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setLabel"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setMaxLength:member(1)","d":"/**\n * Sets the maximum length of text for this text input.\n *\n * @param maxLength - The maximum length of text for this text input\n */\n","ex":[{"k":"Reference","t":"setMaxLength","c":"@discordjs/builders!TextInputBuilder#setMaxLength"},{"k":"Content","t":"("},{"k":"Reference","t":"maxLength","c":"@discordjs/builders!~maxLength"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":97,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"maxLength","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMaxLength"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setMinLength:member(1)","d":"/**\n * Sets the minimum length of text for this text input.\n *\n * @param minLength - The minimum length of text for this text input\n */\n","ex":[{"k":"Reference","t":"setMinLength","c":"@discordjs/builders!TextInputBuilder#setMinLength"},{"k":"Content","t":"("},{"k":"Reference","t":"minLength","c":"@discordjs/builders!~minLength"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":87,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"minLength","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setMinLength"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setPlaceholder:member(1)","d":"/**\n * Sets the placeholder for this text input.\n *\n * @param placeholder - The placeholder to use\n */\n","ex":[{"k":"Reference","t":"setPlaceholder","c":"@discordjs/builders!TextInputBuilder#setPlaceholder"},{"k":"Content","t":"("},{"k":"Reference","t":"placeholder","c":"@discordjs/builders!~placeholder"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":107,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"placeholder","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setPlaceholder"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setRequired:member(1)","d":"/**\n * Sets whether this text input is required.\n *\n * @param required - Whether this text input is required\n */\n","ex":[{"k":"Reference","t":"setRequired","c":"@discordjs/builders!TextInputBuilder#setRequired"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"@discordjs/builders!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":127,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"required","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRequired"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setStyle:member(1)","d":"/**\n * Sets the style for this text input.\n *\n * @param style - The style to use\n */\n","ex":[{"k":"Reference","t":"setStyle","c":"@discordjs/builders!TextInputBuilder#setStyle"},{"k":"Content","t":"("},{"k":"Reference","t":"style","c":"@discordjs/builders!~style"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":77,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"style","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setStyle"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#setValue:member(1)","d":"/**\n * Sets the value for this text input.\n *\n * @param value - The value to use\n */\n","ex":[{"k":"Reference","t":"setValue","c":"@discordjs/builders!TextInputBuilder#setValue"},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/builders!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":117,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"value","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setValue"},{"k":"Method","c":"@discordjs/builders!TextInputBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!TextInputBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":";"}],"l":135,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[{"st":8,"en":16,"tps":[{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/builders!ThumbnailBuilder:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"ThumbnailBuilder","c":"@discordjs/builders!ThumbnailBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThumbnailComponent","c":"discord-api-types!APIThumbnailComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/v2/Thumbnail.ts","l":6,"co":1,"r":"Public","ab":false,"n":"ThumbnailBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!ThumbnailBuilder:constructor(1)","d":"/**\n * Creates a new thumbnail from API data.\n *\n * @param data - The API data to create this thumbnail with\n *\n * @example\n *\n * Creating a thumbnail from an API data object:\n * ```ts\n * const thumbnail = new ThumbnailBuilder({\n * \tdescription: 'some text',\n *  media: {\n *      url: 'https://cdn.discordapp.com/embed/avatars/4.png',\n *  },\n * });\n * ```\n *\n * @example\n *\n * Creating a thumbnail using setters and API data:\n * ```ts\n * const thumbnail = new ThumbnailBuilder({\n * \tmedia: {\n *      url: 'attachment://image.png',\n *  },\n * })\n * \t.setDescription('alt text');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIThumbnailComponent","c":"discord-api-types!APIThumbnailComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":32,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!ThumbnailBuilder#clearDescription:member(1)","d":"/**\n * Clears the description of this thumbnail.\n */\n","ex":[{"k":"Reference","t":"clearDescription","c":"@discordjs/builders!ThumbnailBuilder#clearDescription"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearDescription"},{"k":"Method","c":"@discordjs/builders!ThumbnailBuilder#setDescription:member(1)","d":"/**\n * Sets the description of this thumbnail.\n *\n * @param description - The description to use\n */\n","ex":[{"k":"Reference","t":"setDescription","c":"@discordjs/builders!ThumbnailBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"@discordjs/builders!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":45,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"@discordjs/builders!ThumbnailBuilder#setSpoiler:member(1)","d":"/**\n * Sets the spoiler status of this thumbnail.\n *\n * @param spoiler - The spoiler status to use\n */\n","ex":[{"k":"Reference","t":"setSpoiler","c":"@discordjs/builders!ThumbnailBuilder#setSpoiler"},{"k":"Content","t":"("},{"k":"Reference","t":"spoiler","c":"@discordjs/builders!~spoiler"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spoiler","ptr":{"st":4,"en":5},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSpoiler"},{"k":"Method","c":"@discordjs/builders!ThumbnailBuilder#setURL:member(1)","d":"/**\n * Sets the media URL of this thumbnail.\n *\n * @param url - The URL to use\n */\n","ex":[{"k":"Reference","t":"setURL","c":"@discordjs/builders!ThumbnailBuilder#setURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/builders!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setURL"},{"k":"Method","c":"@discordjs/builders!ThumbnailBuilder#toJSON:member(1)","d":"/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ThumbnailBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIThumbnailComponent","c":"discord-api-types!APIThumbnailComponent:interface"},{"k":"Content","t":";"}],"l":81,"co":18,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface","d":"/**\n * An interface that ensures the `toJSON()` call will return something that can be serialized into API-compatible data.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ToAPIApplicationCommandOptions","c":"@discordjs/builders!ToAPIApplicationCommandOptions:interface"},{"k":"Content","t":" "}],"pat":"src/interactions/slashCommands/SlashCommandBuilder.ts","l":108,"co":1,"r":"Public","n":"ToAPIApplicationCommandOptions","pmo":false,"ms":[{"k":"MethodSignature","c":"@discordjs/builders!ToAPIApplicationCommandOptions#toJSON:member(1)","d":"","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/builders!ToAPIApplicationCommandOptions#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIApplicationCommandOption","c":"discord-api-types!APIApplicationCommandOption:type"},{"k":"Content","t":";"}],"l":109,"co":2,"op":false,"rtr":{"st":2,"en":3},"r":"Public","oi":1,"ps":[],"n":"toJSON"}],"etrs":[]},{"k":"Class","c":"@discordjs/builders!UserSelectMenuBuilder:class","d":"/**\n * A builder that creates API-compatible JSON data for user select menus.\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuBuilder","c":"@discordjs/builders!BaseSelectMenuBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/components/selectMenu/UserSelectMenu.ts","l":14,"co":1,"r":"Public","ab":false,"n":"UserSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/builders!UserSelectMenuBuilder:constructor(1)","d":"/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new UserSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new UserSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"data","c":"@discordjs/builders!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":37,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/builders!UserSelectMenuBuilder#addDefaultUsers:member(1)","d":"/**\n * Adds default users to this auto populated select menu.\n *\n * @param users - The users to add\n */\n","ex":[{"k":"Reference","t":"addDefaultUsers","c":"@discordjs/builders!UserSelectMenuBuilder#addDefaultUsers"},{"k":"Content","t":"(..."},{"k":"Reference","t":"users","c":"@discordjs/builders!~users"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":46,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"users","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"addDefaultUsers"},{"k":"Method","c":"@discordjs/builders!UserSelectMenuBuilder#setDefaultUsers:member(1)","d":"/**\n * Sets default users for this auto populated select menu.\n *\n * @param users - The users to set\n */\n","ex":[{"k":"Reference","t":"setDefaultUsers","c":"@discordjs/builders!UserSelectMenuBuilder#setDefaultUsers"},{"k":"Content","t":"(..."},{"k":"Reference","t":"users","c":"@discordjs/builders!~users"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":66,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"users","ptr":{"st":4,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"setDefaultUsers"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Variable","c":"@discordjs/builders!version:var","d":"/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/builders#readme | @discordjs/builders} version that you are currently using.\n */\n","ex":[{"k":"Reference","t":"version","c":"@discordjs/builders!version"},{"k":"Content","t":": "},{"k":"Reference","t":"string"}],"pat":"src/index.ts","l":85,"co":14,"ro":true,"r":"Public","n":"version","vtr":{"st":2,"en":3}}]}]}