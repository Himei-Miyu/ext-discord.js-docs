{
  "metadata": {
    "toolPackage": "@discordjs/api-extractor",
    "toolVersion": "7.38.1",
    "schemaVersion": 1012,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/discordjs/discord.js/tree/main/packages/builders",
  "kind": "Package",
  "canonicalReference": "@discordjs/builders!",
  "docComment": "",
  "name": "@discordjs/builders",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@discordjs/builders!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ActionRowBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for action rows.\n *\n * @typeParam T - The types of components this action row holds\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ActionRowBuilder",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "AnyComponentBuilder",
              "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ComponentBuilder",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIActionRowComponent",
              "canonicalReference": "discord-api-types!APIActionRowComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIMessageActionRowComponent",
              "canonicalReference": "discord-api-types!APIMessageActionRowComponent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "APIModalActionRowComponent",
              "canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 59,
          "fileColumn": 1,
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "ActionRowBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new action row from API data.\n *\n * @param data - The API data to create this action row with\n *\n * @example\n *\n * Creating an action row from an API data object:\n * ```ts\n * const actionRow = new ActionRowBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcustom_id: \"custom id\",\n * \t\t\tlabel: \"Type something\",\n * \t\t\tstyle: TextInputStyle.Short,\n * \t\t\ttype: ComponentType.TextInput,\n * \t\t},\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating an action row using setters and API data:\n * ```ts\n * const actionRow = new ActionRowBuilder({\n * \tcomponents: [\n * \t\t{\n * \t\t\tcustom_id: \"custom id\",\n * \t\t\tlabel: \"Click me\",\n * \t\t\tstyle: ButtonStyle.Primary,\n * \t\t\ttype: ComponentType.Button,\n * \t\t},\n * \t],\n * })\n * \t.addComponents(button2, button3);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ "
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ", ..."
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": " }?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIActionRowComponent",
                  "canonicalReference": "discord-api-types!APIActionRowComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIActionRowComponentTypes",
                  "canonicalReference": "discord-api-types!APIActionRowComponentTypes:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 101,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ components, ...data }",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 11
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder#addComponents:member(1)",
              "docComment": "/**\n * Adds components to this action row.\n *\n * @param components - The components to add\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addComponents",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder#addComponents"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 111,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "components",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addComponents"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder#components:member",
              "docComment": "/**\n * The components within this action row.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder#components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 65,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "components",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder#setComponents:member(1)",
              "docComment": "/**\n * Sets components for this action row.\n *\n * @param components - The components to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setComponents",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder#setComponents"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 121,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "components",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setComponents"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIActionRowComponent",
                  "canonicalReference": "discord-api-types!APIActionRowComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ReturnType",
                  "canonicalReference": "!ReturnType:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "['toJSON']>>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 129,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 7,
            "endIndex": 16,
            "typeParameters": [
              {
                "startIndex": 9,
                "endIndex": 15
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!AnyAPIActionRowComponent:type",
          "docComment": "/**\n * Any action row component data represented as an object.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "AnyAPIActionRowComponent",
              "canonicalReference": "@discordjs/builders!AnyAPIActionRowComponent:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "APIActionRowComponent",
              "canonicalReference": "discord-api-types!APIActionRowComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIActionRowComponentTypes",
              "canonicalReference": "discord-api-types!APIActionRowComponentTypes:type"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "APIActionRowComponentTypes",
              "canonicalReference": "discord-api-types!APIActionRowComponentTypes:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/Component.ts",
          "fileLine": 12,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "AnyAPIActionRowComponent",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type",
          "docComment": "/**\n * Any builder.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "AnyComponentBuilder",
              "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "MessageActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ModalActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 52,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "AnyComponentBuilder",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class",
          "docComment": "/**\n * This mixin holds minimum and maximum symbols used for options.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandNumericOptionMinMaxValueMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/ApplicationCommandNumericOptionMinMaxValueMixin.ts",
          "fileLine": 4,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "ApplicationCommandNumericOptionMinMaxValueMixin",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#max_value:member",
              "docComment": "/**\n * The maximum value of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "max_value",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#max_value"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 8,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max_value",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#min_value:member",
              "docComment": "/**\n * The minimum value of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "min_value",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#min_value"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 13,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "min_value",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMaxValue:member(1)",
              "docComment": "/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract "
                },
                {
                  "kind": "Reference",
                  "text": "setMaxValue",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMaxValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "max",
                  "canonicalReference": "@discordjs/builders!~max"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 20,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "setMaxValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMinValue:member(1)",
              "docComment": "/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract "
                },
                {
                  "kind": "Reference",
                  "text": "setMinValue",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin#setMinValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "min",
                  "canonicalReference": "@discordjs/builders!~min"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": true,
              "name": "setMinValue"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type",
          "docComment": "/**\n * The type of allowed channel types used for a channel option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionAllowedChannelTypes",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "typeof"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Reference",
              "text": "allowedChannelTypes",
              "canonicalReference": "@discordjs/builders!~allowedChannelTypes:var"
            },
            {
              "kind": "Content",
              "text": ")["
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.ts",
          "fileLine": 39,
          "fileColumn": 2,
          "releaseTag": "Public",
          "name": "ApplicationCommandOptionAllowedChannelTypes",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class",
          "docComment": "/**\n * The base application command option builder that contains common symbols for application command builders.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/ApplicationCommandOptionBase.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": true,
          "name": "ApplicationCommandOptionBase",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#required:member",
              "docComment": "/**\n * Whether this option is required.\n *\n * @defaultValue\n *\n * `false`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "required",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#required"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 19,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "required",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#runRequiredValidations:member(1)",
              "docComment": "/**\n * This method runs required validators on this builder.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "runRequiredValidations",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#runRequiredValidations"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 47,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "runRequiredValidations"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#setRequired:member(1)",
              "docComment": "/**\n * Sets whether this option is required.\n *\n * @param required - Whether this option should be required\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setRequired",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#setRequired"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "required",
                  "canonicalReference": "@discordjs/builders!~required"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "required",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRequired"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract "
                },
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandBasicOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandBasicOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 42,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 12,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": true
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class",
          "docComment": "/**\n * This mixin holds channel type symbols used for options.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionChannelTypesMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/ApplicationCommandOptionChannelTypesMixin.ts",
          "fileLine": 45,
          "fileColumn": 5,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ApplicationCommandOptionChannelTypesMixin",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#addChannelTypes:member(1)",
              "docComment": "/**\n * Adds channel types to this option.\n *\n * @param channelTypes - The channel types\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addChannelTypes",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#addChannelTypes"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "channelTypes",
                  "canonicalReference": "@discordjs/builders!~channelTypes"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionAllowedChannelTypes",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 53,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "channelTypes",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addChannelTypes"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#channel_types:member",
              "docComment": "/**\n * The channel types of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "channel_types",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin#channel_types"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionAllowedChannelTypes",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 53,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "channel_types",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin:class",
          "docComment": "/**\n * This mixin holds choices and autocomplete symbols used for options.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionWithChoicesAndAutocompleteMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/ApplicationCommandOptionWithChoicesAndAutocompleteMixin.ts",
          "fileLine": 17,
          "fileColumn": 1,
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": false,
          "name": "ApplicationCommandOptionWithChoicesAndAutocompleteMixin",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#addChoices:member(1)",
              "docComment": "/**\n * Adds multiple choices to this option.\n *\n * @param choices - The choices to add\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addChoices",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#addChoices"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "choices",
                  "canonicalReference": "@discordjs/builders!~choices"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandOptionChoice",
                  "canonicalReference": "discord-api-types!APIApplicationCommandOptionChoice:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "choices",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addChoices"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#autocomplete:member",
              "docComment": "/**\n * Whether this option utilizes autocomplete.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "autocomplete",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#autocomplete"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "autocomplete",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#choices:member",
              "docComment": "/**\n * The choices of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "choices",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#choices"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandOptionChoice",
                  "canonicalReference": "discord-api-types!APIApplicationCommandOptionChoice:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "choices",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#setAutocomplete:member(1)",
              "docComment": "/**\n * Whether this option uses autocomplete.\n *\n * @param autocomplete - Whether this option should use autocomplete\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setAutocomplete",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#setAutocomplete"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "autocomplete",
                  "canonicalReference": "@discordjs/builders!~autocomplete"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 90,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "autocomplete",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAutocomplete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#setChoices:member(1)",
              "docComment": "/**\n * Sets multiple choices for this option.\n *\n * @param choices - The choices to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setChoices",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#setChoices"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Input"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandOptionChoice",
                  "canonicalReference": "discord-api-types!APIApplicationCommandOptionChoice:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ">(..."
                },
                {
                  "kind": "Reference",
                  "text": "choices",
                  "canonicalReference": "@discordjs/builders!~choices"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Input"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 72,
              "fileColumn": 9,
              "typeParameters": [
                {
                  "typeParameterName": "Input",
                  "constraintTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "choices",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setChoices"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 33,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class",
          "docComment": "/**\n * The base select menu builder that contains common symbols for select menu builders.\n *\n * @typeParam SelectMenuType - The type of select menu this would be instantiated for.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SelectMenuType"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "APISelectMenuComponent",
              "canonicalReference": "discord-api-types!APISelectMenuComponent:type"
            },
            {
              "kind": "Content",
              "text": "> extends "
            },
            {
              "kind": "Reference",
              "text": "ComponentBuilder",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SelectMenuType"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/BaseSelectMenu.ts",
          "fileLine": 10,
          "fileColumn": 1,
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "SelectMenuType",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "isAbstract": true,
          "name": "BaseSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setCustomId:member(1)",
              "docComment": "/**\n * Sets the custom id for this select menu.\n *\n * @param customId - The custom id to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setCustomId",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setCustomId"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCustomId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setDisabled:member(1)",
              "docComment": "/**\n * Sets whether this select menu is disabled.\n *\n * @param disabled - Whether this select menu is disabled\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDisabled",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setDisabled"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "disabled",
                  "canonicalReference": "@discordjs/builders!~disabled"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 58,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "disabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDisabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setMaxValues:member(1)",
              "docComment": "/**\n * Sets the maximum values that must be selected in the select menu.\n *\n * @param maxValues - The maximum values that must be selected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMaxValues",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setMaxValues"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "maxValues",
                  "canonicalReference": "@discordjs/builders!~maxValues"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 38,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maxValues",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMaxValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setMinValues:member(1)",
              "docComment": "/**\n * Sets the minimum values that must be selected in the select menu.\n *\n * @param minValues - The minimum values that must be selected\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMinValues",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setMinValues"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "minValues",
                  "canonicalReference": "@discordjs/builders!~minValues"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "minValues",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMinValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setPlaceholder:member(1)",
              "docComment": "/**\n * Sets the placeholder for this select menu.\n *\n * @param placeholder - The placeholder to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setPlaceholder",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#setPlaceholder"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "placeholder",
                  "canonicalReference": "@discordjs/builders!~placeholder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 18,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "placeholder",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPlaceholder"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "SelectMenuType"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 66,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 7,
            "endIndex": 11,
            "typeParameters": [
              {
                "startIndex": 9,
                "endIndex": 10
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ButtonBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for buttons.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ButtonBuilder",
              "canonicalReference": "@discordjs/builders!ButtonBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ComponentBuilder",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIButtonComponent",
              "canonicalReference": "discord-api-types!APIButtonComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/button/Button.ts",
          "fileLine": 23,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ButtonBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!ButtonBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new button from API data.\n *\n * @param data - The API data to create this button with\n *\n * @example\n *\n * Creating a button from an API data object:\n * ```ts\n * const button = new ButtonBuilder({\n * \tcustom_id: 'a cool button',\n * \tstyle: ButtonStyle.Primary,\n * \tlabel: 'Click Me',\n * \temoji: {\n * \t\tname: 'smile',\n * \t\tid: '123456789012345678',\n * \t},\n * });\n * ```\n *\n * @example\n *\n * Creating a button using setters and API data:\n * ```ts\n * const button = new ButtonBuilder({\n * \tstyle: ButtonStyle.Secondary,\n * \tlabel: 'Click Me',\n * })\n * \t.setEmoji({ name: '🙂' })\n * \t.setCustomId('another cool button');\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIButtonComponent",
                  "canonicalReference": "discord-api-types!APIButtonComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setCustomId:member(1)",
              "docComment": "/**\n * Sets the custom id for this button.\n *\n * @remarks\n *\n * This method is only applicable to buttons that are not using the `Link` button style.\n *\n * @param customId - The custom id to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setCustomId",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setCustomId"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 86,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCustomId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setDisabled:member(1)",
              "docComment": "/**\n * Sets whether this button is disabled.\n *\n * @param disabled - Whether to disable this button\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDisabled",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setDisabled"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "disabled",
                  "canonicalReference": "@discordjs/builders!~disabled"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 106,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "disabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDisabled"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setEmoji:member(1)",
              "docComment": "/**\n * Sets the emoji to display on this button.\n *\n * @param emoji - The emoji to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setEmoji",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setEmoji"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/builders!~emoji"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIMessageComponentEmoji",
                  "canonicalReference": "discord-api-types!APIMessageComponentEmoji:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 96,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "emoji",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEmoji"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setLabel:member(1)",
              "docComment": "/**\n * Sets the label for this button.\n *\n * @param label - The label to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setLabel",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setLabel"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 116,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLabel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setStyle:member(1)",
              "docComment": "/**\n * Sets the style of this button.\n *\n * @param style - The style to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setStyle",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setStyle"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "style",
                  "canonicalReference": "@discordjs/builders!~style"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ButtonStyle",
                  "canonicalReference": "discord-api-types!ButtonStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 61,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setStyle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#setURL:member(1)",
              "docComment": "/**\n * Sets the URL for this button.\n *\n * @remarks\n *\n * This method is only available to buttons using the `Link` button style. Only three types of URL schemes are currently supported: `https://`, `http://`, and `discord://`.\n *\n * @param url - The URL to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setURL",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#setURL"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 74,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setURL"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ButtonBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIButtonComponent",
                  "canonicalReference": "discord-api-types!APIButtonComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 124,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for channel select menus.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ChannelSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIChannelSelectComponent",
              "canonicalReference": "discord-api-types!APIChannelSelectComponent:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/ChannelSelectMenu.ts",
          "fileLine": 10,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ChannelSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new ChannelSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new ChannelSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.addChannelTypes(ChannelType.GuildText, ChannelType.GuildAnnouncement)\n * \t.setMinValues(2);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIChannelSelectComponent",
                  "canonicalReference": "discord-api-types!APIChannelSelectComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 34,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#addChannelTypes:member(1)",
              "docComment": "/**\n * Adds channel types to this select menu.\n *\n * @param types - The channel types to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addChannelTypes",
                  "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#addChannelTypes"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "types",
                  "canonicalReference": "@discordjs/builders!~types"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ChannelType",
                  "canonicalReference": "discord-api-types!ChannelType:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 43,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "types",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addChannelTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#setChannelTypes:member(1)",
              "docComment": "/**\n * Sets channel types for this select menu.\n *\n * @param types - The channel types to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setChannelTypes",
                  "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#setChannelTypes"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "types",
                  "canonicalReference": "@discordjs/builders!~types"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ChannelType",
                  "canonicalReference": "discord-api-types!ChannelType:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 55,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "types",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setChannelTypes"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIChannelSelectComponent",
                  "canonicalReference": "discord-api-types!APIChannelSelectComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 65,
              "fileColumn": 18,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!ComponentAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 7,
          "fileColumn": 8,
          "releaseTag": "None",
          "name": "ComponentAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.buttonLabelValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonLabelValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.buttonLabelValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 21,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "buttonLabelValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.buttonStyleValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buttonStyleValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.buttonStyleValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NativeEnumValidator",
                  "canonicalReference": "@sapphire/shapeshift!NativeEnumValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "typeof"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Reference",
                  "text": "ButtonStyle",
                  "canonicalReference": "discord-api-types!ButtonStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 26,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "buttonStyleValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.channelTypesValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "channelTypesValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.channelTypesValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ArrayValidator",
                  "canonicalReference": "@sapphire/shapeshift!ArrayValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ChannelType",
                  "canonicalReference": "discord-api-types!ChannelType:enum"
                },
                {
                  "kind": "Content",
                  "text": "[], "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelType",
                  "canonicalReference": "discord-api-types!ChannelType:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 71,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "channelTypesValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.customIdValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "customIdValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.customIdValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 6,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "customIdValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.defaultValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.defaultValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "BooleanValidator",
                  "canonicalReference": "@sapphire/shapeshift!BooleanValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 64,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "defaultValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.disabledValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "disabledValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.disabledValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "BooleanValidator",
                  "canonicalReference": "@sapphire/shapeshift!BooleanValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 19,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "disabledValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.emojiValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "emojiValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.emojiValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ObjectValidator",
                  "canonicalReference": "@sapphire/shapeshift!ObjectValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/builders!~__type#id"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "animated",
                  "canonicalReference": "@discordjs/builders!~__type#animated"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}, import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/builders!~__type#id"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "animated",
                  "canonicalReference": "@discordjs/builders!~__type#animated"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 11,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "emojiValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 43
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.jsonOptionValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "jsonOptionValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.jsonOptionValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ObjectValidator",
                  "canonicalReference": "@sapphire/shapeshift!ObjectValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~__type#label"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~__type#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/builders!~__type#emoji"
                },
                {
                  "kind": "Content",
                  "text": ": import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{     "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";     "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/builders!~__type#id"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";     "
                },
                {
                  "kind": "Reference",
                  "text": "animated",
                  "canonicalReference": "@discordjs/builders!~__type#animated"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   }> | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "default",
                  "canonicalReference": "@discordjs/builders!~__type#default"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}, import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~__type#label"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~__type#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/builders!~__type#emoji"
                },
                {
                  "kind": "Content",
                  "text": ": import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{     "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";     "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/builders!~__type#id"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";     "
                },
                {
                  "kind": "Reference",
                  "text": "animated",
                  "canonicalReference": "@discordjs/builders!~__type#animated"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   }> | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "default",
                  "canonicalReference": "@discordjs/builders!~__type#default"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 39,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "jsonOptionValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 95
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.labelValueDescriptionValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "labelValueDescriptionValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.labelValueDescriptionValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 34,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "labelValueDescriptionValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.minMaxValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "minMaxValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.minMaxValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 29,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "minMaxValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.optionsLengthValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "optionsLengthValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.optionsLengthValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 54,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "optionsLengthValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.optionsValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "optionsValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.optionsValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ArrayValidator",
                  "canonicalReference": "@sapphire/shapeshift!ArrayValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "[], "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 51,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "optionsValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.optionValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "optionValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.optionValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "InstanceValidator",
                  "canonicalReference": "@sapphire/shapeshift!InstanceValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 49,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "optionValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.placeholderValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "placeholderValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.placeholderValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 28,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "placeholderValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.urlValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "urlValidator",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.urlValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 73,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "urlValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredButtonParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredButtonParameters",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredButtonParameters"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "style",
                  "canonicalReference": "@discordjs/builders!~style"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ButtonStyle",
                  "canonicalReference": "discord-api-types!ButtonStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/builders!~emoji"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIMessageComponentEmoji",
                  "canonicalReference": "discord-api-types!APIMessageComponentEmoji:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~url"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 79,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 23,
                "endIndex": 24
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "emoji",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 21,
                    "endIndex": 22
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateRequiredButtonParameters"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuOptionParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredSelectMenuOptionParameters",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuOptionParameters"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 66,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateRequiredSelectMenuOptionParameters"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredSelectMenuParameters",
                  "canonicalReference": "@discordjs/builders!ComponentAssertions.validateRequiredSelectMenuParameters"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/components/Assertions.ts",
              "fileLine": 59,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 10,
                    "endIndex": 11
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateRequiredSelectMenuParameters"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ComponentBuilder:class",
          "docComment": "/**\n * The base component builder that contains common symbols for all sorts of components.\n *\n * @typeParam DataType - The type of internal API data that is stored within the component\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare abstract class "
            },
            {
              "kind": "Reference",
              "text": "ComponentBuilder",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "DataType"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Partial",
              "canonicalReference": "!Partial:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIBaseComponent",
              "canonicalReference": "discord-api-types!APIBaseComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "discord-api-types!ComponentType:enum"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "APIBaseComponent",
              "canonicalReference": "discord-api-types!APIBaseComponent:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ComponentType",
              "canonicalReference": "discord-api-types!ComponentType:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "> implements "
            },
            {
              "kind": "Reference",
              "text": "JSONEncodable",
              "canonicalReference": "@discordjs/util!JSONEncodable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "AnyAPIActionRowComponent",
              "canonicalReference": "@discordjs/builders!AnyAPIActionRowComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/Component.ts",
          "fileLine": 19,
          "fileColumn": 1,
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "DataType",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 11
              },
              "defaultTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              }
            }
          ],
          "isAbstract": true,
          "name": "ComponentBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:constructor(1)",
              "docComment": "/**\n * Constructs a new kind of component.\n *\n * @param data - The data to construct a component out of\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DataType"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 42,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ComponentBuilder#data:member",
              "docComment": "/**\n * The API data associated with this component.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!ComponentBuilder#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "DataType"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ComponentBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "abstract "
                },
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ComponentBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "AnyAPIActionRowComponent",
                  "canonicalReference": "@discordjs/builders!AnyAPIActionRowComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": true,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 17,
              "endIndex": 21,
              "typeParameters": [
                {
                  "startIndex": 19,
                  "endIndex": 20
                }
              ]
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 63,
          "fileColumn": 1,
          "releaseTag": "None",
          "name": "ContextMenuCommandAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDefaultMemberPermissions:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDefaultMemberPermissions",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDefaultMemberPermissions_2"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "permissions",
                  "canonicalReference": "@discordjs/builders!~permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 49,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "permissions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDefaultMemberPermissions"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDefaultPermission:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDefaultPermission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDefaultPermission_2"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 17,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDefaultPermission"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDMPermission:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDMPermission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateDMPermission_2"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 39,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDMPermission"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateName:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateName",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateName_2"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 21,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateName"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateRequiredParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredParameters",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateRequiredParameters_4"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!~type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 29,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateRequiredParameters"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateType:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateType",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandAssertions.validateType"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!~type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/contextMenuCommands/Assertions.ts",
              "fileLine": 25,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateType"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for context menu commands.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ContextMenuCommandBuilder",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/contextMenuCommands/ContextMenuCommandBuilder.ts",
          "fileLine": 26,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ContextMenuCommandBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#default_member_permissions:member",
              "docComment": "/**\n * The set of permissions represented as a bit set for the command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "default_member_permissions",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#default_member_permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Permissions",
                  "canonicalReference": "discord-api-types!Permissions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "default_member_permissions",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#default_permission:member",
              "docComment": "/**\n * Whether this command is enabled by default when the application is added to a guild.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "default_permission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#default_permission"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 47,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "default_permission",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#dm_permission:member",
              "docComment": "/**\n * Indicates whether the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This property is only for global commands.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "dm_permission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#dm_permission"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 60,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dm_permission",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#name_localizations:member",
              "docComment": "/**\n * The name localizations of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name_localizations",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#name_localizations"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name_localizations",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#name:member",
              "docComment": "/**\n * The name of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 30,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDefaultMemberPermissions:member(1)",
              "docComment": "/**\n * Sets the default permissions a member should have in order to run this command.\n *\n * @remarks\n *\n * You can set this to `'0'` to disable the command by default.\n *\n * @param permissions - The permissions bit field to set\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDefaultMemberPermissions",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDefaultMemberPermissions"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "permissions",
                  "canonicalReference": "@discordjs/builders!~permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Permissions",
                  "canonicalReference": "discord-api-types!Permissions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 116,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "permissions",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 13
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultMemberPermissions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDefaultPermission:member(1)",
              "docComment": "/**\n * Sets whether the command is enabled by default when the application is added to a guild.\n *\n * @remarks\n *\n * If set to `false`, you will have to later `PUT` the permissions for this command.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n *\n * @param value - Whether to enable this command by default\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDefaultPermission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDefaultPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 99,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultPermission"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDMPermission:member(1)",
              "docComment": "/**\n * Sets if the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This method is only for global commands.\n *\n * @param enabled - Whether the command should be enabled in direct messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDMPermission",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setDMPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "enabled",
                  "canonicalReference": "@discordjs/builders!~enabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 133,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDMPermission"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setName:member(1)",
              "docComment": "/**\n * Sets the name of this command.\n *\n * @param name - The name to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setName",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setName"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 67,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setNameLocalization:member(1)",
              "docComment": "/**\n * Sets a name localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedName - The localized name for the given `locale`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setNameLocalization",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setNameLocalization"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "locale",
                  "canonicalReference": "@discordjs/builders!~locale"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleString",
                  "canonicalReference": "discord-api-types!LocaleString:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "localizedName",
                  "canonicalReference": "@discordjs/builders!~localizedName"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 148,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "locale",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "localizedName",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNameLocalization"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setNameLocalizations:member(1)",
              "docComment": "/**\n * Sets the name localizations for this command.\n *\n * @param localizedNames - The object of localized names to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setNameLocalizations",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setNameLocalizations"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "localizedNames",
                  "canonicalReference": "@discordjs/builders!~localizedNames"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 171,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "localizedNames",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNameLocalizations"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setType:member(1)",
              "docComment": "/**\n * Sets the type of this command.\n *\n * @param type - The type to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setType",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#setType"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!~type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ContextMenuCommandType",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandType:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 81,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "type",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setType"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "RESTPostAPIContextMenuApplicationCommandsJSONBody",
                  "canonicalReference": "discord-api-types!RESTPostAPIContextMenuApplicationCommandsJSONBody:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 191,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#type:member",
              "docComment": "/**\n * The type of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandBuilder#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ContextMenuCommandType",
                  "canonicalReference": "@discordjs/builders!ContextMenuCommandType:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!ContextMenuCommandType:type",
          "docComment": "/**\n * The type a context menu command can be.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ContextMenuCommandType",
              "canonicalReference": "@discordjs/builders!ContextMenuCommandType:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandType.Message",
              "canonicalReference": "discord-api-types!ApplicationCommandType.Message:member"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandType.User",
              "canonicalReference": "discord-api-types!ApplicationCommandType.User:member"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/interactions/contextMenuCommands/ContextMenuCommandBuilder.ts",
          "fileLine": 21,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ContextMenuCommandType",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!createComponentBuilder:function(1)",
          "docComment": "/**\n * Factory for creating components from API data.\n *\n * @param data - The API data to transform to a component class\n *\n * @typeParam T - The type of component to use\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "createComponentBuilder",
              "canonicalReference": "@discordjs/builders!createComponentBuilder"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Content",
              "text": "keyof "
            },
            {
              "kind": "Reference",
              "text": "MappedComponentTypes",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes:interface"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/builders!~data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "APIModalComponent",
              "canonicalReference": "discord-api-types!APIModalComponent:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "APIMessageComponent",
              "canonicalReference": "discord-api-types!APIMessageComponent:type"
            },
            {
              "kind": "Content",
              "text": ") & {   "
            },
            {
              "kind": "Reference",
              "text": "type",
              "canonicalReference": "@discordjs/builders!~__type#type"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ";\n}"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "MappedComponentTypes",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes:interface"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/Components.ts",
          "fileLine": 61,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 20,
            "endIndex": 24
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 19
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createComponentBuilder"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!createComponentBuilder:function(2)",
          "docComment": "/**\n * Factory for creating components from API data.\n *\n * @param data - The API data to transform to a component class\n *\n * @typeParam C - The type of component to use\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "createComponentBuilder",
              "canonicalReference": "@discordjs/builders!createComponentBuilder"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "MessageComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ModalComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/builders!~data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "C"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/Components.ts",
          "fileLine": 72,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 13,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 2,
          "parameters": [
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "C",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 8
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "createComponentBuilder"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!disableValidators:function(1)",
          "docComment": "/**\n * Disables validators.\n *\n * @returns Whether validation is occurring.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "disableValidators",
              "canonicalReference": "@discordjs/builders!disableValidators"
            },
            {
              "kind": "Content",
              "text": "(): "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/validation.ts",
          "fileLine": 17,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "disableValidators"
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!EmbedAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 1,
          "fileColumn": 8,
          "releaseTag": "None",
          "name": "EmbedAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.authorNamePredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "authorNamePredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.authorNamePredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 33,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "authorNamePredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.colorPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "colorPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.colorPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | [   "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",   "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ",   "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "\n] | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 59,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "colorPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 15
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.descriptionPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "descriptionPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.descriptionPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 77,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "descriptionPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.embedAuthorPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "embedAuthorPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.embedAuthorPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ObjectValidator",
                  "canonicalReference": "@sapphire/shapeshift!ObjectValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "iconURL",
                  "canonicalReference": "@discordjs/builders!~__type#iconURL"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~__type#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}, import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "iconURL",
                  "canonicalReference": "@discordjs/builders!~__type#iconURL"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~__type#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 47,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "embedAuthorPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 51
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFieldPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "embedFieldPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFieldPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ObjectValidator",
                  "canonicalReference": "@sapphire/shapeshift!ObjectValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "inline",
                  "canonicalReference": "@discordjs/builders!~__type#inline"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}, import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "inline",
                  "canonicalReference": "@discordjs/builders!~__type#inline"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 17,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "embedFieldPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 35
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFieldsArrayPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "embedFieldsArrayPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFieldsArrayPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ArrayValidator",
                  "canonicalReference": "@sapphire/shapeshift!ArrayValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "inline",
                  "canonicalReference": "@discordjs/builders!~__type#inline"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>[], import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~__type#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~__type#value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "inline",
                  "canonicalReference": "@discordjs/builders!~__type#inline"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 25,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "embedFieldsArrayPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 37
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFooterPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "embedFooterPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.embedFooterPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ObjectValidator",
                  "canonicalReference": "@sapphire/shapeshift!ObjectValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "text",
                  "canonicalReference": "@discordjs/builders!~__type#text"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "iconURL",
                  "canonicalReference": "@discordjs/builders!~__type#iconURL"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}, import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<{   "
                },
                {
                  "kind": "Reference",
                  "text": "text",
                  "canonicalReference": "@discordjs/builders!~__type#text"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";   "
                },
                {
                  "kind": "Reference",
                  "text": "iconURL",
                  "canonicalReference": "@discordjs/builders!~__type#iconURL"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";\n}>>"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 75,
              "fileColumn": 34,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "embedFooterPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 35
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldInlinePredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fieldInlinePredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldInlinePredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 15,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "fieldInlinePredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldLengthPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fieldLengthPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldLengthPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 27,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "fieldLengthPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldNamePredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fieldNamePredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldNamePredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 5,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "fieldNamePredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldValuePredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fieldValuePredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.fieldValuePredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 10,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "fieldValuePredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.footerTextPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "footerTextPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.footerTextPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 78,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "footerTextPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.imageURLPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "imageURLPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.imageURLPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 35,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "imageURLPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.RGBPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "RGBPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.RGBPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 55,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "RGBPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.timestampPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "timestampPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.timestampPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 84,
              "fileColumn": 101,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "timestampPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.titlePredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "titlePredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.titlePredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 84,
              "fileColumn": 101,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "titlePredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.urlPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "urlPredicate",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.urlPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 41,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "urlPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!EmbedAssertions.validateFieldLength:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateFieldLength",
                  "canonicalReference": "@discordjs/builders!EmbedAssertions.validateFieldLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "amountAdding",
                  "canonicalReference": "@discordjs/builders!~amountAdding"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "fields",
                  "canonicalReference": "@discordjs/builders!~fields"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbedField",
                  "canonicalReference": "discord-api-types!APIEmbedField:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/messages/embed/Assertions.ts",
              "fileLine": 29,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amountAdding",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateFieldLength"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!EmbedAuthorData:type",
          "docComment": "/**\n * Represents the author data of an embed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "EmbedAuthorData",
              "canonicalReference": "@discordjs/builders!EmbedAuthorData:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "IconData",
              "canonicalReference": "@discordjs/builders!IconData:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIEmbedAuthor",
              "canonicalReference": "discord-api-types!APIEmbedAuthor:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "APIEmbedAuthor",
              "canonicalReference": "discord-api-types!APIEmbedAuthor:interface"
            },
            {
              "kind": "Content",
              "text": ", 'icon_url' | 'proxy_icon_url'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 45,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "EmbedAuthorData",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!EmbedAuthorOptions:type",
          "docComment": "/**\n * Represents the author options of an embed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "EmbedAuthorOptions",
              "canonicalReference": "@discordjs/builders!EmbedAuthorOptions:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EmbedAuthorData",
              "canonicalReference": "@discordjs/builders!EmbedAuthorData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "EmbedAuthorData",
              "canonicalReference": "@discordjs/builders!EmbedAuthorData:type"
            },
            {
              "kind": "Content",
              "text": ", 'proxyIconURL'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 50,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "EmbedAuthorOptions",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!EmbedBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for embeds.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "EmbedBuilder",
              "canonicalReference": "@discordjs/builders!EmbedBuilder:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 73,
          "fileColumn": 5,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "EmbedBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!EmbedBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new embed from API data.\n *\n * @param data - The API data to create this embed with\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbed",
                  "canonicalReference": "discord-api-types!APIEmbed:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 89,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#addFields:member(1)",
              "docComment": "/**\n * Appends fields to the embed.\n *\n * @remarks\n *\n * This method accepts either an array of fields or a variable number of field parameters. The maximum amount of fields that can be added is 25.\n *\n * @param fields - The fields to add\n *\n * @example\n *\n * Using an array:\n * ```ts\n * const fields: APIEmbedField[] = ...;\n * const embed = new EmbedBuilder()\n * \t.addFields(fields);\n * ```\n *\n * @example\n *\n * Using rest parameters (variadic):\n * ```ts\n * const embed = new EmbedBuilder()\n * \t.addFields(\n * \t\t{ name: 'Field 1', value: 'Value 1' },\n * \t\t{ name: 'Field 2', value: 'Value 2' },\n * \t);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addFields",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#addFields"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "fields",
                  "canonicalReference": "@discordjs/builders!~fields"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbedField",
                  "canonicalReference": "discord-api-types!APIEmbedField:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 126,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addFields"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#data:member",
              "docComment": "/**\n * The API data associated with this embed.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbed",
                  "canonicalReference": "discord-api-types!APIEmbed:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 79,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setAuthor:member(1)",
              "docComment": "/**\n * Sets the author of this embed.\n *\n * @param options - The options to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setAuthor",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setAuthor"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "EmbedAuthorOptions",
                  "canonicalReference": "@discordjs/builders!EmbedAuthorOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 200,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAuthor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setColor:member(1)",
              "docComment": "/**\n * Sets the color of this embed.\n *\n * @param color - The color to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setColor",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setColor"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "color",
                  "canonicalReference": "@discordjs/builders!~color"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RGBTuple",
                  "canonicalReference": "@discordjs/builders!RGBTuple:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 219,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "color",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setColor"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setDescription:member(1)",
              "docComment": "/**\n * Sets the description of this embed.\n *\n * @param description - The description to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDescription",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setDescription"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 232,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDescription"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setFields:member(1)",
              "docComment": "/**\n * Sets the fields for this embed.\n *\n * @remarks\n *\n * This method is an alias for {@link EmbedBuilder.spliceFields}. More specifically, it splices the entire array of fields, replacing them with the provided fields.\n *\n * You can set a maximum of 25 fields.\n *\n * @param fields - The fields to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setFields",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setFields"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "fields",
                  "canonicalReference": "@discordjs/builders!~fields"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbedField",
                  "canonicalReference": "discord-api-types!APIEmbedField:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 181,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setFields"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setFooter:member(1)",
              "docComment": "/**\n * Sets the footer of this embed.\n *\n * @param options - The footer to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setFooter",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setFooter"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "EmbedFooterOptions",
                  "canonicalReference": "@discordjs/builders!EmbedFooterOptions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 250,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setFooter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setImage:member(1)",
              "docComment": "/**\n * Sets the image of this embed.\n *\n * @param url - The image URL to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setImage",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setImage"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 263,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setImage"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setThumbnail:member(1)",
              "docComment": "/**\n * Sets the thumbnail of this embed.\n *\n * @param url - The thumbnail URL to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setThumbnail",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setThumbnail"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 276,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setThumbnail"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setTimestamp:member(1)",
              "docComment": "/**\n * Sets the timestamp of this embed.\n *\n * @param timestamp - The timestamp or date to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setTimestamp",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setTimestamp"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "timestamp",
                  "canonicalReference": "@discordjs/builders!~timestamp"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Date",
                  "canonicalReference": "!Date:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 289,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "timestamp",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTimestamp"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setTitle:member(1)",
              "docComment": "/**\n * Sets the title for this embed.\n *\n * @param title - The title to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setTitle",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setTitle"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "title",
                  "canonicalReference": "@discordjs/builders!~title"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 302,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "title",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTitle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#setURL:member(1)",
              "docComment": "/**\n * Sets the URL of this embed.\n *\n * @param url - The URL to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setURL",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#setURL"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/builders!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 315,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setURL"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#spliceFields:member(1)",
              "docComment": "/**\n * Removes, replaces, or inserts fields for this embed.\n *\n * @remarks\n *\n * This method behaves similarly to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/splice | Array.prototype.splice()}. The maximum amount of fields that can be added is 25.\n *\n * It's useful for modifying and adjusting order of the already-existing fields of an embed.\n *\n * @param index - The index to start at\n *\n * @param deleteCount - The number of fields to remove\n *\n * @param fields - The replacing field objects\n *\n * @example\n *\n * Remove the first field:\n * ```ts\n * embed.spliceFields(0, 1);\n * ```\n *\n * @example\n *\n * Remove the first n fields:\n * ```ts\n * const n = 4;\n * embed.spliceFields(0, n);\n * ```\n *\n * @example\n *\n * Remove the last field:\n * ```ts\n * embed.spliceFields(-1, 1);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "spliceFields",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#spliceFields"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "index",
                  "canonicalReference": "@discordjs/builders!~index"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "deleteCount",
                  "canonicalReference": "@discordjs/builders!~deleteCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", ..."
                },
                {
                  "kind": "Reference",
                  "text": "fields",
                  "canonicalReference": "@discordjs/builders!~fields"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbedField",
                  "canonicalReference": "discord-api-types!APIEmbedField:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 166,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "deleteCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "fields",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 14
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spliceFields"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!EmbedBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!EmbedBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIEmbed",
                  "canonicalReference": "discord-api-types!APIEmbed:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 322,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!EmbedFooterData:type",
          "docComment": "/**\n * Represents the footer data of an embed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "EmbedFooterData",
              "canonicalReference": "@discordjs/builders!EmbedFooterData:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "IconData",
              "canonicalReference": "@discordjs/builders!IconData:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIEmbedFooter",
              "canonicalReference": "discord-api-types!APIEmbedFooter:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "APIEmbedFooter",
              "canonicalReference": "discord-api-types!APIEmbedFooter:interface"
            },
            {
              "kind": "Content",
              "text": ", 'icon_url' | 'proxy_icon_url'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 55,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "EmbedFooterData",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 13
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!EmbedFooterOptions:type",
          "docComment": "/**\n * Represents the footer options of an embed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "EmbedFooterOptions",
              "canonicalReference": "@discordjs/builders!EmbedFooterOptions:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "EmbedFooterData",
              "canonicalReference": "@discordjs/builders!EmbedFooterData:type"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "EmbedFooterData",
              "canonicalReference": "@discordjs/builders!EmbedFooterData:type"
            },
            {
              "kind": "Content",
              "text": ", 'proxyIconURL'>>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 60,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "EmbedFooterOptions",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 11
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!EmbedImageData:interface",
          "docComment": "/**\n * Represents the image data of an embed.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "EmbedImageData",
              "canonicalReference": "@discordjs/builders!EmbedImageData:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIEmbedImage",
              "canonicalReference": "discord-api-types!APIEmbedImage:interface"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "APIEmbedImage",
              "canonicalReference": "discord-api-types!APIEmbedImage:interface"
            },
            {
              "kind": "Content",
              "text": ", 'proxy_url'>"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 63,
          "fileColumn": 5,
          "releaseTag": "Public",
          "name": "EmbedImageData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!EmbedImageData#proxyURL:member",
              "docComment": "/**\n * The proxy URL for the image.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "proxyURL",
                  "canonicalReference": "@discordjs/builders!EmbedImageData#proxyURL"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 69,
              "fileColumn": 4,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyURL",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 12,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                },
                {
                  "startIndex": 7,
                  "endIndex": 11
                }
              ]
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!embedLength:function(1)",
          "docComment": "/**\n * Calculates the length of the embed.\n *\n * @param data - The embed data to check\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "embedLength",
              "canonicalReference": "@discordjs/builders!embedLength"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/builders!~data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "APIEmbed",
              "canonicalReference": "discord-api-types!APIEmbed:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/componentUtil.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "data",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "embedLength"
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!enableValidators:function(1)",
          "docComment": "/**\n * Enables validators.\n *\n * @returns Whether validation is occurring.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "enableValidators",
              "canonicalReference": "@discordjs/builders!enableValidators"
            },
            {
              "kind": "Content",
              "text": "(): "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/validation.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "enableValidators"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!IconData:interface",
          "docComment": "/**\n * The base icon data typically used in payloads.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IconData",
              "canonicalReference": "@discordjs/builders!IconData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 29,
          "fileColumn": 5,
          "releaseTag": "Public",
          "name": "IconData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!IconData#iconURL:member",
              "docComment": "/**\n * The URL of the icon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "iconURL",
                  "canonicalReference": "@discordjs/builders!IconData#iconURL"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 34,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "iconURL",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!IconData#proxyIconURL:member",
              "docComment": "/**\n * The proxy URL of the icon.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "proxyIconURL",
                  "canonicalReference": "@discordjs/builders!IconData#proxyIconURL"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 39,
              "fileColumn": 4,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "proxyIconURL",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!isValidationEnabled:function(1)",
          "docComment": "/**\n * Checks whether validation is occurring.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "isValidationEnabled",
              "canonicalReference": "@discordjs/builders!isValidationEnabled"
            },
            {
              "kind": "Content",
              "text": "(): "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/validation.ts",
          "fileLine": 24,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "isValidationEnabled"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!MappedComponentTypes:interface",
          "docComment": "/**\n * Components here are mapped to their respective builder.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "MappedComponentTypes",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/Components.ts",
          "fileLine": 20,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "MappedComponentTypes",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"1\":member",
              "docComment": "/**\n * The action row component type is associated with an {@link ActionRowBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.ActionRow",
                  "canonicalReference": "discord-api-types!ComponentType.ActionRow:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "AnyComponentBuilder",
                  "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"1\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"2\":member",
              "docComment": "/**\n * The button component type is associated with an {@link ButtonBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.Button",
                  "canonicalReference": "discord-api-types!ComponentType.Button:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "ButtonBuilder",
                  "canonicalReference": "@discordjs/builders!ButtonBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"2\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"3\":member",
              "docComment": "/**\n * The string select component type is associated with an {@link StringSelectMenuBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.StringSelect",
                  "canonicalReference": "discord-api-types!ComponentType.StringSelect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 32,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"3\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"4\":member",
              "docComment": "/**\n * The text inpiut component type is associated with an {@link TextInputBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.TextInput",
                  "canonicalReference": "discord-api-types!ComponentType.TextInput:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "TextInputBuilder",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 36,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"4\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"5\":member",
              "docComment": "/**\n * The user select component type is associated with an {@link UserSelectMenuBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.UserSelect",
                  "canonicalReference": "discord-api-types!ComponentType.UserSelect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "UserSelectMenuBuilder",
                  "canonicalReference": "@discordjs/builders!UserSelectMenuBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"5\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"6\":member",
              "docComment": "/**\n * The role select component type is associated with an {@link RoleSelectMenuBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.RoleSelect",
                  "canonicalReference": "discord-api-types!ComponentType.RoleSelect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "RoleSelectMenuBuilder",
                  "canonicalReference": "@discordjs/builders!RoleSelectMenuBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 44,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"6\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"7\":member",
              "docComment": "/**\n * The mentionable select component type is associated with an {@link MentionableSelectMenuBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.MentionableSelect",
                  "canonicalReference": "discord-api-types!ComponentType.MentionableSelect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "MentionableSelectMenuBuilder",
                  "canonicalReference": "@discordjs/builders!MentionableSelectMenuBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"7\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/builders!MappedComponentTypes#\"8\":member",
              "docComment": "/**\n * The channel select component type is associated with an {@link ChannelSelectMenuBuilder}.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.ChannelSelect",
                  "canonicalReference": "discord-api-types!ComponentType.ChannelSelect:member"
                },
                {
                  "kind": "Content",
                  "text": "]: "
                },
                {
                  "kind": "Reference",
                  "text": "ChannelSelectMenuBuilder",
                  "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"8\"",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!MentionableSelectMenuBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for mentionable select menus.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "MentionableSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!MentionableSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIMentionableSelectComponent",
              "canonicalReference": "discord-api-types!APIMentionableSelectComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/MentionableSelectMenu.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "MentionableSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!MentionableSelectMenuBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new MentionableSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new MentionableSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIMentionableSelectComponent",
                  "canonicalReference": "discord-api-types!APIMentionableSelectComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 31,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!MessageActionRowComponentBuilder:type",
          "docComment": "/**\n * The builders that may be used within an action row for messages.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "MessageActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ButtonBuilder",
              "canonicalReference": "@discordjs/builders!ButtonBuilder:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "ChannelSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!ChannelSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "MentionableSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!MentionableSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "RoleSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!RoleSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "StringSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "UserSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!UserSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 36,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "MessageActionRowComponentBuilder",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 14
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!MessageComponentBuilder:type",
          "docComment": "/**\n * The builders that may be used for messages.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "MessageComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ActionRowBuilder",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "MessageActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "MessageActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!MessageActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 24,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "MessageComponentBuilder",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type",
          "docComment": "/**\n * The builders that may be used within an action row for modals.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ModalActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "TextInputBuilder",
              "canonicalReference": "@discordjs/builders!TextInputBuilder:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 47,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ModalActionRowComponentBuilder",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          }
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!ModalAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 18,
          "fileColumn": 8,
          "releaseTag": "None",
          "name": "ModalAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ModalAssertions.componentsValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "componentsValidator",
                  "canonicalReference": "@discordjs/builders!ModalAssertions.componentsValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "ArrayValidator",
                  "canonicalReference": "@sapphire/shapeshift!ArrayValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<[   "
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../../components/ActionRow.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "AnyComponentBuilder",
                  "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">,   ..."
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../../components/ActionRow.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "AnyComponentBuilder",
                  "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]\n], "
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"../../components/ActionRow.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "AnyComponentBuilder",
                  "canonicalReference": "@discordjs/builders!AnyComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                }
              ],
              "fileUrlPath": "src/interactions/modals/Assertions.ts",
              "fileLine": 10,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "componentsValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 17
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!ModalAssertions.titleValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "titleValidator",
                  "canonicalReference": "@discordjs/builders!ModalAssertions.titleValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/interactions/modals/Assertions.ts",
              "fileLine": 6,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "titleValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!ModalAssertions.validateRequiredParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredParameters",
                  "canonicalReference": "@discordjs/builders!ModalAssertions.validateRequiredParameters_2"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "title",
                  "canonicalReference": "@discordjs/builders!~title"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModalActionRowComponentBuilder",
                  "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/modals/Assertions.ts",
              "fileLine": 23,
              "fileColumn": 2,
              "returnTypeTokenRange": {
                "startIndex": 18,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "title",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "components",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 17
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateRequiredParameters"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!ModalBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for modals.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "ModalBuilder",
              "canonicalReference": "@discordjs/builders!ModalBuilder:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "JSONEncodable",
              "canonicalReference": "@discordjs/util!JSONEncodable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIModalInteractionResponseCallbackData",
              "canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/modals/Modal.ts",
          "fileLine": 18,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "ModalBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!ModalBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new modal from API data.\n *\n * @param data - The API data to create this modal with\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ "
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ", ..."
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": " }?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIModalInteractionResponseCallbackData",
                  "canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 34,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ components, ...data }",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ModalBuilder#addComponents:member(1)",
              "docComment": "/**\n * Adds components to this modal.\n *\n * @param components - The components to add\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addComponents",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#addComponents"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModalActionRowComponentBuilder",
                  "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "APIActionRowComponent",
                  "canonicalReference": "discord-api-types!APIActionRowComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIModalActionRowComponent",
                  "canonicalReference": "discord-api-types!APIModalActionRowComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 65,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "components",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 14
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addComponents"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ModalBuilder#components:member",
              "docComment": "/**\n * The components within this modal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModalActionRowComponentBuilder",
                  "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "components",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!ModalBuilder#data:member",
              "docComment": "/**\n * The API data associated with this modal.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIModalInteractionResponseCallbackData",
                  "canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 22,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ModalBuilder#setComponents:member(1)",
              "docComment": "/**\n * Sets components for this modal.\n *\n * @param components - The components to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setComponents",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#setComponents"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "components",
                  "canonicalReference": "@discordjs/builders!~components"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ActionRowBuilder",
                  "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ModalActionRowComponentBuilder",
                  "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 85,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "components",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setComponents"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ModalBuilder#setCustomId:member(1)",
              "docComment": "/**\n * Sets the custom id of this modal.\n *\n * @param customId - The custom id to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setCustomId",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#setCustomId"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 55,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCustomId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ModalBuilder#setTitle:member(1)",
              "docComment": "/**\n * Sets the title of this modal.\n *\n * @param title - The title to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setTitle",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#setTitle"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "title",
                  "canonicalReference": "@discordjs/builders!~title"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 45,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "title",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setTitle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!ModalBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ModalBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIModalInteractionResponseCallbackData",
                  "canonicalReference": "discord-api-types!APIModalInteractionResponseCallbackData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 93,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                }
              ]
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!ModalComponentBuilder:type",
          "docComment": "/**\n * The builders that may be used for modals.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ModalComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "ActionRowBuilder",
              "canonicalReference": "@discordjs/builders!ActionRowBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ModalActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "ModalActionRowComponentBuilder",
              "canonicalReference": "@discordjs/builders!ModalActionRowComponentBuilder:type"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/components/ActionRow.ts",
          "fileLine": 31,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ModalComponentBuilder",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 8
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/builders!normalizeArray:function(1)",
          "docComment": "/**\n * Normalizes data that is a rest parameter or an array into an array with a depth of 1.\n *\n * @param arr - The (possibly variadic) data to normalize\n *\n * @typeParam T - The data that must satisfy {@link RestOrArray}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "normalizeArray",
              "canonicalReference": "@discordjs/builders!normalizeArray"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "arr",
              "canonicalReference": "@discordjs/builders!~arr"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "RestOrArray",
              "canonicalReference": "@discordjs/builders!RestOrArray:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "[]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/normalizeArray.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 12,
            "endIndex": 14
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "arr",
              "parameterTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "normalizeArray"
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!RestOrArray:type",
          "docComment": "/**\n * Represents data that may be an array or came from a rest parameter.\n *\n * @remarks\n *\n * This type is used throughout builders to ensure both an array and variadic arguments may be used. It is normalized with {@link normalizeArray}.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RestOrArray",
              "canonicalReference": "@discordjs/builders!RestOrArray:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "> = "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "[] | [   "
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": "[]\n]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/util/normalizeArray.ts",
          "fileLine": 19,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RestOrArray",
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 5,
            "endIndex": 9
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/builders!RGBTuple:type",
          "docComment": "/**\n * A tuple satisfying the RGB color model.\n *\n * @see\n *\n * {@link https://developer.mozilla.org/docs/Glossary/RGB}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RGBTuple",
              "canonicalReference": "@discordjs/builders!RGBTuple:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "[   /*red*/ "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ",   /*green*/ "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ",   /*blue*/ "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "\n]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/messages/embed/Embed.ts",
          "fileLine": 21,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RGBTuple",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!RoleSelectMenuBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for role select menus.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "RoleSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!RoleSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIRoleSelectComponent",
              "canonicalReference": "discord-api-types!APIRoleSelectComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/RoleSelectMenu.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RoleSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!RoleSelectMenuBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new RoleSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new RoleSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIRoleSelectComponent",
                  "canonicalReference": "discord-api-types!APIRoleSelectComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 31,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class",
          "docComment": "/**\n * This mixin holds name and description symbols for slash commands.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/NameAndDescription.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SharedNameAndDescription",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#description_localizations:member",
              "docComment": "/**\n * The description localizations of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description_localizations",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#description_localizations"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description_localizations",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#description:member",
              "docComment": "/**\n * The description of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#name_localizations:member",
              "docComment": "/**\n * The name localizations of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name_localizations",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#name_localizations"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name_localizations",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#name:member",
              "docComment": "/**\n * The name of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescription:member(1)",
              "docComment": "/**\n * Sets the description of this command.\n *\n * @param description - The description to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDescription",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescription"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 47,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDescription"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescriptionLocalization:member(1)",
              "docComment": "/**\n * Sets a description localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedDescription - The localized description for the given locale\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDescriptionLocalization",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescriptionLocalization"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "locale",
                  "canonicalReference": "@discordjs/builders!~locale"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleString",
                  "canonicalReference": "discord-api-types!LocaleString:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "localizedDescription",
                  "canonicalReference": "@discordjs/builders!~localizedDescription"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 106,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "locale",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "localizedDescription",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDescriptionLocalization"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescriptionLocalizations:member(1)",
              "docComment": "/**\n * Sets the description localizations for this command.\n *\n * @param localizedDescriptions - The object of localized descriptions to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDescriptionLocalizations",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setDescriptionLocalizations"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "localizedDescriptions",
                  "canonicalReference": "@discordjs/builders!~localizedDescriptions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 129,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "localizedDescriptions",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDescriptionLocalizations"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setName:member(1)",
              "docComment": "/**\n * Sets the name of this command.\n *\n * @param name - The name to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setName",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setName"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 33,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setName"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setNameLocalization:member(1)",
              "docComment": "/**\n * Sets a name localization for this command.\n *\n * @param locale - The locale to set\n *\n * @param localizedName - The localized name for the given `locale`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setNameLocalization",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setNameLocalization"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "locale",
                  "canonicalReference": "@discordjs/builders!~locale"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocaleString",
                  "canonicalReference": "discord-api-types!LocaleString:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "localizedName",
                  "canonicalReference": "@discordjs/builders!~localizedName"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 62,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "locale",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "localizedName",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNameLocalization"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setNameLocalizations:member(1)",
              "docComment": "/**\n * Sets the name localizations for this command.\n *\n * @param localizedNames - The object of localized names to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setNameLocalizations",
                  "canonicalReference": "@discordjs/builders!SharedNameAndDescription#setNameLocalizations"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "localizedNames",
                  "canonicalReference": "@discordjs/builders!~localizedNames"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 85,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "localizedNames",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNameLocalizations"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class",
          "docComment": "/**\n * This mixin holds symbols that can be shared in slash command options.\n *\n * @typeParam ShouldOmitSubcommandFunctions - Whether to omit subcommand functions.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SharedSlashCommandOptions",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ShouldOmitSubcommandFunctions"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "true"
            },
            {
              "kind": "Content",
              "text": "> "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/mixins/SharedSlashCommandOptions.ts",
          "fileLine": 19,
          "fileColumn": 1,
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "ShouldOmitSubcommandFunctions",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              }
            }
          ],
          "isAbstract": false,
          "name": "SharedSlashCommandOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addAttachmentOption:member(1)",
              "docComment": "/**\n * Adds an attachment option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addAttachmentOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addAttachmentOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandAttachmentOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandAttachmentOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandAttachmentOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 67,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addAttachmentOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addBooleanOption:member(1)",
              "docComment": "/**\n * Adds a boolean option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addBooleanOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addBooleanOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandBooleanOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandBooleanOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandBooleanOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addBooleanOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addChannelOption:member(1)",
              "docComment": "/**\n * Adds a channel option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addChannelOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addChannelOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandChannelOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandChannelOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandChannelOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 47,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addChannelOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addIntegerOption:member(1)",
              "docComment": "/**\n * Adds an integer option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addIntegerOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addIntegerOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandIntegerOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 109,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 45,
                "endIndex": 51
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 44
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addIntegerOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addMentionableOption:member(1)",
              "docComment": "/**\n * Adds a mentionable option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addMentionableOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addMentionableOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandMentionableOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandMentionableOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandMentionableOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 78,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addMentionableOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addNumberOption:member(1)",
              "docComment": "/**\n * Adds a number option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addNumberOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addNumberOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandNumberOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 129,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 45,
                "endIndex": 51
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 44
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addNumberOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addRoleOption:member(1)",
              "docComment": "/**\n * Adds a role option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addRoleOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addRoleOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandRoleOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandRoleOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandRoleOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandRoleOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandRoleOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandRoleOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 58,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addRoleOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addStringOption:member(1)",
              "docComment": "/**\n * Adds a string option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addStringOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addStringOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'addChoices'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ", 'setAutocomplete'>> | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandStringOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 89,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 45,
                "endIndex": 51
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 44
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addStringOption"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addUserOption:member(1)",
              "docComment": "/**\n * Adds a user option.\n *\n * @param input - A function that returns an option builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addUserOption",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#addUserOption"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandUserOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandUserOption:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "builder",
                  "canonicalReference": "@discordjs/builders!~builder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandUserOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandUserOption:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandUserOption",
                  "canonicalReference": "@discordjs/builders!SlashCommandUserOption:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "ShouldOmitSubcommandFunctions"
                },
                {
                  "kind": "Content",
                  "text": " extends true ? "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<this, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<keyof this, \"addSubcommand\" | \"addSubcommandGroup\">> : this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 38,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 19
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addUserOption"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ToAPIApplicationCommandOptions",
                  "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 20,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!SlashCommandAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 41,
          "fileColumn": 8,
          "releaseTag": "None",
          "name": "SlashCommandAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.assertReturnOfBuilder:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "assertReturnOfBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.assertReturnOfBuilder"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": " extends "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionBase",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandGroupBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "ExpectedInstanceOf",
                  "canonicalReference": "@discordjs/builders!~ExpectedInstanceOf"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "new () => "
                },
                {
                  "kind": "Reference",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 68,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 20,
                "endIndex": 21
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "ExpectedInstanceOf",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 19
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 5,
                    "endIndex": 10
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "name": "assertReturnOfBuilder"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.localizationMapPredicate:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "localizationMapPredicate",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.localizationMapPredicate"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UnionValidator",
                  "canonicalReference": "@sapphire/shapeshift!UnionValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "UndefinedToOptional",
                  "canonicalReference": "@sapphire/shapeshift!UndefinedToOptional:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<\"id\" | \"en-US\" | \"en-GB\" | \"bg\" | \"zh-CN\" | \"zh-TW\" | \"hr\" | \"cs\" | \"da\" | \"nl\" | \"fi\" | \"fr\" | \"de\" | \"el\" | \"hi\" | \"hu\" | \"it\" | \"ja\" | \"ko\" | \"lt\" | \"no\" | \"pl\" | \"pt-BR\" | \"ro\" | \"ru\" | \"es-ES\" | \"sv-SE\" | \"th\" | \"tr\" | \"uk\" | \"vi\", "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">>> | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 74,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "localizationMapPredicate",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 19
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateChoicesLength:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateChoicesLength",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateChoicesLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "amountAdding",
                  "canonicalReference": "@discordjs/builders!~amountAdding"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "choices",
                  "canonicalReference": "@discordjs/builders!~choices"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandOptionChoice",
                  "canonicalReference": "discord-api-types!APIApplicationCommandOptionChoice:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 64,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "amountAdding",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "choices",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 11
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateChoicesLength"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDefaultMemberPermissions:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDefaultMemberPermissions",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDefaultMemberPermissions"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "permissions",
                  "canonicalReference": "@discordjs/builders!~permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 94,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "permissions",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDefaultMemberPermissions"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDefaultPermission:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDefaultPermission",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDefaultPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 54,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDefaultPermission"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDescription:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDescription",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDescription"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 24,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDescription"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDMPermission:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateDMPermission",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateDMPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 84,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateDMPermission"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateLocale:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateLocale",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateLocale"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "locale",
                  "canonicalReference": "@discordjs/builders!~locale"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Locale",
                  "canonicalReference": "discord-api-types!Locale:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 29,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "locale",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateLocale"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateLocalizationMap:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateLocalizationMap",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateLocalizationMap"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 78,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateLocalizationMap"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateMaxOptionsLength:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateMaxOptionsLength",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateMaxOptionsLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 33,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateMaxOptionsLength"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateName:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateName",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateName"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 14,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateName"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateNSFW:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateNSFW",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateNSFW"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 98,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateNSFW"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateRequired:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequired",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateRequired"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "required",
                  "canonicalReference": "@discordjs/builders!~required"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 58,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "required",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateRequired"
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateRequiredParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredParameters",
                  "canonicalReference": "@discordjs/builders!SlashCommandAssertions.validateRequiredParameters_3"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!~name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ToAPIApplicationCommandOptions",
                  "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/interactions/slashCommands/Assertions.ts",
              "fileLine": 37,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "name",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 15
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "validateRequiredParameters"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption:class",
          "docComment": "/**\n * A slash command attachment option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandAttachmentOption",
              "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/attachment.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandAttachmentOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandAttachmentOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandAttachmentOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandAttachmentOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Attachment",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Attachment:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption:class",
          "docComment": "/**\n * A slash command boolean option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBooleanOption",
              "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/boolean.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandBooleanOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandBooleanOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandBooleanOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandBooleanOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Boolean",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Boolean:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for slash commands.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandBuilder.ts",
          "fileLine": 25,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#addSubcommand:member(1)",
              "docComment": "/**\n * Adds a new subcommand to this command.\n *\n * @param input - A function that returns a subcommand builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addSubcommand",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#addSubcommand"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "subcommandGroup",
                  "canonicalReference": "@discordjs/builders!~subcommandGroup"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandsOnlyBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 172,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSubcommand"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#addSubcommandGroup:member(1)",
              "docComment": "/**\n * Adds a new subcommand group to this command.\n *\n * @param input - A function that returns a subcommand group builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addSubcommandGroup",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#addSubcommandGroup"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandGroupBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "subcommandGroup",
                  "canonicalReference": "@discordjs/builders!~subcommandGroup"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandGroupBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandGroupBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandsOnlyBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 146,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSubcommandGroup"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#default_member_permissions:member",
              "docComment": "/**\n * The set of permissions represented as a bit set for the command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "default_member_permissions",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#default_member_permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Permissions",
                  "canonicalReference": "discord-api-types!Permissions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 62,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "default_member_permissions",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#default_permission:member",
              "docComment": "/**\n * Whether this command is enabled by default when the application is added to a guild.\n *\n * @deprecated\n *\n * Use {@link ContextMenuCommandBuilder.setDefaultMemberPermissions} or {@link ContextMenuCommandBuilder.setDMPermission} instead.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "default_permission",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#default_permission"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 57,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "default_permission",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#description_localizations:member",
              "docComment": "/**\n * The description localizations of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description_localizations",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#description_localizations"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 45,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "description_localizations",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#description:member",
              "docComment": "/**\n * The description of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#dm_permission:member",
              "docComment": "/**\n * Indicates whether the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This property is only for global commands.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "dm_permission",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#dm_permission"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 70,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "dm_permission",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#name_localizations:member",
              "docComment": "/**\n * The name localizations of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name_localizations",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#name_localizations"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "LocalizationMap",
                  "canonicalReference": "discord-api-types!LocalizationMap:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "name_localizations",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#name:member",
              "docComment": "/**\n * The name of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 30,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#nsfw:member",
              "docComment": "/**\n * Whether this command is NSFW.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "nsfw",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#nsfw"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 75,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "nsfw",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#options:member",
              "docComment": "/**\n * The options of this command.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ToAPIApplicationCommandOptions",
                  "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 50,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDefaultMemberPermissions:member(1)",
              "docComment": "/**\n * Sets the default permissions a member should have in order to run the command.\n *\n * @remarks\n *\n * You can set this to `'0'` to disable the command by default.\n *\n * @param permissions - The permissions bit field to set\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDefaultMemberPermissions",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDefaultMemberPermissions"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "permissions",
                  "canonicalReference": "@discordjs/builders!~permissions"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Permissions",
                  "canonicalReference": "discord-api-types!Permissions:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "bigint"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 103,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 14,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "permissions",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 13
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultMemberPermissions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDefaultPermission:member(1)",
              "docComment": "/**\n * Sets whether the command is enabled by default when the application is added to a guild.\n *\n * @remarks\n *\n * If set to `false`, you will have to later `PUT` the permissions for this command.\n *\n * @deprecated\n *\n * Use {@link SlashCommandBuilder.setDefaultMemberPermissions} or {@link SlashCommandBuilder.setDMPermission} instead.\n *\n * @param value - Whether or not to enable this command by default\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDefaultPermission",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDefaultPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 86,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefaultPermission"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDMPermission:member(1)",
              "docComment": "/**\n * Sets if the command is available in direct messages with the application.\n *\n * @remarks\n *\n * By default, commands are visible. This method is only for global commands.\n *\n * @param enabled - Whether the command should be enabled in direct messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#permissions}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDMPermission",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setDMPermission"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "enabled",
                  "canonicalReference": "@discordjs/builders!~enabled"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 120,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "enabled",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDMPermission"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setNSFW:member(1)",
              "docComment": "/**\n * Sets whether this command is NSFW.\n *\n * @param nsfw - Whether this command is NSFW\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setNSFW",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#setNSFW"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "nsfw",
                  "canonicalReference": "@discordjs/builders!~nsfw"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 134,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "nsfw",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setNSFW"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "RESTPostAPIChatInputApplicationCommandsJSONBody",
                  "canonicalReference": "discord-api-types!RESTPostAPIChatInputApplicationCommandsJSONBody:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 200,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandBuilder:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SharedSlashCommandOptions",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandBuilder.ts",
          "fileLine": 213,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandBuilder",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            },
            {
              "startIndex": 5,
              "endIndex": 6,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class",
          "docComment": "/**\n * A slash command channel option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandChannelOption",
              "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/channel.ts",
          "fileLine": 9,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandChannelOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandChannelOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandChannelOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandChannelOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandChannelOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 19,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandChannelOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandChannelOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Channel",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Channel:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 14,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandChannelOption",
              "canonicalReference": "@discordjs/builders!SlashCommandChannelOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionChannelTypesMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionChannelTypesMixin:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/channel.ts",
          "fileLine": 26,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandChannelOption",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class",
          "docComment": "/**\n * A slash command integer option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandIntegerOption",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandNumericOptionMinMaxValueMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/integer.ts",
          "fileLine": 13,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandIntegerOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#setMaxValue:member(1)",
              "docComment": "/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMaxValue",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#setMaxValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "max",
                  "canonicalReference": "@discordjs/builders!~max"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMaxValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#setMinValue:member(1)",
              "docComment": "/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMinValue",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#setMinValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "min",
                  "canonicalReference": "@discordjs/builders!~min"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 37,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMinValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandIntegerOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandIntegerOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Integer",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Integer:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandIntegerOption",
              "canonicalReference": "@discordjs/builders!SlashCommandIntegerOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandNumericOptionMinMaxValueMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionWithChoicesAndAutocompleteMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/integer.ts",
          "fileLine": 59,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandIntegerOption",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            },
            {
              "startIndex": 5,
              "endIndex": 9,
              "typeParameters": [
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption:class",
          "docComment": "/**\n * A slash command mentionable option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandMentionableOption",
              "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/mentionable.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandMentionableOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandMentionableOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandMentionableOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandMentionableOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Mentionable",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Mentionable:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class",
          "docComment": "/**\n * A slash command number option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandNumberOption",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandNumericOptionMinMaxValueMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/number.ts",
          "fileLine": 13,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandNumberOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#setMaxValue:member(1)",
              "docComment": "/**\n * Sets the maximum number value of this option.\n *\n * @param max - The maximum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMaxValue",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#setMaxValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "max",
                  "canonicalReference": "@discordjs/builders!~max"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMaxValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#setMinValue:member(1)",
              "docComment": "/**\n * Sets the minimum number value of this option.\n *\n * @param min - The minimum value this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMinValue",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#setMinValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "min",
                  "canonicalReference": "@discordjs/builders!~min"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 37,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMinValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandNumberOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandNumberOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandNumberOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Number",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Number:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandNumberOption",
              "canonicalReference": "@discordjs/builders!SlashCommandNumberOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandNumericOptionMinMaxValueMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandNumericOptionMinMaxValueMixin:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionWithChoicesAndAutocompleteMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/number.ts",
          "fileLine": 59,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandNumberOption",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            },
            {
              "startIndex": 5,
              "endIndex": 9,
              "typeParameters": [
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface",
          "docComment": "/**\n * An interface specifically for slash command options.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandOptionsOnlyBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandOptionsOnlyBuilder:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SharedSlashCommandOptions",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": ", 'toJSON'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandBuilder.ts",
          "fileLine": 224,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandOptionsOnlyBuilder",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            },
            {
              "startIndex": 5,
              "endIndex": 6,
              "typeParameters": []
            },
            {
              "startIndex": 7,
              "endIndex": 11,
              "typeParameters": [
                {
                  "startIndex": 9,
                  "endIndex": 10
                },
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandRoleOption:class",
          "docComment": "/**\n * A slash command role option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandRoleOption",
              "canonicalReference": "@discordjs/builders!SlashCommandRoleOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/role.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandRoleOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandRoleOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandRoleOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandRoleOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandRoleOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandRoleOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandRoleOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.Role",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.Role:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class",
          "docComment": "/**\n * A slash command string option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandStringOption",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/string.ts",
          "fileLine": 13,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandStringOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#max_length:member",
              "docComment": "/**\n * The maximum length of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "max_length",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#max_length"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 23,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "max_length",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#min_length:member",
              "docComment": "/**\n * The minimum length of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "min_length",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#min_length"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "min_length",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#setMaxLength:member(1)",
              "docComment": "/**\n * Sets the maximum length of this string option.\n *\n * @param max - The maximum length this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMaxLength",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#setMaxLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "max",
                  "canonicalReference": "@discordjs/builders!~max"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "max",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMaxLength"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#setMinLength:member(1)",
              "docComment": "/**\n * Sets the minimum length of this string option.\n *\n * @param min - The minimum length this option can be\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMinLength",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#setMinLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "min",
                  "canonicalReference": "@discordjs/builders!~min"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "min",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMinLength"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandStringOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandStringOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 59,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandStringOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.String",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.String:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 18,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandStringOption:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandStringOption",
              "canonicalReference": "@discordjs/builders!SlashCommandStringOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionWithChoicesAndAutocompleteMixin",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionWithChoicesAndAutocompleteMixin:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/string.ts",
          "fileLine": 70,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandStringOption",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for slash command subcommands.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandSubcommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "ToAPIApplicationCommandOptions",
              "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandSubcommands.ts",
          "fileLine": 91,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandSubcommandBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#description:member",
              "docComment": "/**\n * The description of this subcommand.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 101,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#name:member",
              "docComment": "/**\n * The name of this subcommand.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 96,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#options:member",
              "docComment": "/**\n * The options within this subcommand.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionBase",
                  "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 106,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandSubcommandOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandSubcommandOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 115,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandSubcommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "SharedSlashCommandOptions",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class"
            },
            {
              "kind": "Content",
              "text": "<false>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandSubcommands.ts",
          "fileLine": 129,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandSubcommandBuilder",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            },
            {
              "startIndex": 5,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class",
          "docComment": "/**\n * Represents a folder for subcommands.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#subcommands-and-subcommand-groups}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandSubcommandGroupBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "ToAPIApplicationCommandOptions",
              "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandSubcommands.ts",
          "fileLine": 18,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandSubcommandGroupBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#addSubcommand:member(1)",
              "docComment": "/**\n * Adds a new subcommand to this group.\n *\n * @param input - A function that returns a subcommand builder or an already built builder\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addSubcommand",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#addSubcommand"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "input",
                  "canonicalReference": "@discordjs/builders!~input"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": " | (("
                },
                {
                  "kind": "Reference",
                  "text": "subcommandGroup",
                  "canonicalReference": "@discordjs/builders!~subcommandGroup"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ") => "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ")"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "input",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addSubcommand"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#description:member",
              "docComment": "/**\n * The description of this subcommand group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "description",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#name:member",
              "docComment": "/**\n * The name of this subcommand group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 23,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#options:member",
              "docComment": "/**\n * The subcommands within this subcommand group.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SlashCommandSubcommandBuilder",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 33,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandSubcommandGroupOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandSubcommandGroupOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 70,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandSubcommandGroupBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandGroupBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "SharedNameAndDescription",
              "canonicalReference": "@discordjs/builders!SharedNameAndDescription:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandSubcommands.ts",
          "fileLine": 84,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandSubcommandGroupBuilder",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface",
          "docComment": "/**\n * An interface specifically for slash command subcommands.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandSubcommandsOnlyBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandSubcommandsOnlyBuilder:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandBuilder",
              "canonicalReference": "@discordjs/builders!SlashCommandBuilder:class"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "Exclude",
              "canonicalReference": "!Exclude:type"
            },
            {
              "kind": "Content",
              "text": "<keyof "
            },
            {
              "kind": "Reference",
              "text": "SharedSlashCommandOptions",
              "canonicalReference": "@discordjs/builders!SharedSlashCommandOptions:class"
            },
            {
              "kind": "Content",
              "text": ", 'options'>>"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandBuilder.ts",
          "fileLine": 218,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SlashCommandSubcommandsOnlyBuilder",
          "preserveMemberOrder": false,
          "members": [],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 16,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                },
                {
                  "startIndex": 7,
                  "endIndex": 15
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!SlashCommandUserOption:class",
          "docComment": "/**\n * A slash command user option.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SlashCommandUserOption",
              "canonicalReference": "@discordjs/builders!SlashCommandUserOption:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ApplicationCommandOptionBase",
              "canonicalReference": "@discordjs/builders!ApplicationCommandOptionBase:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/options/user.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SlashCommandUserOption",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!SlashCommandUserOption#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!SlashCommandUserOption#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandUserOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandUserOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!SlashCommandUserOption#type:member",
              "docComment": "/**\n * The type of this option.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!SlashCommandUserOption#type"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "ApplicationCommandOptionType.User",
                  "canonicalReference": "discord-api-types!ApplicationCommandOptionType.User:member"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "type",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for string select menus.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "StringSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIStringSelectComponent",
              "canonicalReference": "discord-api-types!APIStringSelectComponent:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/StringSelectMenu.ts",
          "fileLine": 11,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "StringSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new StringSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * \toptions: [\n * \t\t{ label: 'option 1', value: '1' },\n * \t\t{ label: 'option 2', value: '2' },\n * \t\t{ label: 'option 3', value: '3' },\n * \t],\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new StringSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1)\n * \t.addOptions({\n * \t\tlabel: 'Catchy',\n * \t\tvalue: 'catch',\n * \t});\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIStringSelectComponent",
                  "canonicalReference": "discord-api-types!APIStringSelectComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 48,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#addOptions:member(1)",
              "docComment": "/**\n * Adds options to this select menu.\n *\n * @param options - The options to add\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "addOptions",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#addOptions"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 59,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "addOptions"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#options:member",
              "docComment": "/**\n * The options within this select menu.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 15,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#setOptions:member(1)",
              "docComment": "/**\n * Sets the options for this select menu.\n *\n * @param options - The options to set\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setOptions",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#setOptions"
                },
                {
                  "kind": "Content",
                  "text": "(..."
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 77,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#spliceOptions:member(1)",
              "docComment": "/**\n * Removes, replaces, or inserts options for this select menu.\n *\n * @remarks\n *\n * This method behaves similarly to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/slice | Array.prototype.splice()}. It's useful for modifying and adjusting the order of existing options.\n *\n * @param index - The index to start at\n *\n * @param deleteCount - The number of options to remove\n *\n * @param options - The replacing option objects or builders\n *\n * @example\n *\n * Remove the first option:\n * ```ts\n * selectMenu.spliceOptions(0, 1);\n * ```\n *\n * @example\n *\n * Remove the first n option:\n * ```ts\n * const n = 4;\n * selectMenu.spliceOptions(0, n);\n * ```\n *\n * @example\n *\n * Remove the last option:\n * ```ts\n * selectMenu.spliceOptions(-1, 1);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "spliceOptions",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#spliceOptions"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "index",
                  "canonicalReference": "@discordjs/builders!~index"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "deleteCount",
                  "canonicalReference": "@discordjs/builders!~deleteCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", ..."
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/builders!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RestOrArray",
                  "canonicalReference": "@discordjs/builders!RestOrArray:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "StringSelectMenuOptionBuilder",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 108,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 19,
                "endIndex": 20
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "deleteCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 18
                  },
                  "isOptional": false,
                  "isRest": true
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spliceOptions"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIStringSelectComponent",
                  "canonicalReference": "discord-api-types!APIStringSelectComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 135,
              "fileColumn": 18,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for string select menu options.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "StringSelectMenuOptionBuilder",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "JSONEncodable",
              "canonicalReference": "@discordjs/util!JSONEncodable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APISelectMenuOption",
              "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/StringSelectMenuOption.ts",
          "fileLine": 13,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "StringSelectMenuOptionBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new string select menu option from API data.\n *\n * @param data - The API data to create this string select menu option with\n *\n * @example\n *\n * Creating a string select menu option from an API data object:\n * ```ts\n * const selectMenuOption = new SelectMenuOptionBuilder({\n * \tlabel: 'catchy label',\n * \tvalue: '1',\n * });\n * ```\n *\n * @example\n *\n * Creating a string select menu option using setters and API data:\n * ```ts\n * const selectMenuOption = new SelectMenuOptionBuilder({\n * \tdefault: true,\n * \tvalue: '1',\n * })\n * \t.setLabel('woah');\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 36,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#data:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 36,
              "fileColumn": 28,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setDefault:member(1)",
              "docComment": "/**\n * Sets whether this option is selected by default.\n *\n * @param isDefault - Whether this option is selected by default\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDefault",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setDefault"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "isDefault",
                  "canonicalReference": "@discordjs/builders!~isDefault"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 73,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "isDefault",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDefault"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setDescription:member(1)",
              "docComment": "/**\n * Sets the description for this option.\n *\n * @param description - The description to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setDescription",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setDescription"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "description",
                  "canonicalReference": "@discordjs/builders!~description"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 63,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "description",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setDescription"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setEmoji:member(1)",
              "docComment": "/**\n * Sets the emoji to display for this option.\n *\n * @param emoji - The emoji to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setEmoji",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setEmoji"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/builders!~emoji"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIMessageComponentEmoji",
                  "canonicalReference": "discord-api-types!APIMessageComponentEmoji:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 83,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "emoji",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setEmoji"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setLabel:member(1)",
              "docComment": "/**\n * Sets the label for this option.\n *\n * @param label - The label to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setLabel",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setLabel"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 43,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLabel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setValue:member(1)",
              "docComment": "/**\n * Sets the value for this option.\n *\n * @param value - The value to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setValue",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#setValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 53,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!StringSelectMenuOptionBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APISelectMenuOption",
                  "canonicalReference": "discord-api-types!APISelectMenuOption:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 91,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                }
              ]
            }
          ]
        },
        {
          "kind": "Namespace",
          "canonicalReference": "@discordjs/builders!TextInputAssertions:namespace",
          "docComment": "",
          "excerptTokens": [],
          "fileUrlPath": "src/index.ts",
          "fileLine": 14,
          "fileColumn": 8,
          "releaseTag": "None",
          "name": "TextInputAssertions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.labelValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "labelValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.labelValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 18,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "labelValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.maxLengthValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "maxLengthValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.maxLengthValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 11,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "maxLengthValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.minLengthValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "minLengthValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.minLengthValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NumberValidator",
                  "canonicalReference": "@sapphire/shapeshift!NumberValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 7,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "minLengthValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.placeholderValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "placeholderValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.placeholderValidator_2"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 17,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "placeholderValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.requiredValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "requiredValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.requiredValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "BooleanValidator",
                  "canonicalReference": "@sapphire/shapeshift!BooleanValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 15,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "requiredValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.textInputStyleValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "textInputStyleValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.textInputStyleValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "NativeEnumValidator",
                  "canonicalReference": "@sapphire/shapeshift!NativeEnumValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "typeof"
                },
                {
                  "kind": "Content",
                  "text": " "
                },
                {
                  "kind": "Reference",
                  "text": "TextInputStyle",
                  "canonicalReference": "discord-api-types!TextInputStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 6,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "textInputStyleValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "Function",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.validateRequiredParameters:function(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "export declare function "
                },
                {
                  "kind": "Reference",
                  "text": "validateRequiredParameters",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.validateRequiredParameters"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "style",
                  "canonicalReference": "@discordjs/builders!~style"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "TextInputStyle",
                  "canonicalReference": "discord-api-types!TextInputStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 23,
              "fileColumn": 1,
              "returnTypeTokenRange": {
                "startIndex": 15,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true,
                  "isRest": false
                },
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 13,
                    "endIndex": 14
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "validateRequiredParameters"
            },
            {
              "kind": "Variable",
              "canonicalReference": "@discordjs/builders!TextInputAssertions.valueValidator:var",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "valueValidator",
                  "canonicalReference": "@discordjs/builders!TextInputAssertions.valueValidator"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@sapphire/shapeshift\")."
                },
                {
                  "kind": "Reference",
                  "text": "StringValidator",
                  "canonicalReference": "@sapphire/shapeshift!StringValidator:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                }
              ],
              "fileUrlPath": "src/components/textInput/Assertions.ts",
              "fileLine": 16,
              "fileColumn": 14,
              "isReadonly": true,
              "releaseTag": "Public",
              "name": "valueValidator",
              "variableTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!TextInputBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for text inputs.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "TextInputBuilder",
              "canonicalReference": "@discordjs/builders!TextInputBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "ComponentBuilder",
              "canonicalReference": "@discordjs/builders!ComponentBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APITextInputComponent",
              "canonicalReference": "discord-api-types!APITextInputComponent:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "Equatable",
              "canonicalReference": "@discordjs/util!Equatable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APITextInputComponent",
              "canonicalReference": "discord-api-types!APITextInputComponent:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "JSONEncodable",
              "canonicalReference": "@discordjs/util!JSONEncodable:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APITextInputComponent",
              "canonicalReference": "discord-api-types!APITextInputComponent:interface"
            },
            {
              "kind": "Content",
              "text": ">>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/textInput/TextInput.ts",
          "fileLine": 20,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "TextInputBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!TextInputBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new text input from API data.\n *\n * @param data - The API data to create this text input with\n *\n * @example\n *\n * Creating a select menu option from an API data object:\n * ```ts\n * const textInput = new TextInputBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tlabel: 'Type something',\n * \tstyle: TextInputStyle.Short,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu option using setters and API data:\n * ```ts\n * const textInput = new TextInputBuilder({\n * \tlabel: 'Type something else',\n * })\n * \t.setCustomId('woah')\n * \t.setStyle(TextInputStyle.Paragraph);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "APITextInputComponent",
                  "canonicalReference": "discord-api-types!APITextInputComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": " & {     "
                },
                {
                  "kind": "Reference",
                  "text": "type",
                  "canonicalReference": "@discordjs/builders!~__type#type"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ComponentType.TextInput",
                  "canonicalReference": "discord-api-types!ComponentType.TextInput:member"
                },
                {
                  "kind": "Content",
                  "text": ";   }"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 47,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#equals:member(1)",
              "docComment": "/**\n * {@inheritDoc Equatable.equals}\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "equals",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#equals"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "other",
                  "canonicalReference": "@discordjs/builders!~other"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APITextInputComponent",
                  "canonicalReference": "discord-api-types!APITextInputComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "JSONEncodable",
                  "canonicalReference": "@discordjs/util!JSONEncodable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APITextInputComponent",
                  "canonicalReference": "discord-api-types!APITextInputComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 145,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 10
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setCustomId:member(1)",
              "docComment": "/**\n * Sets the custom id for this text input.\n *\n * @param customId - The custom id to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setCustomId",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setCustomId"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "customId",
                  "canonicalReference": "@discordjs/builders!~customId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 56,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "customId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setCustomId"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setLabel:member(1)",
              "docComment": "/**\n * Sets the label for this text input.\n *\n * @param label - The label to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setLabel",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setLabel"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "label",
                  "canonicalReference": "@discordjs/builders!~label"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 66,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "label",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setLabel"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setMaxLength:member(1)",
              "docComment": "/**\n * Sets the maximum length of text for this text input.\n *\n * @param maxLength - The maximum length of text for this text input\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMaxLength",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setMaxLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "maxLength",
                  "canonicalReference": "@discordjs/builders!~maxLength"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 96,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maxLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMaxLength"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setMinLength:member(1)",
              "docComment": "/**\n * Sets the minimum length of text for this text input.\n *\n * @param minLength - The minimum length of text for this text input\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setMinLength",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setMinLength"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "minLength",
                  "canonicalReference": "@discordjs/builders!~minLength"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 86,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "minLength",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setMinLength"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setPlaceholder:member(1)",
              "docComment": "/**\n * Sets the placeholder for this text input.\n *\n * @param placeholder - The placeholder to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setPlaceholder",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setPlaceholder"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "placeholder",
                  "canonicalReference": "@discordjs/builders!~placeholder"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 106,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "placeholder",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setPlaceholder"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setRequired:member(1)",
              "docComment": "/**\n * Sets whether this text input is required.\n *\n * @param required - Whether this text input is required\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setRequired",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setRequired"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "required",
                  "canonicalReference": "@discordjs/builders!~required"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 126,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "required",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setRequired"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setStyle:member(1)",
              "docComment": "/**\n * Sets the style for this text input.\n *\n * @param style - The style to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setStyle",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setStyle"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "style",
                  "canonicalReference": "@discordjs/builders!~style"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "TextInputStyle",
                  "canonicalReference": "discord-api-types!TextInputStyle:enum"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 76,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "style",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setStyle"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#setValue:member(1)",
              "docComment": "/**\n * Sets the value for this text input.\n *\n * @param value - The value to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setValue",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#setValue"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/builders!~value"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 116,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "value",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setValue"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/builders!TextInputBuilder#toJSON:member(1)",
              "docComment": "/**\n * Serializes this builder to API-compatible JSON data.\n *\n * @remarks\n *\n * This method runs validations on the data before serializing it. As such, it may throw an error if the data is invalid.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!TextInputBuilder#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APITextInputComponent",
                  "canonicalReference": "discord-api-types!APITextInputComponent:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 134,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": [
            {
              "startIndex": 8,
              "endIndex": 16,
              "typeParameters": [
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface",
          "docComment": "/**\n * An interface that ensures the `toJSON()` call will return something that can be serialized into API-compatible data.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ToAPIApplicationCommandOptions",
              "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/interactions/slashCommands/SlashCommandBuilder.ts",
          "fileLine": 233,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ToAPIApplicationCommandOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "toJSON",
                  "canonicalReference": "@discordjs/builders!ToAPIApplicationCommandOptions#toJSON"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "APIApplicationCommandOption",
                  "canonicalReference": "discord-api-types!APIApplicationCommandOption:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 234,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "toJSON"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/builders!UserSelectMenuBuilder:class",
          "docComment": "/**\n * A builder that creates API-compatible JSON data for user select menus.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "UserSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!UserSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseSelectMenuBuilder",
              "canonicalReference": "@discordjs/builders!BaseSelectMenuBuilder:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "APIUserSelectComponent",
              "canonicalReference": "discord-api-types!APIUserSelectComponent:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/components/selectMenu/UserSelectMenu.ts",
          "fileLine": 8,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "UserSelectMenuBuilder",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/builders!UserSelectMenuBuilder:constructor(1)",
              "docComment": "/**\n * Creates a new select menu from API data.\n *\n * @param data - The API data to create this select menu with\n *\n * @example\n *\n * Creating a select menu from an API data object:\n * ```ts\n * const selectMenu = new UserSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * \tplaceholder: 'select an option',\n * \tmax_values: 2,\n * });\n * ```\n *\n * @example\n *\n * Creating a select menu using setters and API data:\n * ```ts\n * const selectMenu = new UserSelectMenuBuilder({\n * \tcustom_id: 'a cool select menu',\n * })\n * \t.setMinValues(1);\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/builders!~data"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIUserSelectComponent",
                  "canonicalReference": "discord-api-types!APIUserSelectComponent:type"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 31,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/builders!version:var",
          "docComment": "/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/builders#readme | @discordjs/builders} version that you are currently using.\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "version",
              "canonicalReference": "@discordjs/builders!version"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "fileLine": 69,
          "fileColumn": 56,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
