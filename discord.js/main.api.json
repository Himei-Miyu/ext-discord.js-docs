{"meta":{"tpk":"@discordjs/api-extractor","tv":"7.38.1","v":1013,"ov":1013,"ts":{"undefined":false}},"pdir":"https://github.com/discordjs/discord.js/tree/main/packages/discord.js","dp":{"@discordjs/builders":"1.7.0","@discordjs/collection":"1.5.3","@discordjs/formatters":"0.3.3","@discordjs/rest":"2.2.0","@discordjs/util":"1.0.2","@discordjs/ws":"1.0.2","@types/ws":"8.5.9","ws":"8.14.2"},"k":"Package","c":"discord.js!","d":"","n":"discord.js","pmo":false,"ms":[{"k":"EntryPoint","c":"discord.js!","n":"","pmo":false,"ms":[{"k":"Class","c":"discord.js!ActionRow:class","d":"/**\n * Represents an action row\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ActionRow","c":"discord.js!ActionRow:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponent","c":"discord.js!ModalActionRowComponent:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIModalActionRowComponent","c":"discord-api-types!APIModalActionRowComponent:type"},{"k":"Content","t":">>"},{"k":"Content","t":" "}],"pat":"src/structures/ActionRow.js","l":12,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ActionRow","pmo":false,"ms":[{"k":"Property","c":"discord.js!ActionRow#components:member","d":"/**\n * The components in this action row\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"components","c":"discord.js!ActionRow#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ActionRow#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ActionRow.from:member(1)","d":"/**\n * Creates a new action row builder from JSON data\n *\n * @deprecated\n *\n * Use {@link ActionRowBuilder.from} instead.\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"static from(other"},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRow","c":"discord.js!ActionRow:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":";"}],"l":24,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Method","c":"discord.js!ActionRow#toJSON:member(1)","d":"/**\n * Returns the API-compatible JSON for this component\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!ActionRow#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType","c":"!ReturnType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"['toJSON']>>"},{"k":"Content","t":";"}],"l":41,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!ActionRow#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":17,"tps":[{"st":11,"en":16}]},"itrs":[]},{"k":"Class","c":"discord.js!ActionRowBuilder:class","d":"/**\n * Represents an action row builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"BuilderActionRow","c":"@discordjs/builders!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ActionRowBuilder.js","l":12,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ActionRowBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ActionRowBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `ActionRowBuilder` class\n */\n","ex":[{"k":"Content","t":"constructor(  "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"ActionRowData","c":"discord.js!ActionRowData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActionRowComponentData","c":"discord.js!ActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponentTypes","c":"discord-api-types!APIActionRowComponentTypes:type"},{"k":"Content","t":">>   | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIModalActionRowComponent","c":"discord-api-types!APIModalActionRowComponent:type"},{"k":"Content","t":">  >"},{"k":"Content","t":", );"}],"l":12,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":19},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!ActionRowBuilder.from:member(1)","d":"/**\n * Creates a new action row builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!ActionRowBuilder.from"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AnyComponentBuilder","c":"@discordjs/builders!AnyComponentBuilder:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":":   "},{"k":"Content","t":" "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType","c":"!ReturnType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"['toJSON']>>>   | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ReturnType","c":"!ReturnType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"['toJSON']>>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"co":3,"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"sta":true,"rtr":{"st":27,"en":31},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":11,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ActionRowComponent:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ActionRowComponent","c":"discord.js!ActionRowComponent:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponent","c":"discord.js!ModalActionRowComponent:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":304,"co":1,"r":"Public","n":"ActionRowComponent","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!ActionRowComponentData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ActionRowComponentData","c":"discord.js!ActionRowComponentData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"MessageActionRowComponentData","c":"discord.js!MessageActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponentData","c":"discord.js!ModalActionRowComponentData:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":302,"co":1,"r":"Public","n":"ActionRowComponentData","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!ActionRowComponentOptions:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ActionRowComponentOptions","c":"discord.js!ActionRowComponentOptions:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ButtonComponentData","c":"discord.js!ButtonComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuComponentData","c":"discord.js!StringSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuComponentData","c":"discord.js!UserSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuComponentData","c":"discord.js!RoleSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuComponentData","c":"discord.js!MentionableSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuComponentData","c":"discord.js!ChannelSelectMenuComponentData:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6117,"co":1,"r":"Public","n":"ActionRowComponentOptions","ttr":{"st":3,"en":15}},{"k":"Interface","c":"discord.js!ActionRowData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ActionRowData","c":"discord.js!ActionRowData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponentTypes","c":"discord-api-types!APIActionRowComponentTypes:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ActionRowComponentData","c":"discord.js!ActionRowComponentData:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseComponentData","c":"discord.js!BaseComponentData:interface"},{"k":"Content","t":" "}],"pat":"src/util/Components.js","l":11,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":10},"dtr":{"st":0,"en":0}}],"n":"ActionRowData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ActionRowData#components:member","d":"/**\n * The components in this action row\n */\n","ex":[{"k":"Reference","t":"components","c":"discord.js!ActionRowData#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":308,"co":3,"ro":false,"op":false,"r":"Public","n":"components","prtr":{"st":2,"en":4}}],"etrs":[{"st":11,"en":12,"tps":[]}]},{"k":"Interface","c":"discord.js!ActionRowModalData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ActionRowModalData","c":"discord.js!ActionRowModalData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ModalSubmitInteraction.js","l":18,"co":1,"r":"Public","n":"ActionRowModalData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ActionRowModalData#components:member","d":"/**\n * The components of this action row\n */\n","ex":[{"k":"Reference","t":"components","c":"discord.js!ActionRowModalData#components"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputModalData","c":"discord.js!TextInputModalData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2367,"co":3,"ro":false,"op":false,"r":"Public","n":"components","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ActionRowModalData#type:member","d":"/**\n * The component type of the action row\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!ActionRowModalData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2366,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!ActivitiesOptions:interface","d":"/**\n * Options for setting activities\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ActivitiesOptions","c":"discord.js!ActivitiesOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActivityOptions","c":"discord.js!ActivityOptions:interface"},{"k":"Content","t":", 'shardId'>"},{"k":"Content","t":" "}],"pat":"src/structures/ClientUser.js","l":98,"co":1,"r":"Public","n":"ActivitiesOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ActivitiesOptions#name:member","d":"/**\n * Name of the activity\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!ActivitiesOptions#state:member","d":"/**\n * State of the activity\n */\n","ex":[{"k":"Content","t":"undefined state :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"state","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!ActivitiesOptions#type:member","d":"/**\n * Type of the activity\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"ActivityType","c":"discord-api-types!ActivityType:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!ActivitiesOptions#url:member","d":"/**\n * Twitch / YouTube stream URL\n */\n","ex":[{"k":"Content","t":"undefined url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!Activity:class","d":"/**\n * Represents an activity that is part of a user's presence.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":" "}],"pat":"src/structures/Presence.js","l":142,"co":1,"r":"Public","ab":false,"n":"Activity","pmo":false,"ms":[{"k":"Property","c":"discord.js!Activity#applicationId:member","d":"/**\n * The id of the application associated with this activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!Activity#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":186,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#assets:member","d":"/**\n * Assets for rich presence\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"assets","c":"discord.js!Activity#assets"},{"k":"Content","t":": "},{"k":"Reference","t":"RichPresenceAssets","c":"discord.js!RichPresenceAssets:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":230,"co":3,"ro":false,"op":false,"r":"Public","n":"assets","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#buttons:member","d":"/**\n * The labels of the buttons of this rich presence\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"buttons","c":"discord.js!Activity#buttons"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":248,"co":3,"ro":false,"op":false,"r":"Public","n":"buttons","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#createdAt:member","d":"/**\n * The time the activity was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Activity#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":281,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#createdTimestamp:member","d":"/**\n * Creation date of the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Activity#createdTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":254,"co":3,"ro":false,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#details:member","d":"/**\n * Details about the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"details","c":"discord.js!Activity#details"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":174,"co":3,"ro":false,"op":false,"r":"Public","n":"details","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#emoji:member","d":"/**\n * Emoji for a custom activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emoji","c":"discord.js!Activity#emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":242,"co":3,"ro":false,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Activity#equals:member(1)","d":"/**\n * Whether this activity is equal to another activity.\n *\n * @param activity - The activity to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Activity#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"activity","c":"discord.js!~activity"},{"k":"Content","t":": "},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":262,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"activity","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!Activity#flags:member","d":"/**\n * Flags that describe the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!Activity#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActivityFlagsBitField","c":"discord.js!ActivityFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":236,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#name:member","d":"/**\n * The activity's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Activity#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":156,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#party:member","d":"/**\n * Party of the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"party","c":"discord.js!Activity#party"},{"k":"Content","t":": "},{"k":"Content","t":"{  "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"size","c":"discord.js!~__type#size"},{"k":"Content","t":": ["},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":"]; } | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":217,"co":3,"ro":false,"op":false,"r":"Public","n":"party","prtr":{"st":3,"en":17},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#presence:member","d":"/**\n * The presence of the Activity\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"presence","c":"discord.js!Activity#presence"},{"k":"Content","t":": "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":";"}],"l":144,"co":3,"ro":true,"op":false,"r":"Public","n":"presence","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#state:member","d":"/**\n * State of the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"state","c":"discord.js!Activity#state"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":180,"co":3,"ro":false,"op":false,"r":"Public","n":"state","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#syncId:member","d":"/**\n * The sync id of the activity <info>This property is not documented by Discord and represents the track id in spotify activities.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"syncId","c":"discord.js!Activity#syncId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":224,"co":3,"ro":false,"op":false,"r":"Public","n":"syncId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#timestamps:member","d":"/**\n * Timestamps for the activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"timestamps","c":"discord.js!Activity#timestamps"},{"k":"Content","t":": "},{"k":"Content","t":"{  "},{"k":"Reference","t":"start","c":"discord.js!~__type#start"},{"k":"Content","t":": "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"end","c":"discord.js!~__type#end"},{"k":"Content","t":": "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"; } | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":199,"co":3,"ro":false,"op":false,"r":"Public","n":"timestamps","prtr":{"st":3,"en":17},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Activity#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the activity's name instead of the Activity object.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Activity#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":289,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!Activity#type:member","d":"/**\n * The activity status's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Activity#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ActivityType","c":"discord-api-types!ActivityType:enum"},{"k":"Content","t":";"}],"l":162,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Activity#url:member","d":"/**\n * If the activity is being streamed, a link to the stream\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"url","c":"discord.js!Activity#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":168,"co":3,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"discord.js!ActivityFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with an {@link Activity.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ActivityFlagsBitField","c":"discord.js!ActivityFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActivityFlagsString","c":"discord.js!ActivityFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/ActivityFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"ActivityFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!ActivityFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":33,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ActivityFlagsBitField.Flags:member","d":"/**\n * Numeric activity flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!ActivityFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ActivityFlags","c":"discord-api-types!ActivityFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ActivityFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!ActivityFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActivityFlagsString","c":"discord.js!ActivityFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":346,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ActivityFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ActivityFlagsString","c":"discord.js!ActivityFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ActivityFlags","c":"discord-api-types!ActivityFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":285,"co":1,"r":"Public","n":"ActivityFlagsString","ttr":{"st":3,"en":7}},{"k":"Interface","c":"discord.js!ActivityOptions:interface","d":"/**\n * Options for setting an activity.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ActivityOptions","c":"discord.js!ActivityOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientUser.js","l":150,"co":1,"r":"Public","n":"ActivityOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ActivityOptions#name:member","d":"/**\n * Name of the activity\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!ActivityOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4570,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ActivityOptions#shardId:member","d":"/**\n * Shard Id(s) to have the activity set on\n */\n","ex":[{"k":"Reference","t":"shardId","c":"discord.js!ActivityOptions#shardId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | readonly "},{"k":"Reference","t":"number"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4574,"co":3,"ro":false,"op":true,"r":"Public","n":"shardId","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!ActivityOptions#state:member","d":"/**\n * State of the activity\n */\n","ex":[{"k":"Reference","t":"state","c":"discord.js!ActivityOptions#state"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4571,"co":3,"ro":false,"op":true,"r":"Public","n":"state","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ActivityOptions#type:member","d":"/**\n * Type of the activity\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!ActivityOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ActivityType","c":"discord-api-types!ActivityType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4573,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ActivityOptions#url:member","d":"/**\n * Twitch / YouTube stream URL\n */\n","ex":[{"k":"Reference","t":"url","c":"discord.js!ActivityOptions#url"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4572,"co":3,"ro":false,"op":true,"r":"Public","n":"url","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!AddGuildMemberOptions:interface","d":"/**\n * Options used to add a user to a guild using OAuth2.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AddGuildMemberOptions","c":"discord.js!AddGuildMemberOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":74,"co":1,"r":"Public","n":"AddGuildMemberOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#accessToken:member","d":"/**\n * An OAuth2 access token for the user with the {@link discord-api-types#(OAuth2Scopes:enum).GuildsJoin} scope granted to the bot's application\n */\n","ex":[{"k":"Reference","t":"accessToken","c":"discord.js!AddGuildMemberOptions#accessToken"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4578,"co":3,"ro":false,"op":false,"r":"Public","n":"accessToken","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#deaf:member","d":"/**\n * Whether the member should be deafened <info>This property requires the {@link discord-api-types#(PermissionFlagsBits:type).MuteMembers} permission.</info>\n */\n","ex":[{"k":"Reference","t":"deaf","c":"discord.js!AddGuildMemberOptions#deaf"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4582,"co":3,"ro":false,"op":true,"r":"Public","n":"deaf","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#fetchWhenExisting:member","d":"/**\n * Whether to fetch the user if not cached and already a member\n */\n","ex":[{"k":"Reference","t":"fetchWhenExisting","c":"discord.js!AddGuildMemberOptions#fetchWhenExisting"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4584,"co":3,"ro":false,"op":true,"r":"Public","n":"fetchWhenExisting","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#force:member","d":"/**\n * Whether to skip the cache check and request the API directly\n */\n","ex":[{"k":"Reference","t":"force","c":"discord.js!AddGuildMemberOptions#force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4583,"co":3,"ro":false,"op":true,"r":"Public","n":"force","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#mute:member","d":"/**\n * Whether the member should be muted <info>This property requires the {@link discord-api-types#(PermissionFlagsBits:type).MuteMembers} permission.</info>\n */\n","ex":[{"k":"Reference","t":"mute","c":"discord.js!AddGuildMemberOptions#mute"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4581,"co":3,"ro":false,"op":true,"r":"Public","n":"mute","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#nick:member","d":"/**\n * The nickname to give to the member <info>This property requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageNicknames} permission.</info>\n */\n","ex":[{"k":"Reference","t":"nick","c":"discord.js!AddGuildMemberOptions#nick"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4579,"co":3,"ro":false,"op":true,"r":"Public","n":"nick","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddGuildMemberOptions#roles:member","d":"/**\n * The roles to add to the member <info>This property requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageRoles} permission.</info>\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!AddGuildMemberOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4580,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":10}}],"etrs":[]},{"k":"Interface","c":"discord.js!AddOrRemoveGuildMemberRoleOptions:interface","d":"/**\n * Options used for adding or removing a role from a member.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AddOrRemoveGuildMemberRoleOptions","c":"discord.js!AddOrRemoveGuildMemberRoleOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":503,"co":1,"r":"Public","n":"AddOrRemoveGuildMemberRoleOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#reason:member","d":"/**\n * Reason for adding/removing the role\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4207,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#role:member","d":"/**\n * The role to add/remove\n */\n","ex":[{"k":"Reference","t":"role","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4206,"co":3,"ro":false,"op":false,"r":"Public","n":"role","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#user:member","d":"/**\n * The user to add/remove the role from\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!AddOrRemoveGuildMemberRoleOptions#user"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4205,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!AllowedPartial:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AllowedPartial","c":"discord.js!AllowedPartial:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4587,"co":1,"r":"Public","n":"AllowedPartial","ttr":{"st":3,"en":17}},{"k":"TypeAlias","c":"discord.js!AllowedThreadTypeForNewsChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AllowedThreadTypeForNewsChannel","c":"discord.js!AllowedThreadTypeForNewsChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4596,"co":1,"r":"Public","n":"AllowedThreadTypeForNewsChannel","ttr":{"st":3,"en":4}},{"k":"TypeAlias","c":"discord.js!AllowedThreadTypeForTextChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AllowedThreadTypeForTextChannel","c":"discord.js!AllowedThreadTypeForTextChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4598,"co":1,"r":"Public","n":"AllowedThreadTypeForTextChannel","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!AnonymousGuild:class","d":"/**\n * Bundles common attributes and methods between {@link Guild} and {@link InviteGuild}\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"AnonymousGuild","c":"discord.js!AnonymousGuild:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuild","c":"discord.js!BaseGuild:class"},{"k":"Content","t":" "}],"pat":"src/structures/AnonymousGuild.js","l":10,"co":1,"r":"Public","ab":true,"n":"AnonymousGuild","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!AnonymousGuild:constructor(1)","d":"/**\n * Constructs a new instance of the `AnonymousGuild` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawAnonymousGuildData","c":"discord.js!~RawAnonymousGuildData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"immediatePatch","c":"discord.js!~immediatePatch"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":");"}],"l":10,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"immediatePatch","ptr":{"st":12,"en":13},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!AnonymousGuild#banner:member","d":"/**\n * The hash of the guild banner\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"banner","c":"discord.js!AnonymousGuild#banner"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"banner","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AnonymousGuild#bannerURL:member(1)","d":"/**\n * The URL to this guild's banner.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bannerURL","c":"discord.js!AnonymousGuild#bannerURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":83,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"bannerURL"},{"k":"Property","c":"discord.js!AnonymousGuild#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":56,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":47,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#description:member","d":"/**\n * The description of the guild, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!AnonymousGuild#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#features:member","d":"/**\n * An array of features available to this guild\n */\n","ex":[{"k":"Content","t":"undefined features :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":39,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#icon:member","d":"/**\n * The icon hash of this guild\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":33,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#id:member","d":"/**\n * The guild's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":21,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":27,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#nameAcronym:member","d":"/**\n * The acronym that shows up in place of a guild icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly nameAcronym :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":65,"ro":true,"op":false,"r":"Public","n":"nameAcronym","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#nsfwLevel:member","d":"/**\n * The NSFW level of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nsfwLevel","c":"discord.js!AnonymousGuild#nsfwLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildNSFWLevel","c":"discord-api-types!GuildNSFWLevel:enum"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"nsfwLevel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#partnered:member","d":"/**\n * Whether this guild is partnered\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partnered :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":77,"ro":true,"op":false,"r":"Public","n":"partnered","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#premiumSubscriptionCount:member","d":"/**\n * The total number of boosts for this server\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"premiumSubscriptionCount","c":"discord.js!AnonymousGuild#premiumSubscriptionCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":72,"co":3,"ro":false,"op":false,"r":"Public","n":"premiumSubscriptionCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#splash:member","d":"/**\n * The hash of the guild invite splash image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"splash","c":"discord.js!AnonymousGuild#splash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"splash","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AnonymousGuild#splashURL:member(1)","d":"/**\n * The URL to this guild's invite splash image.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"splashURL","c":"discord.js!AnonymousGuild#splashURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":92,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"splashURL"},{"k":"Property","c":"discord.js!AnonymousGuild#vanityURLCode:member","d":"/**\n * The vanity invite code of the guild, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"vanityURLCode","c":"discord.js!AnonymousGuild#vanityURLCode"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"vanityURLCode","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#verificationLevel:member","d":"/**\n * The verification level of the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"verificationLevel","c":"discord.js!AnonymousGuild#verificationLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:enum"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"verificationLevel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AnonymousGuild#verified:member","d":"/**\n * Whether this guild is verified\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly verified :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":86,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!AnyComponent:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AnyComponent","c":"discord.js!AnyComponent:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIModalComponent","c":"discord-api-types!APIModalComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIModalActionRowComponent","c":"discord-api-types!APIModalActionRowComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":727,"co":1,"r":"Public","n":"AnyComponent","ttr":{"st":3,"en":14}},{"k":"TypeAlias","c":"discord.js!AnySelectMenuInteraction:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AnySelectMenuInteraction","c":"discord.js!AnySelectMenuInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Content","t":"| "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2776,"co":1,"r":"Public","n":"AnySelectMenuInteraction","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":30}},{"k":"TypeAlias","c":"discord.js!AnyThreadChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Forum"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> = "},{"k":"Reference","t":"PublicThreadChannel","c":"discord.js!PublicThreadChannel:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Forum"},{"k":"Content","t":"> | "},{"k":"Reference","t":"PrivateThreadChannel","c":"discord.js!PrivateThreadChannel:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3130,"co":1,"r":"Public","n":"AnyThreadChannel","tps":[{"tp":"Forum","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":14}},{"k":"Class","c":"discord.js!Application:class","d":"/**\n * Represents an OAuth2 Application.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"Application","c":"discord.js!Application:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/Application.js","l":11,"co":1,"r":"Public","ab":true,"n":"Application","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Application:constructor(1)","d":"/**\n * Constructs a new instance of the `Application` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawApplicationData","c":"discord.js!~RawApplicationData:type"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!Application#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Application#coverURL:member(1)","d":"/**\n * A link to this application's cover image.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"coverURL","c":"discord.js!Application#coverURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":87,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"coverURL"},{"k":"Property","c":"discord.js!Application#createdAt:member","d":"/**\n * The time the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Application#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Application#createdTimestamp:member","d":"/**\n * The timestamp the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Application#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Application#description:member","d":"/**\n * The application's description\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!Application#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Application#icon:member","d":"/**\n * The application's icon hash\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!Application#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Application#iconURL:member(1)","d":"/**\n * A link to the application's icon.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!Application#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":78,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!Application#id:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Application#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Application#name:member","d":"/**\n * The name of the application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Application#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Application#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Application#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":429,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Application#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the application's name instead of the Application object.\n *\n * @returns \n *\n * @example\n * ```js\n * // Logs: Application name: My App\n * console.log(`Application name: ${application}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Application#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":99,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ApplicationCommand:class","d":"/**\n * Represents an application command.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":" = "},{"k":"Content","t":"{}"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/ApplicationCommand.js","l":14,"co":1,"r":"Public","tps":[{"tp":"PermissionsFetchType","ctr":{"st":0,"en":0},"dtr":{"st":5,"en":6}}],"ab":false,"n":"ApplicationCommand","pmo":false,"ms":[{"k":"Property","c":"discord.js!ApplicationCommand#applicationId:member","d":"/**\n * The parent application's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!ApplicationCommand#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#createdAt:member","d":"/**\n * The time the command was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!ApplicationCommand#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":177,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#createdTimestamp:member","d":"/**\n * The timestamp the command was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!ApplicationCommand#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":168,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#defaultMemberPermissions:member","d":"/**\n * The default bitfield used to determine whether this command be used in a guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultMemberPermissions","c":"discord.js!ApplicationCommand#defaultMemberPermissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":136,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultMemberPermissions","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommand#delete:member(1)","d":"/**\n * Deletes this command.\n *\n * @example\n * ```js\n * // Delete this command\n * command.delete()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!ApplicationCommand#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":348,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!ApplicationCommand#description:member","d":"/**\n * The description of this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!ApplicationCommand#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":98,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#descriptionLocalizations:member","d":"/**\n * The description localizations for this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!ApplicationCommand#descriptionLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":106,"co":3,"ro":false,"op":false,"r":"Public","n":"descriptionLocalizations","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#descriptionLocalized:member","d":"/**\n * The localized description for this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"descriptionLocalized","c":"discord.js!ApplicationCommand#descriptionLocalized"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"descriptionLocalized","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#dmPermission:member","d":"/**\n * Whether the command can be used in DMs <info>This property is always `null` on guild commands</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"dmPermission","c":"discord.js!ApplicationCommand#dmPermission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":149,"co":3,"ro":false,"op":false,"r":"Public","n":"dmPermission","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommand#edit:member(1)","d":"/**\n * Edits this application command.\n *\n * @param data - The data to update the command with\n *\n * @example\n * ```js\n * // Edit the description of this command\n * command.edit({\n *   description: 'New description',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ApplicationCommand#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandData","c":"discord.js!ApplicationCommandData:type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":256,"co":3,"sta":false,"rtr":{"st":10,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!ApplicationCommand#equals:member(1)","d":"/**\n * Whether this command equals another command. It compares all properties, so for most operations it is advisable to just compare `command.id === command2.id` as it is much faster and is often what most users need.\n *\n * @param command - The command to compare with\n *\n * @param enforceOptionOrder - Whether to strictly check that options and choices are in the same order in the array <info>The client may not always respect this ordering!</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!ApplicationCommand#equals"},{"k":"Content","t":"(  "},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandData","c":"discord.js!ApplicationCommandData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RawApplicationCommandData","c":"discord.js!~RawApplicationCommandData:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"enforceOptionOrder","c":"discord.js!~enforceOptionOrder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":361,"co":3,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"enforceOptionOrder","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!ApplicationCommand#guild:member","d":"/**\n * The guild this command is part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!ApplicationCommand#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#guildId:member","d":"/**\n * The guild's id this command is part of, this may be non-null when `guild` is `null` if the command was fetched from the `ApplicationCommandManager`\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!ApplicationCommand#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#id:member","d":"/**\n * The command's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!ApplicationCommand#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#manager:member","d":"/**\n * The manager that this command belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"manager","c":"discord.js!ApplicationCommand#manager"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!ApplicationCommandManager:class"},{"k":"Content","t":";"}],"l":186,"co":3,"ro":true,"op":false,"r":"Public","n":"manager","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#name:member","d":"/**\n * The name of this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!ApplicationCommand#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#nameLocalizations:member","d":"/**\n * The name localizations for this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nameLocalizations","c":"discord.js!ApplicationCommand#nameLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"nameLocalizations","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#nameLocalized:member","d":"/**\n * The localized name for this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nameLocalized","c":"discord.js!ApplicationCommand#nameLocalized"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":88,"co":3,"ro":false,"op":false,"r":"Public","n":"nameLocalized","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#nsfw:member","d":"/**\n * Whether this command is age-restricted (18+)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nsfw","c":"discord.js!ApplicationCommand#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#options:member","d":"/**\n * The options of this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!ApplicationCommand#options"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"ApplicationCommandOption","c":"discord.js!ApplicationCommandOption:type"},{"k":"Content","t":" & { "},{"k":"Reference","t":"nameLocalized","c":"discord.js!~__type#nameLocalized"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"; "},{"k":"Reference","t":"descriptionLocalized","c":"discord.js!~__type#descriptionLocalized"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" })[]"},{"k":"Content","t":";"}],"l":126,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":14},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommand.optionsEqual:member(1)","d":"/**\n * Recursively checks that all options for an {@link ApplicationCommand} are equal to the provided options. In most cases it is better to compare using {@link ApplicationCommand.equals}\n *\n * @param existing - The options on the existing command, should be {@link ApplicationCommand.options}\n *\n * @param options - The options to compare against\n *\n * @param enforceOptionOrder - Whether to strictly check that options and choices are in the same order in the array <info>The client may not always respect this ordering!</info>\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"optionsEqual","c":"discord.js!ApplicationCommand.optionsEqual"},{"k":"Content","t":"(  "},{"k":"Reference","t":"existing","c":"discord.js!~existing"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOption","c":"discord.js!ApplicationCommandOption:type"},{"k":"Content","t":"[]"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOption","c":"discord.js!ApplicationCommandOption:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ApplicationCommandOptionData","c":"discord.js!ApplicationCommandOptionData:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"APIApplicationCommandOption","c":"discord-api-types!APIApplicationCommandOption:type"},{"k":"Content","t":"[]"},{"k":"Content","t":",  "},{"k":"Reference","t":"enforceOptionOrder","c":"discord.js!~enforceOptionOrder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":418,"co":3,"sta":true,"rtr":{"st":21,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"existing","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"options","ptr":{"st":10,"en":16},"op":false,"rs":false},{"pn":"enforceOptionOrder","ptr":{"st":19,"en":20},"op":true,"rs":false}],"op":false,"ab":false,"n":"optionsEqual"},{"k":"Property","c":"discord.js!ApplicationCommand#permissions:member","d":"/**\n * The manager for permissions of this command on its guild or arbitrary guilds when the command is global\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissions","c":"discord.js!ApplicationCommand#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandPermissionsManager","c":"discord.js!ApplicationCommandPermissionsManager:class"},{"k":"Content","t":"<  "},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":",  "},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":",  "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":15},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommand#setDefaultMemberPermissions:member(1)","d":"/**\n * Edits the default member permissions of this ApplicationCommand\n *\n * @param defaultMemberPermissions - The default member permissions required to run this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultMemberPermissions","c":"discord.js!ApplicationCommand#setDefaultMemberPermissions"},{"k":"Content","t":"(  "},{"k":"Reference","t":"defaultMemberPermissions","c":"discord.js!~defaultMemberPermissions"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":317,"co":3,"sta":false,"rtr":{"st":9,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultMemberPermissions","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDefaultMemberPermissions"},{"k":"Method","c":"discord.js!ApplicationCommand#setDescription:member(1)","d":"/**\n * Edits the description of this ApplicationCommand\n *\n * @param description - The new description of the command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDescription","c":"discord.js!ApplicationCommand#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"discord.js!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":291,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"discord.js!ApplicationCommand#setDescriptionLocalizations:member(1)","d":"/**\n * Edits the localized descriptions of this ApplicationCommand\n *\n * @param descriptionLocalizations - The new localized descriptions for the command\n *\n * @example\n * ```js\n * // Edit the description localizations of this command\n * command.setDescriptionLocalizations({\n *   'en-GB': 'A test command',\n *   'pt-BR': 'Um comando de teste',\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDescriptionLocalizations","c":"discord.js!ApplicationCommand#setDescriptionLocalizations"},{"k":"Content","t":"(  "},{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!~descriptionLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":308,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"descriptionLocalizations","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescriptionLocalizations"},{"k":"Method","c":"discord.js!ApplicationCommand#setDMPermission:member(1)","d":"/**\n * Edits the DM permission of this ApplicationCommand\n *\n * @param dmPermission - Whether the command can be used in DMs\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDMPermission","c":"discord.js!ApplicationCommand#setDMPermission"},{"k":"Content","t":"("},{"k":"Reference","t":"dmPermission","c":"discord.js!~dmPermission"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":326,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"dmPermission","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDMPermission"},{"k":"Method","c":"discord.js!ApplicationCommand#setName:member(1)","d":"/**\n * Edits the name of this ApplicationCommand\n *\n * @param name - The new name of the command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!ApplicationCommand#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":265,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!ApplicationCommand#setNameLocalizations:member(1)","d":"/**\n * Edits the localized names of this ApplicationCommand\n *\n * @param nameLocalizations - The new localized names for the command\n *\n * @example\n * ```js\n * // Edit the name localizations of this command\n * command.setLocalizedNames({\n *   'en-GB': 'test',\n *   'pt-BR': 'teste',\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setNameLocalizations","c":"discord.js!ApplicationCommand#setNameLocalizations"},{"k":"Content","t":"("},{"k":"Reference","t":"nameLocalizations","c":"discord.js!~nameLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":282,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nameLocalizations","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setNameLocalizations"},{"k":"Method","c":"discord.js!ApplicationCommand#setOptions:member(1)","d":"/**\n * Edits the options of this ApplicationCommand\n *\n * @param options - The options to set for this command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setOptions","c":"discord.js!ApplicationCommand#setOptions"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionData","c":"discord.js!ApplicationCommandOptionData:type"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsFetchType"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":335,"co":3,"sta":false,"rtr":{"st":8,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"setOptions"},{"k":"Property","c":"discord.js!ApplicationCommand#type:member","d":"/**\n * The type of this application command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ApplicationCommand#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType","c":"discord-api-types!ApplicationCommandType:enum"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommand#version:member","d":"/**\n * Autoincrementing version identifier updated during substantial record changes\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"version","c":"discord.js!ApplicationCommand#version"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":159,"co":3,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":7,"en":8,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!ApplicationCommandAttachmentOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandAttachmentOption","c":"discord.js!ApplicationCommandAttachmentOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4698,"co":1,"r":"Public","n":"ApplicationCommandAttachmentOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandAttachmentOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandAttachmentOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Attachment","c":"discord-api-types!ApplicationCommandOptionType.Attachment:member"},{"k":"Content","t":";"}],"l":4699,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandAutocompleteNumericOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandAutocompleteNumericOption","c":"discord.js!ApplicationCommandAutocompleteNumericOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4702,"co":1,"r":"Public","n":"ApplicationCommandAutocompleteNumericOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOption#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandAutocompleteNumericOption#autocomplete"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":4707,"co":3,"ro":false,"op":false,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOption#maxValue:member","d":"","ex":[{"k":"Reference","t":"maxValue","c":"discord.js!ApplicationCommandAutocompleteNumericOption#maxValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4706,"co":3,"ro":false,"op":true,"r":"Public","n":"maxValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOption#minValue:member","d":"","ex":[{"k":"Reference","t":"minValue","c":"discord.js!ApplicationCommandAutocompleteNumericOption#minValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4705,"co":3,"ro":false,"op":true,"r":"Public","n":"minValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandAutocompleteNumericOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":";"}],"l":4704,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandAutocompleteNumericOptionData","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4718,"co":1,"r":"Public","n":"ApplicationCommandAutocompleteNumericOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#autocomplete"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":4725,"co":3,"ro":false,"op":false,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#max_value:member","d":"","ex":[{"k":"Reference","t":"max_value","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#max_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4724,"co":3,"ro":false,"op":true,"r":"Public","n":"max_value","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#maxValue:member","d":"","ex":[{"k":"Reference","t":"maxValue","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#maxValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4723,"co":3,"ro":false,"op":true,"r":"Public","n":"maxValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#min_value:member","d":"","ex":[{"k":"Reference","t":"min_value","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#min_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4722,"co":3,"ro":false,"op":true,"r":"Public","n":"min_value","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#minValue:member","d":"","ex":[{"k":"Reference","t":"minValue","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#minValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4721,"co":3,"ro":false,"op":true,"r":"Public","n":"minValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":";"}],"l":4720,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandAutocompleteStringOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandAutocompleteStringOption","c":"discord.js!ApplicationCommandAutocompleteStringOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4710,"co":1,"r":"Public","n":"ApplicationCommandAutocompleteStringOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOption#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandAutocompleteStringOption#autocomplete"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":4715,"co":3,"ro":false,"op":false,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOption#maxLength:member","d":"","ex":[{"k":"Reference","t":"maxLength","c":"discord.js!ApplicationCommandAutocompleteStringOption#maxLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4714,"co":3,"ro":false,"op":true,"r":"Public","n":"maxLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOption#minLength:member","d":"","ex":[{"k":"Reference","t":"minLength","c":"discord.js!ApplicationCommandAutocompleteStringOption#minLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4713,"co":3,"ro":false,"op":true,"r":"Public","n":"minLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandAutocompleteStringOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":";"}],"l":4712,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandAutocompleteStringOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandAutocompleteStringOptionData","c":"discord.js!ApplicationCommandAutocompleteStringOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4728,"co":1,"r":"Public","n":"ApplicationCommandAutocompleteStringOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#autocomplete"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":4735,"co":3,"ro":false,"op":false,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#max_length:member","d":"","ex":[{"k":"Reference","t":"max_length","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#max_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4734,"co":3,"ro":false,"op":true,"r":"Public","n":"max_length","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#maxLength:member","d":"","ex":[{"k":"Reference","t":"maxLength","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#maxLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4733,"co":3,"ro":false,"op":true,"r":"Public","n":"maxLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#min_length:member","d":"","ex":[{"k":"Reference","t":"min_length","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#min_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4732,"co":3,"ro":false,"op":true,"r":"Public","n":"min_length","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#minLength:member","d":"","ex":[{"k":"Reference","t":"minLength","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#minLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4731,"co":3,"ro":false,"op":true,"r":"Public","n":"minLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandAutocompleteStringOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":";"}],"l":4730,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandBooleanOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandBooleanOption","c":"discord.js!ApplicationCommandBooleanOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4784,"co":1,"r":"Public","n":"ApplicationCommandBooleanOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandBooleanOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandBooleanOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Boolean","c":"discord-api-types!ApplicationCommandOptionType.Boolean:member"},{"k":"Content","t":";"}],"l":4785,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandBooleanOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandBooleanOptionData","c":"discord.js!ApplicationCommandBooleanOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4768,"co":1,"r":"Public","n":"ApplicationCommandBooleanOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandBooleanOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandBooleanOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Boolean","c":"discord-api-types!ApplicationCommandOptionType.Boolean:member"},{"k":"Content","t":";"}],"l":4769,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandChannelOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandChannelOption","c":"discord.js!ApplicationCommandChannelOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4669,"co":1,"r":"Public","n":"ApplicationCommandChannelOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandChannelOption#channelTypes:member","d":"","ex":[{"k":"Reference","t":"channelTypes","c":"discord.js!ApplicationCommandChannelOption#channelTypes"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4671,"co":3,"ro":false,"op":true,"r":"Public","n":"channelTypes","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChannelOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandChannelOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Channel","c":"discord-api-types!ApplicationCommandOptionType.Channel:member"},{"k":"Content","t":";"}],"l":4670,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandChannelOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandChannelOptionData","c":"discord.js!ApplicationCommandChannelOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4663,"co":1,"r":"Public","n":"ApplicationCommandChannelOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandChannelOptionData#channel_types:member","d":"","ex":[{"k":"Reference","t":"channel_types","c":"discord.js!ApplicationCommandChannelOptionData#channel_types"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4666,"co":3,"ro":false,"op":true,"r":"Public","n":"channel_types","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChannelOptionData#channelTypes:member","d":"","ex":[{"k":"Reference","t":"channelTypes","c":"discord.js!ApplicationCommandChannelOptionData#channelTypes"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionAllowedChannelTypes","c":"@discordjs/builders!ApplicationCommandOptionAllowedChannelTypes:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4665,"co":3,"ro":false,"op":true,"r":"Public","n":"channelTypes","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChannelOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandChannelOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionChannelResolvableType","c":"discord.js!CommandOptionChannelResolvableType:type"},{"k":"Content","t":";"}],"l":4664,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandChoicesData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandChoicesData","c":"discord.js!ApplicationCommandChoicesData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4738,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"ApplicationCommandChoicesData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesData#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandChoicesData#autocomplete"},{"k":"Content","t":"?: "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":4742,"co":3,"ro":false,"op":true,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesData#choices:member","d":"","ex":[{"k":"Reference","t":"choices","c":"discord.js!ApplicationCommandChoicesData#choices"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionChoiceData","c":"discord.js!ApplicationCommandOptionChoiceData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":4741,"co":3,"ro":false,"op":true,"r":"Public","n":"choices","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandChoicesData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionChoiceResolvableType","c":"discord.js!CommandOptionChoiceResolvableType:type"},{"k":"Content","t":";"}],"l":4740,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandChoicesOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandChoicesOption","c":"discord.js!ApplicationCommandChoicesOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'autocomplete'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4745,"co":1,"r":"Public","tps":[{"tp":"Type","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"ApplicationCommandChoicesOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesOption#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!ApplicationCommandChoicesOption#autocomplete"},{"k":"Content","t":"?: "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":4749,"co":3,"ro":false,"op":true,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesOption#choices:member","d":"","ex":[{"k":"Reference","t":"choices","c":"discord.js!ApplicationCommandChoicesOption#choices"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionChoiceData","c":"discord.js!ApplicationCommandOptionChoiceData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":4748,"co":3,"ro":false,"op":true,"r":"Public","n":"choices","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandChoicesOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandChoicesOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionChoiceResolvableType","c":"discord.js!CommandOptionChoiceResolvableType:type"},{"k":"Content","t":";"}],"l":4747,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":13,"en":17,"tps":[{"st":15,"en":16},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!ApplicationCommandData:type","d":"/**\n * Data for creating or editing an application command.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandData","c":"discord.js!ApplicationCommandData:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"UserApplicationCommandData","c":"discord.js!UserApplicationCommandData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageApplicationCommandData","c":"discord.js!MessageApplicationCommandData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChatInputApplicationCommandData","c":"discord.js!ChatInputApplicationCommandData:interface"},{"k":"Content","t":";"}],"pat":"src/structures/ApplicationCommand.js","l":190,"co":1,"r":"Public","n":"ApplicationCommandData","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!ApplicationCommandDataResolvable:type","d":"/**\n * Data that resolves to the data of an ApplicationCommand\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandData","c":"discord.js!ApplicationCommandData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RESTPostAPIApplicationCommandsJSONBody","c":"discord-api-types!RESTPostAPIApplicationCommandsJSONBody:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"RESTPostAPIApplicationCommandsJSONBody","c":"discord-api-types!RESTPostAPIApplicationCommandsJSONBody:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":69,"co":1,"r":"Public","n":"ApplicationCommandDataResolvable","ttr":{"st":3,"en":12}},{"k":"Class","c":"discord.js!ApplicationCommandManager:class","d":"/**\n * Manages API methods for application commands and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!ApplicationCommandManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":" = "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<{ "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":" }>"},{"k":"Content","t":", "},{"k":"Reference","t":"PermissionsOptionsExtras"},{"k":"Content","t":" = "},{"k":"Content","t":"{ "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":" }"},{"k":"Content","t":", "},{"k":"Reference","t":"PermissionsGuildType"},{"k":"Content","t":" = "},{"k":"Reference","t":"null"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ApplicationCommandManager.js","l":17,"co":1,"r":"Public","tps":[{"tp":"ApplicationCommandScope","ctr":{"st":0,"en":0},"dtr":{"st":5,"en":11}},{"tp":"PermissionsOptionsExtras","ctr":{"st":0,"en":0},"dtr":{"st":14,"en":19}},{"tp":"PermissionsGuildType","ctr":{"st":0,"en":0},"dtr":{"st":22,"en":23}}],"ab":false,"n":"ApplicationCommandManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ApplicationCommandManager:constructor(1)","d":"/**\n * Constructs a new instance of the `ApplicationCommandManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":17,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"iterable","ptr":{"st":8,"en":12},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!ApplicationCommandManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":28,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommandManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommandManager#create:member(1)","d":"/**\n * Creates an application command.\n *\n * @param command - The command\n *\n * @param guildId - The guild's id to create this command in, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Create a new command\n * client.application.commands.create({\n *   name: 'test',\n *   description: 'A test command',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!ApplicationCommandManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"guildId","c":"discord.js!~guildId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":141,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"guildId","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!ApplicationCommandManager#delete:member(1)","d":"/**\n * Deletes an application command.\n *\n * @param command - The command to delete\n *\n * @param guildId - The guild's id where the command is registered, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Delete a command\n * guild.commands.delete('123456789012345678')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!ApplicationCommandManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"guildId","c":"discord.js!~guildId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":217,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"guildId","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!ApplicationCommandManager#edit:member(1)","d":"/**\n * Edits an application command.\n *\n * @param command - The command to edit\n *\n * @param data - The data to update the command with\n *\n * @param guildId - The guild's id where the command registered, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Edit an existing command\n * client.application.commands.edit('123456789012345678', {\n *   description: 'New description',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ApplicationCommandManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":195,"co":3,"sta":false,"rtr":{"st":14,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!ApplicationCommandManager#edit:member(2)","d":"/**\n * Edits an application command.\n *\n * @param command - The command to edit\n *\n * @param data - The data to update the command with\n *\n * @param guildId - The guild's id where the command registered, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Edit an existing command\n * client.application.commands.edit('123456789012345678', {\n *   description: 'New description',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ApplicationCommandManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"guildId","c":"discord.js!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":195,"co":3,"sta":false,"rtr":{"st":18,"en":22},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":13},"op":false,"rs":false},{"pn":"guildId","ptr":{"st":16,"en":17},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!ApplicationCommandManager#fetch:member(1)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"guildId","c":"discord.js!~__type#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ApplicationCommandManager#fetch:member(2)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ApplicationCommandManager#fetch:member(3)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ApplicationCommandManager#fetch:member(4)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"PropertySignature","c":"discord.js!ApplicationCommandManager#guild:member","d":"","ex":[{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"}],"pat":"typings/index.d.ts","l":3951,"co":50,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"Property","c":"discord.js!ApplicationCommandManager#permissions:member","d":"/**\n * The manager for permissions of arbitrary commands on arbitrary guilds\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissions","c":"discord.js!ApplicationCommandManager#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandPermissionsManager","c":"discord.js!ApplicationCommandPermissionsManager:class"},{"k":"Content","t":"<  { "},{"k":"Reference","t":"command","c":"discord.js!~__type#command"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":" } & "},{"k":"Reference","t":"PermissionsOptionsExtras"},{"k":"Content","t":",  { "},{"k":"Reference","t":"command","c":"discord.js!~__type#command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":" } & "},{"k":"Reference","t":"PermissionsOptionsExtras"},{"k":"Content","t":",  "},{"k":"Reference","t":"PermissionsGuildType"},{"k":"Content","t":",  "},{"k":"Reference","t":"null"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":21},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommandManager#set:member(1)","d":"/**\n * Sets all the commands for this application or guild.\n *\n * @param commands - The commands\n *\n * @param guildId - The guild's id to create the commands in, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Set all commands to just this one\n * client.application.commands.set([\n *   {\n *     name: 'test',\n *     description: 'A test command',\n *   },\n * ])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all commands\n * guild.commands.set([])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!ApplicationCommandManager#set"},{"k":"Content","t":"(  "},{"k":"Reference","t":"commands","c":"discord.js!~commands"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandScope"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":170,"co":3,"sta":false,"rtr":{"st":9,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"commands","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"},{"k":"Method","c":"discord.js!ApplicationCommandManager#set:member(2)","d":"/**\n * Sets all the commands for this application or guild.\n *\n * @param commands - The commands\n *\n * @param guildId - The guild's id to create the commands in, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Set all commands to just this one\n * client.application.commands.set([\n *   {\n *     name: 'test',\n *     description: 'A test command',\n *   },\n * ])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all commands\n * guild.commands.set([])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!ApplicationCommandManager#set"},{"k":"Content","t":"(  "},{"k":"Reference","t":"commands","c":"discord.js!~commands"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":",  "},{"k":"Reference","t":"guildId","c":"discord.js!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":170,"co":3,"sta":false,"rtr":{"st":13,"en":21},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"commands","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"guildId","ptr":{"st":11,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":24,"en":32,"tps":[{"st":26,"en":27},{"st":28,"en":29},{"st":30,"en":31}]},"itrs":[]},{"k":"Interface","c":"discord.js!ApplicationCommandMentionableOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandMentionableOption","c":"discord.js!ApplicationCommandMentionableOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4694,"co":1,"r":"Public","n":"ApplicationCommandMentionableOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandMentionableOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandMentionableOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Mentionable","c":"discord-api-types!ApplicationCommandOptionType.Mentionable:member"},{"k":"Content","t":";"}],"l":4695,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandMentionableOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandMentionableOptionData","c":"discord.js!ApplicationCommandMentionableOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4690,"co":1,"r":"Public","n":"ApplicationCommandMentionableOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandMentionableOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandMentionableOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Mentionable","c":"discord-api-types!ApplicationCommandOptionType.Mentionable:member"},{"k":"Content","t":";"}],"l":4691,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandNonOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandNonOptions","c":"discord.js!ApplicationCommandNonOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4815,"co":1,"r":"Public","n":"ApplicationCommandNonOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandNonOptions#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandNonOptions#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandOptionNonChoiceResolvableType","c":"discord.js!CommandOptionNonChoiceResolvableType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":4816,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":8}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandNonOptionsData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandNonOptionsData","c":"discord.js!ApplicationCommandNonOptionsData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4811,"co":1,"r":"Public","n":"ApplicationCommandNonOptionsData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandNonOptionsData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandNonOptionsData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionNonChoiceResolvableType","c":"discord.js!CommandOptionNonChoiceResolvableType:type"},{"k":"Content","t":";"}],"l":4812,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandNumericOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandNumericOption","c":"discord.js!ApplicationCommandNumericOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandChoicesOption","c":"discord.js!ApplicationCommandChoicesOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4772,"co":1,"r":"Public","n":"ApplicationCommandNumericOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOption#maxValue:member","d":"","ex":[{"k":"Reference","t":"maxValue","c":"discord.js!ApplicationCommandNumericOption#maxValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4775,"co":3,"ro":false,"op":true,"r":"Public","n":"maxValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOption#minValue:member","d":"","ex":[{"k":"Reference","t":"minValue","c":"discord.js!ApplicationCommandNumericOption#minValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4774,"co":3,"ro":false,"op":true,"r":"Public","n":"minValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandNumericOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":";"}],"l":4773,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandNumericOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandNumericOptionData","c":"discord.js!ApplicationCommandNumericOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandChoicesData","c":"discord.js!ApplicationCommandChoicesData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4752,"co":1,"r":"Public","n":"ApplicationCommandNumericOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOptionData#max_value:member","d":"","ex":[{"k":"Reference","t":"max_value","c":"discord.js!ApplicationCommandNumericOptionData#max_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4757,"co":3,"ro":false,"op":true,"r":"Public","n":"max_value","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOptionData#maxValue:member","d":"","ex":[{"k":"Reference","t":"maxValue","c":"discord.js!ApplicationCommandNumericOptionData#maxValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4756,"co":3,"ro":false,"op":true,"r":"Public","n":"maxValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOptionData#min_value:member","d":"","ex":[{"k":"Reference","t":"min_value","c":"discord.js!ApplicationCommandNumericOptionData#min_value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4755,"co":3,"ro":false,"op":true,"r":"Public","n":"min_value","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOptionData#minValue:member","d":"","ex":[{"k":"Reference","t":"minValue","c":"discord.js!ApplicationCommandNumericOptionData#minValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4754,"co":3,"ro":false,"op":true,"r":"Public","n":"minValue","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandNumericOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandNumericOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":";"}],"l":4753,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!ApplicationCommandOption:type","d":"/**\n * An option for an application command or subcommand.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandOption","c":"discord.js!ApplicationCommandOption:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandSubGroup","c":"discord.js!ApplicationCommandSubGroup:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandAutocompleteNumericOption","c":"discord.js!ApplicationCommandAutocompleteNumericOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandAutocompleteStringOption","c":"discord.js!ApplicationCommandAutocompleteStringOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandNonOptions","c":"discord.js!ApplicationCommandNonOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandChannelOption","c":"discord.js!ApplicationCommandChannelOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandNumericOption","c":"discord.js!ApplicationCommandNumericOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandStringOption","c":"discord.js!ApplicationCommandStringOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandRoleOption","c":"discord.js!ApplicationCommandRoleOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandUserOption","c":"discord.js!ApplicationCommandUserOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandMentionableOption","c":"discord.js!ApplicationCommandMentionableOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandBooleanOption","c":"discord.js!ApplicationCommandBooleanOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandAttachmentOption","c":"discord.js!ApplicationCommandAttachmentOption:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandSubCommand","c":"discord.js!ApplicationCommandSubCommand:interface"},{"k":"Content","t":";"}],"pat":"src/structures/ApplicationCommand.js","l":505,"co":1,"r":"Public","n":"ApplicationCommandOption","ttr":{"st":3,"en":29}},{"k":"Interface","c":"discord.js!ApplicationCommandOptionChoiceData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandOptionChoiceData","c":"discord.js!ApplicationCommandOptionChoiceData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"> "}],"pat":"src/structures/ApplicationCommand.js","l":237,"co":1,"r":"Public","tps":[{"tp":"Value","ctr":{"st":5,"en":8},"dtr":{"st":9,"en":12}}],"n":"ApplicationCommandOptionChoiceData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandOptionChoiceData#name:member","d":"/**\n * The name of the choice\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!ApplicationCommandOptionChoiceData#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4849,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandOptionChoiceData#nameLocalizations:member","d":"/**\n * The localized names for this choice\n */\n","ex":[{"k":"Reference","t":"nameLocalizations","c":"discord.js!ApplicationCommandOptionChoiceData#nameLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4850,"co":3,"ro":false,"op":true,"r":"Public","n":"nameLocalizations","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandOptionChoiceData#value:member","d":"/**\n * The value of the choice\n */\n","ex":[{"k":"Reference","t":"value","c":"discord.js!ApplicationCommandOptionChoiceData#value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4851,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!ApplicationCommandOptionData:type","d":"/**\n * An option for an application command or subcommand. <info>In addition to the listed properties, when used as a parameter, API style `snake_case` properties can be used for compatibility with generators like `@discordjs/builders`.</info> <warn>Note that providing a value for the `camelCase` counterpart for any `snake_case` property will discard the provided `snake_case` property.</warn>\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandOptionData","c":"discord.js!ApplicationCommandOptionData:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandSubGroupData","c":"discord.js!ApplicationCommandSubGroupData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandNonOptionsData","c":"discord.js!ApplicationCommandNonOptionsData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandChannelOptionData","c":"discord.js!ApplicationCommandChannelOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandAutocompleteNumericOptionData","c":"discord.js!ApplicationCommandAutocompleteNumericOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandAutocompleteStringOptionData","c":"discord.js!ApplicationCommandAutocompleteStringOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandNumericOptionData","c":"discord.js!ApplicationCommandNumericOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandStringOptionData","c":"discord.js!ApplicationCommandStringOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandRoleOptionData","c":"discord.js!ApplicationCommandRoleOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandUserOptionData","c":"discord.js!ApplicationCommandUserOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandMentionableOptionData","c":"discord.js!ApplicationCommandMentionableOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandBooleanOptionData","c":"discord.js!ApplicationCommandBooleanOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandSubCommandData","c":"discord.js!ApplicationCommandSubCommandData:interface"},{"k":"Content","t":";"}],"pat":"src/structures/ApplicationCommand.js","l":207,"co":1,"r":"Public","n":"ApplicationCommandOptionData","ttr":{"st":3,"en":27}},{"k":"TypeAlias","c":"discord.js!ApplicationCommandPermissionIdResolvable:type","d":"/**\n * Data that resolves to an id used for an application command permission\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandPermissionIdResolvable","c":"discord.js!ApplicationCommandPermissionIdResolvable:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelPermissionConstant","c":"discord.js!ChannelPermissionConstant:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RolePermissionConstant","c":"discord.js!RolePermissionConstant:type"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandPermissionsManager.js","l":426,"co":1,"r":"Public","n":"ApplicationCommandPermissionIdResolvable","ttr":{"st":3,"en":13}},{"k":"Interface","c":"discord.js!ApplicationCommandPermissions:interface","d":"/**\n * The object returned when fetching permissions for an application command.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ApplicationCommandPermissionsManager.js","l":58,"co":1,"r":"Public","n":"ApplicationCommandPermissions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissions#id:member","d":"/**\n * The role, user, or channel's id. Can also be a {@link https://discord.com/developers/docs/interactions/application-commands#application-command-permissions-object-application-command-permissions-constants | permission constant}.\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!ApplicationCommandPermissions#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4855,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissions#permission:member","d":"/**\n * Whether the role or user has the permission to use this command\n */\n","ex":[{"k":"Reference","t":"permission","c":"discord.js!ApplicationCommandPermissions#permission"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4857,"co":3,"ro":false,"op":false,"r":"Public","n":"permission","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissions#type:member","d":"/**\n * Whether this permission is for a role or a user\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandPermissions#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandPermissionType","c":"discord-api-types!ApplicationCommandPermissionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4856,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!ApplicationCommandPermissionsManager:class","d":"/**\n * Manages API methods for permissions of Application Commands.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ApplicationCommandPermissionsManager","c":"discord.js!ApplicationCommandPermissionsManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"BaseOptions"},{"k":"Content","t":", "},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildType"},{"k":"Content","t":", "},{"k":"Reference","t":"CommandIdType"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"BaseManager","c":"discord.js!BaseManager:class"},{"k":"Content","t":" "}],"pat":"src/managers/ApplicationCommandPermissionsManager.js","l":12,"co":1,"r":"Public","tps":[{"tp":"BaseOptions","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"FetchSingleOptions","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"GuildType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"CommandIdType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":false,"n":"ApplicationCommandPermissionsManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#add:member(1)","d":"/**\n * Add permissions to a command.\n *\n * @param options - Options used to add permissions\n *\n * @example\n * ```js\n * // Add a rule to block a role from using a command\n * guild.commands.permissions.add({ command: '123456789012345678', token: 'TotallyRealToken', permissions: [\n *   {\n *     id: '876543211234567890',\n *     type: ApplicationCommandPermissionType.Role,\n *     permission: false\n *   },\n * ]})\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!ApplicationCommandPermissionsManager#add"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & "},{"k":"Reference","t":"EditApplicationCommandPermissionsMixin","c":"discord.js!EditApplicationCommandPermissionsMixin:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":196,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Property","c":"discord.js!ApplicationCommandPermissionsManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommandPermissionsManager#commandId:member","d":"/**\n * The id of the command this manager acts on\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandId","c":"discord.js!ApplicationCommandPermissionsManager#commandId"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandIdType"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#fetch:member(1)","d":"/**\n * Fetches the permissions for one or multiple commands. Providing the client's id as the \"command id\" will fetch only * the guild level permissions\n *\n * @param options - Options used to fetch permissions\n *\n * @example\n * ```js\n * // Fetch permissions for one command\n * guild.commands.permissions.fetch({ command: '123456789012345678' })\n *   .then(perms => console.log(`Fetched ${perms.length} overwrites`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch permissions for all commands in a guild\n * client.application.commands.permissions.fetch({ guild: '123456789012345678' })\n *   .then(perms => console.log(`Fetched permissions for ${perms.size} commands`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch guild level permissions\n * guild.commands.permissions.fetch({ command: client.user.id })\n *   .then(perms => console.log(`Fetched ${perms.length} guild level permissions`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandPermissionsManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#fetch:member(2)","d":"/**\n * Fetches the permissions for one or multiple commands. Providing the client's id as the \"command id\" will fetch only * the guild level permissions\n *\n * @param options - Options used to fetch permissions\n *\n * @example\n * ```js\n * // Fetch permissions for one command\n * guild.commands.permissions.fetch({ command: '123456789012345678' })\n *   .then(perms => console.log(`Fetched ${perms.length} overwrites`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch permissions for all commands in a guild\n * client.application.commands.permissions.fetch({ guild: '123456789012345678' })\n *   .then(perms => console.log(`Fetched permissions for ${perms.size} commands`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch guild level permissions\n * guild.commands.permissions.fetch({ command: client.user.id })\n *   .then(perms => console.log(`Fetched ${perms.length} guild level permissions`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ApplicationCommandPermissionsManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"BaseOptions"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]>>"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!ApplicationCommandPermissionsManager#guild:member","d":"/**\n * The guild that this manager acts on\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!ApplicationCommandPermissionsManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildType"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationCommandPermissionsManager#guildId:member","d":"/**\n * The id of the guild that this manager acts on\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!ApplicationCommandPermissionsManager#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#has:member(1)","d":"/**\n * Check whether a permission exists for a user, role, or channel\n *\n * @param options - Options used to check permissions\n *\n * @example\n * ```js\n * // Check whether a user has permission to use a command\n * guild.commands.permissions.has({ command: '123456789012345678', permissionId: '876543210123456789' })\n *  .then(console.log)\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"has","c":"discord.js!ApplicationCommandPermissionsManager#has"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & {   "},{"k":"Reference","t":"permissionId","c":"discord.js!~__type#permissionId"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandPermissionIdResolvable","c":"discord.js!ApplicationCommandPermissionIdResolvable:type"},{"k":"Content","t":";   "},{"k":"Reference","t":"permissionType","c":"discord.js!~__type#permissionType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationCommandPermissionType","c":"discord-api-types!ApplicationCommandPermissionType:enum"},{"k":"Content","t":";  }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":364,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"has"},{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#remove:member(1)","d":"/**\n * Remove permissions from a command.\n *\n * @param options - Options used to remove permissions\n *\n * @example\n * ```js\n * // Remove a user permission from this command\n * guild.commands.permissions.remove({\n *  command: '123456789012345678', users: '876543210123456789', token: 'TotallyRealToken',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove multiple roles from this command\n * guild.commands.permissions.remove({\n *   command: '123456789012345678', roles: ['876543210123456789', '765432101234567890'], token: 'TotallyRealToken',\n * })\n *    .then(console.log)\n *    .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!ApplicationCommandPermissionsManager#remove"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":":   "},{"k":"Content","t":" ("},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & {     "},{"k":"Reference","t":"token","c":"discord.js!~__type#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";     "},{"k":"Reference","t":"channels","c":"discord.js!~__type#channels"},{"k":"Content","t":"?: readonly ("},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelPermissionConstant","c":"discord.js!ChannelPermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"roles","c":"discord.js!~__type#roles"},{"k":"Content","t":"?: readonly ("},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RolePermissionConstant","c":"discord.js!RolePermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"users","c":"discord.js!~__type#users"},{"k":"Content","t":": readonly "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"[];    })   | ("},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & {     "},{"k":"Reference","t":"token","c":"discord.js!~__type#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";     "},{"k":"Reference","t":"channels","c":"discord.js!~__type#channels"},{"k":"Content","t":"?: readonly ("},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelPermissionConstant","c":"discord.js!ChannelPermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"roles","c":"discord.js!~__type#roles"},{"k":"Content","t":": readonly ("},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RolePermissionConstant","c":"discord.js!RolePermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"users","c":"discord.js!~__type#users"},{"k":"Content","t":"?: readonly "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"[];    })   | ("},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & {     "},{"k":"Reference","t":"token","c":"discord.js!~__type#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";     "},{"k":"Reference","t":"channels","c":"discord.js!~__type#channels"},{"k":"Content","t":": readonly ("},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelPermissionConstant","c":"discord.js!ChannelPermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"roles","c":"discord.js!~__type#roles"},{"k":"Content","t":"?: readonly ("},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RolePermissionConstant","c":"discord.js!RolePermissionConstant:type"},{"k":"Content","t":")[];     "},{"k":"Reference","t":"users","c":"discord.js!~__type#users"},{"k":"Content","t":"?: readonly "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"[];    })"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":273,"co":3,"sta":false,"rtr":{"st":73,"en":77},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":72},"op":false,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!ApplicationCommandPermissionsManager#set:member(1)","d":"/**\n * Sets the permissions for the guild or a command overwrite.\n *\n * @param options - Options used to set permissions\n *\n * @example\n * ```js\n * // Set a permission overwrite for a command\n * client.application.commands.permissions.set({\n *  guild: '892455839386304532',\n *  command: '123456789012345678',\n *  token: 'TotallyRealToken',\n *  permissions: [\n *    {\n *      id: '876543210987654321',\n *      type: ApplicationCommandPermissionType.User,\n *      permission: false,\n *    },\n * ]})\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Set the permissions used for the guild (commands without overwrites)\n * guild.commands.permissions.set({ token: 'TotallyRealToken', permissions: [\n *   {\n *     id: '123456789012345678',\n *     permissions: [{\n *       id: '876543210987654321',\n *       type: ApplicationCommandPermissionType.User,\n *       permission: false,\n *     }],\n *   },\n * ]})\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!ApplicationCommandPermissionsManager#set"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchSingleOptions"},{"k":"Content","t":" & "},{"k":"Reference","t":"EditApplicationCommandPermissionsMixin","c":"discord.js!EditApplicationCommandPermissionsMixin:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":11,"en":12,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!ApplicationCommandPermissionsUpdateData:interface","d":"/**\n * The data received in the {@link Client.applicationCommandPermissionsUpdate} event\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandPermissionsUpdateData","c":"discord.js!ApplicationCommandPermissionsUpdateData:interface"},{"k":"Content","t":" "}],"pat":"src/client/actions/ApplicationCommandPermissionsUpdate.js","l":6,"co":1,"r":"Public","n":"ApplicationCommandPermissionsUpdateData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissionsUpdateData#applicationId:member","d":"/**\n * The id of the application that owns the command or entity being updated\n */\n","ex":[{"k":"Reference","t":"applicationId","c":"discord.js!ApplicationCommandPermissionsUpdateData#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4863,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissionsUpdateData#guildId:member","d":"/**\n * The id of the guild in which permissions were updated\n */\n","ex":[{"k":"Reference","t":"guildId","c":"discord.js!ApplicationCommandPermissionsUpdateData#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4862,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissionsUpdateData#id:member","d":"/**\n * The id of the command or global entity that was updated\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!ApplicationCommandPermissionsUpdateData#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4861,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandPermissionsUpdateData#permissions:member","d":"/**\n * The updated permissions\n */\n","ex":[{"k":"Reference","t":"permissions","c":"discord.js!ApplicationCommandPermissionsUpdateData#permissions"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4864,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!ApplicationCommandResolvable:type","d":"/**\n * Data that resolves to give an ApplicationCommand object. This can be:\n *\n * * An ApplicationCommand object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":62,"co":1,"r":"Public","n":"ApplicationCommandResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!ApplicationCommandRoleOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandRoleOption","c":"discord.js!ApplicationCommandRoleOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4678,"co":1,"r":"Public","n":"ApplicationCommandRoleOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandRoleOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandRoleOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Role","c":"discord-api-types!ApplicationCommandOptionType.Role:member"},{"k":"Content","t":";"}],"l":4679,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandRoleOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandRoleOptionData","c":"discord.js!ApplicationCommandRoleOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4674,"co":1,"r":"Public","n":"ApplicationCommandRoleOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandRoleOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandRoleOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Role","c":"discord-api-types!ApplicationCommandOptionType.Role:member"},{"k":"Content","t":";"}],"l":4675,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandStringOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandStringOption","c":"discord.js!ApplicationCommandStringOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandChoicesOption","c":"discord.js!ApplicationCommandChoicesOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4778,"co":1,"r":"Public","n":"ApplicationCommandStringOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOption#maxLength:member","d":"","ex":[{"k":"Reference","t":"maxLength","c":"discord.js!ApplicationCommandStringOption#maxLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4781,"co":3,"ro":false,"op":true,"r":"Public","n":"maxLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOption#minLength:member","d":"","ex":[{"k":"Reference","t":"minLength","c":"discord.js!ApplicationCommandStringOption#minLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4780,"co":3,"ro":false,"op":true,"r":"Public","n":"minLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandStringOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":";"}],"l":4779,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandStringOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandStringOptionData","c":"discord.js!ApplicationCommandStringOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandChoicesData","c":"discord.js!ApplicationCommandChoicesData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4760,"co":1,"r":"Public","n":"ApplicationCommandStringOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOptionData#max_length:member","d":"","ex":[{"k":"Reference","t":"max_length","c":"discord.js!ApplicationCommandStringOptionData#max_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4765,"co":3,"ro":false,"op":true,"r":"Public","n":"max_length","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOptionData#maxLength:member","d":"","ex":[{"k":"Reference","t":"maxLength","c":"discord.js!ApplicationCommandStringOptionData#maxLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4764,"co":3,"ro":false,"op":true,"r":"Public","n":"maxLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOptionData#min_length:member","d":"","ex":[{"k":"Reference","t":"min_length","c":"discord.js!ApplicationCommandStringOptionData#min_length"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4763,"co":3,"ro":false,"op":true,"r":"Public","n":"min_length","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOptionData#minLength:member","d":"","ex":[{"k":"Reference","t":"minLength","c":"discord.js!ApplicationCommandStringOptionData#minLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4762,"co":3,"ro":false,"op":true,"r":"Public","n":"minLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandStringOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandStringOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":";"}],"l":4761,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandSubCommand:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandSubCommand","c":"discord.js!ApplicationCommandSubCommand:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'required'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4806,"co":1,"r":"Public","n":"ApplicationCommandSubCommand","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubCommand#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!ApplicationCommandSubCommand#options"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandOption","c":"discord.js!ApplicationCommandOption:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommandSubGroup","c":"discord.js!ApplicationCommandSubGroup:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandSubCommand","c":"discord.js!ApplicationCommandSubCommand:interface"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":4808,"co":3,"ro":false,"op":true,"r":"Public","n":"options","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubCommand#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandSubCommand#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Subcommand","c":"discord-api-types!ApplicationCommandOptionType.Subcommand:member"},{"k":"Content","t":";"}],"l":4807,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandSubCommandData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandSubCommandData","c":"discord.js!ApplicationCommandSubCommandData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'required'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4798,"co":1,"r":"Public","n":"ApplicationCommandSubCommandData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubCommandData#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!ApplicationCommandSubCommandData#options"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"ApplicationCommandOptionData","c":"discord.js!ApplicationCommandOptionData:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"ApplicationCommandSubGroupData","c":"discord.js!ApplicationCommandSubGroupData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandSubCommandData","c":"discord.js!ApplicationCommandSubCommandData:interface"},{"k":"Content","t":" >[]"},{"k":"Content","t":";"}],"l":4800,"co":3,"ro":false,"op":true,"r":"Public","n":"options","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubCommandData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandSubCommandData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.Subcommand","c":"discord-api-types!ApplicationCommandOptionType.Subcommand:member"},{"k":"Content","t":";"}],"l":4799,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandSubGroup:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandSubGroup","c":"discord.js!ApplicationCommandSubGroup:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'required'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4793,"co":1,"r":"Public","n":"ApplicationCommandSubGroup","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubGroup#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!ApplicationCommandSubGroup#options"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandSubCommand","c":"discord.js!ApplicationCommandSubCommand:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4795,"co":3,"ro":false,"op":true,"r":"Public","n":"options","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubGroup#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandSubGroup#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.SubcommandGroup","c":"discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"},{"k":"Content","t":";"}],"l":4794,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandSubGroupData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandSubGroupData","c":"discord.js!ApplicationCommandSubGroupData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":", 'required'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4788,"co":1,"r":"Public","n":"ApplicationCommandSubGroupData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubGroupData#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!ApplicationCommandSubGroupData#options"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandSubCommandData","c":"discord.js!ApplicationCommandSubCommandData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4790,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationCommandSubGroupData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandSubGroupData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.SubcommandGroup","c":"discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"},{"k":"Content","t":";"}],"l":4789,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!ApplicationCommandUserOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandUserOption","c":"discord.js!ApplicationCommandUserOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4686,"co":1,"r":"Public","n":"ApplicationCommandUserOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandUserOption#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandUserOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.User","c":"discord-api-types!ApplicationCommandOptionType.User:member"},{"k":"Content","t":";"}],"l":4687,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!ApplicationCommandUserOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationCommandUserOptionData","c":"discord.js!ApplicationCommandUserOptionData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4682,"co":1,"r":"Public","n":"ApplicationCommandUserOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationCommandUserOptionData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationCommandUserOptionData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType.User","c":"discord-api-types!ApplicationCommandOptionType.User:member"},{"k":"Content","t":";"}],"l":4683,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!ApplicationFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link ClientApplication.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ApplicationFlagsBitField","c":"discord.js!ApplicationFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationFlagsString","c":"discord.js!ApplicationFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/ApplicationFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"ApplicationFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!ApplicationFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationFlagsBitField.Flags:member","d":"/**\n * Numeric application flags. All available properties:\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!ApplicationFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ApplicationFlags","c":"discord-api-types!ApplicationFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ApplicationFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!ApplicationFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationFlagsString","c":"discord.js!ApplicationFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":506,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ApplicationFlagsResolvable:type","d":"/**\n * Data that can be resolved to give an application flag bit field. This can be:\n *\n * * A string (see {@link ApplicationFlagsBitField.Flags})\n *\n * * An application flag\n *\n * * An instance of ApplicationFlagsBitField\n *\n * * An Array of ApplicationFlagsResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationFlagsResolvable","c":"discord.js!ApplicationFlagsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationFlagsString","c":"discord.js!ApplicationFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/ApplicationFlagsBitField.js","l":32,"co":1,"r":"Public","n":"ApplicationFlagsResolvable","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!ApplicationFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationFlagsString","c":"discord.js!ApplicationFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ApplicationFlags","c":"discord-api-types!ApplicationFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4885,"co":1,"r":"Public","n":"ApplicationFlagsString","ttr":{"st":3,"en":7}},{"k":"TypeAlias","c":"discord.js!ApplicationResolvable:type","d":"/**\n * Data that can be resolved to an Application. This can be:\n *\n * * An Application\n *\n * * An Activity with associated Application\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ApplicationResolvable","c":"discord.js!ApplicationResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Application","c":"discord.js!Application:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":128,"co":1,"r":"Public","n":"ApplicationResolvable","ttr":{"st":3,"en":8}},{"k":"Class","c":"discord.js!ApplicationRoleConnectionMetadata:class","d":"/**\n * Role connection metadata object for an application.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ApplicationRoleConnectionMetadata","c":"discord.js!ApplicationRoleConnectionMetadata:class"},{"k":"Content","t":" "}],"pat":"src/structures/ApplicationRoleConnectionMetadata.js","l":6,"co":1,"r":"Public","ab":false,"n":"ApplicationRoleConnectionMetadata","pmo":false,"ms":[{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#description:member","d":"/**\n * The description of this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!ApplicationRoleConnectionMetadata#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#descriptionLocalizations:member","d":"/**\n * The description localizations for this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!ApplicationRoleConnectionMetadata#descriptionLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":false,"op":false,"r":"Public","n":"descriptionLocalizations","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#key:member","d":"/**\n * The dictionary key for this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"key","c":"discord.js!ApplicationRoleConnectionMetadata#key"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":false,"r":"Public","n":"key","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#name:member","d":"/**\n * The name of this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!ApplicationRoleConnectionMetadata#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":12,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#nameLocalizations:member","d":"/**\n * The name localizations for this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nameLocalizations","c":"discord.js!ApplicationRoleConnectionMetadata#nameLocalizations"},{"k":"Content","t":": "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"nameLocalizations","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ApplicationRoleConnectionMetadata#type:member","d":"/**\n * The type of this metadata field\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ApplicationRoleConnectionMetadata#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationRoleConnectionMetadataType","c":"discord-api-types!ApplicationRoleConnectionMetadataType:enum"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions:interface","d":"/**\n * Data for creating or editing an application role connection metadata.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ApplicationRoleConnectionMetadataEditOptions","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientApplication.js","l":269,"co":1,"r":"Public","n":"ApplicationRoleConnectionMetadataEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#description:member","d":"/**\n * The description of the metadata field\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4890,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#descriptionLocalizations:member","d":"/**\n * The description localizations for the metadata field\n */\n","ex":[{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#descriptionLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4891,"co":3,"ro":false,"op":true,"r":"Public","n":"descriptionLocalizations","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#key:member","d":"/**\n * The dictionary key of the metadata field\n */\n","ex":[{"k":"Reference","t":"key","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#key"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4892,"co":3,"ro":false,"op":false,"r":"Public","n":"key","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#name:member","d":"/**\n * The name of the metadata field\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4888,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#nameLocalizations:member","d":"/**\n * The name localizations for the metadata field\n */\n","ex":[{"k":"Reference","t":"nameLocalizations","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#nameLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4889,"co":3,"ro":false,"op":true,"r":"Public","n":"nameLocalizations","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#type:member","d":"/**\n * The type of the metadata field\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationRoleConnectionMetadataType","c":"discord-api-types!ApplicationRoleConnectionMetadataType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4893,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!Attachment:class","d":"/**\n * Represents an attachment\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":" "}],"pat":"src/structures/Attachment.js","l":16,"co":1,"r":"Public","ab":false,"n":"Attachment","pmo":false,"ms":[{"k":"Property","c":"discord.js!Attachment#contentType:member","d":"/**\n * The media (MIME) type of this attachment\n *\n * @see\n *\n * {@link https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"contentType","c":"discord.js!Attachment#contentType"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":false,"op":false,"r":"Public","n":"contentType","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#description:member","d":"/**\n * The description (alt text) of this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!Attachment#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":94,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#duration:member","d":"/**\n * The duration of this attachment in seconds <info>This will only be available if the attachment is an audio file.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"duration","c":"discord.js!Attachment#duration"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":111,"co":3,"ro":false,"op":false,"r":"Public","n":"duration","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#ephemeral:member","d":"/**\n * Whether this attachment is ephemeral\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ephemeral","c":"discord.js!Attachment#ephemeral"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":103,"co":3,"ro":false,"op":false,"r":"Public","n":"ephemeral","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#flags:member","d":"/**\n * The flags of this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!Attachment#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"AttachmentFlagsBitField","c":"discord.js!AttachmentFlagsBitField:class"},{"k":"Content","t":";"}],"l":132,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#height:member","d":"/**\n * The height of this attachment (if an image or video)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"height","c":"discord.js!Attachment#height"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":63,"co":3,"ro":false,"op":false,"r":"Public","n":"height","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#id:member","d":"/**\n * The attachment's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Attachment#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#name:member","d":"/**\n * The name of this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Attachment#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#proxyURL:member","d":"/**\n * The Proxy URL to this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"proxyURL","c":"discord.js!Attachment#proxyURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"proxyURL","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#size:member","d":"/**\n * The size of this attachment in bytes\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"size","c":"discord.js!Attachment#size"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"size","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#spoiler:member","d":"/**\n * Whether or not this attachment has been marked as a spoiler\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"spoiler","c":"discord.js!Attachment#spoiler"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":143,"co":3,"ro":true,"op":false,"r":"Public","n":"spoiler","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Attachment#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Attachment#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2150,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!Attachment#url:member","d":"/**\n * The URL to this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"url","c":"discord.js!Attachment#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#waveform:member","d":"/**\n * The base64 encoded byte array representing a sampled waveform <info>This will only be available if the attachment is an audio file.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"waveform","c":"discord.js!Attachment#waveform"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":122,"co":3,"ro":false,"op":false,"r":"Public","n":"waveform","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Attachment#width:member","d":"/**\n * The width of this attachment (if an image or video)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"width","c":"discord.js!Attachment#width"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":false,"op":false,"r":"Public","n":"width","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"discord.js!AttachmentBuilder:class","d":"/**\n * Represents an attachment builder\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AttachmentBuilder","c":"discord.js!AttachmentBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/AttachmentBuilder.js","l":8,"co":1,"r":"Public","ab":false,"n":"AttachmentBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!AttachmentBuilder:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"attachment","c":"discord.js!~attachment"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AttachmentData","c":"discord.js!AttachmentData:interface"},{"k":"Content","t":");"}],"l":8,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"attachment","ptr":{"st":3,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":10},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!AttachmentBuilder#attachment:member","d":"/**\n * The file associated with this attachment.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"attachment","c":"discord.js!AttachmentBuilder#attachment"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"attachment","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AttachmentBuilder#description:member","d":"/**\n * The description of the attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!AttachmentBuilder#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AttachmentBuilder.from:member(1)","d":"/**\n * Makes a new builder instance from a preexisting attachment structure.\n *\n * @param other - The builder to construct a new instance from\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!AttachmentBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"AttachmentBuilder","c":"discord.js!AttachmentBuilder:class"},{"k":"Content","t":";"}],"l":97,"co":3,"sta":true,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Property","c":"discord.js!AttachmentBuilder#name:member","d":"/**\n * The name of this attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!AttachmentBuilder#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AttachmentBuilder#setDescription:member(1)","d":"/**\n * Sets the description of this attachment.\n *\n * @param description - The description of the file\n *\n * @returns This attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDescription","c":"discord.js!AttachmentBuilder#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"discord.js!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":36,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"discord.js!AttachmentBuilder#setFile:member(1)","d":"/**\n * Sets the file of this attachment.\n *\n * @param attachment - The file\n *\n * @returns This attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setFile","c":"discord.js!AttachmentBuilder#setFile"},{"k":"Content","t":"("},{"k":"Reference","t":"attachment","c":"discord.js!~attachment"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":", "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":46,"co":3,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"attachment","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"name","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setFile"},{"k":"Method","c":"discord.js!AttachmentBuilder#setName:member(1)","d":"/**\n * Sets the name of this attachment.\n *\n * @param name - The name of the file\n *\n * @returns This attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!AttachmentBuilder#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":56,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!AttachmentBuilder#setSpoiler:member(1)","d":"/**\n * Sets whether this attachment is a spoiler\n *\n * @param spoiler - Whether the attachment should be marked as a spoiler\n *\n * @returns This attachment\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSpoiler","c":"discord.js!AttachmentBuilder#setSpoiler"},{"k":"Content","t":"("},{"k":"Reference","t":"spoiler","c":"discord.js!~spoiler"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":66,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"spoiler","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSpoiler"},{"k":"Property","c":"discord.js!AttachmentBuilder#spoiler:member","d":"/**\n * Whether or not this attachment has been marked as a spoiler\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"spoiler","c":"discord.js!AttachmentBuilder#spoiler"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":true,"op":false,"r":"Public","n":"spoiler","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AttachmentBuilder#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!AttachmentBuilder#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2129,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Interface","c":"discord.js!AttachmentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AttachmentData","c":"discord.js!AttachmentData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/AttachmentBuilder.js","l":107,"co":1,"r":"Public","n":"AttachmentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AttachmentData#description:member","d":"/**\n * The description of the attachment\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!AttachmentData#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4610,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AttachmentData#name:member","d":"/**\n * The name of the attachment\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!AttachmentData#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4609,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!AttachmentFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with an {@link Attachment.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AttachmentFlagsBitField","c":"discord.js!AttachmentFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentFlagsString","c":"discord.js!AttachmentFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/AttachmentFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"AttachmentFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!AttachmentFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":33,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AttachmentFlagsBitField.Flags:member","d":"/**\n * Numeric attachment flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!AttachmentFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentFlagsString","c":"discord.js!AttachmentFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":9},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AttachmentFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!AttachmentFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentFlagsString","c":"discord.js!AttachmentFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2157,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!AttachmentFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AttachmentFlagsString","c":"discord.js!AttachmentFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"AttachmentFlags","c":"discord-api-types!AttachmentFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2153,"co":1,"r":"Public","n":"AttachmentFlagsString","ttr":{"st":3,"en":7}},{"k":"Interface","c":"discord.js!AttachmentPayload:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Attachment.js","l":6,"co":1,"r":"Public","n":"AttachmentPayload","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AttachmentPayload#attachment:member","d":"/**\n * The attachment in this payload\n */\n","ex":[{"k":"Reference","t":"attachment","c":"discord.js!AttachmentPayload#attachment"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5602,"co":3,"ro":false,"op":false,"r":"Public","n":"attachment","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!AttachmentPayload#description:member","d":"/**\n * The description of the attachment\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!AttachmentPayload#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5604,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AttachmentPayload#name:member","d":"/**\n * The name of the attachment\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!AttachmentPayload#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5603,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!AuditLogChange:interface","d":"/**\n * An entry in the audit log representing a specific change.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AuditLogChange","c":"discord.js!AuditLogChange:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildAuditLogsEntry.js","l":153,"co":1,"r":"Public","n":"AuditLogChange","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AuditLogChange#key:member","d":"/**\n * The property that was changed, e.g. `nick` for nickname changes <warn>For application command permissions updates the key is the id of the user, channel, role, or a permission constant that was updated instead of an actual property name</warn>\n */\n","ex":[{"k":"Reference","t":"key","c":"discord.js!AuditLogChange#key"},{"k":"Content","t":": "},{"k":"Reference","t":"APIAuditLogChange","c":"discord-api-types!APIAuditLogChange:type"},{"k":"Content","t":"['key']"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4897,"co":3,"ro":false,"op":false,"r":"Public","n":"key","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AuditLogChange#new:member","d":"/**\n * The new value of the change, e.g. for nicknames, the new nickname\n */\n","ex":[{"k":"Reference","t":"new","c":"discord.js!AuditLogChange#new"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIAuditLogChange","c":"discord-api-types!APIAuditLogChange:type"},{"k":"Content","t":"['new_value']"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4899,"co":3,"ro":false,"op":true,"r":"Public","n":"new","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AuditLogChange#old:member","d":"/**\n * The old value of the change, e.g. for nicknames, the old nickname\n */\n","ex":[{"k":"Reference","t":"old","c":"discord.js!AuditLogChange#old"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIAuditLogChange","c":"discord-api-types!APIAuditLogChange:type"},{"k":"Content","t":"['old_value']"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4898,"co":3,"ro":false,"op":true,"r":"Public","n":"old","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!AutocompleteFocusedOption:interface","d":"/**\n * The full autocomplete option object.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutocompleteFocusedOption","c":"discord.js!AutocompleteFocusedOption:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":", 'name'>"},{"k":"Content","t":" "}],"pat":"src/structures/CommandInteractionOptionResolver.js","l":286,"co":1,"r":"Public","n":"AutocompleteFocusedOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutocompleteFocusedOption#focused:member","d":"/**\n * Whether this option is currently in focus for autocomplete\n */\n","ex":[{"k":"Reference","t":"focused","c":"discord.js!AutocompleteFocusedOption#focused"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5258,"co":3,"ro":false,"op":false,"r":"Public","n":"focused","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutocompleteFocusedOption#name:member","d":"/**\n * The name of the option\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutocompleteFocusedOption#type:member","d":"/**\n * The type of the application command option\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!AutocompleteFocusedOption#type"},{"k":"Content","t":":  "},{"k":"Content","t":" "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ApplicationCommandOptionType.Integer","c":"discord-api-types!ApplicationCommandOptionType.Integer:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ApplicationCommandOptionType.Number","c":"discord-api-types!ApplicationCommandOptionType.Number:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5259,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!AutocompleteFocusedOption#value:member","d":"/**\n * The value of the option\n */\n","ex":[{"k":"Reference","t":"value","c":"discord.js!AutocompleteFocusedOption#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5263,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!AutocompleteInteraction:class","d":"/**\n * Represents an autocomplete interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/AutocompleteInteraction.js","l":12,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"AutocompleteInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!AutocompleteInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!AutocompleteInteraction#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"command","c":"discord.js!AutocompleteInteraction#command"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<{ "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":" }> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":63,"co":3,"ro":true,"op":false,"r":"Public","n":"command","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandGuildId","c":"discord.js!AutocompleteInteraction#commandGuildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"commandGuildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandId","c":"discord.js!AutocompleteInteraction#commandId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandName","c":"discord.js!AutocompleteInteraction#commandName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!AutocompleteInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.ChatInput","c":"discord-api-types!ApplicationCommandType.ChatInput:member"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutocompleteInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!AutocompleteInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!AutocompleteInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!AutocompleteInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!AutocompleteInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!AutocompleteInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!AutocompleteInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#options:member","d":"/**\n * The options passed to the command\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!AutocompleteInteraction#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">,  'getMessage' | 'getUser' | 'getAttachment' | 'getChannel' | 'getMember' | 'getMentionable' | 'getRole' >"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutocompleteInteraction#respond:member(1)","d":"/**\n * Sends results for the autocomplete of this interaction.\n *\n * @param options - The options for the autocomplete\n *\n * @example\n * ```js\n * // respond to autocomplete interaction\n * interaction.respond([\n *  {\n *    name: 'Option 1',\n *    value: 'option1',\n *  },\n * ])\n *  .then(() => console.log('Successfully responded to the autocomplete interaction'))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"respond","c":"discord.js!AutocompleteInteraction#respond"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionChoiceData","c":"discord.js!ApplicationCommandOptionChoiceData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":83,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"respond"},{"k":"Property","c":"discord.js!AutocompleteInteraction#responded:member","d":"/**\n * Whether this interaction has already received a response\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"responded","c":"discord.js!AutocompleteInteraction#responded"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":50,"co":3,"ro":false,"op":false,"r":"Public","n":"responded","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!AutocompleteInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType.ApplicationCommandAutocomplete","c":"discord-api-types!InteractionType.ApplicationCommandAutocomplete:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutocompleteInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!AutoModerationAction:interface","d":"/**\n * An object containing information about an auto moderation rule action.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationAction","c":"discord.js!AutoModerationAction:interface"},{"k":"Content","t":" "}],"pat":"src/structures/AutoModerationRule.js","l":89,"co":1,"r":"Public","n":"AutoModerationAction","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationAction#metadata:member","d":"/**\n * Additional metadata needed during execution\n */\n","ex":[{"k":"Reference","t":"metadata","c":"discord.js!AutoModerationAction#metadata"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationActionMetadata","c":"discord.js!AutoModerationActionMetadata:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4904,"co":3,"ro":false,"op":false,"r":"Public","n":"metadata","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationAction#type:member","d":"/**\n * The type of this auto moderation rule action\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!AutoModerationAction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationActionType","c":"discord-api-types!AutoModerationActionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4903,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!AutoModerationActionExecution:class","d":"/**\n * Represents the structure of an executed action when an {@link AutoModerationRule} is triggered.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AutoModerationActionExecution","c":"discord.js!AutoModerationActionExecution:class"},{"k":"Content","t":" "}],"pat":"src/structures/AutoModerationActionExecution.js","l":8,"co":1,"r":"Public","ab":false,"n":"AutoModerationActionExecution","pmo":false,"ms":[{"k":"Property","c":"discord.js!AutoModerationActionExecution#action:member","d":"/**\n * The action that was executed.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"action","c":"discord.js!AutoModerationActionExecution#action"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationAction","c":"discord.js!AutoModerationAction:interface"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"action","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#alertSystemMessageId:member","d":"/**\n * The id of any system auto moderation messages posted as a result of this action.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"alertSystemMessageId","c":"discord.js!AutoModerationActionExecution#alertSystemMessageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":57,"co":3,"ro":false,"op":false,"r":"Public","n":"alertSystemMessageId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#autoModerationRule:member","d":"/**\n * The auto moderation rule this action belongs to.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"autoModerationRule","c":"discord.js!AutoModerationActionExecution#autoModerationRule"},{"k":"Content","t":"(): "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":true,"op":false,"r":"Public","n":"autoModerationRule","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#channel:member","d":"/**\n * The channel where this action was triggered from.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!AutoModerationActionExecution#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":93,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#channelId:member","d":"/**\n * The id of the channel where this action was triggered from.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!AutoModerationActionExecution#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#content:member","d":"/**\n * The content that triggered this action. <info>This property requires the {@link discord-api-types#(GatewayIntentBits:enum).MessageContent} privileged gateway intent.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"content","c":"discord.js!AutoModerationActionExecution#content"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"content","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#guild:member","d":"/**\n * The guild where this action was executed from.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!AutoModerationActionExecution#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":14,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#matchedContent:member","d":"/**\n * The substring in content that triggered this action.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"matchedContent","c":"discord.js!AutoModerationActionExecution#matchedContent"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":76,"co":3,"ro":false,"op":false,"r":"Public","n":"matchedContent","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#matchedKeyword:member","d":"/**\n * The word or phrase configured in the rule that triggered this action.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"matchedKeyword","c":"discord.js!AutoModerationActionExecution#matchedKeyword"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"matchedKeyword","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#member:member","d":"/**\n * The guild member that triggered this action.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"member","c":"discord.js!AutoModerationActionExecution#member"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":111,"co":3,"ro":true,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#messageId:member","d":"/**\n * The id of the message that triggered this action. <info>This will not be present if the message was blocked or the content was not part of any message.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"messageId","c":"discord.js!AutoModerationActionExecution#messageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"messageId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#ruleId:member","d":"/**\n * The id of the auto moderation rule this action belongs to.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ruleId","c":"discord.js!AutoModerationActionExecution#ruleId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"ruleId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#ruleTriggerType:member","d":"/**\n * The trigger type of the auto moderation rule which was triggered.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ruleTriggerType","c":"discord.js!AutoModerationActionExecution#ruleTriggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleTriggerType","c":"discord-api-types!AutoModerationRuleTriggerType:enum"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"ruleTriggerType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#user:member","d":"/**\n * The user that triggered this action.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"user","c":"discord.js!AutoModerationActionExecution#user"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":102,"co":3,"ro":true,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationActionExecution#userId:member","d":"/**\n * The id of the user that triggered this action.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"userId","c":"discord.js!AutoModerationActionExecution#userId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"userId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!AutoModerationActionMetadata:interface","d":"/**\n * Additional data used when an auto moderation rule is executed.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationActionMetadata","c":"discord.js!AutoModerationActionMetadata:interface"},{"k":"Content","t":" "}],"pat":"src/structures/AutoModerationRule.js","l":96,"co":1,"r":"Public","n":"AutoModerationActionMetadata","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadata#channelId:member","d":"/**\n * The id of the channel to which content will be logged\n */\n","ex":[{"k":"Reference","t":"channelId","c":"discord.js!AutoModerationActionMetadata#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4908,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadata#customMessage:member","d":"/**\n * The custom message that is shown whenever a message is blocked\n */\n","ex":[{"k":"Reference","t":"customMessage","c":"discord.js!AutoModerationActionMetadata#customMessage"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4910,"co":3,"ro":false,"op":false,"r":"Public","n":"customMessage","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadata#durationSeconds:member","d":"/**\n * The timeout duration in seconds\n */\n","ex":[{"k":"Reference","t":"durationSeconds","c":"discord.js!AutoModerationActionMetadata#durationSeconds"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4909,"co":3,"ro":false,"op":false,"r":"Public","n":"durationSeconds","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!AutoModerationActionMetadataOptions:interface","d":"/**\n * Options used to set the metadata of an auto moderation rule action.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationActionMetadataOptions","c":"discord.js!AutoModerationActionMetadataOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationActionMetadata","c":"discord.js!AutoModerationActionMetadata:interface"},{"k":"Content","t":", 'channelId'>"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":74,"co":1,"r":"Public","n":"AutoModerationActionMetadataOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadataOptions#channel:member","d":"/**\n * The channel to which content will be logged\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!AutoModerationActionMetadataOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildTextChannelResolvable","c":"discord.js!GuildTextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5774,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadataOptions#customMessage:member","d":"/**\n * The custom message that is shown whenever a message is blocked\n */\n","ex":[{"k":"Content","t":"undefined customMessage :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"customMessage","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationActionMetadataOptions#durationSeconds:member","d":"/**\n * The timeout duration in seconds\n */\n","ex":[{"k":"Content","t":"undefined durationSeconds :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"durationSeconds","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":10,"tps":[{"st":5,"en":9}]}]},{"k":"Interface","c":"discord.js!AutoModerationActionOptions:interface","d":"/**\n * Options used to set the actions of an auto moderation rule.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationActionOptions","c":"discord.js!AutoModerationActionOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":65,"co":1,"r":"Public","n":"AutoModerationActionOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationActionOptions#metadata:member","d":"/**\n * Additional metadata needed during execution <info>This property is required if using a `type` of {@link discord-api-types#(AutoModerationActionType:enum).SendAlertMessage} or {@link discord-api-types#(AutoModerationActionType:enum).Timeout}.</info>\n */\n","ex":[{"k":"Reference","t":"metadata","c":"discord.js!AutoModerationActionOptions#metadata"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AutoModerationActionMetadataOptions","c":"discord.js!AutoModerationActionMetadataOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5770,"co":3,"ro":false,"op":true,"r":"Public","n":"metadata","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationActionOptions#type:member","d":"/**\n * The type of this auto moderation rule action\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!AutoModerationActionOptions#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationActionType","c":"discord-api-types!AutoModerationActionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5769,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!AutoModerationRule:class","d":"/**\n * Represents an auto moderation rule.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/AutoModerationRule.js","l":11,"co":1,"r":"Public","ab":false,"n":"AutoModerationRule","pmo":false,"ms":[{"k":"Property","c":"discord.js!AutoModerationRule#actions:member","d":"/**\n * The actions of this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"actions","c":"discord.js!AutoModerationRule#actions"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationAction","c":"discord.js!AutoModerationAction:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":108,"co":3,"ro":false,"op":false,"r":"Public","n":"actions","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#creatorId:member","d":"/**\n * The user that created this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"creatorId","c":"discord.js!AutoModerationRule#creatorId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"creatorId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutoModerationRule#delete:member(1)","d":"/**\n * Deletes this auto moderation rule.\n *\n * @param reason - The reason for deleting this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!AutoModerationRule#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!AutoModerationRule#edit:member(1)","d":"/**\n * Edits this auto moderation rule.\n *\n * @param options - Options for editing this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!AutoModerationRule#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleEditOptions","c":"discord.js!AutoModerationRuleEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":145,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!AutoModerationRule#enabled:member","d":"/**\n * Whether this auto moderation rule is enabled.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"enabled","c":"discord.js!AutoModerationRule#enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#eventType:member","d":"/**\n * The event type of this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"eventType","c":"discord.js!AutoModerationRule#eventType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleEventType","c":"discord-api-types!AutoModerationRuleEventType:enum"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"eventType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#exemptChannels:member","d":"/**\n * The channels exempt by this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"exemptChannels","c":"discord.js!AutoModerationRule#exemptChannels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":134,"co":3,"ro":false,"op":false,"r":"Public","n":"exemptChannels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#exemptRoles:member","d":"/**\n * The roles exempt by this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"exemptRoles","c":"discord.js!AutoModerationRule#exemptRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":124,"co":3,"ro":false,"op":false,"r":"Public","n":"exemptRoles","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#guild:member","d":"/**\n * The guild this auto moderation rule is for.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!AutoModerationRule#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#id:member","d":"/**\n * The id of this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!AutoModerationRule#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#name:member","d":"/**\n * The name of this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!AutoModerationRule#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutoModerationRule#setActions:member(1)","d":"/**\n * Sets the actions for this auto moderation rule.\n *\n * @param actions - The actions of this auto moderation rule\n *\n * @param reason - The reason for changing the actions of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setActions","c":"discord.js!AutoModerationRule#setActions"},{"k":"Content","t":"("},{"k":"Reference","t":"actions","c":"discord.js!~actions"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationActionOptions","c":"discord.js!AutoModerationActionOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":247,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"actions","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setActions"},{"k":"Method","c":"discord.js!AutoModerationRule#setAllowList:member(1)","d":"/**\n * Sets the allow list for this auto moderation rule.\n *\n * @param allowList - The substrings that will be exempt from triggering {@link discord-api-types#(AutoModerationRuleTriggerType:enum).Keyword} and {@link discord-api-types#(AutoModerationRuleTriggerType:enum).KeywordPreset}\n *\n * @param reason - The reason for changing the allow list of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAllowList","c":"discord.js!AutoModerationRule#setAllowList"},{"k":"Content","t":"("},{"k":"Reference","t":"allowList","c":"discord.js!~allowList"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":216,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"allowList","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAllowList"},{"k":"Method","c":"discord.js!AutoModerationRule#setEnabled:member(1)","d":"/**\n * Sets whether this auto moderation rule should be enabled.\n *\n * @param enabled - Whether to enable this auto moderation rule\n *\n * @param reason - The reason for enabling or disabling this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setEnabled","c":"discord.js!AutoModerationRule#setEnabled"},{"k":"Content","t":"("},{"k":"Reference","t":"enabled","c":"discord.js!~enabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":257,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"enabled","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setEnabled"},{"k":"Method","c":"discord.js!AutoModerationRule#setEventType:member(1)","d":"/**\n * Sets the event type for this auto moderation rule.\n *\n * @param eventType - The event type of this auto moderation rule\n *\n * @param reason - The reason for changing the event type of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setEventType","c":"discord.js!AutoModerationRule#setEventType"},{"k":"Content","t":"("},{"k":"Reference","t":"eventType","c":"discord.js!~eventType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleEventType","c":"discord-api-types!AutoModerationRuleEventType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":174,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"eventType","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setEventType"},{"k":"Method","c":"discord.js!AutoModerationRule#setExemptChannels:member(1)","d":"/**\n * Sets the exempt channels for this auto moderation rule.\n *\n * @param exemptChannels - The channels that should not be affected by the auto moderation rule\n *\n * @param reason - The reason for changing the exempt channels of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setExemptChannels","c":"discord.js!AutoModerationRule#setExemptChannels"},{"k":"Content","t":"(  "},{"k":"Reference","t":"channels","c":"discord.js!~channels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":279,"co":3,"sta":false,"rtr":{"st":18,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channels","ptr":{"st":5,"en":13},"op":false,"rs":false},{"pn":"reason","ptr":{"st":16,"en":17},"op":true,"rs":false}],"op":false,"ab":false,"n":"setExemptChannels"},{"k":"Method","c":"discord.js!AutoModerationRule#setExemptRoles:member(1)","d":"/**\n * Sets the exempt roles for this auto moderation rule.\n *\n * @param exemptRoles - The roles that should not be affected by the auto moderation rule\n *\n * @param reason - The reason for changing the exempt roles of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setExemptRoles","c":"discord.js!AutoModerationRule#setExemptRoles"},{"k":"Content","t":"(  "},{"k":"Reference","t":"roles","c":"discord.js!~roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":268,"co":3,"sta":false,"rtr":{"st":18,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":5,"en":13},"op":false,"rs":false},{"pn":"reason","ptr":{"st":16,"en":17},"op":true,"rs":false}],"op":false,"ab":false,"n":"setExemptRoles"},{"k":"Method","c":"discord.js!AutoModerationRule#setKeywordFilter:member(1)","d":"/**\n * Sets the keyword filter for this auto moderation rule.\n *\n * @param keywordFilter - The keyword filter of this auto moderation rule\n *\n * @param reason - The reason for changing the keyword filter of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setKeywordFilter","c":"discord.js!AutoModerationRule#setKeywordFilter"},{"k":"Content","t":"("},{"k":"Reference","t":"keywordFilter","c":"discord.js!~keywordFilter"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":184,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"keywordFilter","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setKeywordFilter"},{"k":"Method","c":"discord.js!AutoModerationRule#setMentionRaidProtectionEnabled:member(1)","d":"/**\n * Sets whether to enable mention raid protection for this auto moderation rule.\n *\n * @param mentionRaidProtectionEnabled - Whether to enable mention raid protection for this auto moderation rule\n *\n * @param reason - The reason for changing the mention raid protection of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setMentionRaidProtectionEnabled","c":"discord.js!AutoModerationRule#setMentionRaidProtectionEnabled"},{"k":"Content","t":"(  "},{"k":"Reference","t":"mentionRaidProtectionEnabled","c":"discord.js!~mentionRaidProtectionEnabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":237,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"mentionRaidProtectionEnabled","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setMentionRaidProtectionEnabled"},{"k":"Method","c":"discord.js!AutoModerationRule#setMentionTotalLimit:member(1)","d":"/**\n * Sets the mention total limit for this auto moderation rule.\n *\n * @param mentionTotalLimit - The total number of unique role and user mentions allowed per message\n *\n * @param reason - The reason for changing the mention total limit of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setMentionTotalLimit","c":"discord.js!AutoModerationRule#setMentionTotalLimit"},{"k":"Content","t":"("},{"k":"Reference","t":"mentionTotalLimit","c":"discord.js!~mentionTotalLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":226,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"mentionTotalLimit","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setMentionTotalLimit"},{"k":"Method","c":"discord.js!AutoModerationRule#setName:member(1)","d":"/**\n * Sets the name for this auto moderation rule.\n *\n * @param name - The name of this auto moderation rule\n *\n * @param reason - The reason for changing the name of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!AutoModerationRule#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":164,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!AutoModerationRule#setPresets:member(1)","d":"/**\n * Sets the presets for this auto moderation rule.\n *\n * @param presets - The presets of this auto moderation rule\n *\n * @param reason - The reason for changing the presets of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPresets","c":"discord.js!AutoModerationRule#setPresets"},{"k":"Content","t":"("},{"k":"Reference","t":"presets","c":"discord.js!~presets"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleKeywordPresetType","c":"discord-api-types!AutoModerationRuleKeywordPresetType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":205,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"presets","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPresets"},{"k":"Method","c":"discord.js!AutoModerationRule#setRegexPatterns:member(1)","d":"/**\n * Sets the regular expression patterns for this auto moderation rule.\n *\n * @param regexPatterns - The regular expression patterns of this auto moderation rule <info>Only Rust-flavored regular expressions are supported.</info>\n *\n * @param reason - The reason for changing the regular expression patterns of this auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setRegexPatterns","c":"discord.js!AutoModerationRule#setRegexPatterns"},{"k":"Content","t":"("},{"k":"Reference","t":"regexPatterns","c":"discord.js!~regexPatterns"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":195,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"regexPatterns","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRegexPatterns"},{"k":"Property","c":"discord.js!AutoModerationRule#triggerMetadata:member","d":"/**\n * The trigger metadata of the rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"triggerMetadata","c":"discord.js!AutoModerationRule#triggerMetadata"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationTriggerMetadata","c":"discord.js!AutoModerationTriggerMetadata:interface"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"triggerMetadata","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRule#triggerType:member","d":"/**\n * The trigger type of this auto moderation rule.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"triggerType","c":"discord.js!AutoModerationRule#triggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleTriggerType","c":"discord-api-types!AutoModerationRuleTriggerType:enum"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"triggerType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!AutoModerationRuleCreateOptions:interface","d":"/**\n * Options used to create an auto moderation rule.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationRuleCreateOptions","c":"discord.js!AutoModerationRuleCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":82,"co":1,"r":"Public","n":"AutoModerationRuleCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#actions:member","d":"/**\n * The actions that will execute when the auto moderation rule is triggered\n */\n","ex":[{"k":"Reference","t":"actions","c":"discord.js!AutoModerationRuleCreateOptions#actions"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationActionOptions","c":"discord.js!AutoModerationActionOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5757,"co":3,"ro":false,"op":false,"r":"Public","n":"actions","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#enabled:member","d":"/**\n * Whether the auto moderation rule should be enabled\n */\n","ex":[{"k":"Reference","t":"enabled","c":"discord.js!AutoModerationRuleCreateOptions#enabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5758,"co":3,"ro":false,"op":true,"r":"Public","n":"enabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#eventType:member","d":"/**\n * The event type of the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"eventType","c":"discord.js!AutoModerationRuleCreateOptions#eventType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleEventType","c":"discord-api-types!AutoModerationRuleEventType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5754,"co":3,"ro":false,"op":false,"r":"Public","n":"eventType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#exemptChannels:member","d":"/**\n * The channels that should not be affected by the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"exemptChannels","c":"discord.js!AutoModerationRuleCreateOptions#exemptChannels"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5760,"co":3,"ro":false,"op":true,"r":"Public","n":"exemptChannels","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#exemptRoles:member","d":"/**\n * The roles that should not be affected by the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"exemptRoles","c":"discord.js!AutoModerationRuleCreateOptions#exemptRoles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5759,"co":3,"ro":false,"op":true,"r":"Public","n":"exemptRoles","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#name:member","d":"/**\n * The name of the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!AutoModerationRuleCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5753,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#reason:member","d":"/**\n * The reason for creating the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!AutoModerationRuleCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5761,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#triggerMetadata:member","d":"/**\n * The trigger metadata of the auto moderation rule <info>This property is required if using a `triggerType` of {@link discord-api-types#(AutoModerationRuleTriggerType:enum).Keyword}, {@link discord-api-types#(AutoModerationRuleTriggerType:enum).KeywordPreset}, or {@link discord-api-types#(AutoModerationRuleTriggerType:enum).MentionSpam}.</info>\n */\n","ex":[{"k":"Reference","t":"triggerMetadata","c":"discord.js!AutoModerationRuleCreateOptions#triggerMetadata"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AutoModerationTriggerMetadataOptions","c":"discord.js!AutoModerationTriggerMetadataOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5756,"co":3,"ro":false,"op":true,"r":"Public","n":"triggerMetadata","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleCreateOptions#triggerType:member","d":"/**\n * The trigger type of the auto moderation rule\n */\n","ex":[{"k":"Reference","t":"triggerType","c":"discord.js!AutoModerationRuleCreateOptions#triggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleTriggerType","c":"discord-api-types!AutoModerationRuleTriggerType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5755,"co":3,"ro":false,"op":false,"r":"Public","n":"triggerType","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!AutoModerationRuleEditOptions:interface","d":"/**\n * Options used to edit an auto moderation rule.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationRuleEditOptions","c":"discord.js!AutoModerationRuleEditOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRuleCreateOptions","c":"discord.js!AutoModerationRuleCreateOptions:interface"},{"k":"Content","t":", 'triggerType'>"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":149,"co":1,"r":"Public","n":"AutoModerationRuleEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#actions:member","d":"/**\n * The actions that will execute when the auto moderation rule is triggered\n */\n","ex":[{"k":"Content","t":"undefined actions :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationActionOptions","c":"discord.js!AutoModerationActionOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"actions","prtr":{"st":1,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#enabled:member","d":"/**\n * Whether the auto moderation rule should be enabled\n */\n","ex":[{"k":"Content","t":"undefined enabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#eventType:member","d":"/**\n * The event type of the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined eventType :"},{"k":"Reference","t":"AutoModerationRuleEventType","c":"discord-api-types!AutoModerationRuleEventType:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"eventType","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#exemptChannels:member","d":"/**\n * The channels that should not be affected by the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined exemptChannels :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ("},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":")>"},{"k":"Content","t":" | "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"exemptChannels","prtr":{"st":1,"en":14}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#exemptRoles:member","d":"/**\n * The roles that should not be affected by the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined exemptRoles :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"exemptRoles","prtr":{"st":1,"en":12}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#name:member","d":"/**\n * The name of the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#reason:member","d":"/**\n * The reason for creating the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined reason :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"reason","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationRuleEditOptions#triggerMetadata:member","d":"/**\n * The trigger metadata of the auto moderation rule\n */\n","ex":[{"k":"Content","t":"undefined triggerMetadata :"},{"k":"Reference","t":"AutoModerationTriggerMetadataOptions","c":"discord.js!AutoModerationTriggerMetadataOptions:interface"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"triggerMetadata","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":10,"tps":[{"st":5,"en":9}]}]},{"k":"Class","c":"discord.js!AutoModerationRuleManager:class","d":"/**\n * Manages API methods for auto moderation rules and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"AutoModerationRuleManager","c":"discord.js!AutoModerationRuleManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":", "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":12,"co":1,"r":"Public","ab":false,"n":"AutoModerationRuleManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!AutoModerationRuleManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":23,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!AutoModerationRuleManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutoModerationRuleManager#create:member(1)","d":"/**\n * Creates a new auto moderation rule.\n *\n * @param options - Options for creating the auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!AutoModerationRuleManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleCreateOptions","c":"discord.js!AutoModerationRuleCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":107,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!AutoModerationRuleManager#delete:member(1)","d":"/**\n * Deletes an auto moderation rule.\n *\n * @param autoModerationRule - The auto moderation rule to delete\n *\n * @param reason - The reason for deleting the auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!AutoModerationRuleManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"autoModerationRule","c":"discord.js!~autoModerationRule"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":282,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autoModerationRule","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!AutoModerationRuleManager#edit:member(1)","d":"/**\n * Edits an auto moderation rule.\n *\n * @param autoModerationRule - The auto moderation rule to edit\n *\n * @param options - Options for editing the auto moderation rule\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!AutoModerationRuleManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"autoModerationRule","c":"discord.js!~autoModerationRule"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleEditOptions","c":"discord.js!AutoModerationRuleEditOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":171,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autoModerationRule","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!AutoModerationRuleManager#fetch:member(1)","d":"/**\n * Fetches auto moderation rules from Discord.\n *\n * @param options - Options for fetching auto moderation rule(s)\n *\n * @example\n * ```js\n * // Fetch all auto moderation rules from a guild without caching\n * guild.autoModerationRules.fetch({ cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single auto moderation rule\n * guild.autoModerationRules.fetch('979083472868098119')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single auto moderation rule without checking cache and without caching\n * guild.autoModerationRules.fetch({ autoModerationRule: '979083472868098119', cache: false, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!AutoModerationRuleManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchAutoModerationRuleOptions","c":"discord.js!FetchAutoModerationRuleOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":247,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!AutoModerationRuleManager#fetch:member(2)","d":"/**\n * Fetches auto moderation rules from Discord.\n *\n * @param options - Options for fetching auto moderation rule(s)\n *\n * @example\n * ```js\n * // Fetch all auto moderation rules from a guild without caching\n * guild.autoModerationRules.fetch({ cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single auto moderation rule\n * guild.autoModerationRules.fetch('979083472868098119')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single auto moderation rule without checking cache and without caching\n * guild.autoModerationRules.fetch({ autoModerationRule: '979083472868098119', cache: false, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!AutoModerationRuleManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchAutoModerationRulesOptions","c":"discord.js!FetchAutoModerationRulesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":247,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!AutoModerationRuleManager#guild:member","d":"/**\n * The guild this manager belongs to.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!AutoModerationRuleManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!AutoModerationRuleManager#resolve:member(1)","d":"/**\n * Resolves an {@link AutoModerationRuleResolvable} to an {@link AutoModerationRule} object.\n *\n * @param autoModerationRule - The AutoModerationRule resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(autoModerationRule"},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":";"}],"l":29,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autoModerationRule","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!AutoModerationRuleManager#resolveId:member(1)","d":"/**\n * Resolves an {@link AutoModerationRuleResolvable} to a {@link AutoModerationRule} id.\n *\n * @param autoModerationRule - The AutoModerationRule resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(autoModerationRule"},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":38,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autoModerationRule","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":9}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!AutoModerationRuleResolvable:type","d":"/**\n * Data that can be resolved to give an AutoModerationRule object. This can be:\n *\n * * An AutoModerationRule\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/AutoModerationRuleManager.js","l":207,"co":1,"r":"Public","n":"AutoModerationRuleResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!AutoModerationTriggerMetadata:interface","d":"/**\n * Additional data used to determine whether an auto moderation rule should be triggered.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationTriggerMetadata","c":"discord.js!AutoModerationTriggerMetadata:interface"},{"k":"Content","t":" "}],"pat":"src/structures/AutoModerationRule.js","l":60,"co":1,"r":"Public","n":"AutoModerationTriggerMetadata","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#allowList:member","d":"/**\n * The substrings that will be exempt from triggering {@link discord-api-types#(AutoModerationRuleTriggerType:enum).Keyword} and {@link discord-api-types#(AutoModerationRuleTriggerType:enum).KeywordPreset}\n */\n","ex":[{"k":"Reference","t":"allowList","c":"discord.js!AutoModerationTriggerMetadata#allowList"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4917,"co":3,"ro":false,"op":false,"r":"Public","n":"allowList","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#keywordFilter:member","d":"/**\n * The substrings that will be searched for in the content\n */\n","ex":[{"k":"Reference","t":"keywordFilter","c":"discord.js!AutoModerationTriggerMetadata#keywordFilter"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4914,"co":3,"ro":false,"op":false,"r":"Public","n":"keywordFilter","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#mentionRaidProtectionEnabled:member","d":"/**\n * Whether mention raid protection is enabled\n */\n","ex":[{"k":"Reference","t":"mentionRaidProtectionEnabled","c":"discord.js!AutoModerationTriggerMetadata#mentionRaidProtectionEnabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4919,"co":3,"ro":false,"op":false,"r":"Public","n":"mentionRaidProtectionEnabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#mentionTotalLimit:member","d":"/**\n * The total number of role & user mentions allowed per message\n */\n","ex":[{"k":"Reference","t":"mentionTotalLimit","c":"discord.js!AutoModerationTriggerMetadata#mentionTotalLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4918,"co":3,"ro":false,"op":false,"r":"Public","n":"mentionTotalLimit","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#presets:member","d":"/**\n * The internally pre-defined wordsets which will be searched for in the content\n */\n","ex":[{"k":"Reference","t":"presets","c":"discord.js!AutoModerationTriggerMetadata#presets"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleKeywordPresetType","c":"discord-api-types!AutoModerationRuleKeywordPresetType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4916,"co":3,"ro":false,"op":false,"r":"Public","n":"presets","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadata#regexPatterns:member","d":"/**\n * The regular expression patterns which will be matched against the content <info>Only Rust-flavored regular expressions are supported.</info>\n */\n","ex":[{"k":"Reference","t":"regexPatterns","c":"discord.js!AutoModerationTriggerMetadata#regexPatterns"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4915,"co":3,"ro":false,"op":false,"r":"Public","n":"regexPatterns","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!AutoModerationTriggerMetadataOptions:interface","d":"/**\n * Options used to set the trigger metadata of an auto moderation rule.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AutoModerationTriggerMetadataOptions","c":"discord.js!AutoModerationTriggerMetadataOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationTriggerMetadata","c":"discord.js!AutoModerationTriggerMetadata:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":51,"co":1,"r":"Public","n":"AutoModerationTriggerMetadataOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#allowList:member","d":"/**\n * The substrings that will be exempt from triggering {@link discord-api-types#(AutoModerationRuleTriggerType:enum).Keyword} and {@link discord-api-types#(AutoModerationRuleTriggerType:enum).KeywordPreset}\n */\n","ex":[{"k":"Content","t":"undefined allowList :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"allowList","prtr":{"st":1,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#keywordFilter:member","d":"/**\n * The substrings that will be searched for in the content\n */\n","ex":[{"k":"Content","t":"undefined keywordFilter :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"keywordFilter","prtr":{"st":1,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#mentionRaidProtectionEnabled:member","d":"/**\n * Whether to automatically detect mention raids\n */\n","ex":[{"k":"Content","t":"undefined mentionRaidProtectionEnabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"mentionRaidProtectionEnabled","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#mentionTotalLimit:member","d":"/**\n * The total number of role & user mentions allowed per message\n */\n","ex":[{"k":"Content","t":"undefined mentionTotalLimit :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"mentionTotalLimit","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#presets:member","d":"/**\n * The internally pre-defined wordsets which will be searched for in the content\n */\n","ex":[{"k":"Content","t":"undefined presets :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AutoModerationRuleKeywordPresetType","c":"discord-api-types!AutoModerationRuleKeywordPresetType:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"presets","prtr":{"st":1,"en":5}},{"k":"PropertySignature","c":"discord.js!AutoModerationTriggerMetadataOptions#regexPatterns:member","d":"/**\n * The regular expression patterns which will be matched against the content <info>Only Rust-flavored regular expressions are supported.</info>\n */\n","ex":[{"k":"Content","t":"undefined regexPatterns :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"regexPatterns","prtr":{"st":1,"en":5}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Interface","c":"discord.js!AwaitMessageCollectorOptionsParams:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AwaitMessageCollectorOptionsParams","c":"discord.js!AwaitMessageCollectorOptionsParams:interface"},{"k":"Content","t":"< "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":",  keyof "},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"any"},{"k":"Content","t":"> >"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2012,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Cached","ctr":{"st":9,"en":10},"dtr":{"st":11,"en":12}}],"n":"AwaitMessageCollectorOptionsParams","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AwaitMessageCollectorOptionsParams#componentType:member","d":"","ex":[{"k":"Reference","t":"componentType","c":"discord.js!AwaitMessageCollectorOptionsParams#componentType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":";"}],"l":2019,"co":3,"ro":false,"op":true,"r":"Public","n":"componentType","prtr":{"st":2,"en":3}}],"etrs":[{"st":13,"en":28,"tps":[{"st":15,"en":23},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!AwaitMessageComponentOptions:interface","d":"/**\n * An object containing the same properties as CollectorOptions, but a few more:\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectedMessageInteraction","c":"discord.js!CollectedMessageInteraction:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":", 'max' | 'maxComponents' | 'maxUsers'>"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":576,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"AwaitMessageComponentOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#componentType:member","d":"/**\n * The type of component interaction to collect\n */\n","ex":[{"k":"Content","t":"undefined componentType :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#dispose:member","d":"/**\n * Whether to remove the message component interaction after collecting\n */\n","ex":[{"k":"Content","t":"undefined dispose :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"dispose","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"undefined filter :"},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#idle:member","d":"/**\n * Time to wait without another message component interaction before ending the collector\n */\n","ex":[{"k":"Content","t":"undefined idle :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"idle","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#interactionResponse:member","d":"/**\n * The interaction response to collect interactions from\n */\n","ex":[{"k":"Content","t":"undefined interactionResponse :"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"interactionResponse","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitMessageComponentOptions#time:member","d":"/**\n * Time to wait for an interaction before rejecting\n */\n","ex":[{"k":"Content","t":"undefined time :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"time","prtr":{"st":1,"en":2}}],"etrs":[{"st":7,"en":14,"tps":[{"st":9,"en":13},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!AwaitMessagesOptions:interface","d":"/**\n * An object containing the same properties as CollectorOptions, but a few more:\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":186,"co":1,"r":"Public","n":"AwaitMessagesOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AwaitMessagesOptions#errors:member","d":"/**\n * Stop/end reasons that cause the promise to reject\n */\n","ex":[{"k":"Reference","t":"errors","c":"discord.js!AwaitMessagesOptions#errors"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4934,"co":3,"ro":false,"op":true,"r":"Public","n":"errors","prtr":{"st":2,"en":4}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!AwaitModalSubmitOptions:interface","d":"/**\n * An object containing the same properties as {@link CollectorOptions}, but a few less:\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AwaitModalSubmitOptions","c":"discord.js!AwaitModalSubmitOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalSubmitInteractionCollectorOptions","c":"discord.js!ModalSubmitInteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":", 'max' | 'maxComponents' | 'maxUsers'>"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":281,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"AwaitModalSubmitOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AwaitModalSubmitOptions#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"undefined filter :"},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!AwaitModalSubmitOptions#time:member","d":"/**\n * Time in milliseconds to wait for an interaction before rejecting\n */\n","ex":[{"k":"Reference","t":"time","c":"discord.js!AwaitModalSubmitOptions#time"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4930,"co":3,"ro":false,"op":false,"r":"Public","n":"time","prtr":{"st":2,"en":3}}],"etrs":[{"st":7,"en":14,"tps":[{"st":9,"en":13},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!AwaitReactionsOptions:interface","d":"/**\n * An object containing the same properties as CollectorOptions, but a few more:\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"AwaitReactionsOptions","c":"discord.js!AwaitReactionsOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ReactionCollectorOptions","c":"discord.js!ReactionCollectorOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":521,"co":1,"r":"Public","n":"AwaitReactionsOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!AwaitReactionsOptions#errors:member","d":"/**\n * Stop/end reasons that cause the promise to reject\n */\n","ex":[{"k":"Reference","t":"errors","c":"discord.js!AwaitReactionsOptions#errors"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4938,"co":3,"ro":false,"op":true,"r":"Public","n":"errors","prtr":{"st":2,"en":4}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!BanOptions:interface","d":"/**\n * Options used to ban a user from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BanOptions","c":"discord.js!BanOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildBanManager.js","l":131,"co":1,"r":"Public","n":"BanOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BanOptions#deleteMessageDays:member","d":"/**\n * Number of days of messages to delete, must be between 0 and 7, inclusive <warn>This property is deprecated. Use `deleteMessageSeconds` instead.</warn>\n */\n","ex":[{"k":"Reference","t":"deleteMessageDays","c":"discord.js!BanOptions#deleteMessageDays"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4943,"co":3,"ro":false,"op":true,"r":"Public","n":"deleteMessageDays","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BanOptions#deleteMessageSeconds:member","d":"/**\n * Number of seconds of messages to delete, must be between 0 and 604800 (7 days), inclusive\n */\n","ex":[{"k":"Reference","t":"deleteMessageSeconds","c":"discord.js!BanOptions#deleteMessageSeconds"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4944,"co":3,"ro":false,"op":true,"r":"Public","n":"deleteMessageSeconds","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BanOptions#reason:member","d":"/**\n * The reason for the ban\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!BanOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4945,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!Base:class","d":"/**\n * Represents a data model that is identifiable by a Snowflake (i.e. Discord API data models).\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Base.js","l":9,"co":1,"r":"Public","ab":true,"n":"Base","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Base:constructor(1)","d":"/**\n * Constructs a new instance of the `Base` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":");"}],"l":9,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!Base#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!Base#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":";"}],"l":11,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Base#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Base#toJSON"},{"k":"Content","t":"(..."},{"k":"Reference","t":"props","c":"discord.js!~props"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":516,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"props","ptr":{"st":5,"en":13},"op":false,"rs":true}],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Base#valueOf:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"valueOf","c":"discord.js!Base#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":517,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!Base64Resolvable:type","d":"/**\n * Data that resolves to give a Base64 string, typically for image uploading. This can be:\n *\n * * A Buffer\n *\n * * A base64 string\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Buffer","c":"!\"\\\"buffer\\\"\".__global.Buffer:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64String","c":"discord.js!Base64String:type"},{"k":"Content","t":";"}],"pat":"src/util/DataResolver.js","l":108,"co":1,"r":"Public","n":"Base64Resolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!Base64String:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Base64String","c":"discord.js!Base64String:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4950,"co":1,"r":"Public","n":"Base64String","ttr":{"st":3,"en":4}},{"k":"Interface","c":"discord.js!BaseApplicationCommandData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseApplicationCommandData","c":"discord.js!BaseApplicationCommandData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4600,"co":1,"r":"Public","n":"BaseApplicationCommandData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandData#defaultMemberPermissions:member","d":"","ex":[{"k":"Reference","t":"defaultMemberPermissions","c":"discord.js!BaseApplicationCommandData#defaultMemberPermissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":4604,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultMemberPermissions","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandData#dmPermission:member","d":"","ex":[{"k":"Reference","t":"dmPermission","c":"discord.js!BaseApplicationCommandData#dmPermission"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":4603,"co":3,"ro":false,"op":true,"r":"Public","n":"dmPermission","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandData#name:member","d":"","ex":[{"k":"Reference","t":"name","c":"discord.js!BaseApplicationCommandData#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":4601,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandData#nameLocalizations:member","d":"","ex":[{"k":"Reference","t":"nameLocalizations","c":"discord.js!BaseApplicationCommandData#nameLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":4602,"co":3,"ro":false,"op":true,"r":"Public","n":"nameLocalizations","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandData#nsfw:member","d":"","ex":[{"k":"Reference","t":"nsfw","c":"discord.js!BaseApplicationCommandData#nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":4605,"co":3,"ro":false,"op":true,"r":"Public","n":"nsfw","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!BaseApplicationCommandOptionsData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseApplicationCommandOptionsData","c":"discord.js!BaseApplicationCommandOptionsData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4634,"co":1,"r":"Public","n":"BaseApplicationCommandOptionsData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#autocomplete:member","d":"","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!BaseApplicationCommandOptionsData#autocomplete"},{"k":"Content","t":"?: "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":4640,"co":3,"ro":false,"op":true,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#description:member","d":"","ex":[{"k":"Reference","t":"description","c":"discord.js!BaseApplicationCommandOptionsData#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":4637,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#descriptionLocalizations:member","d":"","ex":[{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!BaseApplicationCommandOptionsData#descriptionLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":4638,"co":3,"ro":false,"op":true,"r":"Public","n":"descriptionLocalizations","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#name:member","d":"","ex":[{"k":"Reference","t":"name","c":"discord.js!BaseApplicationCommandOptionsData#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":4635,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#nameLocalizations:member","d":"","ex":[{"k":"Reference","t":"nameLocalizations","c":"discord.js!BaseApplicationCommandOptionsData#nameLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":4636,"co":3,"ro":false,"op":true,"r":"Public","n":"nameLocalizations","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseApplicationCommandOptionsData#required:member","d":"","ex":[{"k":"Reference","t":"required","c":"discord.js!BaseApplicationCommandOptionsData#required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":4639,"co":3,"ro":false,"op":true,"r":"Public","n":"required","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!BaseButtonComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseButtonComponentData","c":"discord.js!BaseButtonComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseComponentData","c":"discord.js!BaseComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6132,"co":1,"r":"Public","n":"BaseButtonComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseButtonComponentData#disabled:member","d":"","ex":[{"k":"Reference","t":"disabled","c":"discord.js!BaseButtonComponentData#disabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":6135,"co":3,"ro":false,"op":true,"r":"Public","n":"disabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseButtonComponentData#emoji:member","d":"","ex":[{"k":"Reference","t":"emoji","c":"discord.js!BaseButtonComponentData#emoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentEmojiResolvable","c":"discord.js!ComponentEmojiResolvable:type"},{"k":"Content","t":";"}],"l":6136,"co":3,"ro":false,"op":true,"r":"Public","n":"emoji","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseButtonComponentData#label:member","d":"","ex":[{"k":"Reference","t":"label","c":"discord.js!BaseButtonComponentData#label"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6137,"co":3,"ro":false,"op":true,"r":"Public","n":"label","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseButtonComponentData#style:member","d":"","ex":[{"k":"Reference","t":"style","c":"discord.js!BaseButtonComponentData#style"},{"k":"Content","t":": "},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":";"}],"l":6134,"co":3,"ro":false,"op":false,"r":"Public","n":"style","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseButtonComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!BaseButtonComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":";"}],"l":6133,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!BaseChannel:class","d":"/**\n * Represents any channel on Discord.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/BaseChannel.js","l":15,"co":1,"r":"Public","ab":true,"n":"BaseChannel","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseChannel` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawChannelData","c":"discord.js!~RawChannelData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"immediatePatch","c":"discord.js!~immediatePatch"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":");"}],"l":15,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":true,"rs":false},{"pn":"immediatePatch","ptr":{"st":12,"en":13},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!BaseChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!BaseChannel#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":61,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!BaseChannel#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseChannel#delete:member(1)","d":"/**\n * Deletes this channel.\n *\n * @example\n * ```js\n * // Delete the channel\n * channel.delete()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!BaseChannel#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":104,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!BaseChannel#fetch:member(1)","d":"/**\n * Fetches this channel.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!BaseChannel#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":114,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!BaseChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!BaseChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!BaseChannel#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseChannel#isDMBased:member(1)","d":"/**\n * Indicates whether this channel is DM-based (either a {@link DMChannel} or a {@link PartialGroupDMChannel}).\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isDMBased","c":"discord.js!BaseChannel#isDMBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"PartialGroupDMChannel","c":"discord.js!PartialGroupDMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialDMChannel","c":"discord.js!PartialDMChannel:interface"},{"k":"Content","t":";"}],"l":138,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isDMBased"},{"k":"Method","c":"discord.js!BaseChannel#isTextBased:member(1)","d":"/**\n * Indicates whether this channel is {@link TextBasedChannels | text-based}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isTextBased","c":"discord.js!BaseChannel#isTextBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"l":130,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isTextBased"},{"k":"Method","c":"discord.js!BaseChannel#isThread:member(1)","d":"/**\n * Indicates whether this channel is a {@link ThreadChannel}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isThread","c":"discord.js!BaseChannel#isThread"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":";"}],"l":122,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThread"},{"k":"Method","c":"discord.js!BaseChannel#isThreadOnly:member(1)","d":"/**\n * Indicates whether this channel is {@link ThreadOnlyChannel | thread-only}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isThreadOnly","c":"discord.js!BaseChannel#isThreadOnly"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ThreadOnlyChannel","c":"discord.js!ThreadOnlyChannel:class"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isThreadOnly"},{"k":"Method","c":"discord.js!BaseChannel#isVoiceBased:member(1)","d":"/**\n * Indicates whether this channel is {@link BaseGuildVoiceChannel | voice-based}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isVoiceBased","c":"discord.js!BaseChannel#isVoiceBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":";"}],"l":146,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isVoiceBased"},{"k":"Property","c":"discord.js!BaseChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!BaseChannel#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":80,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <#123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!BaseChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":";"}],"l":91,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!BaseChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!BaseChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!BaseChannel#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseClient:class","d":"/**\n * The base class for all clients.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseClient","c":"discord.js!BaseClient:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/client/BaseClient.js","l":14,"co":1,"r":"Public","ab":false,"n":"BaseClient","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseClient:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseClient` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookClientOptions","c":"discord.js!WebhookClientOptions:interface"},{"k":"Content","t":");"}],"l":14,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":3,"en":6},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!BaseClient#deleteWebhook:member(1)","d":"/**\n * Deletes a webhook.\n *\n * @param id - The webhook's id\n *\n * @param options - Options for deleting the webhook\n */\n","ex":[{"k":"Content","t":"deleteWebhook(id"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", options?: "},{"k":"Reference","t":"WebhookDeleteOptions","c":"discord.js!WebhookDeleteOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":80,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"options","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteWebhook"},{"k":"Method","c":"discord.js!BaseClient#destroy:member(1)","d":"/**\n * Destroys all assets used by the base client.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"destroy","c":"discord.js!BaseClient#destroy"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":62,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"destroy"},{"k":"Property","c":"discord.js!BaseClient#options:member","d":"/**\n * The options the client was instantiated with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!BaseClient#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookClientOptions","c":"discord.js!WebhookClientOptions:interface"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseClient#rest:member","d":"/**\n * The REST manager of the client\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rest","c":"discord.js!BaseClient#rest"},{"k":"Content","t":": "},{"k":"Reference","t":"REST","c":"@discordjs/rest!REST:class"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"rest","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseClient#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!BaseClient#toJSON"},{"k":"Content","t":"(..."},{"k":"Reference","t":"props","c":"discord.js!~props"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":528,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"props","ptr":{"st":5,"en":13},"op":false,"rs":true}],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!BaseComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseComponentData","c":"discord.js!BaseComponentData:interface"},{"k":"Content","t":" "}],"pat":"src/util/Components.js","l":6,"co":1,"r":"Public","n":"BaseComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseComponentData#type:member","d":"/**\n * The type of component\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!BaseComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":288,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!BaseFetchOptions:interface","d":"/**\n * Options used to fetch data from Discord\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ApplicationCommandManager.js","l":74,"co":1,"r":"Public","n":"BaseFetchOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseFetchOptions#cache:member","d":"/**\n * Whether to cache the fetched data if it wasn't already\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!BaseFetchOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4953,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseFetchOptions#force:member","d":"/**\n * Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Reference","t":"force","c":"discord.js!BaseFetchOptions#force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4954,"co":3,"ro":false,"op":true,"r":"Public","n":"force","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!BaseGuild:class","d":"/**\n * The base class for {@link Guild}, {@link OAuth2Guild} and {@link InviteGuild}.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"BaseGuild","c":"discord.js!BaseGuild:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/BaseGuild.js","l":13,"co":1,"r":"Public","ab":true,"n":"BaseGuild","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseGuild:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseGuild` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawBaseGuildData","c":"discord.js!~RawBaseGuildData:type"},{"k":"Content","t":");"}],"l":13,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!BaseGuild#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!BaseGuild#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!BaseGuild#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#features:member","d":"/**\n * An array of features available to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"features","c":"discord.js!BaseGuild#features"},{"k":"Content","t":": "},{"k":"Content","t":"`${"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:enum"},{"k":"Content","t":"}`[]"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuild#fetch:member(1)","d":"/**\n * Fetches this guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!BaseGuild#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":103,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!BaseGuild#icon:member","d":"/**\n * The icon hash of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!BaseGuild#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuild#iconURL:member(1)","d":"/**\n * The URL to this guild's icon.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!BaseGuild#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":95,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!BaseGuild#id:member","d":"/**\n * The guild's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!BaseGuild#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!BaseGuild#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#nameAcronym:member","d":"/**\n * The acronym that shows up in place of a guild icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"nameAcronym","c":"discord.js!BaseGuild#nameAcronym"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":true,"op":false,"r":"Public","n":"nameAcronym","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuild#partnered:member","d":"/**\n * Whether this guild is partnered\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partnered","c":"discord.js!BaseGuild#partnered"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":true,"op":false,"r":"Public","n":"partnered","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuild#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!BaseGuild#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":114,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!BaseGuild#verified:member","d":"/**\n * Whether this guild is verified\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"verified","c":"discord.js!BaseGuild#verified"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseGuildEmoji:class","d":"/**\n * Parent class for {@link GuildEmoji} and {@link GuildPreviewEmoji}.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseGuildEmoji","c":"discord.js!BaseGuildEmoji:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" "}],"pat":"src/structures/BaseGuildEmoji.js","l":10,"co":1,"r":"Public","ab":false,"n":"BaseGuildEmoji","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseGuildEmoji:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseGuildEmoji` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawGuildEmojiData","c":"discord.js!~RawGuildEmojiData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":");"}],"l":10,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"guild","ptr":{"st":12,"en":15},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!BaseGuildEmoji#animated:member","d":"/**\n * Whether or not the emoji is animated\n */\n","ex":[{"k":"Content","t":"undefined animated :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":21,"ro":false,"op":true,"r":"Public","n":"animated","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#available:member","d":"/**\n * Whether this emoji is available\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"available","c":"discord.js!BaseGuildEmoji#available"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"available","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#createdAt:member","d":"/**\n * The time the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!BaseGuildEmoji#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":84,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#createdTimestamp:member","d":"/**\n * The timestamp the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!BaseGuildEmoji#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":75,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#guild:member","d":"/**\n * The guild this emoji is a part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!BaseGuildEmoji#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#id:member","d":"/**\n * The emoji's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!BaseGuildEmoji#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#identifier:member","d":"/**\n * The identifier of this emoji, used for message reactions\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly identifier :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":41,"ro":true,"op":false,"r":"Public","n":"identifier","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildEmoji#imageURL:member(1)","d":"/**\n * Returns a URL for the emoji.\n *\n * @param options - Options for the image URL\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"imageURL","c":"discord.js!BaseGuildEmoji#imageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":56,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"imageURL"},{"k":"Property","c":"discord.js!BaseGuildEmoji#managed:member","d":"/**\n * Whether this emoji is managed by an external service\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"managed","c":"discord.js!BaseGuildEmoji#managed"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"managed","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#name:member","d":"/**\n * The emoji's name\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":27,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#requiresColons:member","d":"/**\n * Whether or not this emoji requires colons surrounding it\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"requiresColons","c":"discord.js!BaseGuildEmoji#requiresColons"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"requiresColons","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmoji#url:member","d":"/**\n * Returns a URL for the emoji.\n *\n * @deprecated\n *\n * Use {@link BaseGuildEmoji.imageURL} instead.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!BaseGuildEmoji#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseGuildEmojiManager:class","d":"/**\n * Holds methods to resolve GuildEmojis and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseGuildEmojiManager","c":"discord.js!BaseGuildEmojiManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":", "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/BaseGuildEmojiManager.js","l":12,"co":1,"r":"Public","ab":false,"n":"BaseGuildEmojiManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseGuildEmojiManager:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseGuildEmojiManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawGuildEmojiData","c":"discord.js!~RawGuildEmojiData:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":12,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"iterable","ptr":{"st":8,"en":12},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!BaseGuildEmojiManager#cache:member","d":"/**\n * The cache of GuildEmojis\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":17,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildEmojiManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildEmojiManager#resolve:member(1)","d":"/**\n * Resolves an EmojiResolvable to an Emoji object.\n *\n * @param emoji - The Emoji resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolve(emoji"},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":";"}],"l":36,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!BaseGuildEmojiManager#resolveId:member(1)","d":"/**\n * Resolves an EmojiResolvable to an Emoji id string.\n *\n * @param emoji - The Emoji resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolveId(emoji"},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":46,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!BaseGuildEmojiManager#resolveIdentifier:member(1)","d":"/**\n * Resolves an EmojiResolvable to an emoji identifier.\n *\n * @param emoji - The emoji resolvable to resolve\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveIdentifier","c":"discord.js!BaseGuildEmojiManager#resolveIdentifier"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":64,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveIdentifier"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"discord.js!BaseGuildTextChannel:class","d":"/**\n * Represents a text-based guild channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseGuildTextChannel","c":"discord.js!BaseGuildTextChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextBasedChannelMixin","c":"discord.js!TextBasedChannelMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":", true)"},{"k":"Content","t":" "}],"pat":"src/structures/BaseGuildTextChannel.js","l":13,"co":1,"r":"Public","ab":false,"n":"BaseGuildTextChannel","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseGuildTextChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseGuildTextChannel` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawGuildChannelData","c":"discord.js!~RawGuildChannelData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"immediatePatch","c":"discord.js!~immediatePatch"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":");"}],"l":13,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"guild","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"data","ptr":{"st":7,"en":8},"op":true,"rs":false},{"pn":"client","ptr":{"st":11,"en":13},"op":true,"rs":false},{"pn":"immediatePatch","ptr":{"st":16,"en":17},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!BaseGuildTextChannel#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a message component interaction\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * channel.awaitMessageComponent({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessageComponent(options?"},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":249,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#awaitMessages:member(1)","d":"/**\n * Similar to createMessageCollector but in promise form. Resolves with a collection of messages that pass the specified filter.\n *\n * @param options - Optional options to pass to the internal collector\n *\n * @example\n * ```js\n * // Await !vote messages\n * const filter = m => m.content.startsWith('!vote');\n * // Errors: ['time'] treats ending because of the time limit as an error\n * channel.awaitMessages({ filter, max: 4, time: 60_000, errors: ['time'] })\n *   .then(collected => console.log(collected.size))\n *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessages(options?"},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":205,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessages"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#bulkDelete:member(1)","d":"/**\n * Bulk deletes given messages that are newer than two weeks.\n *\n * @param messages - Messages or number of messages to delete\n *\n * @param filterOld - Filter messages to remove those which are older than two weeks automatically\n *\n * @returns Returns the deleted messages *\n *\n * @example\n * ```js\n * // Bulk delete messages\n * channel.bulkDelete(5)\n *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"bulkDelete(messages"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", filterOld?: "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ("},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"undefined","c":"discord.js!undefined:class"},{"k":"Content","t":")>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":273,"sta":false,"rtr":{"st":17,"en":27},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"messages","ptr":{"st":1,"en":14},"op":false,"rs":false},{"pn":"filterOld","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"bulkDelete"},{"k":"Property","c":"discord.js!BaseGuildTextChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildTextChannel#createInvite:member(1)","d":"/**\n * Creates an invite to this guild channel.\n *\n * @param options - The options for creating the invite\n *\n * @example\n * ```js\n * // Create an invite to a channel\n * channel.createInvite()\n *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createInvite","c":"discord.js!BaseGuildTextChannel#createInvite"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":163,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createInvite"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#createMessageCollector:member(1)","d":"/**\n * Creates a Message Collector.\n *\n * @param options - The options to pass to the collector\n *\n * @example\n * ```js\n * // Create a message collector\n * const filter = message => message.content.includes('discord');\n * const collector = channel.createMessageCollector({ filter, time: 15_000 });\n * collector.on('collect', message => console.log(`Collected ${message.content}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageCollector(options?"},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":182,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageCollector"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#createMessageComponentCollector:member(1)","d":"/**\n * Creates a component interaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a button interaction collector\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * const collector = channel.createMessageComponentCollector({ filter, time: 15_000 });\n * collector.on('collect', interaction => console.log(`Collected ${interaction.customId}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageComponentCollector(options?"},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":229,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#createWebhook:member(1)","d":"/**\n * Creates a webhook for the channel.\n *\n * @param options - Options for creating the webhook\n *\n * @returns Returns the created Webhook *\n *\n * @example\n * ```js\n * // Create a webhook for the current channel\n * channel.createWebhook({\n *   name: 'Snek',\n *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n *   reason: 'Needed a cool new Webhook'\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createWebhook(options?"},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":350,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createWebhook"},{"k":"Property","c":"discord.js!BaseGuildTextChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!BaseGuildTextChannel#defaultAutoArchiveDuration"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":";"}],"l":74,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultThreadRateLimitPerUser","c":"discord.js!BaseGuildTextChannel#defaultThreadRateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildTextChannel#fetchInvites:member(1)","d":"/**\n * Fetches a collection of invites to this guild channel. Resolves with a collection mapping invites by their codes.\n *\n * @param cache - Whether or not to cache the fetched invites\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchInvites","c":"discord.js!BaseGuildTextChannel#fetchInvites"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":173,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchInvites"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#fetchWebhooks:member(1)","d":"/**\n * Fetches all webhooks for the channel.\n *\n * @example\n * ```js\n * // Fetch webhooks\n * channel.fetchWebhooks()\n *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"fetchWebhooks(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":324,"sta":false,"rtr":{"st":1,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWebhooks"},{"k":"Property","c":"discord.js!BaseGuildTextChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":58,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#lastPinAt:member","d":"/**\n * The date when the last pinned message was pinned, if there was one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastPinAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":51,"ro":true,"op":true,"r":"Public","n":"lastPinAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#lastPinTimestamp:member","d":"/**\n * The timestamp when the last pinned message was pinned, if there was one\n */\n","ex":[{"k":"Content","t":"undefined lastPinTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":66,"ro":false,"op":true,"r":"Public","n":"lastPinTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nsfw","c":"discord.js!BaseGuildTextChannel#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#rateLimitPerUser:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!BaseGuildTextChannel#rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":654,"co":3,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildTextChannel#send:member(1)","d":"/**\n * Sends a message to this channel.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a basic message\n * channel.send('hello!')\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a remote file\n * channel.send({\n *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a local file\n * channel.send({\n *   files: [{\n *     attachment: 'entire/path/to/file.jpg',\n *     name: 'file.jpg',\n *     description: 'A description of the file'\n *   }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":137,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#sendTyping:member(1)","d":"/**\n * Sends a typing indicator in the channel.\n *\n * @returns Resolves upon the typing status being sent *\n *\n * @example\n * ```js\n * // Start typing in a channel\n * channel.sendTyping();\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendTyping(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":167,"sta":false,"rtr":{"st":1,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendTyping"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setDefaultAutoArchiveDuration:member(1)","d":"/**\n * Sets the default auto archive duration for all newly created threads in this channel.\n *\n * @param defaultAutoArchiveDuration - The new default auto archive duration\n *\n * @param reason - Reason for changing the channel's default auto archive duration\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultAutoArchiveDuration","c":"discord.js!BaseGuildTextChannel#setDefaultAutoArchiveDuration"},{"k":"Content","t":"(  "},{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!~defaultAutoArchiveDuration"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":98,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultAutoArchiveDuration","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultAutoArchiveDuration"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setNSFW:member(1)","d":"/**\n * Sets whether this channel is flagged as NSFW.\n *\n * @param nsfw - Whether the channel should be considered NSFW\n *\n * @param reason - Reason for changing the channel's NSFW flag\n */\n","ex":[{"k":"Content","t":"setNSFW(nsfw?"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":370,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nsfw","ptr":{"st":1,"en":2},"op":true,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setNSFW"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setRateLimitPerUser:member(1)","d":"/**\n * Sets the rate limit per user (slowmode) for this channel.\n *\n * @param rateLimitPerUser - The new rate limit in seconds\n *\n * @param reason - Reason for changing the channel's rate limit\n */\n","ex":[{"k":"Content","t":"setRateLimitPerUser(rateLimitPerUser"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":360,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRateLimitPerUser"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setTopic:member(1)","d":"/**\n * Sets a new topic for the guild channel.\n *\n * @param topic - The new topic for the guild channel\n *\n * @param reason - Reason for changing the guild channel's topic\n *\n * @example\n * ```js\n * // Set a new channel topic\n * channel.setTopic('needs more rate limiting')\n *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setTopic","c":"discord.js!BaseGuildTextChannel#setTopic"},{"k":"Content","t":"("},{"k":"Reference","t":"topic","c":"discord.js!~topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":124,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"topic","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setTopic"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setType:member(1)","d":"/**\n * Sets the type of this channel. <info>Only conversion between {@link TextChannel} and {@link NewsChannel} is supported.</info>\n *\n * @param type - The new channel type\n *\n * @param reason - Reason for changing the channel's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setType","c":"discord.js!BaseGuildTextChannel#setType"},{"k":"Content","t":"("},{"k":"Reference","t":"type","c":"discord.js!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types!ChannelType.GuildText:member"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":109,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"type","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setType"},{"k":"Method","c":"discord.js!BaseGuildTextChannel#setType:member(2)","d":"/**\n * Sets the type of this channel. <info>Only conversion between {@link TextChannel} and {@link NewsChannel} is supported.</info>\n *\n * @param type - The new channel type\n *\n * @param reason - Reason for changing the channel's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setType","c":"discord.js!BaseGuildTextChannel#setType"},{"k":"Content","t":"("},{"k":"Reference","t":"type","c":"discord.js!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":109,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"type","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setType"},{"k":"Property","c":"discord.js!BaseGuildTextChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"threads","c":"discord.js!BaseGuildTextChannel#threads"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!GuildTextThreadManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadTypeForTextChannel","c":"discord.js!AllowedThreadTypeForTextChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"AllowedThreadTypeForNewsChannel","c":"discord.js!AllowedThreadTypeForNewsChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#topic:member","d":"/**\n * The topic of the text channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"topic","c":"discord.js!BaseGuildTextChannel#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":46,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildTextChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseGuildVoiceChannel:class","d":"/**\n * Represents a voice-based guild channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseGuildVoiceChannel","c":"discord.js!BaseGuildVoiceChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextBasedChannelMixin","c":"discord.js!TextBasedChannelMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":", true, [ 'lastPinTimestamp', 'lastPinAt',])"},{"k":"Content","t":" "}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":14,"co":1,"r":"Public","ab":false,"n":"BaseGuildVoiceChannel","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseGuildVoiceChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseGuildVoiceChannel` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawGuildChannelData","c":"discord.js!~RawGuildChannelData:type"},{"k":"Content","t":");"}],"l":14,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"data","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a message component interaction\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * channel.awaitMessageComponent({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessageComponent(options?"},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":249,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#awaitMessages:member(1)","d":"/**\n * Similar to createMessageCollector but in promise form. Resolves with a collection of messages that pass the specified filter.\n *\n * @param options - Optional options to pass to the internal collector\n *\n * @example\n * ```js\n * // Await !vote messages\n * const filter = m => m.content.startsWith('!vote');\n * // Errors: ['time'] treats ending because of the time limit as an error\n * channel.awaitMessages({ filter, max: 4, time: 60_000, errors: ['time'] })\n *   .then(collected => console.log(collected.size))\n *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessages(options?"},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":205,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessages"},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#bitrate:member","d":"/**\n * The bitrate of this voice-based channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bitrate","c":"discord.js!BaseGuildVoiceChannel#bitrate"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"bitrate","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#bulkDelete:member(1)","d":"/**\n * Bulk deletes given messages that are newer than two weeks.\n *\n * @param messages - Messages or number of messages to delete\n *\n * @param filterOld - Filter messages to remove those which are older than two weeks automatically\n *\n * @returns Returns the deleted messages *\n *\n * @example\n * ```js\n * // Bulk delete messages\n * channel.bulkDelete(5)\n *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"bulkDelete(messages"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", filterOld?: "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ("},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"undefined","c":"discord.js!undefined:class"},{"k":"Content","t":")>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":273,"sta":false,"rtr":{"st":17,"en":27},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"messages","ptr":{"st":1,"en":14},"op":false,"rs":false},{"pn":"filterOld","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"bulkDelete"},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#createInvite:member(1)","d":"/**\n * Creates an invite to this guild channel.\n *\n * @param options - The options for creating the invite\n *\n * @example\n * ```js\n * // Create an invite to a channel\n * channel.createInvite()\n *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createInvite","c":"discord.js!BaseGuildVoiceChannel#createInvite"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":147,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createInvite"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#createMessageCollector:member(1)","d":"/**\n * Creates a Message Collector.\n *\n * @param options - The options to pass to the collector\n *\n * @example\n * ```js\n * // Create a message collector\n * const filter = message => message.content.includes('discord');\n * const collector = channel.createMessageCollector({ filter, time: 15_000 });\n * collector.on('collect', message => console.log(`Collected ${message.content}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageCollector(options?"},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":182,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageCollector"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#createMessageComponentCollector:member(1)","d":"/**\n * Creates a component interaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a button interaction collector\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * const collector = channel.createMessageComponentCollector({ filter, time: 15_000 });\n * collector.on('collect', interaction => console.log(`Collected ${interaction.customId}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageComponentCollector(options?"},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":229,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#createWebhook:member(1)","d":"/**\n * Creates a webhook for the channel.\n *\n * @param options - Options for creating the webhook\n *\n * @returns Returns the created Webhook *\n *\n * @example\n * ```js\n * // Create a webhook for the current channel\n * channel.createWebhook({\n *   name: 'Snek',\n *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n *   reason: 'Needed a cool new Webhook'\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createWebhook(options?"},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":350,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createWebhook"},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#fetchInvites:member(1)","d":"/**\n * Fetches a collection of invites to this guild channel.\n *\n * @param cache - Whether to cache the fetched invites\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchInvites","c":"discord.js!BaseGuildVoiceChannel#fetchInvites"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":156,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchInvites"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#fetchWebhooks:member(1)","d":"/**\n * Fetches all webhooks for the channel.\n *\n * @example\n * ```js\n * // Fetch webhooks\n * channel.fetchWebhooks()\n *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"fetchWebhooks(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":324,"sta":false,"rtr":{"st":1,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWebhooks"},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#full:member","d":"/**\n * Checks if the voice-based channel is full\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"full","c":"discord.js!BaseGuildVoiceChannel#full"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":114,"co":3,"ro":true,"op":false,"r":"Public","n":"full","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#joinable:member","d":"/**\n * Whether the channel is joinable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joinable","c":"discord.js!BaseGuildVoiceChannel#joinable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":123,"co":3,"ro":true,"op":false,"r":"Public","n":"joinable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":74,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#members:member","d":"/**\n * The members in this voice-based channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"members","c":"discord.js!BaseGuildVoiceChannel#members"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":99,"co":3,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nsfw","c":"discord.js!BaseGuildVoiceChannel#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel in seconds\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!BaseGuildVoiceChannel#rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#rtcRegion:member","d":"/**\n * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rtcRegion","c":"discord.js!BaseGuildVoiceChannel#rtcRegion"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"rtcRegion","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#send:member(1)","d":"/**\n * Sends a message to this channel.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a basic message\n * channel.send('hello!')\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a remote file\n * channel.send({\n *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a local file\n * channel.send({\n *   files: [{\n *     attachment: 'entire/path/to/file.jpg',\n *     name: 'file.jpg',\n *     description: 'A description of the file'\n *   }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":137,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#sendTyping:member(1)","d":"/**\n * Sends a typing indicator in the channel.\n *\n * @returns Resolves upon the typing status being sent *\n *\n * @example\n * ```js\n * // Start typing in a channel\n * channel.sendTyping();\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendTyping(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":167,"sta":false,"rtr":{"st":1,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendTyping"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setBitrate:member(1)","d":"/**\n * Sets the bitrate of the channel.\n *\n * @param bitrate - The new bitrate\n *\n * @param reason - Reason for changing the channel's bitrate\n *\n * @example\n * ```js\n * // Set the bitrate of a voice channel\n * channel.setBitrate(48_000)\n *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setBitrate","c":"discord.js!BaseGuildVoiceChannel#setBitrate"},{"k":"Content","t":"("},{"k":"Reference","t":"bitrate","c":"discord.js!~bitrate"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":171,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bitrate","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setBitrate"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setNSFW:member(1)","d":"/**\n * Sets whether this channel is flagged as NSFW.\n *\n * @param nsfw - Whether the channel should be considered NSFW\n *\n * @param reason - Reason for changing the channel's NSFW flag\n */\n","ex":[{"k":"Content","t":"setNSFW(nsfw?"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":370,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nsfw","ptr":{"st":1,"en":2},"op":true,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setNSFW"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setRateLimitPerUser:member(1)","d":"/**\n * Sets the rate limit per user (slowmode) for this channel.\n *\n * @param rateLimitPerUser - The new rate limit in seconds\n *\n * @param reason - Reason for changing the channel's rate limit\n */\n","ex":[{"k":"Content","t":"setRateLimitPerUser(rateLimitPerUser"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":360,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRateLimitPerUser"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setRTCRegion:member(1)","d":"/**\n * Sets the RTC region of the channel.\n *\n * @param rtcRegion - The new region of the channel. Set to `null` to remove a specific region for the channel\n *\n * @param reason - The reason for modifying this region.\n *\n * @example\n * ```js\n * // Set the RTC region to sydney\n * channel.setRTCRegion('sydney');\n * ```\n *\n * @example\n * ```js\n * // Remove a fixed region for this channel - let Discord decide automatically\n * channel.setRTCRegion(null, 'We want to let Discord decide.');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setRTCRegion","c":"discord.js!BaseGuildVoiceChannel#setRTCRegion"},{"k":"Content","t":"("},{"k":"Reference","t":"rtcRegion","c":"discord.js!~rtcRegion"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":187,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rtcRegion","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRTCRegion"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setUserLimit:member(1)","d":"/**\n * Sets the user limit of the channel.\n *\n * @param userLimit - The new user limit\n *\n * @param reason - Reason for changing the user limit\n *\n * @example\n * ```js\n * // Set the user limit of a voice channel\n * channel.setUserLimit(42)\n *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setUserLimit","c":"discord.js!BaseGuildVoiceChannel#setUserLimit"},{"k":"Content","t":"("},{"k":"Reference","t":"userLimit","c":"discord.js!~userLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":202,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userLimit","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setUserLimit"},{"k":"Method","c":"discord.js!BaseGuildVoiceChannel#setVideoQualityMode:member(1)","d":"/**\n * Sets the camera video quality mode of the channel.\n *\n * @param videoQualityMode - The new camera video quality mode.\n *\n * @param reason - Reason for changing the camera video quality mode.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setVideoQualityMode","c":"discord.js!BaseGuildVoiceChannel#setVideoQualityMode"},{"k":"Content","t":"("},{"k":"Reference","t":"videoQualityMode","c":"discord.js!~videoQualityMode"},{"k":"Content","t":": "},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":212,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"videoQualityMode","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setVideoQualityMode"},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#userLimit:member","d":"/**\n * The maximum amount of users allowed in this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"userLimit","c":"discord.js!BaseGuildVoiceChannel#userLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"userLimit","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#videoQualityMode:member","d":"/**\n * The camera video quality mode of the channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"videoQualityMode","c":"discord.js!BaseGuildVoiceChannel#videoQualityMode"},{"k":"Content","t":": "},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"videoQualityMode","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseGuildVoiceChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseInteraction:class","d":"/**\n * Represents an interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/BaseInteraction.js","l":16,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"BaseInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseInteraction` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawInteractionData","c":"discord.js!~RawInteractionData:type"},{"k":"Content","t":");"}],"l":16,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!BaseInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!BaseInteraction#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"appPermissions","c":"discord.js!BaseInteraction#appPermissions"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":80,"co":3,"ro":false,"op":false,"r":"Public","n":"appPermissions","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!BaseInteraction#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"l":171,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!BaseInteraction#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":50,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!BaseInteraction#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":162,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!BaseInteraction#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":153,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entitlements","c":"discord.js!BaseInteraction#entitlements"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":142,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!BaseInteraction#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":180,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!BaseInteraction#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildLocale","c":"discord.js!BaseInteraction#guildLocale"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":136,"co":3,"ro":false,"op":false,"r":"Public","n":"guildLocale","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!BaseInteraction#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BaseInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!BaseInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!BaseInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!BaseInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!BaseInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!BaseInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Method","c":"discord.js!BaseInteraction#isAnySelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a select menu of any known type.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isAnySelectMenu","c":"discord.js!BaseInteraction#isAnySelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AnySelectMenuInteraction","c":"discord.js!AnySelectMenuInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":296,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isAnySelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isAutocomplete:member(1)","d":"/**\n * Indicates whether this interaction is an {@link AutocompleteInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isAutocomplete","c":"discord.js!BaseInteraction#isAutocomplete"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":212,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isAutocomplete"},{"k":"Method","c":"discord.js!BaseInteraction#isButton:member(1)","d":"/**\n * Indicates whether this interaction is a {@link ButtonInteraction}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isButton","c":"discord.js!BaseInteraction#isButton"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":279,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isButton"},{"k":"Method","c":"discord.js!BaseInteraction#isChannelSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link ChannelSelectMenuInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isChannelSelectMenu","c":"discord.js!BaseInteraction#isChannelSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":328,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isChannelSelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isChatInputCommand:member(1)","d":"/**\n * Indicates whether this interaction is a {@link ChatInputCommandInteraction}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isChatInputCommand","c":"discord.js!BaseInteraction#isChatInputCommand"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":228,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isChatInputCommand"},{"k":"Method","c":"discord.js!BaseInteraction#isCommand:member(1)","d":"/**\n * Indicates whether this interaction is a {@link CommandInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isCommand","c":"discord.js!BaseInteraction#isCommand"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":220,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isCommand"},{"k":"Method","c":"discord.js!BaseInteraction#isContextMenuCommand:member(1)","d":"/**\n * Indicates whether this interaction is a {@link ContextMenuCommandInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isContextMenuCommand","c":"discord.js!BaseInteraction#isContextMenuCommand"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":236,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isContextMenuCommand"},{"k":"Method","c":"discord.js!BaseInteraction#isMentionableSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link MentionableSelectMenuInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isMentionableSelectMenu","c":"discord.js!BaseInteraction#isMentionableSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":336,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isMentionableSelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isMessageComponent:member(1)","d":"/**\n * Indicates whether this interaction is a {@link MessageComponentInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isMessageComponent","c":"discord.js!BaseInteraction#isMessageComponent"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":247,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isMessageComponent"},{"k":"Method","c":"discord.js!BaseInteraction#isMessageContextMenuCommand:member(1)","d":"/**\n * Indicates whether this interaction is a {@link MessageContextMenuCommandInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isMessageContextMenuCommand","c":"discord.js!BaseInteraction#isMessageContextMenuCommand"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":271,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isMessageContextMenuCommand"},{"k":"Method","c":"discord.js!BaseInteraction#isModalSubmit:member(1)","d":"/**\n * Indicates whether this interaction is a {@link ModalSubmitInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isModalSubmit","c":"discord.js!BaseInteraction#isModalSubmit"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":255,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isModalSubmit"},{"k":"Method","c":"discord.js!BaseInteraction#isRepliable:member(1)","d":"/**\n * Indicates whether this interaction can be replied to.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isRepliable","c":"discord.js!BaseInteraction#isRepliable"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"RepliableInteraction","c":"discord.js!RepliableInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":344,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isRepliable"},{"k":"Method","c":"discord.js!BaseInteraction#isRoleSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link RoleSelectMenuInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isRoleSelectMenu","c":"discord.js!BaseInteraction#isRoleSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":320,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isRoleSelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link StringSelectMenuInteraction}.\n *\n * @deprecated\n *\n * Use {@link BaseInteraction.isStringSelectMenu} instead.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isSelectMenu","c":"discord.js!BaseInteraction#isSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":288,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isSelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isStringSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link StringSelectMenuInteraction}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isStringSelectMenu","c":"discord.js!BaseInteraction#isStringSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":304,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isStringSelectMenu"},{"k":"Method","c":"discord.js!BaseInteraction#isUserContextMenuCommand:member(1)","d":"/**\n * Indicates whether this interaction is a {@link UserContextMenuCommandInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isUserContextMenuCommand","c":"discord.js!BaseInteraction#isUserContextMenuCommand"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":263,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isUserContextMenuCommand"},{"k":"Method","c":"discord.js!BaseInteraction#isUserSelectMenu:member(1)","d":"/**\n * Indicates whether this interaction is a {@link UserSelectMenuInteraction}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isUserSelectMenu","c":"discord.js!BaseInteraction#isUserSelectMenu"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":312,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isUserSelectMenu"},{"k":"Property","c":"discord.js!BaseInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"locale","c":"discord.js!BaseInteraction#locale"},{"k":"Content","t":": "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":";"}],"l":130,"co":3,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"member","c":"discord.js!BaseInteraction#member"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":68,"co":3,"ro":false,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"memberPermissions","c":"discord.js!BaseInteraction#memberPermissions"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":false,"op":false,"r":"Public","n":"memberPermissions","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"token","c":"discord.js!BaseInteraction#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!BaseInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:enum"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!BaseInteraction#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":62,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"version","c":"discord.js!BaseInteraction#version"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":74,"co":3,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!BaseManager:class","d":"/**\n * Manages the API methods of a data model.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"BaseManager","c":"discord.js!BaseManager:class"},{"k":"Content","t":" "}],"pat":"src/managers/BaseManager.js","l":7,"co":1,"r":"Public","ab":true,"n":"BaseManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseManager:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":");"}],"l":7,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":4},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!BaseManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!BaseManager#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":9,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!BaseMessageOptions:interface","d":"/**\n * The base message options for messages.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseMessageOptions","c":"discord.js!BaseMessageOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":55,"co":1,"r":"Public","n":"BaseMessageOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseMessageOptions#allowedMentions:member","d":"/**\n * Which mentions should be parsed from the message content (see [here](https://discord.com/developers/docs/resources/channel#allowed-mentions-object) for more details)\n */\n","ex":[{"k":"Reference","t":"allowedMentions","c":"discord.js!BaseMessageOptions#allowedMentions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageMentionOptions","c":"discord.js!MessageMentionOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6210,"co":3,"ro":false,"op":true,"r":"Public","n":"allowedMentions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseMessageOptions#components:member","d":"/**\n * Action rows containing interactive components for the message (buttons, select menus)\n */\n","ex":[{"k":"Reference","t":"components","c":"discord.js!BaseMessageOptions#components"},{"k":"Content","t":"?: "},{"k":"Content","t":"(  | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":">>  | "},{"k":"Reference","t":"ActionRowData","c":"discord.js!ActionRowData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageActionRowComponentData","c":"discord.js!MessageActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":">  | "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":"> )[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6219,"co":3,"ro":false,"op":true,"r":"Public","n":"components","prtr":{"st":2,"en":19}},{"k":"PropertySignature","c":"discord.js!BaseMessageOptions#content:member","d":"/**\n * The content for the message. This can only be `null` when editing a message.\n */\n","ex":[{"k":"Reference","t":"content","c":"discord.js!BaseMessageOptions#content"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6208,"co":3,"ro":false,"op":true,"r":"Public","n":"content","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseMessageOptions#embeds:member","d":"/**\n * The embeds for the message\n */\n","ex":[{"k":"Reference","t":"embeds","c":"discord.js!BaseMessageOptions#embeds"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":")[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6209,"co":3,"ro":false,"op":true,"r":"Public","n":"embeds","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!BaseMessageOptions#files:member","d":"/**\n * The files to send with the message.\n */\n","ex":[{"k":"Reference","t":"files","c":"discord.js!BaseMessageOptions#files"},{"k":"Content","t":"?: "},{"k":"Content","t":"(  | "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":"  | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIAttachment","c":"discord-api-types!APIAttachment:interface"},{"k":"Content","t":">  | "},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"AttachmentBuilder","c":"discord.js!AttachmentBuilder:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":" )[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6211,"co":3,"ro":false,"op":true,"r":"Public","n":"files","prtr":{"st":2,"en":17}}],"etrs":[]},{"k":"Interface","c":"discord.js!BaseModalData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseModalData","c":"discord.js!BaseModalData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2355,"co":1,"r":"Public","n":"BaseModalData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseModalData#customId:member","d":"","ex":[{"k":"Reference","t":"customId","c":"discord.js!BaseModalData#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":2356,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseModalData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!BaseModalData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";"}],"l":2357,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!BaseSelectMenuComponent:class","d":"/**\n * Represents a select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Data"},{"k":"Content","t":" extends "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Data"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/BaseSelectMenuComponent.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Data","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":false,"n":"BaseSelectMenuComponent","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!BaseSelectMenuComponent:constructor(1)","d":"/**\n * Constructs a new instance of the `BaseSelectMenuComponent` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Data"},{"k":"Content","t":");"}],"l":9,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":4},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"customId","c":"discord.js!BaseSelectMenuComponent#customId"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"disabled","c":"discord.js!BaseSelectMenuComponent#disabled"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"maxValues","c":"discord.js!BaseSelectMenuComponent#maxValues"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":true,"op":false,"r":"Public","n":"maxValues","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"minValues","c":"discord.js!BaseSelectMenuComponent#minValues"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":true,"op":false,"r":"Public","n":"minValues","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"placeholder","c":"discord.js!BaseSelectMenuComponent#placeholder"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"placeholder","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!BaseSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":7,"en":11,"tps":[{"st":9,"en":10}]},"itrs":[]},{"k":"Interface","c":"discord.js!BaseSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseComponentData","c":"discord.js!BaseComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6261,"co":1,"r":"Public","n":"BaseSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!BaseSelectMenuComponentData#customId:member","d":"","ex":[{"k":"Reference","t":"customId","c":"discord.js!BaseSelectMenuComponentData#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6262,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseSelectMenuComponentData#disabled:member","d":"","ex":[{"k":"Reference","t":"disabled","c":"discord.js!BaseSelectMenuComponentData#disabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":6263,"co":3,"ro":false,"op":true,"r":"Public","n":"disabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseSelectMenuComponentData#maxValues:member","d":"","ex":[{"k":"Reference","t":"maxValues","c":"discord.js!BaseSelectMenuComponentData#maxValues"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6264,"co":3,"ro":false,"op":true,"r":"Public","n":"maxValues","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseSelectMenuComponentData#minValues:member","d":"","ex":[{"k":"Reference","t":"minValues","c":"discord.js!BaseSelectMenuComponentData#minValues"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6265,"co":3,"ro":false,"op":true,"r":"Public","n":"minValues","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!BaseSelectMenuComponentData#placeholder:member","d":"","ex":[{"k":"Reference","t":"placeholder","c":"discord.js!BaseSelectMenuComponentData#placeholder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6266,"co":3,"ro":false,"op":true,"r":"Public","n":"placeholder","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!BitField:class","d":"/**\n * Data structure that makes it easy to interact with a bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" = "},{"k":"Reference","t":"number"},{"k":"Content","t":"> "}],"pat":"src/util/BitField.js","l":8,"co":1,"r":"Public","tps":[{"tp":"Flags","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Type","ctr":{"st":9,"en":12},"dtr":{"st":13,"en":14}}],"ab":false,"n":"BitField","pmo":false,"ms":[{"k":"Method","c":"discord.js!BitField#[Symbol.iterator]:member(1)","d":"","ex":[{"k":"Content","t":"public ["},{"k":"Reference","t":"Symbol.iterator","c":"!SymbolConstructor#iterator"},{"k":"Content","t":"](): "},{"k":"Reference","t":"IterableIterator","c":"!IterableIterator:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":707,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"[Symbol.iterator]"},{"k":"Constructor","c":"discord.js!BitField:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"bits","c":"discord.js!~bits"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":8,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!BitField#add:member(1)","d":"/**\n * Adds bits to these ones.\n *\n * @param bits - Bits to add\n *\n * @returns These bits or new BitField if the instance is frozen.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!BitField#add"},{"k":"Content","t":"(..."},{"k":"Reference","t":"bits","c":"discord.js!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":87,"co":3,"sta":false,"rtr":{"st":12,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":5,"en":11},"op":false,"rs":true}],"op":false,"ab":false,"n":"add"},{"k":"Method","c":"discord.js!BitField#any:member(1)","d":"/**\n * Checks whether the bitfield has a bit, or any of multiple bits.\n *\n * @param bit - Bit(s) to check for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"any","c":"discord.js!BitField#any"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":41,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"any"},{"k":"Property","c":"discord.js!BitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bitfield","c":"discord.js!BitField#bitfield"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BitField#equals:member(1)","d":"/**\n * Checks if this bitfield equals another\n *\n * @param bit - Bit(s) to check for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!BitField#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":50,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!BitField.Flags:member","d":"/**\n * Numeric bitfield flags. <info>Defined in extension classes</info>\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!BitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"EnumLike","c":"discord.js!EnumLike:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":11},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!BitField#freeze:member(1)","d":"/**\n * Freezes these bits, making them immutable.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"freeze","c":"discord.js!BitField#freeze"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":78,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"freeze"},{"k":"Method","c":"discord.js!BitField#has:member(1)","d":"/**\n * Checks whether the bitfield has a bit, or multiple bits.\n *\n * @param bit - Bit(s) to check for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"has","c":"discord.js!BitField#has"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":59,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"has"},{"k":"Method","c":"discord.js!BitField#missing:member(1)","d":"/**\n * Gets all given bits that are missing from the bitfield.\n *\n * @param bits - Bit(s) to check for\n *\n * @param hasParams - Additional parameters for the has method, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"missing","c":"discord.js!BitField#missing"},{"k":"Content","t":"("},{"k":"Reference","t":"bits","c":"discord.js!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":", ..."},{"k":"Reference","t":"hasParams","c":"discord.js!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Flags"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":70,"co":3,"sta":false,"rtr":{"st":18,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":5,"en":11},"op":false,"rs":false},{"pn":"hasParams","ptr":{"st":14,"en":17},"op":false,"rs":true}],"op":false,"ab":false,"n":"missing"},{"k":"Method","c":"discord.js!BitField#remove:member(1)","d":"/**\n * Removes bits from these.\n *\n * @param bits - Bits to remove\n *\n * @returns These bits or new BitField if the instance is frozen.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!BitField#remove"},{"k":"Content","t":"(..."},{"k":"Reference","t":"bits","c":"discord.js!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":102,"co":3,"sta":false,"rtr":{"st":12,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":5,"en":11},"op":false,"rs":true}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!BitField.resolve:member(1)","d":"/**\n * Resolves bitfields to their numeric form.\n *\n * @param bit - bit(s) to resolve\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!BitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":163,"co":3,"sta":true,"rtr":{"st":14,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":13},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!BitField#serialize:member(1)","d":"/**\n * Gets an object mapping field names to a {@link boolean} indicating whether the bit is available.\n *\n * @param hasParams - Additional parameters for the has method, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"serialize","c":"discord.js!BitField#serialize"},{"k":"Content","t":"(..."},{"k":"Reference","t":"hasParams","c":"discord.js!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":118,"co":3,"sta":false,"rtr":{"st":9,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hasParams","ptr":{"st":5,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"serialize"},{"k":"Method","c":"discord.js!BitField#toArray:member(1)","d":"/**\n * Gets an {@link Array} of bitfield names based on the bits available.\n *\n * @param hasParams - Additional parameters for the has method, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toArray","c":"discord.js!BitField#toArray"},{"k":"Content","t":"(..."},{"k":"Reference","t":"hasParams","c":"discord.js!~hasParams"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Flags"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":131,"co":3,"sta":false,"rtr":{"st":9,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hasParams","ptr":{"st":5,"en":8},"op":false,"rs":true}],"op":false,"ab":false,"n":"toArray"},{"k":"Method","c":"discord.js!BitField#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!BitField#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"number"},{"k":"Content","t":" ? "},{"k":"Reference","t":"number"},{"k":"Content","t":" : "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":705,"co":3,"sta":false,"rtr":{"st":3,"en":10},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!BitField#valueOf:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"valueOf","c":"discord.js!BitField#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":706,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!BitFieldResolvable:type","d":"/**\n * Data that can be resolved to give a bitfield. This can be:\n *\n * * A bit number (this can be a number literal or a value taken from {@link BitField.Flags})\n *\n * * A string bit number\n *\n * * An instance of BitField\n *\n * * An Array of BitFieldResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":"> = "},{"k":"Content","t":"| "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"discord.js!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":" | "},{"k":"Reference","t":"Type"},{"k":"Content","t":" | `${"},{"k":"Reference","t":"bigint"},{"k":"Content","t":"}` | "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">>> | "},{"k":"Reference","t":"Flags"},{"k":"Content","t":" | "},{"k":"Reference","t":"Type"},{"k":"Content","t":" | `${"},{"k":"Reference","t":"bigint"},{"k":"Content","t":"}` | "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Flags"},{"k":"Content","t":", "},{"k":"Reference","t":"Type"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":149,"co":1,"r":"Public","n":"BitFieldResolvable","tps":[{"tp":"Flags","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Type","ctr":{"st":9,"en":12},"dtr":{"st":0,"en":0}}],"ttr":{"st":13,"en":44}},{"k":"TypeAlias","c":"discord.js!BooleanCache:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends 'cached' ? true : false"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":539,"co":1,"r":"Public","n":"BooleanCache","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":9}},{"k":"TypeAlias","c":"discord.js!BufferResolvable:type","d":"/**\n * Data that can be resolved to give a Buffer. This can be:\n *\n * * A Buffer\n *\n * * The path to a local file\n *\n * * A URL <warn>When provided a URL, discord.js will fetch the URL internally in order to create a Buffer. This can pose a security risk when the URL has not been sanitized</warn>\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Buffer","c":"!\"\\\"buffer\\\"\".__global.Buffer:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/DataResolver.js","l":56,"co":1,"r":"Public","n":"BufferResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!ButtonBuilder:class","d":"/**\n * Represents a button builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ButtonBuilder","c":"discord.js!ButtonBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderButtonComponent","c":"@discordjs/builders!ButtonBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/ButtonBuilder.js","l":12,"co":1,"r":"Public","ab":false,"n":"ButtonBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ButtonBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `ButtonBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ButtonComponentData","c":"discord.js!ButtonComponentData:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":12,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":11},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!ButtonBuilder.from:member(1)","d":"/**\n * Creates a new button builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!ButtonBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"ButtonBuilder","c":"discord.js!ButtonBuilder:class"},{"k":"Content","t":";"}],"l":34,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Method","c":"discord.js!ButtonBuilder#setEmoji:member(1)","d":"/**\n * Sets the emoji to display on this button\n *\n * @param emoji - The emoji to display on this button\n */\n","ex":[{"k":"Content","t":"public override "},{"k":"Reference","t":"setEmoji","c":"discord.js!ButtonBuilder#setEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentEmojiResolvable","c":"discord.js!ComponentEmojiResolvable:type"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":22,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setEmoji"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ButtonComponent:class","d":"/**\n * Represents a button component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ButtonComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"ButtonComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!ButtonComponent#customId:member","d":"/**\n * The custom id of this button (only defined on non-link buttons)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"customId","c":"discord.js!ButtonComponent#customId"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#disabled:member","d":"/**\n * Whether this button is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"disabled","c":"discord.js!ButtonComponent#disabled"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#emoji:member","d":"/**\n * The emoji used in this button\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"emoji","c":"discord.js!ButtonComponent#emoji"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIMessageComponentEmoji","c":"discord-api-types!APIMessageComponentEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":true,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#label:member","d":"/**\n * The label of this button\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"label","c":"discord.js!ButtonComponent#label"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":true,"op":false,"r":"Public","n":"label","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#style:member","d":"/**\n * The style of this button\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"style","c":"discord.js!ButtonComponent#style"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"style","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonComponent#url:member","d":"/**\n * The URL of this button (only defined on link buttons)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!ButtonComponent#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ButtonComponentData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ButtonComponentData","c":"discord.js!ButtonComponentData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"InteractionButtonComponentData","c":"discord.js!InteractionButtonComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"LinkButtonComponentData","c":"discord.js!LinkButtonComponentData:interface"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":16,"co":1,"r":"Public","n":"ButtonComponentData","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!ButtonInteraction:class","d":"/**\n * Represents a button interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ButtonInteraction.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ButtonInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!ButtonInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!ButtonInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIButtonComponent","c":"discord-api-types!APIButtonComponent:type"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!ButtonInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ButtonInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!ButtonInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!ButtonInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!ButtonInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!ButtonInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!ButtonInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!ButtonInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ButtonInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!CacheConstructors:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CacheConstructors","c":"discord.js!CacheConstructors:type"},{"k":"Content","t":" = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"Cache"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Cache"},{"k":"Content","t":"][0] & { "},{"k":"Reference","t":"name","c":"discord.js!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"Cache"},{"k":"Content","t":" };}"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4996,"co":1,"r":"Public","n":"CacheConstructors","ttr":{"st":3,"en":16}},{"k":"Class","c":"discord.js!CachedManager:class","d":"/**\n * Manages the API methods of a data model with a mutable cache of instances.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Holds"},{"k":"Content","t":", "},{"k":"Reference","t":"Resolvable"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Holds"},{"k":"Content","t":", "},{"k":"Reference","t":"Resolvable"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/CachedManager.js","l":11,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Holds","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Resolvable","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":true,"n":"CachedManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!CachedManager:constructor(1)","d":"/**\n * Constructs a new instance of the `CachedManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"holds","c":"discord.js!~holds"},{"k":"Content","t":": "},{"k":"Reference","t":"Constructable","c":"discord.js!Constructable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"holds","ptr":{"st":8,"en":12},"op":false,"rs":false},{"pn":"iterable","ptr":{"st":15,"en":19},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!CachedManager#cache:member","d":"/**\n * The cache of items for this manager.\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":";"}],"l":42,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":true},{"k":"Property","c":"discord.js!CachedManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":17,"tps":[{"st":11,"en":12},{"st":13,"en":14},{"st":15,"en":16}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!CacheFactory:type","d":"/**\n * @param managerType - The base manager class the cache is being requested from.\n *\n * @param holds - The class that the cache will hold.\n *\n * @param manager - The fully extended manager class the cache is being requested from.\n *\n * @returns A Collection used to store the cache of the manager.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CacheFactory","c":"discord.js!CacheFactory:type"},{"k":"Content","t":" = "},{"k":"Content","t":"( "},{"k":"Reference","t":"managerType","c":"discord.js!~managerType"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheConstructors","c":"discord.js!CacheConstructors:type"},{"k":"Content","t":"["},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"OverriddenCaches","c":"discord.js!~OverriddenCaches:type"},{"k":"Content","t":">], "},{"k":"Reference","t":"holds","c":"discord.js!~holds"},{"k":"Content","t":": "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"[("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"manager","c":"discord.js!~manager:var"},{"k":"Content","t":")['name']][1], "},{"k":"Reference","t":"manager","c":"discord.js!~manager"},{"k":"Content","t":": "},{"k":"Reference","t":"CacheConstructors","c":"discord.js!CacheConstructors:type"},{"k":"Content","t":"[keyof "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"],) => ("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"manager","c":"discord.js!~manager:var"},{"k":"Content","t":")['prototype'] extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"Key"},{"k":"Content","t":", infer "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"any"},{"k":"Content","t":"> ? "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"src/util/Options.js","l":8,"co":1,"r":"Public","n":"CacheFactory","ttr":{"st":3,"en":47}},{"k":"Interface","c":"discord.js!Caches:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4966,"co":1,"r":"Public","n":"Caches","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!Caches#ApplicationCommandManager:member","d":"","ex":[{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!Caches#ApplicationCommandManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!ApplicationCommandManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4968,"co":3,"ro":false,"op":false,"r":"Public","n":"ApplicationCommandManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#AutoModerationRuleManager:member","d":"","ex":[{"k":"Reference","t":"AutoModerationRuleManager","c":"discord.js!Caches#AutoModerationRuleManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"AutoModerationRuleManager","c":"discord.js!AutoModerationRuleManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4967,"co":3,"ro":false,"op":false,"r":"Public","n":"AutoModerationRuleManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#BaseGuildEmojiManager:member","d":"","ex":[{"k":"Reference","t":"BaseGuildEmojiManager","c":"discord.js!Caches#BaseGuildEmojiManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"BaseGuildEmojiManager","c":"discord.js!BaseGuildEmojiManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4969,"co":3,"ro":false,"op":false,"r":"Public","n":"BaseGuildEmojiManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#DMMessageManager:member","d":"","ex":[{"k":"Reference","t":"DMMessageManager","c":"discord.js!Caches#DMMessageManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<false>]"},{"k":"Content","t":";"}],"l":4970,"co":3,"ro":false,"op":false,"r":"Public","n":"DMMessageManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildBanManager:member","d":"","ex":[{"k":"Reference","t":"GuildBanManager","c":"discord.js!Caches#GuildBanManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildBanManager","c":"discord.js!GuildBanManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4976,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildBanManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildEmojiManager:member","d":"","ex":[{"k":"Reference","t":"GuildEmojiManager","c":"discord.js!Caches#GuildEmojiManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildEmojiManager","c":"discord.js!GuildEmojiManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4971,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildEmojiManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildForumThreadManager:member","d":"","ex":[{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!Caches#GuildForumThreadManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!GuildForumThreadManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<true>]"},{"k":"Content","t":";"}],"l":4977,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildForumThreadManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildInviteManager:member","d":"","ex":[{"k":"Reference","t":"GuildInviteManager","c":"discord.js!Caches#GuildInviteManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildInviteManager","c":"discord.js!GuildInviteManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4978,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildInviteManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildMemberManager:member","d":"","ex":[{"k":"Reference","t":"GuildMemberManager","c":"discord.js!Caches#GuildMemberManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildMemberManager","c":"discord.js!GuildMemberManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4975,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildMemberManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildMessageManager:member","d":"","ex":[{"k":"Reference","t":"GuildMessageManager","c":"discord.js!Caches#GuildMessageManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<true>]"},{"k":"Content","t":";"}],"l":4979,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildMessageManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildScheduledEventManager:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventManager","c":"discord.js!Caches#GuildScheduledEventManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildScheduledEventManager","c":"discord.js!GuildScheduledEventManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4980,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildScheduledEventManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildStickerManager:member","d":"","ex":[{"k":"Reference","t":"GuildStickerManager","c":"discord.js!Caches#GuildStickerManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildStickerManager","c":"discord.js!GuildStickerManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4981,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildStickerManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#GuildTextThreadManager:member","d":"","ex":[{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!Caches#GuildTextThreadManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!GuildTextThreadManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<false>]"},{"k":"Content","t":";"}],"l":4982,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildTextThreadManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#MessageManager:member","d":"","ex":[{"k":"Reference","t":"MessageManager","c":"discord.js!Caches#MessageManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4983,"co":3,"ro":false,"op":false,"r":"Public","n":"MessageManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#PresenceManager:member","d":"","ex":[{"k":"Reference","t":"PresenceManager","c":"discord.js!Caches#PresenceManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PresenceManager","c":"discord.js!PresenceManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4985,"co":3,"ro":false,"op":false,"r":"Public","n":"PresenceManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#ReactionManager:member","d":"","ex":[{"k":"Reference","t":"ReactionManager","c":"discord.js!Caches#ReactionManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ReactionManager","c":"discord.js!ReactionManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4986,"co":3,"ro":false,"op":false,"r":"Public","n":"ReactionManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#ReactionUserManager:member","d":"","ex":[{"k":"Reference","t":"ReactionUserManager","c":"discord.js!Caches#ReactionUserManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ReactionUserManager","c":"discord.js!ReactionUserManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4987,"co":3,"ro":false,"op":false,"r":"Public","n":"ReactionUserManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#StageInstanceManager:member","d":"","ex":[{"k":"Reference","t":"StageInstanceManager","c":"discord.js!Caches#StageInstanceManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"StageInstanceManager","c":"discord.js!StageInstanceManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4989,"co":3,"ro":false,"op":false,"r":"Public","n":"StageInstanceManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#ThreadManager:member","d":"","ex":[{"k":"Reference","t":"ThreadManager","c":"discord.js!Caches#ThreadManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadManager","c":"discord.js!ThreadManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4990,"co":3,"ro":false,"op":false,"r":"Public","n":"ThreadManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#ThreadMemberManager:member","d":"","ex":[{"k":"Reference","t":"ThreadMemberManager","c":"discord.js!Caches#ThreadMemberManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadMemberManager","c":"discord.js!ThreadMemberManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4991,"co":3,"ro":false,"op":false,"r":"Public","n":"ThreadMemberManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#UserManager:member","d":"","ex":[{"k":"Reference","t":"UserManager","c":"discord.js!Caches#UserManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"UserManager","c":"discord.js!UserManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4992,"co":3,"ro":false,"op":false,"r":"Public","n":"UserManager","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!Caches#VoiceStateManager:member","d":"","ex":[{"k":"Reference","t":"VoiceStateManager","c":"discord.js!Caches#VoiceStateManager"},{"k":"Content","t":": "},{"k":"Content","t":"[manager: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"VoiceStateManager","c":"discord.js!VoiceStateManager:class"},{"k":"Content","t":", holds: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":4993,"co":3,"ro":false,"op":false,"r":"Public","n":"VoiceStateManager","prtr":{"st":2,"en":11}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!CacheType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'cached' | 'raw' | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1815,"co":1,"r":"Public","n":"CacheType","ttr":{"st":3,"en":5}},{"k":"TypeAlias","c":"discord.js!CacheTypeReducer:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"State"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CachedType"},{"k":"Content","t":", "},{"k":"Reference","t":"RawType"},{"k":"Content","t":" = "},{"k":"Reference","t":"CachedType"},{"k":"Content","t":", "},{"k":"Reference","t":"PresentType"},{"k":"Content","t":" = "},{"k":"Reference","t":"CachedType"},{"k":"Content","t":" | "},{"k":"Reference","t":"RawType"},{"k":"Content","t":", "},{"k":"Reference","t":"Fallback"},{"k":"Content","t":" = "},{"k":"Reference","t":"PresentType"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",> = "},{"k":"Content","t":"["},{"k":"Reference","t":"State"},{"k":"Content","t":"] extends ['cached'] ? "},{"k":"Reference","t":"CachedType"},{"k":"Content","t":" : ["},{"k":"Reference","t":"State"},{"k":"Content","t":"] extends ['raw']  ? "},{"k":"Reference","t":"RawType"},{"k":"Content","t":"  : ["},{"k":"Reference","t":"State"},{"k":"Content","t":"] extends ['raw' | 'cached']   ? "},{"k":"Reference","t":"PresentType"},{"k":"Content","t":"   : "},{"k":"Reference","t":"Fallback"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1817,"co":1,"r":"Public","n":"CacheTypeReducer","tps":[{"tp":"State","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"CachedType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"RawType","ctr":{"st":0,"en":0},"dtr":{"st":11,"en":12}},{"tp":"PresentType","ctr":{"st":0,"en":0},"dtr":{"st":15,"en":18}},{"tp":"Fallback","ctr":{"st":0,"en":0},"dtr":{"st":21,"en":24}}],"ttr":{"st":25,"en":39}},{"k":"TypeAlias","c":"discord.js!CacheWithLimitsOptions:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CacheWithLimitsOptions","c":"discord.js!CacheWithLimitsOptions:type"},{"k":"Content","t":" = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"K"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"]?: "},{"k":"Reference","t":"Caches","c":"discord.js!Caches:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"K"},{"k":"Content","t":"][0]['prototype'] extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"Key"},{"k":"Content","t":", infer "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"any"},{"k":"Content","t":">  ? "},{"k":"Reference","t":"LimitedCollectionOptions","c":"discord.js!LimitedCollectionOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> | "},{"k":"Reference","t":"number"},{"k":"Content","t":"  : "},{"k":"Reference","t":"never"},{"k":"Content","t":";}"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5014,"co":1,"r":"Public","n":"CacheWithLimitsOptions","ttr":{"st":3,"en":30}},{"k":"Class","c":"discord.js!CategoryChannel:class","d":"/**\n * Represents a guild category channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/CategoryChannel.js","l":10,"co":1,"r":"Public","ab":false,"n":"CategoryChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!CategoryChannel#children:member","d":"/**\n * A manager of the channels belonging to this category\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"children","c":"discord.js!CategoryChannel#children"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CategoryChannelChildManager","c":"discord.js!CategoryChannelChildManager:class"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":true,"op":false,"r":"Public","n":"children","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#parent:member","d":"/**\n * The parent of this channel.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"parent","c":"discord.js!CategoryChannel#parent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":true,"op":false,"r":"Public","n":"parent","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#parentId:member","d":"/**\n * The id of the parent of this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"parentId","c":"discord.js!CategoryChannel#parentId"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":11,"co":3,"ro":false,"op":false,"r":"Public","n":"parentId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CategoryChannel#setParent:member(1)","d":"/**\n * Sets the category parent of this channel. <warn>It is not possible to set the parent of a CategoryChannel.</warn>\n *\n * @param channel - The channel to set as parent\n *\n * @param options - The options for setting the parent\n */\n","ex":[{"k":"Content","t":"setParent(channel?"},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":", options?: "},{"k":"Reference","t":"SetParentOptions","c":"discord.js!SetParentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":24,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"options","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setParent"},{"k":"Property","c":"discord.js!CategoryChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!CategoryChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types!ChannelType.GuildCategory:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!CategoryChannelChildManager:class","d":"/**\n * Manages API methods for CategoryChannels' children.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"CategoryChannelChildManager","c":"discord.js!CategoryChannelChildManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CategoryChildChannel","c":"discord.js!CategoryChildChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/CategoryChannelChildManager.js","l":10,"co":1,"r":"Public","ab":false,"n":"CategoryChannelChildManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!CategoryChannelChildManager#cache:member","d":"/**\n * The channels that are a part of this category\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"ro":true,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannelChildManager#channel:member","d":"/**\n * The category channel this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!CategoryChannelChildManager#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CategoryChannelChildManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CategoryChannelChildManager#create:member(1)","d":"/**\n * Creates a new channel within this category. <info>You cannot create a channel of type {@link discord-api-types#(ChannelType:enum).GuildCategory} inside a CategoryChannel.</info>\n *\n * @param options - Options for creating the new channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!CategoryChannelChildManager#create"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CategoryChannelType","c":"discord.js!CategoryChannelType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"CategoryCreateChannelOptions","c":"discord.js!CategoryCreateChannelOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedChannelCategoryTypes","c":"discord.js!MappedChannelCategoryTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Type"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":71,"co":3,"tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!CategoryChannelChildManager#create:member(2)","d":"/**\n * Creates a new channel within this category. <info>You cannot create a channel of type {@link discord-api-types#(ChannelType:enum).GuildCategory} inside a CategoryChannel.</info>\n *\n * @param options - Options for creating the new channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!CategoryChannelChildManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"CategoryCreateChannelOptions","c":"discord.js!CategoryCreateChannelOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":71,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Property","c":"discord.js!CategoryChannelChildManager#guild:member","d":"/**\n * The guild this manager belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!CategoryChannelChildManager#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!CategoryChannelResolvable:type","d":"/**\n * Data that can be resolved to give a Category Channel object. This can be:\n *\n * * A CategoryChannel object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/managers/GuildChannelManager.js","l":416,"co":1,"r":"Public","n":"CategoryChannelResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!CategoryChannelType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CategoryChannelType","c":"discord.js!CategoryChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":", | "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types!ChannelType.GroupDM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types!ChannelType.GuildCategory:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildDirectory","c":"discord-api-types!ChannelType.GuildDirectory:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":915,"co":1,"r":"Public","n":"CategoryChannelType","ttr":{"st":3,"en":21}},{"k":"TypeAlias","c":"discord.js!CategoryChildChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CategoryChildChannel","c":"discord.js!CategoryChildChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", { "},{"k":"Reference","t":"parent","c":"discord.js!~__type#parent"},{"k":"Content","t":": "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" }>, "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6643,"co":1,"r":"Public","n":"CategoryChildChannel","ttr":{"st":3,"en":17}},{"k":"Interface","c":"discord.js!CategoryCreateChannelOptions:interface","d":"/**\n * Options for creating a channel using {@link CategoryChannelChildManager.create}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CategoryCreateChannelOptions","c":"discord.js!CategoryCreateChannelOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/CategoryChannelChildManager.js","l":38,"co":1,"r":"Public","n":"CategoryCreateChannelOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#availableTags:member","d":"/**\n * The tags that can be used in this channel (forum only).\n */\n","ex":[{"k":"Reference","t":"availableTags","c":"discord.js!CategoryCreateChannelOptions#availableTags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildForumTagData","c":"discord.js!GuildForumTagData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5033,"co":3,"ro":false,"op":true,"r":"Public","n":"availableTags","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#bitrate:member","d":"/**\n * Bitrate of the new channel in bits (only voice)\n */\n","ex":[{"k":"Reference","t":"bitrate","c":"discord.js!CategoryCreateChannelOptions#bitrate"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5026,"co":3,"ro":false,"op":true,"r":"Public","n":"bitrate","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for all new threads in this channel\n */\n","ex":[{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!CategoryCreateChannelOptions#defaultAutoArchiveDuration"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5035,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#defaultForumLayout:member","d":"/**\n * The default layout used to display posts (forum only).\n */\n","ex":[{"k":"Reference","t":"defaultForumLayout","c":"discord.js!CategoryCreateChannelOptions#defaultForumLayout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ForumLayoutType","c":"discord-api-types!ForumLayoutType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5037,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultForumLayout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#defaultReactionEmoji:member","d":"/**\n * The emoji to show in the add reaction button on a thread in a guild forum channel.\n */\n","ex":[{"k":"Reference","t":"defaultReactionEmoji","c":"discord.js!CategoryCreateChannelOptions#defaultReactionEmoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5034,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#defaultSortOrder:member","d":"/**\n * The default sort order mode used to order posts (forum only).\n */\n","ex":[{"k":"Reference","t":"defaultSortOrder","c":"discord.js!CategoryCreateChannelOptions#defaultSortOrder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5036,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultSortOrder","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Reference","t":"defaultThreadRateLimitPerUser","c":"discord.js!CategoryCreateChannelOptions#defaultThreadRateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5032,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#name:member","d":"/**\n * The name for the new channel\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!CategoryCreateChannelOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5021,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#nsfw:member","d":"/**\n * Whether the new channel is NSFW\n */\n","ex":[{"k":"Reference","t":"nsfw","c":"discord.js!CategoryCreateChannelOptions#nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5025,"co":3,"ro":false,"op":true,"r":"Public","n":"nsfw","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#permissionOverwrites:member","d":"/**\n * Permission overwrites of the new channel\n */\n","ex":[{"k":"Reference","t":"permissionOverwrites","c":"discord.js!CategoryCreateChannelOptions#permissionOverwrites"},{"k":"Content","t":"?: "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5022,"co":3,"ro":false,"op":true,"r":"Public","n":"permissionOverwrites","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#position:member","d":"/**\n * Position of the new channel\n */\n","ex":[{"k":"Reference","t":"position","c":"discord.js!CategoryCreateChannelOptions#position"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5029,"co":3,"ro":false,"op":true,"r":"Public","n":"position","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for the new channel in seconds\n */\n","ex":[{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!CategoryCreateChannelOptions#rateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5028,"co":3,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#reason:member","d":"/**\n * Reason for creating the new channel\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!CategoryCreateChannelOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5038,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#rtcRegion:member","d":"/**\n * The specific region of the new channel.\n */\n","ex":[{"k":"Reference","t":"rtcRegion","c":"discord.js!CategoryCreateChannelOptions#rtcRegion"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5030,"co":3,"ro":false,"op":true,"r":"Public","n":"rtcRegion","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#topic:member","d":"/**\n * The topic for the new channel\n */\n","ex":[{"k":"Reference","t":"topic","c":"discord.js!CategoryCreateChannelOptions#topic"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5023,"co":3,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#type:member","d":"/**\n * The type of the new channel.\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!CategoryCreateChannelOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CategoryChannelType","c":"discord.js!CategoryChannelType:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5024,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#userLimit:member","d":"/**\n * Maximum amount of users allowed in the new channel (only voice)\n */\n","ex":[{"k":"Reference","t":"userLimit","c":"discord.js!CategoryCreateChannelOptions#userLimit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5027,"co":3,"ro":false,"op":true,"r":"Public","n":"userLimit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CategoryCreateChannelOptions#videoQualityMode:member","d":"/**\n * The camera video quality mode of the voice channel\n */\n","ex":[{"k":"Reference","t":"videoQualityMode","c":"discord.js!CategoryCreateChannelOptions#videoQualityMode"},{"k":"Content","t":"?: "},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5031,"co":3,"ro":false,"op":true,"r":"Public","n":"videoQualityMode","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!Channel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialDMChannel","c":"discord.js!PartialDMChannel:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGroupDMChannel","c":"discord.js!PartialGroupDMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6617,"co":1,"r":"Public","n":"Channel","ttr":{"st":3,"en":25}},{"k":"Interface","c":"discord.js!ChannelCreationOverwrites:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelCreationOverwrites","c":"discord.js!ChannelCreationOverwrites:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5041,"co":1,"r":"Public","n":"ChannelCreationOverwrites","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ChannelCreationOverwrites#allow:member","d":"","ex":[{"k":"Reference","t":"allow","c":"discord.js!ChannelCreationOverwrites#allow"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"l":5042,"co":3,"ro":false,"op":true,"r":"Public","n":"allow","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChannelCreationOverwrites#deny:member","d":"","ex":[{"k":"Reference","t":"deny","c":"discord.js!ChannelCreationOverwrites#deny"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"l":5043,"co":3,"ro":false,"op":true,"r":"Public","n":"deny","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChannelCreationOverwrites#id:member","d":"","ex":[{"k":"Reference","t":"id","c":"discord.js!ChannelCreationOverwrites#id"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"l":5044,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Class","c":"discord.js!ChannelFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link BaseChannel.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsString","c":"discord.js!ChannelFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/ChannelFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"ChannelFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!ChannelFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelFlagsBitField.Flags:member","d":"/**\n * Numeric guild channel flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!ChannelFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ChannelFlags","c":"discord-api-types!ChannelFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChannelFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!ChannelFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsString","c":"discord.js!ChannelFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelFlags","c":"discord-api-types!ChannelFlags:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":941,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ChannelFlagsResolvable:type","d":"/**\n * Data that can be resolved to give a channel flag bitfield. This can be:\n *\n * * A string (see {@link ChannelFlagsBitField.Flags})\n *\n * * A channel flag\n *\n * * An instance of ChannelFlagsBitField\n *\n * * An Array of ChannelFlagsResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelFlagsResolvable","c":"discord.js!ChannelFlagsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsString","c":"discord.js!ChannelFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/ChannelFlagsBitField.js","l":32,"co":1,"r":"Public","n":"ChannelFlagsResolvable","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!ChannelFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelFlagsString","c":"discord.js!ChannelFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ChannelFlags","c":"discord-api-types!ChannelFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":935,"co":1,"r":"Public","n":"ChannelFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!ChannelManager:class","d":"/**\n * A manager of channels belonging to a client\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChannelManager","c":"discord.js!ChannelManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ChannelManager.js","l":17,"co":1,"r":"Public","ab":false,"n":"ChannelManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!ChannelManager#cache:member","d":"/**\n * The cache of Channels\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":33,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChannelManager#fetch:member(1)","d":"/**\n * Obtains a channel from Discord, or the channel cache if it's already available.\n *\n * @param id - The channel's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a channel by its id\n * client.channels.fetch('222109930545610754')\n *   .then(channel => console.log(channel.name))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ChannelManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchChannelOptions","c":"discord.js!FetchChannelOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":117,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ChannelManager#resolve:member(1)","d":"/**\n * Resolves a ChannelResolvable to a Channel object.\n *\n * @param channel - The channel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(channel"},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":";"}],"l":81,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!ChannelManager#resolveId:member(1)","d":"/**\n * Resolves a ChannelResolvable to a channel id string.\n *\n * @param channel - The channel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(channel"},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":90,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ChannelMention:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":" = "},{"k":"Content","t":"`<#${"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"}>`"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5047,"co":1,"r":"Public","n":"ChannelMention","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!ChannelPermissionConstant:type","d":"/**\n * A static snowflake that identifies the \"all channels\" entity for application command permissions. It will be the result of the calculation `guildId - 1`\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelPermissionConstant","c":"discord.js!ChannelPermissionConstant:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandPermissionsManager.js","l":236,"co":1,"r":"Public","n":"ChannelPermissionConstant","ttr":{"st":3,"en":4}},{"k":"Interface","c":"discord.js!ChannelPosition:interface","d":"/**\n * The data needed for updating a channel's position.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelPosition","c":"discord.js!ChannelPosition:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":423,"co":1,"r":"Public","n":"ChannelPosition","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ChannelPosition#channel:member","d":"/**\n * Channel to update\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!ChannelPosition#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5050,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ChannelPosition#lockPermissions:member","d":"/**\n * If the overwrites should be locked to the parents overwrites\n */\n","ex":[{"k":"Reference","t":"lockPermissions","c":"discord.js!ChannelPosition#lockPermissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5051,"co":3,"ro":false,"op":true,"r":"Public","n":"lockPermissions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChannelPosition#parent:member","d":"/**\n * Parent channel for this channel\n */\n","ex":[{"k":"Reference","t":"parent","c":"discord.js!ChannelPosition#parent"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5052,"co":3,"ro":false,"op":true,"r":"Public","n":"parent","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ChannelPosition#position:member","d":"/**\n * New position for the channel\n */\n","ex":[{"k":"Reference","t":"position","c":"discord.js!ChannelPosition#position"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5053,"co":3,"ro":false,"op":true,"r":"Public","n":"position","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!ChannelResolvable:type","d":"/**\n * Data that can be resolved to give a Channel object. This can be:\n *\n * * A Channel object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/ChannelManager.js","l":74,"co":1,"r":"Public","n":"ChannelResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!ChannelSelectMenuBuilder:class","d":"/**\n * Class used to build select menu components to be sent through the API\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"discord.js!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderChannelSelectMenuComponent","c":"@discordjs/builders!ChannelSelectMenuBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/ChannelSelectMenuBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"ChannelSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ChannelSelectMenuBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `ChannelSelectMenuBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelSelectMenuComponentData","c":"discord.js!ChannelSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!ChannelSelectMenuBuilder.from:member(1)","d":"/**\n * Creates a new select menu builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!ChannelSelectMenuBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"discord.js!ChannelSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":21,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ChannelSelectMenuComponent:class","d":"/**\n * Represents a channel select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ChannelSelectMenuComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"ChannelSelectMenuComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#channelTypes:member","d":"/**\n * The options in this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channelTypes :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":15,"ro":true,"op":true,"r":"Public","n":"channelTypes","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":42,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly disabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":51,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChannelSelectMenuComponent#getChannelTypes:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getChannelTypes","c":"discord.js!ChannelSelectMenuComponent#getChannelTypes"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":846,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"getChannelTypes"},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly maxValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":24,"ro":true,"op":true,"r":"Public","n":"maxValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly minValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":33,"ro":true,"op":true,"r":"Public","n":"minValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly placeholder :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":15,"ro":true,"op":true,"r":"Public","n":"placeholder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!ChannelSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelSelectMenuComponentData","c":"discord.js!ChannelSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6286,"co":1,"r":"Public","n":"ChannelSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ChannelSelectMenuComponentData#channelTypes:member","d":"","ex":[{"k":"Reference","t":"channelTypes","c":"discord.js!ChannelSelectMenuComponentData#channelTypes"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":6288,"co":3,"ro":false,"op":true,"r":"Public","n":"channelTypes","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ChannelSelectMenuComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ChannelSelectMenuComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":";"}],"l":6287,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!ChannelSelectMenuInteraction:class","d":"/**\n * Represents a {@link discord-api-types#(ComponentType:enum).ChannelSelect} select menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ChannelSelectMenuInteraction.js","l":10,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ChannelSelectMenuInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ChannelSelectMenuInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `ChannelSelectMenuInteraction` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageChannelSelectInteractionData","c":"discord-api-types!APIMessageChannelSelectInteractionData:interface"},{"k":"Content","t":");"}],"l":10,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#channels:member","d":"/**\n * Collection of the selected channels\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channels","c":"discord.js!ChannelSelectMenuInteraction#channels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIChannel","c":"discord-api-types!APIChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIChannel","c":"discord-api-types!APIChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIChannel","c":"discord-api-types!APIChannel:type"},{"k":"Content","t":"> >"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!ChannelSelectMenuInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":",  "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":",  "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIChannelSelectComponent","c":"discord-api-types!APIChannelSelectComponent:interface"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!ChannelSelectMenuInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChannelSelectMenuInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!ChannelSelectMenuInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!ChannelSelectMenuInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!ChannelSelectMenuInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!ChannelSelectMenuInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!ChannelSelectMenuInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#values:member","d":"/**\n * An array of the selected channel ids\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"values","c":"discord.js!ChannelSelectMenuInteraction#values"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"values","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChannelSelectMenuInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!ChannelWebhookCreateOptions:interface","d":"/**\n * Options used to create a {@link Webhook}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":328,"co":1,"r":"Public","n":"ChannelWebhookCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ChannelWebhookCreateOptions#avatar:member","d":"/**\n * Avatar for the webhook\n */\n","ex":[{"k":"Reference","t":"avatar","c":"discord.js!ChannelWebhookCreateOptions#avatar"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5061,"co":3,"ro":false,"op":true,"r":"Public","n":"avatar","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ChannelWebhookCreateOptions#name:member","d":"/**\n * The name of the webhook\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!ChannelWebhookCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5060,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChannelWebhookCreateOptions#reason:member","d":"/**\n * Reason for creating the webhook\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!ChannelWebhookCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5062,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!ChatInputApplicationCommandData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ChatInputApplicationCommandData","c":"discord.js!ChatInputApplicationCommandData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandData","c":"discord.js!BaseApplicationCommandData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4651,"co":1,"r":"Public","n":"ChatInputApplicationCommandData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ChatInputApplicationCommandData#description:member","d":"","ex":[{"k":"Reference","t":"description","c":"discord.js!ChatInputApplicationCommandData#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":4652,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChatInputApplicationCommandData#descriptionLocalizations:member","d":"","ex":[{"k":"Reference","t":"descriptionLocalizations","c":"discord.js!ChatInputApplicationCommandData#descriptionLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocalizationMap","c":"discord-api-types!LocalizationMap:type"},{"k":"Content","t":";"}],"l":4653,"co":3,"ro":false,"op":true,"r":"Public","n":"descriptionLocalizations","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ChatInputApplicationCommandData#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!ChatInputApplicationCommandData#options"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandOptionData","c":"discord.js!ApplicationCommandOptionData:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4655,"co":3,"ro":false,"op":true,"r":"Public","n":"options","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ChatInputApplicationCommandData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ChatInputApplicationCommandData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationCommandType.ChatInput","c":"discord-api-types!ApplicationCommandType.ChatInput:member"},{"k":"Content","t":";"}],"l":4654,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!ChatInputCommandInteraction:class","d":"/**\n * Represents a command interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ChatInputCommandInteraction.js","l":11,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ChatInputCommandInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!ChatInputCommandInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":18,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"undefined command :"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":77,"ro":false,"op":true,"r":"Public","n":"command","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"undefined commandGuildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":46,"ro":false,"op":true,"r":"Public","n":"commandGuildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"undefined commandId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":28,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"undefined commandName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":34,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!ChatInputCommandInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.ChatInput","c":"discord-api-types!ApplicationCommandType.ChatInput:member"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":52,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":64,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChatInputCommandInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!ChatInputCommandInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!ChatInputCommandInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!ChatInputCommandInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!ChatInputCommandInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!ChatInputCommandInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#options:member","d":"/**\n * The options passed to the command.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!ChatInputCommandInteraction#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">, 'getMessage' | 'getFocused'>"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":58,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ChatInputCommandInteraction#toString:member(1)","d":"/**\n * Returns a string representation of the command interaction. This can then be copied by a user and executed again in a new command while keeping the option order.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!ChatInputCommandInteraction#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":31,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ChatInputCommandInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":70,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Function","c":"discord.js!cleanCodeBlockContent:function(1)","d":"/**\n * The content to put in a code block with all code block fences replaced by the equivalent backticks.\n *\n * @param text - The string to be converted\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"cleanCodeBlockContent","c":"discord.js!cleanCodeBlockContent"},{"k":"Content","t":"("},{"k":"Reference","t":"text","c":"discord.js!~text"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":397,"co":1,"rtr":{"st":7,"en":8},"r":"Public","oi":1,"ps":[{"pn":"text","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"cleanCodeBlockContent"},{"k":"Function","c":"discord.js!cleanContent:function(1)","d":"/**\n * The content to have all mentions replaced by the equivalent text.\n *\n * @param str - The string to be converted\n *\n * @param channel - The channel the string was sent in\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"cleanContent","c":"discord.js!cleanContent"},{"k":"Content","t":"("},{"k":"Reference","t":"str","c":"discord.js!~str"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":355,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":1,"ps":[{"pn":"str","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"channel","ptr":{"st":9,"en":10},"op":false,"rs":false}],"n":"cleanContent"},{"k":"Class","c":"discord.js!Client:class","d":"/**\n * The main hub for interacting with the Discord API, and the starting point for any bot.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseClient","c":"discord.js!BaseClient:class"},{"k":"Content","t":" "}],"pat":"src/client/Client.js","l":40,"co":1,"r":"Public","tps":[{"tp":"Ready","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"Client","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Client:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":");"}],"l":40,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":3,"en":4},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!Client#application:member","d":"/**\n * The application of this bot\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"application","c":"discord.js!Client#application"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"ClientApplication","c":"discord.js!ClientApplication:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":false,"op":false,"r":"Public","n":"application","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#applicationCommandPermissionsUpdate:member(0)","d":"/**\n * Emitted whenever permissions for an application command in a guild were updated. <warn>This includes permission updates for other applications in addition to the logged in client, check `data.applicationId` to verify which application the update is for</warn>\n *\n * @param data - The updated permissions\n */\n","ex":[{"k":"Content","t":"on('applicationCommandPermissionsUpdate', (data: "},{"k":"Reference","t":"ApplicationCommandPermissionsUpdateData","c":"discord.js!ApplicationCommandPermissionsUpdateData:interface"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ApplicationCommandPermissionsUpdate.js","l":18,"r":"Public","oi":0,"ps":[{"pn":"data","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"applicationCommandPermissionsUpdate"},{"k":"Event","c":"discord.js!Client#autoModerationActionExecution:member(0)","d":"/**\n * Emitted whenever an auto moderation rule is triggered. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageGuild} permission.</info>\n *\n * @param autoModerationActionExecution - The data of the execution\n */\n","ex":[{"k":"Content","t":"on('autoModerationActionExecution', (autoModerationActionExecution: "},{"k":"Reference","t":"AutoModerationActionExecution","c":"discord.js!AutoModerationActionExecution:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/AutoModerationActionExecution.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"autoModerationActionExecution","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"autoModerationActionExecution"},{"k":"Event","c":"discord.js!Client#autoModerationRuleCreate:member(0)","d":"/**\n * Emitted whenever an auto moderation rule is created. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageGuild} permission.</info>\n *\n * @param autoModerationRule - The created auto moderation rule\n */\n","ex":[{"k":"Content","t":"on('autoModerationRuleCreate', (autoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/AutoModerationRuleCreate.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"autoModerationRule","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"autoModerationRuleCreate"},{"k":"Event","c":"discord.js!Client#autoModerationRuleDelete:member(0)","d":"/**\n * Emitted whenever an auto moderation rule is deleted. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageGuild} permission.</info>\n *\n * @param autoModerationRule - The deleted auto moderation rule\n */\n","ex":[{"k":"Content","t":"on('autoModerationRuleDelete', (autoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/AutoModerationRuleDelete.js","l":17,"r":"Public","oi":0,"ps":[{"pn":"autoModerationRule","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"autoModerationRuleDelete"},{"k":"Event","c":"discord.js!Client#autoModerationRuleUpdate:member(0)","d":"/**\n * Emitted whenever an auto moderation rule gets updated. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageGuild} permission.</info>\n *\n * @param oldAutoModerationRule - The auto moderation rule before the update\n *\n * @param newAutoModerationRule - The auto moderation rule after the update\n */\n","ex":[{"k":"Content","t":"on('autoModerationRuleUpdate', (oldAutoModerationRule?: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":", newAutoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/AutoModerationRuleUpdate.js","l":15,"r":"Public","oi":0,"ps":[{"pn":"oldAutoModerationRule","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newAutoModerationRule","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"autoModerationRuleUpdate"},{"k":"Event","c":"discord.js!Client#channelCreate:member(0)","d":"/**\n * Emitted whenever a guild channel is created.\n *\n * @param channel - The channel that was created\n */\n","ex":[{"k":"Content","t":"on('channelCreate', (channel: "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ChannelCreate.js","l":12,"r":"Public","oi":0,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"channelCreate"},{"k":"Event","c":"discord.js!Client#channelDelete:member(0)","d":"/**\n * Emitted whenever a channel is deleted.\n *\n * @param channel - The channel that was deleted\n */\n","ex":[{"k":"Content","t":"on('channelDelete', (channel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ChannelDelete.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"channel","ptr":{"st":1,"en":4},"op":false,"rs":false}],"n":"channelDelete"},{"k":"Event","c":"discord.js!Client#channelPinsUpdate:member(0)","d":"/**\n * Emitted whenever the pins of a channel are updated. Due to the nature of the WebSocket event, not much information can be provided easily here - you need to manually check the pins yourself.\n *\n * @param channel - The channel that the pins update occurred in\n *\n * @param time - The time of the pins update\n */\n","ex":[{"k":"Content","t":"on('channelPinsUpdate', (channel: "},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":", time: "},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/CHANNEL_PINS_UPDATE.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"time","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"channelPinsUpdate"},{"k":"Property","c":"discord.js!Client#channels:member","d":"/**\n * All of the {@link BaseChannel}s that the client is currently handling, mapped by their ids - as long as sharding isn't being used, this will be *every * channel in *every * guild the bot is a member of. Note that DM channels will not be initially cached, and thus not be present in the Manager without their explicit fetching or use.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channels","c":"discord.js!Client#channels"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelManager","c":"discord.js!ChannelManager:class"},{"k":"Content","t":";"}],"l":129,"co":3,"ro":false,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#channelUpdate:member(0)","d":"/**\n * Emitted whenever a channel is updated - e.g. name change, topic change, channel type change.\n *\n * @param oldChannel - The channel before the update\n *\n * @param newChannel - The channel after the update\n */\n","ex":[{"k":"Content","t":"on('channelUpdate', (oldChannel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":", newChannel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/CHANNEL_UPDATE.js","l":8,"r":"Public","oi":0,"ps":[{"pn":"oldChannel","ptr":{"st":1,"en":4},"op":false,"rs":false},{"pn":"newChannel","ptr":{"st":5,"en":8},"op":false,"rs":false}],"n":"channelUpdate"},{"k":"Event","c":"discord.js!Client#debug:member(0)","d":"/**\n * Emitted for general debugging information.\n *\n * @param info - The debug information\n */\n","ex":[{"k":"Content","t":"on('debug', (info: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"l":586,"r":"Public","oi":0,"ps":[{"pn":"info","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"debug"},{"k":"Method","c":"discord.js!Client#deleteWebhook:member(1)","d":"/**\n * Deletes a webhook.\n *\n * @param id - The webhook's id\n *\n * @param options - Options for deleting the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteWebhook","c":"discord.js!Client#deleteWebhook"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WebhookDeleteOptions","c":"discord.js!WebhookDeleteOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/client/BaseClient.js","l":80,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteWebhook"},{"k":"Method","c":"discord.js!Client#destroy:member(1)","d":"/**\n * Logs out, terminates the connection to Discord, and destroys the client.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"destroy","c":"discord.js!Client#destroy"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":249,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"destroy"},{"k":"Method","c":"discord.js!Client#emit:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emit","c":"discord.js!Client#emit"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":", ..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1023,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":19,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"args","ptr":{"st":14,"en":18},"op":false,"rs":true}],"op":false,"ab":false,"n":"emit"},{"k":"Method","c":"discord.js!Client#emit:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emit","c":"discord.js!Client#emit"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"symbol"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":", ..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1024,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":11,"en":17},"op":false,"rs":false},{"pn":"args","ptr":{"st":20,"en":22},"op":false,"rs":true}],"op":false,"ab":false,"n":"emit"},{"k":"Event","c":"discord.js!Client#emojiCreate:member(0)","d":"/**\n * Emitted whenever a custom emoji is created in a guild.\n *\n * @param emoji - The emoji that was created\n */\n","ex":[{"k":"Content","t":"on('emojiCreate', (emoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildEmojiCreate.js","l":10,"r":"Public","oi":0,"ps":[{"pn":"emoji","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"emojiCreate"},{"k":"Event","c":"discord.js!Client#emojiDelete:member(0)","d":"/**\n * Emitted whenever a custom emoji is deleted in a guild.\n *\n * @param emoji - The emoji that was deleted\n */\n","ex":[{"k":"Content","t":"on('emojiDelete', (emoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildEmojiDelete.js","l":9,"r":"Public","oi":0,"ps":[{"pn":"emoji","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"emojiDelete"},{"k":"Property","c":"discord.js!Client#emojis:member","d":"/**\n * All custom emojis that the client has access to, mapped by their ids\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"emojis","c":"discord.js!Client#emojis"},{"k":"Content","t":"(): "},{"k":"Reference","t":"BaseGuildEmojiManager","c":"discord.js!BaseGuildEmojiManager:class"},{"k":"Content","t":";"}],"l":181,"co":3,"ro":true,"op":false,"r":"Public","n":"emojis","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#emojiUpdate:member(0)","d":"/**\n * Emitted whenever a custom emoji is updated in a guild.\n *\n * @param oldEmoji - The old emoji\n *\n * @param newEmoji - The new emoji\n */\n","ex":[{"k":"Content","t":"on('emojiUpdate', (oldEmoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":", newEmoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildEmojiUpdate.js","l":9,"r":"Public","oi":0,"ps":[{"pn":"oldEmoji","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newEmoji","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"emojiUpdate"},{"k":"Event","c":"discord.js!Client#entitlementCreate:member(0)","d":"/**\n * Emitted whenever an entitlement is created.\n *\n * @param entitlement - The entitlement that was created\n */\n","ex":[{"k":"Content","t":"on('entitlementCreate', (entitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/EntitlementCreate.js","l":12,"r":"Public","oi":0,"ps":[{"pn":"entitlement","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"entitlementCreate"},{"k":"Event","c":"discord.js!Client#entitlementDelete:member(0)","d":"/**\n * Emitted whenever an entitlement is deleted. <warn>Entitlements are not deleted when they expire. This is only triggered when Discord issues a refund or deletes the entitlement manually.</warn>\n *\n * @param entitlement - The entitlement that was deleted\n */\n","ex":[{"k":"Content","t":"on('entitlementDelete', (entitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/EntitlementDelete.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"entitlement","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"entitlementDelete"},{"k":"Event","c":"discord.js!Client#entitlementUpdate:member(0)","d":"/**\n * Emitted whenever an entitlement is updated - i.e. when a user's subscription renews.\n *\n * @param oldEntitlement - The entitlement before the update\n *\n * @param newEntitlement - The entitlement after the update\n */\n","ex":[{"k":"Content","t":"on('entitlementUpdate', (oldEntitlement?: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":", newEntitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/EntitlementUpdate.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"oldEntitlement","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newEntitlement","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"entitlementUpdate"},{"k":"Event","c":"discord.js!Client#error:member(0)","d":"/**\n * Emitted when the client encounters an error. <warn>Errors thrown within this event do not have a catch handler, it is recommended to not use async functions as `error` event handlers. See the [Node.js docs](https://nodejs.org/api/events.html#capture-rejections-of-promises) for details.</warn>\n *\n * @param error - The error encountered\n */\n","ex":[{"k":"Content","t":"on('error', (error: "},{"k":"Reference","t":"Error","c":"discord.js!Error:class"},{"k":"Content","t":") => {})"}],"pat":"src/sharding/ShardClientUtil.js","l":224,"r":"Public","oi":0,"ps":[{"pn":"error","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"error"},{"k":"Method","c":"discord.js!Client#fetchGuildPreview:member(1)","d":"/**\n * Obtains a guild preview from Discord, available for all guilds the bot is in and all Discoverable guilds.\n *\n * @param guild - The guild to fetch the preview for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchGuildPreview","c":"discord.js!Client#fetchGuildPreview"},{"k":"Content","t":"("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":381,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchGuildPreview"},{"k":"Method","c":"discord.js!Client#fetchGuildTemplate:member(1)","d":"/**\n * Obtains a template from Discord.\n *\n * @param template - Template code or URL\n *\n * @example\n * ```js\n * client.fetchGuildTemplate('https://discord.new/FKvmczH2HyUf')\n *   .then(template => console.log(`Obtained template with code: ${template.code}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchGuildTemplate","c":"discord.js!Client#fetchGuildTemplate"},{"k":"Content","t":"("},{"k":"Reference","t":"template","c":"discord.js!~template"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTemplateResolvable","c":"discord.js!GuildTemplateResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":295,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"template","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchGuildTemplate"},{"k":"Method","c":"discord.js!Client#fetchGuildWidget:member(1)","d":"/**\n * Obtains the widget data of a guild from Discord, available for guilds with the widget enabled.\n *\n * @param guild - The guild to fetch the widget data for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchGuildWidget","c":"discord.js!Client#fetchGuildWidget"},{"k":"Content","t":"("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Widget","c":"discord.js!Widget:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":393,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchGuildWidget"},{"k":"Method","c":"discord.js!Client#fetchInvite:member(1)","d":"/**\n * Obtains an invite from Discord.\n *\n * @param invite - Invite code or URL\n *\n * @param options - Options for fetching the invite\n *\n * @example\n * ```js\n * client.fetchInvite('https://discord.gg/djs')\n *   .then(invite => console.log(`Obtained invite with code: ${invite.code}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchInvite","c":"discord.js!Client#fetchInvite"},{"k":"Content","t":"("},{"k":"Reference","t":"invite","c":"discord.js!~invite"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientFetchInviteOptions","c":"discord.js!ClientFetchInviteOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":275,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"invite","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchInvite"},{"k":"Method","c":"discord.js!Client#fetchPremiumStickerPacks:member(1)","d":"/**\n * Obtains the list of available sticker packs.\n *\n * @deprecated\n *\n * Use {@link Client.fetchStickerPacks} instead.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchPremiumStickerPacks","c":"discord.js!Client#fetchPremiumStickerPacks"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ReturnType","c":"!ReturnType:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"['fetchStickerPacks']>"},{"k":"Content","t":";"}],"l":363,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchPremiumStickerPacks"},{"k":"Method","c":"discord.js!Client#fetchSticker:member(1)","d":"/**\n * Obtains a sticker from Discord.\n *\n * @param id - The sticker's id\n *\n * @example\n * ```js\n * client.fetchSticker('id')\n *   .then(sticker => console.log(`Obtained sticker with name: ${sticker.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchSticker","c":"discord.js!Client#fetchSticker"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":340,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchSticker"},{"k":"Method","c":"discord.js!Client#fetchStickerPacks:member(1)","d":"/**\n * Obtains the list of available sticker packs.\n *\n * @example\n * ```js\n * client.fetchStickerPacks()\n *   .then(packs => console.log(`Available sticker packs are: ${packs.map(pack => pack.name).join(', ')}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchStickerPacks","c":"discord.js!Client#fetchStickerPacks"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"StickerPack","c":"discord.js!StickerPack:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":353,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchStickerPacks"},{"k":"Method","c":"discord.js!Client#fetchVoiceRegions:member(1)","d":"/**\n * Obtains the available voice regions from Discord.\n *\n * @example\n * ```js\n * client.fetchVoiceRegions()\n *   .then(regions => console.log(`Available regions are: ${regions.map(region => region.name).join(', ')}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchVoiceRegions","c":"discord.js!Client#fetchVoiceRegions"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"VoiceRegion","c":"discord.js!VoiceRegion:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":324,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchVoiceRegions"},{"k":"Method","c":"discord.js!Client#fetchWebhook:member(1)","d":"/**\n * Obtains a webhook from Discord.\n *\n * @param id - The webhook's id\n *\n * @param token - Token for the webhook\n *\n * @example\n * ```js\n * client.fetchWebhook('id', 'token')\n *   .then(webhook => console.log(`Obtained webhook with name: ${webhook.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWebhook","c":"discord.js!Client#fetchWebhook"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"token","c":"discord.js!~token"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":311,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"token","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchWebhook"},{"k":"Method","c":"discord.js!Client#generateInvite:member(1)","d":"/**\n * Generates a link that can be used to invite the bot to a guild.\n *\n * @param options - Options for the invite\n *\n * @example\n * ```js\n * const link = client.generateInvite({\n *   scopes: [OAuth2Scopes.ApplicationsCommands],\n * });\n * console.log(`Generated application invite link: ${link}`);\n * ```\n *\n * @example\n * ```js\n * const link = client.generateInvite({\n *   permissions: [\n *     PermissionFlagsBits.SendMessages,\n *     PermissionFlagsBits.ManageGuild,\n *     PermissionFlagsBits.MentionEveryone,\n *   ],\n *   scopes: [OAuth2Scopes.Bot],\n * });\n * console.log(`Generated bot invite link: ${link}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"generateInvite","c":"discord.js!Client#generateInvite"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteGenerationOptions","c":"discord.js!InviteGenerationOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":429,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"generateInvite"},{"k":"Event","c":"discord.js!Client#guildAuditLogEntryCreate:member(0)","d":"/**\n * Emitted whenever a guild audit log entry is created.\n *\n * @param auditLogEntry - The entry that was created\n *\n * @param guild - The guild where the entry was created\n */\n","ex":[{"k":"Content","t":"on('guildAuditLogEntryCreate', (auditLogEntry: "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":", guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildAuditLogEntryCreate.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"auditLogEntry","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"guild","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildAuditLogEntryCreate"},{"k":"Event","c":"discord.js!Client#guildAvailable:member(0)","d":"/**\n * Emitted whenever a guild becomes available.\n *\n * @param guild - The guild that became available\n */\n","ex":[{"k":"Content","t":"on('guildAvailable', (guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/GUILD_CREATE.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildAvailable"},{"k":"Event","c":"discord.js!Client#guildBanAdd:member(0)","d":"/**\n * Emitted whenever a member is banned from a guild.\n *\n * @param ban - The ban that occurred\n */\n","ex":[{"k":"Content","t":"on('guildBanAdd', (ban: "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildBanAdd.js","l":11,"r":"Public","oi":0,"ps":[{"pn":"ban","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildBanAdd"},{"k":"Event","c":"discord.js!Client#guildBanRemove:member(0)","d":"/**\n * Emitted whenever a member is unbanned from a guild.\n *\n * @param ban - The ban that was removed\n */\n","ex":[{"k":"Content","t":"on('guildBanRemove', (ban: "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildBanRemove.js","l":12,"r":"Public","oi":0,"ps":[{"pn":"ban","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildBanRemove"},{"k":"Event","c":"discord.js!Client#guildCreate:member(0)","d":"/**\n * Emitted whenever the client joins a guild.\n *\n * @param guild - The created guild\n */\n","ex":[{"k":"Content","t":"on('guildCreate', (guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/GUILD_CREATE.js","l":25,"r":"Public","oi":0,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildCreate"},{"k":"Event","c":"discord.js!Client#guildDelete:member(0)","d":"/**\n * Emitted whenever a guild kicks the client or the guild is deleted/left.\n *\n * @param guild - The guild that was deleted\n */\n","ex":[{"k":"Content","t":"on('guildDelete', (guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildDelete.js","l":34,"r":"Public","oi":0,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildDelete"},{"k":"Event","c":"discord.js!Client#guildIntegrationsUpdate:member(0)","d":"/**\n * Emitted whenever a guild integration is updated\n *\n * @param guild - The guild whose integrations were updated\n */\n","ex":[{"k":"Content","t":"on('guildIntegrationsUpdate', (guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildIntegrationsUpdate.js","l":10,"r":"Public","oi":0,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildIntegrationsUpdate"},{"k":"Event","c":"discord.js!Client#guildMemberAdd:member(0)","d":"/**\n * Emitted whenever a user joins a guild.\n *\n * @param member - The member that has joined a guild\n */\n","ex":[{"k":"Content","t":"on('guildMemberAdd', (member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/GUILD_MEMBER_ADD.js","l":12,"r":"Public","oi":0,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildMemberAdd"},{"k":"Event","c":"discord.js!Client#guildMemberAvailable:member(0)","d":"/**\n * Emitted whenever a member becomes available.\n *\n * @param member - The member that became available\n */\n","ex":[{"k":"Content","t":"on('guildMemberAvailable', (member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildMemberUpdate.js","l":33,"r":"Public","oi":0,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildMemberAvailable"},{"k":"Event","c":"discord.js!Client#guildMemberRemove:member(0)","d":"/**\n * Emitted whenever a member leaves a guild, or is kicked.\n *\n * @param member - The member that has left/been kicked from the guild\n */\n","ex":[{"k":"Content","t":"on('guildMemberRemove', (member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildMemberRemove.js","l":17,"r":"Public","oi":0,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildMemberRemove"},{"k":"Event","c":"discord.js!Client#guildMembersChunk:member(0)","d":"/**\n * Emitted whenever a chunk of guild members is received (all members come from the same guild).\n *\n * @param members - The members in the chunk\n *\n * @param guild - The guild related to the member chunk\n *\n * @param chunk - Properties of the received chunk\n */\n","ex":[{"k":"Content","t":"on('guildMembersChunk', (members: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":", guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", chunk: "},{"k":"Reference","t":"GuildMembersChunk","c":"discord.js!GuildMembersChunk:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/GUILD_MEMBERS_CHUNK.js","l":26,"r":"Public","oi":0,"ps":[{"pn":"members","ptr":{"st":1,"en":7},"op":false,"rs":false},{"pn":"guild","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"chunk","ptr":{"st":10,"en":11},"op":false,"rs":false}],"n":"guildMembersChunk"},{"k":"Event","c":"discord.js!Client#guildMemberUpdate:member(0)","d":"/**\n * Emitted whenever a guild member changes - i.e. new role, removed role, nickname.\n *\n * @param oldMember - The member before the update\n *\n * @param newMember - The member after the update\n */\n","ex":[{"k":"Content","t":"on('guildMemberUpdate', (oldMember: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", newMember: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildMemberUpdate.js","l":24,"r":"Public","oi":0,"ps":[{"pn":"oldMember","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newMember","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildMemberUpdate"},{"k":"Property","c":"discord.js!Client#guilds:member","d":"/**\n * All of the guilds the client is currently handling, mapped by their ids - as long as sharding isn't being used, this will be *every * guild the bot is a member of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guilds","c":"discord.js!Client#guilds"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildManager","c":"discord.js!GuildManager:class"},{"k":"Content","t":";"}],"l":120,"co":3,"ro":false,"op":false,"r":"Public","n":"guilds","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#guildScheduledEventCreate:member(0)","d":"/**\n * Emitted whenever a guild scheduled event is created.\n *\n * @param guildScheduledEvent - The created guild scheduled event\n */\n","ex":[{"k":"Content","t":"on('guildScheduledEventCreate', (guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildScheduledEventCreate.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildScheduledEventCreate"},{"k":"Event","c":"discord.js!Client#guildScheduledEventDelete:member(0)","d":"/**\n * Emitted whenever a guild scheduled event is deleted.\n *\n * @param guildScheduledEvent - The deleted guild scheduled event\n */\n","ex":[{"k":"Content","t":"on('guildScheduledEventDelete', (guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildScheduledEventDelete.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildScheduledEventDelete"},{"k":"Event","c":"discord.js!Client#guildScheduledEventUpdate:member(0)","d":"/**\n * Emitted whenever a guild scheduled event gets updated.\n *\n * @param oldGuildScheduledEvent - The guild scheduled event object before the update\n *\n * @param newGuildScheduledEvent - The guild scheduled event object after the update\n */\n","ex":[{"k":"Content","t":"on('guildScheduledEventUpdate', (oldGuildScheduledEvent?: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", newGuildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildScheduledEventUpdate.js","l":15,"r":"Public","oi":0,"ps":[{"pn":"oldGuildScheduledEvent","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newGuildScheduledEvent","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildScheduledEventUpdate"},{"k":"Event","c":"discord.js!Client#guildScheduledEventUserAdd:member(0)","d":"/**\n * Emitted whenever a user subscribes to a guild scheduled event\n *\n * @param guildScheduledEvent - The guild scheduled event\n *\n * @param user - The user who subscribed\n */\n","ex":[{"k":"Content","t":"on('guildScheduledEventUserAdd', (guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildScheduledEventUserAdd.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildScheduledEventUserAdd"},{"k":"Event","c":"discord.js!Client#guildScheduledEventUserRemove:member(0)","d":"/**\n * Emitted whenever a user unsubscribes from a guild scheduled event\n *\n * @param guildScheduledEvent - The guild scheduled event\n *\n * @param user - The user who unsubscribed\n */\n","ex":[{"k":"Content","t":"on('guildScheduledEventUserRemove', (guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildScheduledEventUserRemove.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildScheduledEventUserRemove"},{"k":"Event","c":"discord.js!Client#guildUnavailable:member(0)","d":"/**\n * Emitted whenever a guild becomes unavailable, likely due to a server outage.\n *\n * @param guild - The guild that has become unavailable\n */\n","ex":[{"k":"Content","t":"on('guildUnavailable', (guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildDelete.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"guildUnavailable"},{"k":"Event","c":"discord.js!Client#guildUpdate:member(0)","d":"/**\n * Emitted whenever a guild is updated - e.g. name change.\n *\n * @param oldGuild - The guild before the update\n *\n * @param newGuild - The guild after the update\n */\n","ex":[{"k":"Content","t":"on('guildUpdate', (oldGuild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", newGuild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildUpdate.js","l":13,"r":"Public","oi":0,"ps":[{"pn":"oldGuild","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newGuild","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"guildUpdate"},{"k":"Event","c":"discord.js!Client#interactionCreate:member(0)","d":"/**\n * Emitted when an interaction is created.\n *\n * @param interaction - The interaction which was created\n */\n","ex":[{"k":"Content","t":"on('interactionCreate', (interaction: "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/InteractionCreate.js","l":92,"r":"Public","oi":0,"ps":[{"pn":"interaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"interactionCreate"},{"k":"Event","c":"discord.js!Client#inviteCreate:member(0)","d":"/**\n * Emitted when an invite is created. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageChannels} permission for the channel.</info>\n *\n * @param invite - The invite that was created\n */\n","ex":[{"k":"Content","t":"on('inviteCreate', (invite: "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/InviteCreate.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"invite","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"inviteCreate"},{"k":"Event","c":"discord.js!Client#inviteDelete:member(0)","d":"/**\n * Emitted when an invite is deleted. <info>This event requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageChannels} permission for the channel.</info>\n *\n * @param invite - The invite that was deleted\n */\n","ex":[{"k":"Content","t":"on('inviteDelete', (invite: "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/InviteDelete.js","l":18,"r":"Public","oi":0,"ps":[{"pn":"invite","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"inviteDelete"},{"k":"Method","c":"discord.js!Client#isReady:member(1)","d":"/**\n * Returns whether the client has logged in, indicative of being able to access properties such as `user` and `application`.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isReady","c":"discord.js!Client#isReady"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":";"}],"l":241,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isReady"},{"k":"Method","c":"discord.js!Client#login:member(1)","d":"/**\n * Logs the client in, establishing a WebSocket connection to Discord.\n *\n * @param token - Token of the account to log in with\n *\n * @returns Token of the account used\n *\n * @example\n * ```js\n * client.login('my token');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"login","c":"discord.js!Client#login"},{"k":"Content","t":"("},{"k":"Reference","t":"token","c":"discord.js!~token"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":215,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"token","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"login"},{"k":"Event","c":"discord.js!Client#messageCreate:member(0)","d":"/**\n * Emitted whenever a message is created.\n *\n * @param message - The created message\n */\n","ex":[{"k":"Content","t":"on('messageCreate', (message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageCreate.js","l":23,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"messageCreate"},{"k":"Event","c":"discord.js!Client#messageDelete:member(0)","d":"/**\n * Emitted whenever a message is deleted.\n *\n * @param message - The deleted message\n */\n","ex":[{"k":"Content","t":"on('messageDelete', (message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageDelete.js","l":19,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"messageDelete"},{"k":"Event","c":"discord.js!Client#messageDeleteBulk:member(0)","d":"/**\n * Emitted whenever messages are deleted in bulk.\n *\n * @param messages - The deleted messages, mapped by their id\n *\n * @param channel - The channel that the messages were deleted in\n */\n","ex":[{"k":"Content","t":"on('messageDeleteBulk', (messages: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":", channel: "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageDeleteBulk.js","l":34,"r":"Public","oi":0,"ps":[{"pn":"messages","ptr":{"st":1,"en":7},"op":false,"rs":false},{"pn":"channel","ptr":{"st":8,"en":9},"op":false,"rs":false}],"n":"messageDeleteBulk"},{"k":"Event","c":"discord.js!Client#messageReactionAdd:member(0)","d":"/**\n * Emitted whenever a reaction is added to a cached message.\n *\n * @param messageReaction - The reaction object\n *\n * @param user - The user that applied the guild or reaction emoji\n */\n","ex":[{"k":"Content","t":"on('messageReactionAdd', (messageReaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageReactionAdd.js","l":43,"r":"Public","oi":0,"ps":[{"pn":"messageReaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"messageReactionAdd"},{"k":"Event","c":"discord.js!Client#messageReactionRemove:member(0)","d":"/**\n * Emitted whenever a reaction is removed from a cached message.\n *\n * @param messageReaction - The reaction object\n *\n * @param user - The user whose emoji or reaction emoji was removed\n */\n","ex":[{"k":"Content","t":"on('messageReactionRemove', (messageReaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageReactionRemove.js","l":33,"r":"Public","oi":0,"ps":[{"pn":"messageReaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"messageReactionRemove"},{"k":"Event","c":"discord.js!Client#messageReactionRemoveAll:member(0)","d":"/**\n * Emitted whenever all reactions are removed from a cached message.\n *\n * @param message - The message the reactions were removed from\n *\n * @param reactions - The cached message reactions that were removed.\n */\n","ex":[{"k":"Content","t":"on('messageReactionRemoveAll', (message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", reactions: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<("},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"), "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageReactionRemoveAll.js","l":26,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reactions","ptr":{"st":3,"en":11},"op":false,"rs":false}],"n":"messageReactionRemoveAll"},{"k":"Event","c":"discord.js!Client#messageReactionRemoveEmoji:member(0)","d":"/**\n * Emitted when a bot removes an emoji reaction from a cached message.\n *\n * @param reaction - The reaction that was removed\n */\n","ex":[{"k":"Content","t":"on('messageReactionRemoveEmoji', (reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/MessageReactionRemoveEmoji.js","l":18,"r":"Public","oi":0,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"messageReactionRemoveEmoji"},{"k":"Event","c":"discord.js!Client#messageUpdate:member(0)","d":"/**\n * Emitted whenever a message is updated - e.g. embed or content change.\n *\n * @param oldMessage - The message before the update\n *\n * @param newMessage - The message after the update\n */\n","ex":[{"k":"Content","t":"on('messageUpdate', (oldMessage: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", newMessage: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/MESSAGE_UPDATE.js","l":8,"r":"Public","oi":0,"ps":[{"pn":"oldMessage","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newMessage","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"messageUpdate"},{"k":"Method","c":"discord.js!Client#off:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"off","c":"discord.js!Client#off"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1026,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"off"},{"k":"Method","c":"discord.js!Client#off:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"off","c":"discord.js!Client#off"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"symbol"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1027,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":11,"en":17},"op":false,"rs":false},{"pn":"listener","ptr":{"st":20,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"off"},{"k":"Method","c":"discord.js!Client#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!Client#on"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1011,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!Client#on:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!Client#on"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"symbol"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1012,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":11,"en":17},"op":false,"rs":false},{"pn":"listener","ptr":{"st":20,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!Client#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!Client#once"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1017,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Method","c":"discord.js!Client#once:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!Client#once"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"symbol"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1018,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":11,"en":17},"op":false,"rs":false},{"pn":"listener","ptr":{"st":20,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!Client#options:member","d":"/**\n * The options the client was instantiated with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!Client#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":", 'intents'> & { "},{"k":"Reference","t":"intents","c":"discord.js!~__type#intents"},{"k":"Content","t":": "},{"k":"Reference","t":"IntentsBitField","c":"discord.js!IntentsBitField:class"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"pat":"src/client/BaseClient.js","l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#presenceUpdate:member(0)","d":"/**\n * Emitted whenever a guild member's presence (e.g. status, activity) is changed.\n *\n * @param oldPresence - The presence before the update, if one at all\n *\n * @param newPresence - The presence after the update\n */\n","ex":[{"k":"Content","t":"on('presenceUpdate', (oldPresence?: "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":", newPresence: "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/PresenceUpdate.js","l":31,"r":"Public","oi":0,"ps":[{"pn":"oldPresence","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newPresence","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"presenceUpdate"},{"k":"Event","c":"discord.js!Client#ready:member(0)","d":"/**\n * Emitted when the client becomes ready to start working.\n *\n * @param client - The client\n */\n","ex":[{"k":"Content","t":"on('ready', (client: "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":383,"r":"Public","oi":0,"ps":[{"pn":"client","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"ready"},{"k":"Property","c":"discord.js!Client#readyAt:member","d":"/**\n * Time at which the client was last regarded as being in the {@link Status.Ready} state (each time the client disconnects and successfully reconnects, this will be overwritten)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"readyAt","c":"discord.js!Client#readyAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":195,"co":3,"ro":true,"op":false,"r":"Public","n":"readyAt","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Client#readyTimestamp:member","d":"/**\n * Timestamp of the time the client was last {@link Status.Ready} at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"readyTimestamp","c":"discord.js!Client#readyTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":173,"co":3,"ro":false,"op":false,"r":"Public","n":"readyTimestamp","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Client#removeAllListeners:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"removeAllListeners","c":"discord.js!Client#removeAllListeners"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Event"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1032,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"removeAllListeners"},{"k":"Method","c":"discord.js!Client#removeAllListeners:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"removeAllListeners","c":"discord.js!Client#removeAllListeners"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"symbol"},{"k":"Content","t":">("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":", keyof "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1033,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":8},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":18,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":11,"en":17},"op":true,"rs":false}],"op":false,"ab":false,"n":"removeAllListeners"},{"k":"Property","c":"discord.js!Client#rest:member","d":"/**\n * The REST manager of the client\n */\n","ex":[{"k":"Content","t":"undefined rest :"},{"k":"Reference","t":"REST","c":"@discordjs/rest!REST:class"},{"k":"Content","t":";"}],"pat":"src/client/BaseClient.js","l":55,"ro":false,"op":false,"r":"Public","n":"rest","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#roleCreate:member(0)","d":"/**\n * Emitted whenever a role is created.\n *\n * @param role - The role that was created\n */\n","ex":[{"k":"Content","t":"on('roleCreate', (role: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildRoleCreate.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"role","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"roleCreate"},{"k":"Event","c":"discord.js!Client#roleDelete:member(0)","d":"/**\n * Emitted whenever a guild role is deleted.\n *\n * @param role - The role that was deleted\n */\n","ex":[{"k":"Content","t":"on('roleDelete', (role: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildRoleDelete.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"role","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"roleDelete"},{"k":"Event","c":"discord.js!Client#roleUpdate:member(0)","d":"/**\n * Emitted whenever a guild role is updated.\n *\n * @param oldRole - The role before the update\n *\n * @param newRole - The role after the update\n */\n","ex":[{"k":"Content","t":"on('roleUpdate', (oldRole: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", newRole: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildRoleUpdate.js","l":17,"r":"Public","oi":0,"ps":[{"pn":"oldRole","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newRole","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"roleUpdate"},{"k":"Property","c":"discord.js!Client#shard:member","d":"/**\n * Shard helpers for the client (only if the process was spawned from a {@link ShardingManager})\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shard","c":"discord.js!Client#shard"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardClientUtil","c":"discord.js!ShardClientUtil:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":105,"co":3,"ro":false,"op":false,"r":"Public","n":"shard","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#shardDisconnect:member(0)","d":"/**\n * Emitted when a shard's WebSocket disconnects and will no longer reconnect.\n *\n * @param event - The WebSocket close event\n *\n * @param id - The shard id that disconnected\n */\n","ex":[{"k":"Content","t":"on('shardDisconnect', (event: "},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":", id: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":254,"r":"Public","oi":0,"ps":[{"pn":"event","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"id","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"shardDisconnect"},{"k":"Event","c":"discord.js!Client#shardError:member(0)","d":"/**\n * Emitted whenever a shard's WebSocket encounters a connection error.\n *\n * @param error - The encountered error\n *\n * @param shardId - The shard that encountered this error\n */\n","ex":[{"k":"Content","t":"on('shardError', (error: "},{"k":"Reference","t":"Error","c":"discord.js!Error:class"},{"k":"Content","t":", shardId: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":301,"r":"Public","oi":0,"ps":[{"pn":"error","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"shardId","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"shardError"},{"k":"Event","c":"discord.js!Client#shardReady:member(0)","d":"/**\n * Emitted when a shard turns ready.\n *\n * @param id - The shard id that turned ready\n *\n * @param unavailableGuilds - Set of unavailable guild ids, if any\n */\n","ex":[{"k":"Content","t":"on('shardReady', (id: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", unavailableGuilds: "},{"k":"Reference","t":"Set","c":"discord.js!Set:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":193,"r":"Public","oi":0,"ps":[{"pn":"id","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"unavailableGuilds","ptr":{"st":3,"en":7},"op":false,"rs":false}],"n":"shardReady"},{"k":"Event","c":"discord.js!Client#shardReconnecting:member(0)","d":"/**\n * Emitted when a shard is attempting to reconnect or re-identify.\n *\n * @param id - The shard id that is attempting to reconnect\n */\n","ex":[{"k":"Content","t":"on('shardReconnecting', (id: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":266,"r":"Public","oi":0,"ps":[{"pn":"id","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"shardReconnecting"},{"k":"Event","c":"discord.js!Client#shardResume:member(0)","d":"/**\n * Emitted when a shard resumes successfully.\n *\n * @param id - The shard id that resumed\n *\n * @param replayedEvents - The amount of replayed events\n */\n","ex":[{"k":"Content","t":"on('shardResume', (id: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", replayedEvents: "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/RESUMED.js","l":7,"r":"Public","oi":0,"ps":[{"pn":"id","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"replayedEvents","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"shardResume"},{"k":"Event","c":"discord.js!Client#stageInstanceCreate:member(0)","d":"/**\n * Emitted whenever a stage instance is created.\n *\n * @param stageInstance - The created stage instance\n */\n","ex":[{"k":"Content","t":"on('stageInstanceCreate', (stageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/StageInstanceCreate.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"stageInstance","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"stageInstanceCreate"},{"k":"Event","c":"discord.js!Client#stageInstanceDelete:member(0)","d":"/**\n * Emitted whenever a stage instance is deleted.\n *\n * @param stageInstance - The deleted stage instance\n */\n","ex":[{"k":"Content","t":"on('stageInstanceDelete', (stageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/StageInstanceDelete.js","l":16,"r":"Public","oi":0,"ps":[{"pn":"stageInstance","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"stageInstanceDelete"},{"k":"Event","c":"discord.js!Client#stageInstanceUpdate:member(0)","d":"/**\n * Emitted whenever a stage instance gets updated - e.g. change in topic or privacy level\n *\n * @param oldStageInstance - The stage instance before the update\n *\n * @param newStageInstance - The stage instance after the update\n */\n","ex":[{"k":"Content","t":"on('stageInstanceUpdate', (oldStageInstance?: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":", newStageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/StageInstanceUpdate.js","l":15,"r":"Public","oi":0,"ps":[{"pn":"oldStageInstance","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newStageInstance","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"stageInstanceUpdate"},{"k":"Event","c":"discord.js!Client#stickerCreate:member(0)","d":"/**\n * Emitted whenever a custom sticker is created in a guild.\n *\n * @param sticker - The sticker that was created\n */\n","ex":[{"k":"Content","t":"on('stickerCreate', (sticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildStickerCreate.js","l":10,"r":"Public","oi":0,"ps":[{"pn":"sticker","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"stickerCreate"},{"k":"Event","c":"discord.js!Client#stickerDelete:member(0)","d":"/**\n * Emitted whenever a custom sticker is deleted in a guild.\n *\n * @param sticker - The sticker that was deleted\n */\n","ex":[{"k":"Content","t":"on('stickerDelete', (sticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildStickerDelete.js","l":9,"r":"Public","oi":0,"ps":[{"pn":"sticker","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"stickerDelete"},{"k":"Event","c":"discord.js!Client#stickerUpdate:member(0)","d":"/**\n * Emitted whenever a custom sticker is updated in a guild.\n *\n * @param oldSticker - The old sticker\n *\n * @param newSticker - The new sticker\n */\n","ex":[{"k":"Content","t":"on('stickerUpdate', (oldSticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":", newSticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/GuildStickerUpdate.js","l":9,"r":"Public","oi":0,"ps":[{"pn":"oldSticker","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newSticker","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"stickerUpdate"},{"k":"Property","c":"discord.js!Client#sweepers:member","d":"/**\n * The sweeping functions and their intervals used to periodically sweep caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepers","c":"discord.js!Client#sweepers"},{"k":"Content","t":": "},{"k":"Reference","t":"Sweepers","c":"discord.js!Sweepers:class"},{"k":"Content","t":";"}],"l":135,"co":3,"ro":false,"op":false,"r":"Public","n":"sweepers","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#threadCreate:member(0)","d":"/**\n * Emitted whenever a thread is created or when the client user is added to a thread.\n *\n * @param thread - The thread that was created\n *\n * @param newlyCreated - Whether the thread was newly created\n */\n","ex":[{"k":"Content","t":"on('threadCreate', (thread: "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":", newlyCreated: "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ThreadCreate.js","l":12,"r":"Public","oi":0,"ps":[{"pn":"thread","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newlyCreated","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"threadCreate"},{"k":"Event","c":"discord.js!Client#threadDelete:member(0)","d":"/**\n * Emitted whenever a thread is deleted.\n *\n * @param thread - The thread that was deleted\n */\n","ex":[{"k":"Content","t":"on('threadDelete', (thread: "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ThreadDelete.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"thread","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"threadDelete"},{"k":"Event","c":"discord.js!Client#threadListSync:member(0)","d":"/**\n * Emitted whenever the client user gains access to a text or news channel that contains threads\n *\n * @param threads - The threads that were synced\n *\n * @param guild - The guild that the threads were synced in\n */\n","ex":[{"k":"Content","t":"on('threadListSync', (threads: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":", guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ThreadListSync.js","l":38,"r":"Public","oi":0,"ps":[{"pn":"threads","ptr":{"st":1,"en":7},"op":false,"rs":false},{"pn":"guild","ptr":{"st":8,"en":9},"op":false,"rs":false}],"n":"threadListSync"},{"k":"Event","c":"discord.js!Client#threadMembersUpdate:member(0)","d":"/**\n * Emitted whenever members are added or removed from a thread. <info>This event requires the {@link discord-api-types#(GatewayIntentBits:enum).GuildMembers} privileged gateway intent.</info>\n *\n * @param addedMembers - The members that were added\n *\n * @param removedMembers - The members that were removed\n *\n * @param thread - The thread where members got updated\n */\n","ex":[{"k":"Content","t":"on('threadMembersUpdate', (addedMembers: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":", removedMembers: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":", thread: "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ThreadMembersUpdate.js","l":33,"r":"Public","oi":0,"ps":[{"pn":"addedMembers","ptr":{"st":1,"en":7},"op":false,"rs":false},{"pn":"removedMembers","ptr":{"st":8,"en":14},"op":false,"rs":false},{"pn":"thread","ptr":{"st":15,"en":16},"op":false,"rs":false}],"n":"threadMembersUpdate"},{"k":"Event","c":"discord.js!Client#threadMemberUpdate:member(0)","d":"/**\n * Emitted whenever the client user's thread member is updated.\n *\n * @param oldMember - The member before the update\n *\n * @param newMember - The member after the update\n */\n","ex":[{"k":"Content","t":"on('threadMemberUpdate', (oldMember: "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":", newMember: "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/ThreadMemberUpdate.js","l":18,"r":"Public","oi":0,"ps":[{"pn":"oldMember","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newMember","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"threadMemberUpdate"},{"k":"Event","c":"discord.js!Client#threadUpdate:member(0)","d":"/**\n * Emitted whenever a thread is updated - e.g. name change, archive state change, locked state change.\n *\n * @param oldThread - The thread before the update\n *\n * @param newThread - The thread after the update\n */\n","ex":[{"k":"Content","t":"on('threadUpdate', (oldThread: "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":", newThread: "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/websocket/handlers/THREAD_UPDATE.js","l":8,"r":"Public","oi":0,"ps":[{"pn":"oldThread","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newThread","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"threadUpdate"},{"k":"Method","c":"discord.js!Client#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Client#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1009,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!Client#token:member","d":"/**\n * Authorization token for the logged in bot. If present, this defaults to `process.env.DISCORD_TOKEN` when instantiating the client <warn>This should be kept private at all times.</warn>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"token","c":"discord.js!Client#token"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":152,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":13},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#typingStart:member(0)","d":"/**\n * Emitted whenever a user starts typing in a channel.\n *\n * @param typing - The typing state\n */\n","ex":[{"k":"Content","t":"on('typingStart', (typing: "},{"k":"Reference","t":"Typing","c":"discord.js!Typing:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/TypingStart.js","l":19,"r":"Public","oi":0,"ps":[{"pn":"typing","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"typingStart"},{"k":"Property","c":"discord.js!Client#uptime:member","d":"/**\n * How long it has been since the client last entered the {@link Status.Ready} state in milliseconds\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"uptime","c":"discord.js!Client#uptime"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":204,"co":3,"ro":true,"op":false,"r":"Public","n":"uptime","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Client#user:member","d":"/**\n * User that the client is logged in as\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!Client#user"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Ready"},{"k":"Content","t":", "},{"k":"Reference","t":"ClientUser","c":"discord.js!ClientUser:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":161,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Client#users:member","d":"/**\n * All of the {@link User} objects that have been cached at any point, mapped by their ids\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!Client#users"},{"k":"Content","t":": "},{"k":"Reference","t":"UserManager","c":"discord.js!UserManager:class"},{"k":"Content","t":";"}],"l":113,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#userUpdate:member(0)","d":"/**\n * Emitted whenever a user's details (e.g. username) are changed. Triggered by the Discord gateway events {@link Events.UserUpdate}, {@link Events.GuildMemberUpdate}, and {@link Events.PresenceUpdate}.\n *\n * @param oldUser - The user before the update\n *\n * @param newUser - The user after the update\n */\n","ex":[{"k":"Content","t":"on('userUpdate', (oldUser: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":", newUser: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/UserUpdate.js","l":14,"r":"Public","oi":0,"ps":[{"pn":"oldUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newUser","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"userUpdate"},{"k":"Property","c":"discord.js!Client#voice:member","d":"/**\n * The voice manager of the client\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"voice","c":"discord.js!Client#voice"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientVoiceManager","c":"discord.js!ClientVoiceManager:class"},{"k":"Content","t":";"}],"l":99,"co":3,"ro":false,"op":false,"r":"Public","n":"voice","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Client#voiceStateUpdate:member(0)","d":"/**\n * Emitted whenever a member changes voice state - e.g. joins/leaves a channel, mutes/unmutes.\n *\n * @param oldState - The voice state before the update\n *\n * @param newState - The voice state after the update\n */\n","ex":[{"k":"Content","t":"on('voiceStateUpdate', (oldState: "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":", newState: "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/VoiceStateUpdate.js","l":32,"r":"Public","oi":0,"ps":[{"pn":"oldState","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"newState","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"voiceStateUpdate"},{"k":"Event","c":"discord.js!Client#warn:member(0)","d":"/**\n * Emitted for general warnings.\n *\n * @param info - The warning\n */\n","ex":[{"k":"Content","t":"on('warn', (info: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"l":592,"r":"Public","oi":0,"ps":[{"pn":"info","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"warn"},{"k":"Event","c":"discord.js!Client#webhooksUpdate:member(0)","d":"/**\n * Emitted whenever a channel has its webhooks changed.\n *\n * @param channel - The channel that had a webhook update\n */\n","ex":[{"k":"Content","t":"on('webhooksUpdate', (channel: "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/WebhooksUpdate.js","l":15,"r":"Public","oi":0,"ps":[{"pn":"channel","ptr":{"st":1,"en":12},"op":false,"rs":false}],"n":"webhooksUpdate"},{"k":"Event","c":"discord.js!Client#webhookUpdate:member(0)","d":"/**\n * Emitted whenever a channel has its webhooks changed.\n *\n * @deprecated\n *\n * Use {@link Client.webhooksUpdate} instead.\n *\n * @param channel - The channel that had a webhook update\n */\n","ex":[{"k":"Content","t":"on('webhookUpdate', (channel: "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":") => {})"}],"pat":"src/client/actions/WebhooksUpdate.js","l":23,"r":"Public","oi":0,"ps":[{"pn":"channel","ptr":{"st":1,"en":12},"op":false,"rs":false}],"n":"webhookUpdate"},{"k":"Property","c":"discord.js!Client#ws:member","d":"/**\n * The WebSocket manager of the client\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ws","c":"discord.js!Client#ws"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocketManager","c":"discord.js!WebSocketManager:class"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":false,"op":false,"r":"Public","n":"ws","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ClientApplication:class","d":"/**\n * Represents a client application.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ClientApplication","c":"discord.js!ClientApplication:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Application","c":"discord.js!Application:class"},{"k":"Content","t":" "}],"pat":"src/structures/ClientApplication.js","l":25,"co":1,"r":"Public","ab":false,"n":"ClientApplication","pmo":false,"ms":[{"k":"Property","c":"discord.js!ClientApplication#approximateGuildCount:member","d":"/**\n * An approximate amount of guilds this application is in.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"approximateGuildCount","c":"discord.js!ClientApplication#approximateGuildCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":87,"co":3,"ro":false,"op":false,"r":"Public","n":"approximateGuildCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#bot:member","d":"/**\n * The bot associated with this application.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bot","c":"discord.js!ClientApplication#bot"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":137,"co":3,"ro":false,"op":false,"r":"Public","n":"bot","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#botPublic:member","d":"/**\n * If this application's bot is public\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"botPublic","c":"discord.js!ClientApplication#botPublic"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":147,"co":3,"ro":false,"op":false,"r":"Public","n":"botPublic","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#botRequireCodeGrant:member","d":"/**\n * If this application's bot requires a code grant when using the OAuth2 flow\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"botRequireCodeGrant","c":"discord.js!ClientApplication#botRequireCodeGrant"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":127,"co":3,"ro":false,"op":false,"r":"Public","n":"botRequireCodeGrant","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#commands:member","d":"/**\n * The application command manager for this application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commands","c":"discord.js!ClientApplication#commands"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!ApplicationCommandManager:class"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"commands","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#cover:member","d":"/**\n * The hash of the application's cover image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"cover","c":"discord.js!ClientApplication#cover"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":107,"co":3,"ro":false,"op":false,"r":"Public","n":"cover","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#createdAt:member","d":"/**\n * The time the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":69,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#createdTimestamp:member","d":"/**\n * The timestamp the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":60,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#customInstallURL:member","d":"/**\n * This application's custom installation URL\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"customInstallURL","c":"discord.js!ClientApplication#customInstallURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":false,"op":false,"r":"Public","n":"customInstallURL","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#description:member","d":"/**\n * The application's description\n */\n","ex":[{"k":"Content","t":"undefined description :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":39,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ClientApplication#edit:member(1)","d":"/**\n * Edits this application.\n *\n * @param options - The options for editing this application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ClientApplication#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientApplicationEditOptions","c":"discord.js!ClientApplicationEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClientApplication","c":"discord.js!ClientApplication:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":221,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!ClientApplication#editRoleConnectionMetadataRecords:member(1)","d":"/**\n * Updates this application's role connection metadata records\n *\n * @param records - The new role connection metadata records\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editRoleConnectionMetadataRecords","c":"discord.js!ClientApplication#editRoleConnectionMetadataRecords"},{"k":"Content","t":"(  "},{"k":"Reference","t":"records","c":"discord.js!~records"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationRoleConnectionMetadataEditOptions","c":"discord.js!ApplicationRoleConnectionMetadataEditOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationRoleConnectionMetadata","c":"discord.js!ApplicationRoleConnectionMetadata:class"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":285,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"records","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"editRoleConnectionMetadataRecords"},{"k":"Property","c":"discord.js!ClientApplication#entitlements:member","d":"/**\n * The entitlement manager for this application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entitlements","c":"discord.js!ClientApplication#entitlements"},{"k":"Content","t":": "},{"k":"Reference","t":"EntitlementManager","c":"discord.js!EntitlementManager:class"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ClientApplication#fetch:member(1)","d":"/**\n * Obtains this application from Discord.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ClientApplication#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClientApplication","c":"discord.js!ClientApplication:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":254,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ClientApplication#fetchRoleConnectionMetadataRecords:member(1)","d":"/**\n * Gets this application's role connection metadata records\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchRoleConnectionMetadataRecords","c":"discord.js!ClientApplication#fetchRoleConnectionMetadataRecords"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationRoleConnectionMetadata","c":"discord.js!ApplicationRoleConnectionMetadata:class"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchRoleConnectionMetadataRecords"},{"k":"Method","c":"discord.js!ClientApplication#fetchSKUs:member(1)","d":"/**\n * Gets this application's SKUs\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchSKUs","c":"discord.js!ClientApplication#fetchSKUs"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"SKU","c":"discord.js!SKU:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":304,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchSKUs"},{"k":"Property","c":"discord.js!ClientApplication#flags:member","d":"/**\n * The flags this application has\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!ClientApplication#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationFlagsBitField","c":"discord.js!ApplicationFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#guild:member","d":"/**\n * The guild associated with this application.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!ClientApplication#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":188,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#guildId:member","d":"/**\n * The id of the guild associated with this application.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!ClientApplication#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":97,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#icon:member","d":"/**\n * The application's icon hash\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":49,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#id:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":22,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#installParams:member","d":"/**\n * Settings for this application's default in-app authorization\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"installParams","c":"discord.js!ClientApplication#installParams"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientApplicationInstallParams","c":"discord.js!ClientApplicationInstallParams:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"installParams","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#interactionsEndpointURL:member","d":"/**\n * This application's interaction endpoint URL.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"interactionsEndpointURL","c":"discord.js!ClientApplication#interactionsEndpointURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":157,"co":3,"ro":false,"op":false,"r":"Public","n":"interactionsEndpointURL","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#name:member","d":"/**\n * The name of the application\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":29,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#owner:member","d":"/**\n * The owner of this OAuth application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"owner","c":"discord.js!ClientApplication#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Team","c":"discord.js!Team:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":176,"co":3,"ro":false,"op":false,"r":"Public","n":"owner","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#partial:member","d":"/**\n * Whether this application is partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!ClientApplication#partial"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":197,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#roleConnectionsVerificationURL:member","d":"/**\n * This application's role connection verification entry point URL\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roleConnectionsVerificationURL","c":"discord.js!ClientApplication#roleConnectionsVerificationURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":false,"op":false,"r":"Public","n":"roleConnectionsVerificationURL","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#rpcOrigins:member","d":"/**\n * The application's RPC origins, if enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rpcOrigins","c":"discord.js!ClientApplication#rpcOrigins"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":117,"co":3,"ro":false,"op":false,"r":"Public","n":"rpcOrigins","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientApplication#tags:member","d":"/**\n * The tags this application has (max of 5)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"tags","c":"discord.js!ClientApplication#tags"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"tags","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!ClientApplicationEditOptions:interface","d":"/**\n * Options used for editing an application.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientApplicationEditOptions","c":"discord.js!ClientApplicationEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientApplication.js","l":201,"co":1,"r":"Public","n":"ClientApplicationEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#coverImage:member","d":"/**\n * The application's cover image\n */\n","ex":[{"k":"Reference","t":"coverImage","c":"discord.js!ClientApplicationEditOptions#coverImage"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6781,"co":3,"ro":false,"op":true,"r":"Public","n":"coverImage","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#customInstallURL:member","d":"/**\n * The application's custom installation URL\n */\n","ex":[{"k":"Reference","t":"customInstallURL","c":"discord.js!ClientApplicationEditOptions#customInstallURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6775,"co":3,"ro":false,"op":true,"r":"Public","n":"customInstallURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#description:member","d":"/**\n * The application's description\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!ClientApplicationEditOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6776,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#flags:member","d":"/**\n * The flags for the application\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!ClientApplicationEditOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationFlagsResolvable","c":"discord.js!ApplicationFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6779,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#icon:member","d":"/**\n * The application's icon\n */\n","ex":[{"k":"Reference","t":"icon","c":"discord.js!ClientApplicationEditOptions#icon"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6780,"co":3,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#installParams:member","d":"/**\n * Settings for the application's default in-app authorization\n */\n","ex":[{"k":"Reference","t":"installParams","c":"discord.js!ClientApplicationEditOptions#installParams"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientApplicationInstallParams","c":"discord.js!ClientApplicationInstallParams:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6778,"co":3,"ro":false,"op":true,"r":"Public","n":"installParams","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#interactionsEndpointURL:member","d":"/**\n * The application's interaction endpoint URL\n */\n","ex":[{"k":"Reference","t":"interactionsEndpointURL","c":"discord.js!ClientApplicationEditOptions#interactionsEndpointURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6782,"co":3,"ro":false,"op":true,"r":"Public","n":"interactionsEndpointURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#roleConnectionsVerificationURL:member","d":"/**\n * The application's role connection verification URL\n */\n","ex":[{"k":"Reference","t":"roleConnectionsVerificationURL","c":"discord.js!ClientApplicationEditOptions#roleConnectionsVerificationURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6777,"co":3,"ro":false,"op":true,"r":"Public","n":"roleConnectionsVerificationURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientApplicationEditOptions#tags:member","d":"/**\n * The application's tags\n */\n","ex":[{"k":"Reference","t":"tags","c":"discord.js!ClientApplicationEditOptions#tags"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6783,"co":3,"ro":false,"op":true,"r":"Public","n":"tags","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!ClientApplicationInstallParams:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientApplicationInstallParams","c":"discord.js!ClientApplicationInstallParams:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientApplication.js","l":15,"co":1,"r":"Public","n":"ClientApplicationInstallParams","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientApplicationInstallParams#permissions:member","d":"/**\n * The permissions this bot will request upon joining\n */\n","ex":[{"k":"Reference","t":"permissions","c":"discord.js!ClientApplicationInstallParams#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6788,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!ClientApplicationInstallParams#scopes:member","d":"/**\n * The scopes to add the application to the server with\n */\n","ex":[{"k":"Reference","t":"scopes","c":"discord.js!ClientApplicationInstallParams#scopes"},{"k":"Content","t":": "},{"k":"Reference","t":"OAuth2Scopes","c":"discord-api-types!OAuth2Scopes:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6787,"co":3,"ro":false,"op":false,"r":"Public","n":"scopes","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!ClientEvents:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5069,"co":1,"r":"Public","n":"ClientEvents","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientEvents#applicationCommandPermissionsUpdate:member","d":"","ex":[{"k":"Reference","t":"applicationCommandPermissionsUpdate","c":"discord.js!ClientEvents#applicationCommandPermissionsUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[data: "},{"k":"Reference","t":"ApplicationCommandPermissionsUpdateData","c":"discord.js!ApplicationCommandPermissionsUpdateData:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5070,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationCommandPermissionsUpdate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#autoModerationActionExecution:member","d":"","ex":[{"k":"Reference","t":"autoModerationActionExecution","c":"discord.js!ClientEvents#autoModerationActionExecution"},{"k":"Content","t":": "},{"k":"Content","t":"[autoModerationActionExecution: "},{"k":"Reference","t":"AutoModerationActionExecution","c":"discord.js!AutoModerationActionExecution:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5071,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationActionExecution","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#autoModerationRuleCreate:member","d":"","ex":[{"k":"Reference","t":"autoModerationRuleCreate","c":"discord.js!ClientEvents#autoModerationRuleCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[autoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5072,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRuleCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#autoModerationRuleDelete:member","d":"","ex":[{"k":"Reference","t":"autoModerationRuleDelete","c":"discord.js!ClientEvents#autoModerationRuleDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[autoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5073,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRuleDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#autoModerationRuleUpdate:member","d":"","ex":[{"k":"Reference","t":"autoModerationRuleUpdate","c":"discord.js!ClientEvents#autoModerationRuleUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[  oldAutoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  newAutoModerationRule: "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":", ]"},{"k":"Content","t":";"}],"l":5074,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRuleUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#cacheSweep:member","d":"","ex":[{"k":"Reference","t":"cacheSweep","c":"discord.js!ClientEvents#cacheSweep"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"string"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5078,"co":3,"ro":false,"op":false,"r":"Public","n":"cacheSweep","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#channelCreate:member","d":"","ex":[{"k":"Reference","t":"channelCreate","c":"discord.js!ClientEvents#channelCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[channel: "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5079,"co":3,"ro":false,"op":false,"r":"Public","n":"channelCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#channelDelete:member","d":"","ex":[{"k":"Reference","t":"channelDelete","c":"discord.js!ClientEvents#channelDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[channel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5080,"co":3,"ro":false,"op":false,"r":"Public","n":"channelDelete","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#channelPinsUpdate:member","d":"","ex":[{"k":"Reference","t":"channelPinsUpdate","c":"discord.js!ClientEvents#channelPinsUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[channel: "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":", date: "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5081,"co":3,"ro":false,"op":false,"r":"Public","n":"channelPinsUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#channelUpdate:member","d":"","ex":[{"k":"Reference","t":"channelUpdate","c":"discord.js!ClientEvents#channelUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[  oldChannel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":",  newChannel: "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":", ]"},{"k":"Content","t":";"}],"l":5082,"co":3,"ro":false,"op":false,"r":"Public","n":"channelUpdate","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#debug:member","d":"","ex":[{"k":"Reference","t":"debug","c":"discord.js!ClientEvents#debug"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"string"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5086,"co":3,"ro":false,"op":false,"r":"Public","n":"debug","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#emojiCreate:member","d":"","ex":[{"k":"Reference","t":"emojiCreate","c":"discord.js!ClientEvents#emojiCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[emoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5088,"co":3,"ro":false,"op":false,"r":"Public","n":"emojiCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#emojiDelete:member","d":"","ex":[{"k":"Reference","t":"emojiDelete","c":"discord.js!ClientEvents#emojiDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[emoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5089,"co":3,"ro":false,"op":false,"r":"Public","n":"emojiDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#emojiUpdate:member","d":"","ex":[{"k":"Reference","t":"emojiUpdate","c":"discord.js!ClientEvents#emojiUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldEmoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":", newEmoji: "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5090,"co":3,"ro":false,"op":false,"r":"Public","n":"emojiUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#entitlementCreate:member","d":"","ex":[{"k":"Reference","t":"entitlementCreate","c":"discord.js!ClientEvents#entitlementCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[entitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5091,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlementCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#entitlementDelete:member","d":"","ex":[{"k":"Reference","t":"entitlementDelete","c":"discord.js!ClientEvents#entitlementDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[entitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5092,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlementDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#entitlementUpdate:member","d":"","ex":[{"k":"Reference","t":"entitlementUpdate","c":"discord.js!ClientEvents#entitlementUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldEntitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", newEntitlement: "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5093,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlementUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#error:member","d":"","ex":[{"k":"Reference","t":"error","c":"discord.js!ClientEvents#error"},{"k":"Content","t":": "},{"k":"Content","t":"[error: "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5094,"co":3,"ro":false,"op":false,"r":"Public","n":"error","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildAuditLogEntryCreate:member","d":"","ex":[{"k":"Reference","t":"guildAuditLogEntryCreate","c":"discord.js!ClientEvents#guildAuditLogEntryCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[auditLogEntry: "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":", guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5095,"co":3,"ro":false,"op":false,"r":"Public","n":"guildAuditLogEntryCreate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildAvailable:member","d":"","ex":[{"k":"Reference","t":"guildAvailable","c":"discord.js!ClientEvents#guildAvailable"},{"k":"Content","t":": "},{"k":"Content","t":"[guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5096,"co":3,"ro":false,"op":false,"r":"Public","n":"guildAvailable","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildBanAdd:member","d":"","ex":[{"k":"Reference","t":"guildBanAdd","c":"discord.js!ClientEvents#guildBanAdd"},{"k":"Content","t":": "},{"k":"Content","t":"[ban: "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5097,"co":3,"ro":false,"op":false,"r":"Public","n":"guildBanAdd","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildBanRemove:member","d":"","ex":[{"k":"Reference","t":"guildBanRemove","c":"discord.js!ClientEvents#guildBanRemove"},{"k":"Content","t":": "},{"k":"Content","t":"[ban: "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5098,"co":3,"ro":false,"op":false,"r":"Public","n":"guildBanRemove","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildCreate:member","d":"","ex":[{"k":"Reference","t":"guildCreate","c":"discord.js!ClientEvents#guildCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5099,"co":3,"ro":false,"op":false,"r":"Public","n":"guildCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildDelete:member","d":"","ex":[{"k":"Reference","t":"guildDelete","c":"discord.js!ClientEvents#guildDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5100,"co":3,"ro":false,"op":false,"r":"Public","n":"guildDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildIntegrationsUpdate:member","d":"","ex":[{"k":"Reference","t":"guildIntegrationsUpdate","c":"discord.js!ClientEvents#guildIntegrationsUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5102,"co":3,"ro":false,"op":false,"r":"Public","n":"guildIntegrationsUpdate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildMemberAdd:member","d":"","ex":[{"k":"Reference","t":"guildMemberAdd","c":"discord.js!ClientEvents#guildMemberAdd"},{"k":"Content","t":": "},{"k":"Content","t":"[member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5103,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMemberAdd","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildMemberAvailable:member","d":"","ex":[{"k":"Reference","t":"guildMemberAvailable","c":"discord.js!ClientEvents#guildMemberAvailable"},{"k":"Content","t":": "},{"k":"Content","t":"[member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildMember","c":"discord.js!PartialGuildMember:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5104,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMemberAvailable","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildMemberRemove:member","d":"","ex":[{"k":"Reference","t":"guildMemberRemove","c":"discord.js!ClientEvents#guildMemberRemove"},{"k":"Content","t":": "},{"k":"Content","t":"[member: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildMember","c":"discord.js!PartialGuildMember:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5105,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMemberRemove","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildMembersChunk:member","d":"","ex":[{"k":"Reference","t":"guildMembersChunk","c":"discord.js!ClientEvents#guildMembersChunk"},{"k":"Content","t":": "},{"k":"Content","t":"[  members: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">,  guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":",  data: { "},{"k":"Reference","t":"index","c":"discord.js!~__type#index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"; "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"; "},{"k":"Reference","t":"notFound","c":"discord.js!~__type#notFound"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"nonce","c":"discord.js!~__type#nonce"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":" }, ]"},{"k":"Content","t":";"}],"l":5106,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMembersChunk","prtr":{"st":2,"en":29}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildMemberUpdate:member","d":"","ex":[{"k":"Reference","t":"guildMemberUpdate","c":"discord.js!ClientEvents#guildMemberUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldMember: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildMember","c":"discord.js!PartialGuildMember:interface"},{"k":"Content","t":", newMember: "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5111,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMemberUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildScheduledEventCreate:member","d":"","ex":[{"k":"Reference","t":"guildScheduledEventCreate","c":"discord.js!ClientEvents#guildScheduledEventCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5160,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildScheduledEventDelete:member","d":"","ex":[{"k":"Reference","t":"guildScheduledEventDelete","c":"discord.js!ClientEvents#guildScheduledEventDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildScheduledEvent","c":"discord.js!PartialGuildScheduledEvent:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5165,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventDelete","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildScheduledEventUpdate:member","d":"","ex":[{"k":"Reference","t":"guildScheduledEventUpdate","c":"discord.js!ClientEvents#guildScheduledEventUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[  oldGuildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildScheduledEvent","c":"discord.js!PartialGuildScheduledEvent:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  newGuildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", ]"},{"k":"Content","t":";"}],"l":5161,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventUpdate","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildScheduledEventUserAdd:member","d":"","ex":[{"k":"Reference","t":"guildScheduledEventUserAdd","c":"discord.js!ClientEvents#guildScheduledEventUserAdd"},{"k":"Content","t":": "},{"k":"Content","t":"[guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildScheduledEvent","c":"discord.js!PartialGuildScheduledEvent:interface"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5166,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventUserAdd","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildScheduledEventUserRemove:member","d":"","ex":[{"k":"Reference","t":"guildScheduledEventUserRemove","c":"discord.js!ClientEvents#guildScheduledEventUserRemove"},{"k":"Content","t":": "},{"k":"Content","t":"[guildScheduledEvent: "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGuildScheduledEvent","c":"discord.js!PartialGuildScheduledEvent:interface"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5167,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventUserRemove","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildUnavailable:member","d":"","ex":[{"k":"Reference","t":"guildUnavailable","c":"discord.js!ClientEvents#guildUnavailable"},{"k":"Content","t":": "},{"k":"Content","t":"[guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5101,"co":3,"ro":false,"op":false,"r":"Public","n":"guildUnavailable","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#guildUpdate:member","d":"","ex":[{"k":"Reference","t":"guildUpdate","c":"discord.js!ClientEvents#guildUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldGuild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", newGuild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5112,"co":3,"ro":false,"op":false,"r":"Public","n":"guildUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#interactionCreate:member","d":"","ex":[{"k":"Reference","t":"interactionCreate","c":"discord.js!ClientEvents#interactionCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[interaction: "},{"k":"Reference","t":"Interaction","c":"discord.js!Interaction:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5148,"co":3,"ro":false,"op":false,"r":"Public","n":"interactionCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#invalidated:member","d":"","ex":[{"k":"Reference","t":"invalidated","c":"discord.js!ClientEvents#invalidated"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":5128,"co":3,"ro":false,"op":false,"r":"Public","n":"invalidated","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientEvents#inviteCreate:member","d":"","ex":[{"k":"Reference","t":"inviteCreate","c":"discord.js!ClientEvents#inviteCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[invite: "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5113,"co":3,"ro":false,"op":false,"r":"Public","n":"inviteCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#inviteDelete:member","d":"","ex":[{"k":"Reference","t":"inviteDelete","c":"discord.js!ClientEvents#inviteDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[invite: "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5114,"co":3,"ro":false,"op":false,"r":"Public","n":"inviteDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageCreate:member","d":"","ex":[{"k":"Reference","t":"messageCreate","c":"discord.js!ClientEvents#messageCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5115,"co":3,"ro":false,"op":false,"r":"Public","n":"messageCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageDelete:member","d":"","ex":[{"k":"Reference","t":"messageDelete","c":"discord.js!ClientEvents#messageDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5116,"co":3,"ro":false,"op":false,"r":"Public","n":"messageDelete","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageDeleteBulk:member","d":"","ex":[{"k":"Reference","t":"messageDeleteBulk","c":"discord.js!ClientEvents#messageDeleteBulk"},{"k":"Content","t":": "},{"k":"Content","t":"[messages: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":">, channel: "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5122,"co":3,"ro":false,"op":false,"r":"Public","n":"messageDeleteBulk","prtr":{"st":2,"en":13}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageReactionAdd:member","d":"","ex":[{"k":"Reference","t":"messageReactionAdd","c":"discord.js!ClientEvents#messageReactionAdd"},{"k":"Content","t":": "},{"k":"Content","t":"[reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessageReaction","c":"discord.js!PartialMessageReaction:interface"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialUser","c":"discord.js!PartialUser:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5123,"co":3,"ro":false,"op":false,"r":"Public","n":"messageReactionAdd","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageReactionRemove:member","d":"","ex":[{"k":"Reference","t":"messageReactionRemove","c":"discord.js!ClientEvents#messageReactionRemove"},{"k":"Content","t":": "},{"k":"Content","t":"[reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessageReaction","c":"discord.js!PartialMessageReaction:interface"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialUser","c":"discord.js!PartialUser:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5124,"co":3,"ro":false,"op":false,"r":"Public","n":"messageReactionRemove","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageReactionRemoveAll:member","d":"","ex":[{"k":"Reference","t":"messageReactionRemoveAll","c":"discord.js!ClientEvents#messageReactionRemoveAll"},{"k":"Content","t":": "},{"k":"Content","t":"[  message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":",  reactions: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">, ]"},{"k":"Content","t":";"}],"l":5117,"co":3,"ro":false,"op":false,"r":"Public","n":"messageReactionRemoveAll","prtr":{"st":2,"en":15}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageReactionRemoveEmoji:member","d":"","ex":[{"k":"Reference","t":"messageReactionRemoveEmoji","c":"discord.js!ClientEvents#messageReactionRemoveEmoji"},{"k":"Content","t":": "},{"k":"Content","t":"[reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessageReaction","c":"discord.js!PartialMessageReaction:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5121,"co":3,"ro":false,"op":false,"r":"Public","n":"messageReactionRemoveEmoji","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#messageUpdate:member","d":"","ex":[{"k":"Reference","t":"messageUpdate","c":"discord.js!ClientEvents#messageUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldMessage: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":", newMessage: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5125,"co":3,"ro":false,"op":false,"r":"Public","n":"messageUpdate","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#presenceUpdate:member","d":"","ex":[{"k":"Reference","t":"presenceUpdate","c":"discord.js!ClientEvents#presenceUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldPresence: "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", newPresence: "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5126,"co":3,"ro":false,"op":false,"r":"Public","n":"presenceUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#ready:member","d":"","ex":[{"k":"Reference","t":"ready","c":"discord.js!ClientEvents#ready"},{"k":"Content","t":": "},{"k":"Content","t":"[client: "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>]"},{"k":"Content","t":";"}],"l":5127,"co":3,"ro":false,"op":false,"r":"Public","n":"ready","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#roleCreate:member","d":"","ex":[{"k":"Reference","t":"roleCreate","c":"discord.js!ClientEvents#roleCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[role: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5129,"co":3,"ro":false,"op":false,"r":"Public","n":"roleCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#roleDelete:member","d":"","ex":[{"k":"Reference","t":"roleDelete","c":"discord.js!ClientEvents#roleDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[role: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5130,"co":3,"ro":false,"op":false,"r":"Public","n":"roleDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#roleUpdate:member","d":"","ex":[{"k":"Reference","t":"roleUpdate","c":"discord.js!ClientEvents#roleUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldRole: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", newRole: "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5131,"co":3,"ro":false,"op":false,"r":"Public","n":"roleUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#shardDisconnect:member","d":"","ex":[{"k":"Reference","t":"shardDisconnect","c":"discord.js!ClientEvents#shardDisconnect"},{"k":"Content","t":": "},{"k":"Content","t":"[closeEvent: "},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":", shardId: "},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5149,"co":3,"ro":false,"op":false,"r":"Public","n":"shardDisconnect","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#shardError:member","d":"","ex":[{"k":"Reference","t":"shardError","c":"discord.js!ClientEvents#shardError"},{"k":"Content","t":": "},{"k":"Content","t":"[error: "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":", shardId: "},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5150,"co":3,"ro":false,"op":false,"r":"Public","n":"shardError","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#shardReady:member","d":"","ex":[{"k":"Reference","t":"shardReady","c":"discord.js!ClientEvents#shardReady"},{"k":"Content","t":": "},{"k":"Content","t":"[shardId: "},{"k":"Reference","t":"number"},{"k":"Content","t":", unavailableGuilds: "},{"k":"Reference","t":"Set","c":"!Set:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5151,"co":3,"ro":false,"op":false,"r":"Public","n":"shardReady","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#shardReconnecting:member","d":"","ex":[{"k":"Reference","t":"shardReconnecting","c":"discord.js!ClientEvents#shardReconnecting"},{"k":"Content","t":": "},{"k":"Content","t":"[shardId: "},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5152,"co":3,"ro":false,"op":false,"r":"Public","n":"shardReconnecting","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#shardResume:member","d":"","ex":[{"k":"Reference","t":"shardResume","c":"discord.js!ClientEvents#shardResume"},{"k":"Content","t":": "},{"k":"Content","t":"[shardId: "},{"k":"Reference","t":"number"},{"k":"Content","t":", replayedEvents: "},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5153,"co":3,"ro":false,"op":false,"r":"Public","n":"shardResume","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stageInstanceCreate:member","d":"","ex":[{"k":"Reference","t":"stageInstanceCreate","c":"discord.js!ClientEvents#stageInstanceCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[stageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5154,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstanceCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stageInstanceDelete:member","d":"","ex":[{"k":"Reference","t":"stageInstanceDelete","c":"discord.js!ClientEvents#stageInstanceDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[stageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5156,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstanceDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stageInstanceUpdate:member","d":"","ex":[{"k":"Reference","t":"stageInstanceUpdate","c":"discord.js!ClientEvents#stageInstanceUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldStageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", newStageInstance: "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5155,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstanceUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stickerCreate:member","d":"","ex":[{"k":"Reference","t":"stickerCreate","c":"discord.js!ClientEvents#stickerCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[sticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5157,"co":3,"ro":false,"op":false,"r":"Public","n":"stickerCreate","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stickerDelete:member","d":"","ex":[{"k":"Reference","t":"stickerDelete","c":"discord.js!ClientEvents#stickerDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[sticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5158,"co":3,"ro":false,"op":false,"r":"Public","n":"stickerDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#stickerUpdate:member","d":"","ex":[{"k":"Reference","t":"stickerUpdate","c":"discord.js!ClientEvents#stickerUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldSticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":", newSticker: "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5159,"co":3,"ro":false,"op":false,"r":"Public","n":"stickerUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadCreate:member","d":"","ex":[{"k":"Reference","t":"threadCreate","c":"discord.js!ClientEvents#threadCreate"},{"k":"Content","t":": "},{"k":"Content","t":"[thread: "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":", newlyCreated: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5132,"co":3,"ro":false,"op":false,"r":"Public","n":"threadCreate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadDelete:member","d":"","ex":[{"k":"Reference","t":"threadDelete","c":"discord.js!ClientEvents#threadDelete"},{"k":"Content","t":": "},{"k":"Content","t":"[thread: "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5133,"co":3,"ro":false,"op":false,"r":"Public","n":"threadDelete","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadListSync:member","d":"","ex":[{"k":"Reference","t":"threadListSync","c":"discord.js!ClientEvents#threadListSync"},{"k":"Content","t":": "},{"k":"Content","t":"[threads: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">, guild: "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5134,"co":3,"ro":false,"op":false,"r":"Public","n":"threadListSync","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadMembersUpdate:member","d":"","ex":[{"k":"Reference","t":"threadMembersUpdate","c":"discord.js!ClientEvents#threadMembersUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[  addedMembers: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">,  removedMembers: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialThreadMember","c":"discord.js!PartialThreadMember:interface"},{"k":"Content","t":">,  thread: "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":", ]"},{"k":"Content","t":";"}],"l":5136,"co":3,"ro":false,"op":false,"r":"Public","n":"threadMembersUpdate","prtr":{"st":2,"en":19}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadMemberUpdate:member","d":"","ex":[{"k":"Reference","t":"threadMemberUpdate","c":"discord.js!ClientEvents#threadMemberUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldMember: "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":", newMember: "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5135,"co":3,"ro":false,"op":false,"r":"Public","n":"threadMemberUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#threadUpdate:member","d":"","ex":[{"k":"Reference","t":"threadUpdate","c":"discord.js!ClientEvents#threadUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldThread: "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":", newThread: "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5141,"co":3,"ro":false,"op":false,"r":"Public","n":"threadUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#typingStart:member","d":"","ex":[{"k":"Reference","t":"typingStart","c":"discord.js!ClientEvents#typingStart"},{"k":"Content","t":": "},{"k":"Content","t":"[typing: "},{"k":"Reference","t":"Typing","c":"discord.js!Typing:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5142,"co":3,"ro":false,"op":false,"r":"Public","n":"typingStart","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#userUpdate:member","d":"","ex":[{"k":"Reference","t":"userUpdate","c":"discord.js!ClientEvents#userUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldUser: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialUser","c":"discord.js!PartialUser:interface"},{"k":"Content","t":", newUser: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5143,"co":3,"ro":false,"op":false,"r":"Public","n":"userUpdate","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!ClientEvents#voiceStateUpdate:member","d":"","ex":[{"k":"Reference","t":"voiceStateUpdate","c":"discord.js!ClientEvents#voiceStateUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[oldState: "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":", newState: "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5144,"co":3,"ro":false,"op":false,"r":"Public","n":"voiceStateUpdate","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientEvents#warn:member","d":"","ex":[{"k":"Reference","t":"warn","c":"discord.js!ClientEvents#warn"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"string"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5087,"co":3,"ro":false,"op":false,"r":"Public","n":"warn","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ClientEvents#webhooksUpdate:member","d":"","ex":[{"k":"Reference","t":"webhooksUpdate","c":"discord.js!ClientEvents#webhooksUpdate"},{"k":"Content","t":": "},{"k":"Content","t":"[channel: "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":5147,"co":3,"ro":false,"op":false,"r":"Public","n":"webhooksUpdate","prtr":{"st":2,"en":13}},{"k":"PropertySignature","c":"discord.js!ClientEvents#webhookUpdate:member","d":"/**\n * @deprecated\n *\n * Use {@link ClientEvents.webhooksUpdate} instead.\n */\n","ex":[{"k":"Reference","t":"webhookUpdate","c":"discord.js!ClientEvents#webhookUpdate"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientEvents","c":"discord.js!ClientEvents:interface"},{"k":"Content","t":"['webhooksUpdate']"},{"k":"Content","t":";"}],"l":5146,"co":3,"ro":false,"op":false,"r":"Public","n":"webhookUpdate","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!ClientFetchInviteOptions:interface","d":"/**\n * Options used when fetching an invite from Discord.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientFetchInviteOptions","c":"discord.js!ClientFetchInviteOptions:interface"},{"k":"Content","t":" "}],"pat":"src/client/Client.js","l":258,"co":1,"r":"Public","n":"ClientFetchInviteOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientFetchInviteOptions#guildScheduledEventId:member","d":"/**\n * The id of the guild scheduled event to include with the invite\n */\n","ex":[{"k":"Reference","t":"guildScheduledEventId","c":"discord.js!ClientFetchInviteOptions#guildScheduledEventId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5171,"co":3,"ro":false,"op":true,"r":"Public","n":"guildScheduledEventId","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!ClientOptions:interface","d":"/**\n * Options for a client.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":" "}],"pat":"src/util/Options.js","l":16,"co":1,"r":"Public","n":"ClientOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientOptions#allowedMentions:member","d":"/**\n * The default value for {@link BaseMessageOptions.allowedMentions}\n */\n","ex":[{"k":"Reference","t":"allowedMentions","c":"discord.js!ClientOptions#allowedMentions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageMentionOptions","c":"discord.js!MessageMentionOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5179,"co":3,"ro":false,"op":true,"r":"Public","n":"allowedMentions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#closeTimeout:member","d":"/**\n * The amount of time in milliseconds to wait for the close frame to be received from the WebSocket. Don't have this too high/low. It's best to have it between 2_000-6_000 ms.\n */\n","ex":[{"k":"Reference","t":"closeTimeout","c":"discord.js!ClientOptions#closeTimeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5177,"co":3,"ro":false,"op":true,"r":"Public","n":"closeTimeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#failIfNotExists:member","d":"/**\n * The default value for {@link MessageReplyOptions.failIfNotExists}\n */\n","ex":[{"k":"Reference","t":"failIfNotExists","c":"discord.js!ClientOptions#failIfNotExists"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5181,"co":3,"ro":false,"op":true,"r":"Public","n":"failIfNotExists","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#intents:member","d":"/**\n * Intents to enable for this connection\n */\n","ex":[{"k":"Reference","t":"intents","c":"discord.js!ClientOptions#intents"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GatewayIntentsString","c":"discord.js!GatewayIntentsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5183,"co":3,"ro":false,"op":false,"r":"Public","n":"intents","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!ClientOptions#jsonTransformer:member","d":"/**\n * A function used to transform outgoing json data\n */\n","ex":[{"k":"Reference","t":"jsonTransformer","c":"discord.js!ClientOptions#jsonTransformer"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"obj","c":"discord.js!~obj"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":") => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5188,"co":3,"ro":false,"op":true,"r":"Public","n":"jsonTransformer","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!ClientOptions#makeCache:member","d":"/**\n * Function to create a cache. You can use your own function, or the {@link Options} class to customize the Collection used for the cache. <warn>Overriding the cache used in `GuildManager`, `ChannelManager`, `GuildChannelManager`, `RoleManager`, and `PermissionOverwriteManager` is unsupported and **will* * break functionality</warn>\n */\n","ex":[{"k":"Reference","t":"makeCache","c":"discord.js!ClientOptions#makeCache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheFactory","c":"discord.js!CacheFactory:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5178,"co":3,"ro":false,"op":true,"r":"Public","n":"makeCache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#partials:member","d":"/**\n * Structures allowed to be partial. This means events can be emitted even when they're missing all the data for a particular structure. See the \"Partial Structures\" topic on the [guide](https://discordjs.guide/popular-topics/partials.html) for some important usage information, as partials require you to put checks in place when handling data.\n */\n","ex":[{"k":"Reference","t":"partials","c":"discord.js!ClientOptions#partials"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partials","c":"discord.js!Partials:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5180,"co":3,"ro":false,"op":true,"r":"Public","n":"partials","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ClientOptions#presence:member","d":"/**\n * Presence data to use upon login\n */\n","ex":[{"k":"Reference","t":"presence","c":"discord.js!ClientOptions#presence"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PresenceData","c":"discord.js!PresenceData:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5182,"co":3,"ro":false,"op":true,"r":"Public","n":"presence","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#rest:member","d":"/**\n * Options for the REST manager\n */\n","ex":[{"k":"Reference","t":"rest","c":"discord.js!ClientOptions#rest"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"RESTOptions","c":"@discordjs/rest!RESTOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5187,"co":3,"ro":false,"op":true,"r":"Public","n":"rest","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!ClientOptions#shardCount:member","d":"/**\n * The total amount of shards used by all processes of this bot (e.g. recommended shard count, shard count of the ShardingManager)\n */\n","ex":[{"k":"Reference","t":"shardCount","c":"discord.js!ClientOptions#shardCount"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5176,"co":3,"ro":false,"op":true,"r":"Public","n":"shardCount","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#shards:member","d":"/**\n * The shard's id to run, or an array of shard ids. If not specified, the client will spawn {@link ClientOptions.shardCount} shards. If set to `auto`, it will fetch the recommended amount of shards from Discord and spawn that amount\n */\n","ex":[{"k":"Reference","t":"shards","c":"discord.js!ClientOptions#shards"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"[] | 'auto'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5175,"co":3,"ro":false,"op":true,"r":"Public","n":"shards","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!ClientOptions#sweepers:member","d":"/**\n * Options for cache sweeping\n */\n","ex":[{"k":"Reference","t":"sweepers","c":"discord.js!ClientOptions#sweepers"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SweeperOptions","c":"discord.js!SweeperOptions:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5185,"co":3,"ro":false,"op":true,"r":"Public","n":"sweepers","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#waitGuildTimeout:member","d":"/**\n * Time in milliseconds that clients with the {@link discord-api-types#(GatewayIntentBits:enum).Guilds} gateway intent should wait for missing guilds to be received before being ready.\n */\n","ex":[{"k":"Reference","t":"waitGuildTimeout","c":"discord.js!ClientOptions#waitGuildTimeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5184,"co":3,"ro":false,"op":true,"r":"Public","n":"waitGuildTimeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientOptions#ws:member","d":"/**\n * Options for the WebSocket\n */\n","ex":[{"k":"Reference","t":"ws","c":"discord.js!ClientOptions#ws"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WebSocketOptions","c":"discord.js!WebSocketOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5186,"co":3,"ro":false,"op":true,"r":"Public","n":"ws","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!ClientPresence:class","d":"/**\n * Represents the client's presence.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":" "}],"pat":"src/structures/ClientPresence.js","l":11,"co":1,"r":"Public","ab":false,"n":"ClientPresence","pmo":false,"ms":[{"k":"Property","c":"discord.js!ClientPresence#activities:member","d":"/**\n * The activities of this presence\n */\n","ex":[{"k":"Content","t":"undefined activities :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":89,"ro":false,"op":false,"r":"Public","n":"activities","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#clientStatus:member","d":"/**\n * The devices this presence is on\n */\n","ex":[{"k":"Content","t":"undefined clientStatus :"},{"k":"Reference","t":"object","c":"discord.js!Object:class"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":102,"ro":false,"op":true,"r":"Public","n":"clientStatus","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#guild:member","d":"/**\n * The guild this presence is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":50,"ro":false,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#member:member","d":"/**\n * The member of this presence\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":69,"ro":true,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ClientPresence#set:member(1)","d":"/**\n * Sets the client's presence\n *\n * @param presence - The data to set the presence to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!ClientPresence#set"},{"k":"Content","t":"("},{"k":"Reference","t":"presence","c":"discord.js!~presence"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceData","c":"discord.js!PresenceData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":21,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"presence","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"},{"k":"Property","c":"discord.js!ClientPresence#status:member","d":"/**\n * The status of this presence\n */\n","ex":[{"k":"Content","t":"undefined status :"},{"k":"Reference","t":"PresenceStatus","c":"discord.js!PresenceStatus:type"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":79,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#user:member","d":"/**\n * The user of this presence\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":60,"ro":true,"op":true,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientPresence#userId:member","d":"/**\n * The presence's user id\n */\n","ex":[{"k":"Content","t":"undefined userId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":44,"ro":false,"op":false,"r":"Public","n":"userId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ClientPresenceStatus:type","d":"/**\n * The status of this presence:\n *\n * * **`online`* * - user is online\n *\n * * **`idle`* * - user is AFK\n *\n * * **`dnd`* * - user is in Do Not Disturb\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ClientPresenceStatus","c":"discord.js!ClientPresenceStatus:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'online' | 'idle' | 'dnd'"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":24,"co":1,"r":"Public","n":"ClientPresenceStatus","ttr":{"st":3,"en":4}},{"k":"Interface","c":"discord.js!ClientPresenceStatusData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientPresenceStatusData","c":"discord.js!ClientPresenceStatusData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5193,"co":1,"r":"Public","n":"ClientPresenceStatusData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientPresenceStatusData#desktop:member","d":"","ex":[{"k":"Reference","t":"desktop","c":"discord.js!ClientPresenceStatusData#desktop"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientPresenceStatus","c":"discord.js!ClientPresenceStatus:type"},{"k":"Content","t":";"}],"l":5196,"co":3,"ro":false,"op":true,"r":"Public","n":"desktop","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientPresenceStatusData#mobile:member","d":"","ex":[{"k":"Reference","t":"mobile","c":"discord.js!ClientPresenceStatusData#mobile"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientPresenceStatus","c":"discord.js!ClientPresenceStatus:type"},{"k":"Content","t":";"}],"l":5195,"co":3,"ro":false,"op":true,"r":"Public","n":"mobile","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ClientPresenceStatusData#web:member","d":"","ex":[{"k":"Reference","t":"web","c":"discord.js!ClientPresenceStatusData#web"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ClientPresenceStatus","c":"discord.js!ClientPresenceStatus:type"},{"k":"Content","t":";"}],"l":5194,"co":3,"ro":false,"op":true,"r":"Public","n":"web","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!ClientStatus:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ClientStatus","c":"discord.js!ClientStatus:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6552,"co":1,"r":"Public","n":"ClientStatus","ttr":{"st":3,"en":4}},{"k":"Class","c":"discord.js!ClientUser:class","d":"/**\n * Represents the logged in client's Discord user.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ClientUser","c":"discord.js!ClientUser:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" "}],"pat":"src/structures/ClientUser.js","l":11,"co":1,"r":"Public","ab":false,"n":"ClientUser","pmo":false,"ms":[{"k":"Property","c":"discord.js!ClientUser#accentColor:member","d":"/**\n * The base 10 accent color of the user's banner <info>The user must be force fetched for this property to be present or be updated</info>\n */\n","ex":[{"k":"Content","t":"undefined accentColor :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":103,"ro":false,"op":true,"r":"Public","n":"accentColor","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#avatar:member","d":"/**\n * The user avatar's hash\n */\n","ex":[{"k":"Content","t":"undefined avatar :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":81,"ro":false,"op":true,"r":"Public","n":"avatar","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#avatarDecoration:member","d":"/**\n * The user avatar decoration's hash\n */\n","ex":[{"k":"Content","t":"undefined avatarDecoration :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":131,"ro":false,"op":true,"r":"Public","n":"avatarDecoration","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#banner:member","d":"/**\n * The user banner's hash <info>The user must be force fetched for this property to be present or be updated</info>\n */\n","ex":[{"k":"Content","t":"undefined banner :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":92,"ro":false,"op":true,"r":"Public","n":"banner","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#bot:member","d":"/**\n * Whether or not the user is a bot\n */\n","ex":[{"k":"Content","t":"undefined bot :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":60,"ro":false,"op":true,"r":"Public","n":"bot","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#createdAt:member","d":"/**\n * The time the user was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":160,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#createdTimestamp:member","d":"/**\n * The timestamp the user was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":151,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#defaultAvatarURL:member","d":"/**\n * A link to the user's default avatar\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly defaultAvatarURL :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":187,"ro":true,"op":false,"r":"Public","n":"defaultAvatarURL","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#discriminator:member","d":"/**\n * The discriminator of this user <info>`'0'`, or a 4-digit stringified number if they're using the legacy username system</info>\n */\n","ex":[{"k":"Content","t":"undefined discriminator :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":71,"ro":false,"op":true,"r":"Public","n":"discriminator","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#displayName:member","d":"/**\n * The global name of this user, or their username if they don't have one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly displayName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":242,"ro":true,"op":true,"r":"Public","n":"displayName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#dmChannel:member","d":"/**\n * The DM between the client's user and this user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly dmChannel :"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":251,"ro":true,"op":true,"r":"Public","n":"dmChannel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ClientUser#edit:member(1)","d":"/**\n * Edits the logged in client.\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ClientUser#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientUserEditOptions","c":"discord.js!ClientUserEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":57,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!ClientUser#flags:member","d":"/**\n * The flags for this user\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"UserFlagsBitField","c":"discord.js!UserFlagsBitField:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":123,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#globalName:member","d":"/**\n * The global name of this user\n */\n","ex":[{"k":"Content","t":"undefined globalName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":50,"ro":false,"op":true,"r":"Public","n":"globalName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#hexAccentColor:member","d":"/**\n * The hexadecimal version of the user accent color, with a leading hash <info>The user must be force fetched for this property to be present</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly hexAccentColor :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":208,"ro":true,"op":true,"r":"Public","n":"hexAccentColor","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#id:member","d":"/**\n * The user's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":23,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#mfaEnabled:member","d":"/**\n * If the bot's {@link ClientApplication.owner | Owner} has MFA enabled on their account\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mfaEnabled","c":"discord.js!ClientUser#mfaEnabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"mfaEnabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#partial:member","d":"/**\n * Whether this User is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":142,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#presence:member","d":"/**\n * Represents the client user's presence\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"presence","c":"discord.js!ClientUser#presence"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":true,"op":false,"r":"Public","n":"presence","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ClientUser#setActivity:member(1)","d":"/**\n * Sets the activity the client user is playing.\n *\n * @param name - Activity being played, or options for setting the activity\n *\n * @param options - Options for setting the activity\n *\n * @example\n * ```js\n * // Set the client user's activity\n * client.user.setActivity('discord.js', { type: ActivityType.Watching });\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setActivity","c":"discord.js!ClientUser#setActivity"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ActivityOptions","c":"discord.js!ActivityOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":169,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"setActivity"},{"k":"Method","c":"discord.js!ClientUser#setActivity:member(2)","d":"/**\n * Sets the activity the client user is playing.\n *\n * @param name - Activity being played, or options for setting the activity\n *\n * @param options - Options for setting the activity\n *\n * @example\n * ```js\n * // Set the client user's activity\n * client.user.setActivity('discord.js', { type: ActivityType.Watching });\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setActivity","c":"discord.js!ClientUser#setActivity"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ActivityOptions","c":"discord.js!ActivityOptions:interface"},{"k":"Content","t":", 'name'>"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":169,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":13},"op":true,"rs":false}],"op":false,"ab":false,"n":"setActivity"},{"k":"Method","c":"discord.js!ClientUser#setAFK:member(1)","d":"/**\n * Sets/removes the AFK flag for the client user.\n *\n * @param afk - Whether or not the user is AFK\n *\n * @param shardId - Shard Id(s) to have the AFK flag set on\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAFK","c":"discord.js!ClientUser#setAFK"},{"k":"Content","t":"("},{"k":"Reference","t":"afk","c":"discord.js!~afk"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"shardId","c":"discord.js!~shardId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":182,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"afk","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"shardId","ptr":{"st":9,"en":13},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAFK"},{"k":"Method","c":"discord.js!ClientUser#setAvatar:member(1)","d":"/**\n * Sets the avatar of the logged in client.\n *\n * @param avatar - The new avatar\n *\n * @example\n * ```js\n * // Set avatar\n * client.user.setAvatar('./avatar.png')\n *   .then(user => console.log(`New avatar set!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAvatar","c":"discord.js!ClientUser#setAvatar"},{"k":"Content","t":"("},{"k":"Reference","t":"avatar","c":"discord.js!~avatar"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":94,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"avatar","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"setAvatar"},{"k":"Method","c":"discord.js!ClientUser#setPresence:member(1)","d":"/**\n * Sets the full presence of the client user.\n *\n * @param data - Data for the presence\n *\n * @example\n * ```js\n * // Set the client user's presence\n * client.user.setPresence({ activities: [{ name: 'with discord.js' }], status: 'idle' });\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPresence","c":"discord.js!ClientUser#setPresence"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceData","c":"discord.js!PresenceData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":124,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setPresence"},{"k":"Method","c":"discord.js!ClientUser#setStatus:member(1)","d":"/**\n * Sets the status of the client user.\n *\n * @param status - Status to change to\n *\n * @param shardId - Shard id(s) to have the activity set on\n *\n * @example\n * ```js\n * // Set the client user's status\n * client.user.setStatus('idle');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setStatus","c":"discord.js!ClientUser#setStatus"},{"k":"Content","t":"("},{"k":"Reference","t":"status","c":"discord.js!~status"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceStatusData","c":"discord.js!PresenceStatusData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"shardId","c":"discord.js!~shardId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"ClientPresence","c":"discord.js!ClientPresence:class"},{"k":"Content","t":";"}],"l":146,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"status","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"shardId","ptr":{"st":9,"en":13},"op":true,"rs":false}],"op":false,"ab":false,"n":"setStatus"},{"k":"Method","c":"discord.js!ClientUser#setUsername:member(1)","d":"/**\n * Sets the username of the logged in client. <info>Changing usernames in Discord is heavily rate limited, with only 2 requests every hour. Use this sparingly!</info>\n *\n * @param username - The new username\n *\n * @example\n * ```js\n * // Set username\n * client.user.setUsername('discordjs')\n *   .then(user => console.log(`My new username is ${user.username}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setUsername","c":"discord.js!ClientUser#setUsername"},{"k":"Content","t":"("},{"k":"Reference","t":"username","c":"discord.js!~username"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":80,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"username","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setUsername"},{"k":"Property","c":"discord.js!ClientUser#system:member","d":"/**\n * Whether the user is an Official Discord System user (part of the urgent message system)\n */\n","ex":[{"k":"Content","t":"undefined system :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":113,"ro":false,"op":true,"r":"Public","n":"system","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#tag:member","d":"/**\n * The tag of this user <info>This user's username, or their legacy tag (e.g. `hydrabolt#0001`) if they're using the legacy username system</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly tag :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":229,"ro":true,"op":true,"r":"Public","n":"tag","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#username:member","d":"/**\n * The username of the user\n */\n","ex":[{"k":"Content","t":"undefined username :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/User.js","l":40,"ro":false,"op":true,"r":"Public","n":"username","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientUser#verified:member","d":"/**\n * Whether or not this account has been verified\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"verified","c":"discord.js!ClientUser#verified"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"verified","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!ClientUserEditOptions:interface","d":"/**\n * Data used to edit the logged in client\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ClientUserEditOptions","c":"discord.js!ClientUserEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientUser.js","l":45,"co":1,"r":"Public","n":"ClientUserEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ClientUserEditOptions#avatar:member","d":"/**\n * The new avatar\n */\n","ex":[{"k":"Reference","t":"avatar","c":"discord.js!ClientUserEditOptions#avatar"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5201,"co":3,"ro":false,"op":true,"r":"Public","n":"avatar","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ClientUserEditOptions#username:member","d":"/**\n * The new username\n */\n","ex":[{"k":"Reference","t":"username","c":"discord.js!ClientUserEditOptions#username"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5200,"co":3,"ro":false,"op":true,"r":"Public","n":"username","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!ClientVoiceManager:class","d":"/**\n * Manages voice connections for the client\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ClientVoiceManager","c":"discord.js!ClientVoiceManager:class"},{"k":"Content","t":" "}],"pat":"src/client/voice/ClientVoiceManager.js","l":8,"co":1,"r":"Public","ab":false,"n":"ClientVoiceManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!ClientVoiceManager#adapters:member","d":"/**\n * Maps guild ids to voice adapters created for use with `@discordjs/voice`.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"adapters","c":"discord.js!ClientVoiceManager#adapters"},{"k":"Content","t":": "},{"k":"Reference","t":"Map","c":"!Map:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"InternalDiscordGatewayAdapterLibraryMethods","c":"discord.js!InternalDiscordGatewayAdapterLibraryMethods:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"adapters","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ClientVoiceManager#client:member","d":"/**\n * The client that instantiated this voice manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!ClientVoiceManager#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":10,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!CloseEvent:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5204,"co":1,"r":"Public","n":"CloseEvent","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CloseEvent#code:member","d":"","ex":[{"k":"Reference","t":"code","c":"discord.js!CloseEvent#code"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":5207,"co":3,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CloseEvent#reason:member","d":"/**\n * @deprecated\n *\n * Not used anymore since using {@link @discordjs/ws#(WebSocketManager:class)} internally\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!CloseEvent#reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":5209,"co":3,"ro":false,"op":false,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CloseEvent#wasClean:member","d":"/**\n * @deprecated\n *\n * Not used anymore since using {@link @discordjs/ws#(WebSocketManager:class)} internally\n */\n","ex":[{"k":"Reference","t":"wasClean","c":"discord.js!CloseEvent#wasClean"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":5206,"co":3,"ro":false,"op":false,"r":"Public","n":"wasClean","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!CollectedInteraction:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CollectedInteraction","c":"discord.js!CollectedInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Content","t":"| "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6030,"co":1,"r":"Public","n":"CollectedInteraction","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":38}},{"k":"TypeAlias","c":"discord.js!CollectedMessageInteraction:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CollectedMessageInteraction","c":"discord.js!CollectedMessageInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"CollectedInteraction","c":"discord.js!CollectedInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">, "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6167,"co":1,"r":"Public","n":"CollectedMessageInteraction","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":17}},{"k":"TypeAlias","c":"discord.js!CollectionSweepFilter:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">) => "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6574,"co":1,"r":"Public","n":"CollectionSweepFilter","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":25}},{"k":"Class","c":"discord.js!Collector:class","d":"/**\n * Abstract class for defining a new Collector.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"Collector","c":"discord.js!Collector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":" extends "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":" = "},{"k":"Content","t":"[]"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/Collector.js","l":31,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Extras","ctr":{"st":9,"en":11},"dtr":{"st":12,"en":13}}],"ab":true,"n":"Collector","pmo":false,"ms":[{"k":"Method","c":"discord.js!Collector#[Symbol.asyncIterator]:member(1)","d":"","ex":[{"k":"Content","t":"public ["},{"k":"Reference","t":"Symbol.asyncIterator","c":"!SymbolConstructor#asyncIterator"},{"k":"Content","t":"](): "},{"k":"Reference","t":"AsyncIterableIterator","c":"!AsyncIterableIterator:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1131,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"[Symbol.asyncIterator]"},{"k":"Constructor","c":"discord.js!Collector:constructor(1)","d":"/**\n * Constructs a new instance of the `Collector` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]>"},{"k":"Content","t":");"}],"l":31,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":14},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!Collector#checkEnd:member(1)","d":"/**\n * Checks whether the collector should end, and if so, ends it.\n *\n * @returns Whether the collector ended or not\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"checkEnd","c":"discord.js!Collector#checkEnd"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":262,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"checkEnd"},{"k":"Property","c":"discord.js!Collector#client:member","d":"/**\n * The client that instantiated this Collector\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!Collector#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Collector#collect:member(0)","d":"/**\n * Emitted whenever an element is collected.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('collect', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"l":128,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"collect"},{"k":"Method","c":"discord.js!Collector#collect:member(1)","d":"/**\n * Handles incoming events from the `handleCollect` function. Returns null if the event should not be collected, or returns an object describing the data that should be stored.\n *\n * @param args - Any args the event listener emits\n *\n * @returns Data to insert into collection, if any\n */\n","ex":[{"k":"Content","t":"public abstract "},{"k":"Reference","t":"collect","c":"discord.js!Collector#collect"},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":321,"co":3,"sta":false,"rtr":{"st":8,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"args","ptr":{"st":5,"en":7},"op":false,"rs":true}],"op":false,"ab":true,"n":"collect"},{"k":"Property","c":"discord.js!Collector#collected:member","d":"/**\n * The items collected by this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"collected","c":"discord.js!Collector#collected"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":false,"op":false,"r":"Public","n":"collected","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Collector#dispose:member(0)","d":"/**\n * Emitted whenever an element is disposed of.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('dispose', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"l":165,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"dispose"},{"k":"Method","c":"discord.js!Collector#dispose:member(1)","d":"/**\n * Handles incoming events from the `handleDispose`. Returns null if the event should not be disposed, or returns the key that should be removed.\n *\n * @param args - Any args the event listener emits\n *\n * @returns Key to remove from the collection, if any\n */\n","ex":[{"k":"Content","t":"public abstract "},{"k":"Reference","t":"dispose","c":"discord.js!Collector#dispose"},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":331,"co":3,"sta":false,"rtr":{"st":8,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"args","ptr":{"st":5,"en":7},"op":false,"rs":true}],"op":false,"ab":true,"n":"dispose"},{"k":"Event","c":"discord.js!Collector#end:member(0)","d":"/**\n * Emitted when the collector is finished collecting.\n *\n * @param collected - The elements collected by the collector\n *\n * @param reason - The reason the collector ended\n */\n","ex":[{"k":"Content","t":"on('end', (collected: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":", reason: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"l":227,"r":"Public","oi":0,"ps":[{"pn":"collected","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"end"},{"k":"Property","c":"discord.js!Collector#ended:member","d":"/**\n * Whether this collector has finished collecting\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ended","c":"discord.js!Collector#ended"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":66,"co":3,"ro":false,"op":false,"r":"Public","n":"ended","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Collector#endReason:member","d":"/**\n * The reason this collector has ended with, or null if it hasn't ended yet\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"endReason","c":"discord.js!Collector#endReason"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":309,"co":3,"ro":true,"op":false,"r":"Public","n":"endReason","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Collector#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"filter","c":"discord.js!Collector#filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":"<["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Collector#handleCollect:member(1)","d":"/**\n * Call this to handle an event as a collectable element. Accepts any event data as parameters.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"handleCollect","c":"discord.js!Collector#handleCollect"},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":120,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"args","ptr":{"st":5,"en":7},"op":false,"rs":true}],"op":false,"ab":false,"n":"handleCollect"},{"k":"Method","c":"discord.js!Collector#handleDispose:member(1)","d":"/**\n * Call this to remove an element from the collection. Accepts any event data as parameters.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"handleDispose","c":"discord.js!Collector#handleDispose"},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":158,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"args","ptr":{"st":5,"en":7},"op":false,"rs":true}],"op":false,"ab":false,"n":"handleDispose"},{"k":"Event","c":"discord.js!Collector#ignore:member(0)","d":"/**\n * Emitted whenever an element is not collected by the collector.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('ignore', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"l":141,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"ignore"},{"k":"Property","c":"discord.js!Collector#lastCollectedAt:member","d":"/**\n * The Date at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"lastCollectedAt","c":"discord.js!Collector#lastCollectedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":110,"co":3,"ro":true,"op":false,"r":"Public","n":"lastCollectedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Collector#lastCollectedTimestamp:member","d":"/**\n * The timestamp at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"lastCollectedTimestamp","c":"discord.js!Collector#lastCollectedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":103,"co":3,"ro":false,"op":false,"r":"Public","n":"lastCollectedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Collector#listener:member","d":"","ex":[{"k":"Content","t":"protected "},{"k":"Reference","t":"listener","c":"discord.js!Collector#listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1134,"co":3,"ro":false,"op":false,"r":"Public","n":"listener","prtr":{"st":3,"en":9},"sta":false,"pr":true,"ab":false},{"k":"Property","c":"discord.js!Collector#next:member","d":"/**\n * Returns a promise that resolves with the next collected element; rejects with collected elements if the collector finishes without receiving a next element\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"next","c":"discord.js!Collector#next"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":180,"co":3,"ro":true,"op":false,"r":"Public","n":"next","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Collector#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!Collector#on"},{"k":"Content","t":"<"},{"k":"Reference","t":"EventKey"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"CollectorEventTypes","c":"discord.js!CollectorEventTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":">"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"EventKey"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectorEventTypes","c":"discord.js!CollectorEventTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":">["},{"k":"Reference","t":"EventKey"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1138,"co":3,"tps":[{"tp":"EventKey","ctr":{"st":5,"en":14},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":36,"en":37},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":17,"en":18},"op":false,"rs":false},{"pn":"listener","ptr":{"st":21,"en":35},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!Collector#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!Collector#once"},{"k":"Content","t":"<"},{"k":"Reference","t":"EventKey"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"CollectorEventTypes","c":"discord.js!CollectorEventTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":">"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"EventKey"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectorEventTypes","c":"discord.js!CollectorEventTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":">["},{"k":"Reference","t":"EventKey"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1143,"co":3,"tps":[{"tp":"EventKey","ctr":{"st":5,"en":14},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":36,"en":37},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":17,"en":18},"op":false,"rs":false},{"pn":"listener","ptr":{"st":21,"en":35},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!Collector#options:member","d":"/**\n * The options of this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!Collector#options"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Collector#resetTimer:member(1)","d":"/**\n * Resets the collector's timeout and idle timer.\n *\n * @param options - Options for resetting\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resetTimer","c":"discord.js!Collector#resetTimer"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CollectorResetTimerOptions","c":"discord.js!CollectorResetTimerOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":247,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"resetTimer"},{"k":"Method","c":"discord.js!Collector#stop:member(1)","d":"/**\n * Stops this collector and emits the `end` event.\n *\n * @param reason - The reason this collector is ending\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stop","c":"discord.js!Collector#stop"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":212,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"stop"},{"k":"Method","c":"discord.js!Collector#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Collector#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1132,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"etr":{"st":14,"en":15,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!CollectorEventTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CollectorEventTypes","c":"discord.js!CollectorEventTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"Extras"},{"k":"Content","t":" extends "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":" = "},{"k":"Content","t":"[]"},{"k":"Content","t":"> "}],"pat":"typings/index.d.ts","l":1104,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Extras","ctr":{"st":9,"en":11},"dtr":{"st":12,"en":13}}],"n":"CollectorEventTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CollectorEventTypes#collect:member","d":"","ex":[{"k":"Reference","t":"collect","c":"discord.js!CollectorEventTypes#collect"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":1105,"co":3,"ro":false,"op":false,"r":"Public","n":"collect","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!CollectorEventTypes#dispose:member","d":"","ex":[{"k":"Reference","t":"dispose","c":"discord.js!CollectorEventTypes#dispose"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":1107,"co":3,"ro":false,"op":false,"r":"Public","n":"dispose","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!CollectorEventTypes#end:member","d":"","ex":[{"k":"Reference","t":"end","c":"discord.js!CollectorEventTypes#end"},{"k":"Content","t":": "},{"k":"Content","t":"[collected: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, reason: "},{"k":"Reference","t":"string"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":1108,"co":3,"ro":false,"op":false,"r":"Public","n":"end","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!CollectorEventTypes#ignore:member","d":"","ex":[{"k":"Reference","t":"ignore","c":"discord.js!CollectorEventTypes#ignore"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Value"},{"k":"Content","t":", ..."},{"k":"Reference","t":"Extras"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":1106,"co":3,"ro":false,"op":false,"r":"Public","n":"ignore","prtr":{"st":2,"en":7}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!CollectorFilter:type","d":"/**\n * Filter to be applied to the collector.\n *\n * @param args - Any arguments received by the listener\n *\n * @param collection - The items collected by this collector\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Arguments"},{"k":"Content","t":" extends "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"> = "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"Arguments"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":9,"co":1,"r":"Public","n":"CollectorFilter","tps":[{"tp":"Arguments","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"ttr":{"st":8,"en":17}},{"k":"Interface","c":"discord.js!CollectorOptions:interface","d":"/**\n * Options to be applied to the collector.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FilterArguments"},{"k":"Content","t":" extends "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]"},{"k":"Content","t":"> "}],"pat":"src/structures/interfaces/Collector.js","l":17,"co":1,"r":"Public","tps":[{"tp":"FilterArguments","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"n":"CollectorOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CollectorOptions#dispose:member","d":"/**\n * Whether to dispose data when it's deleted\n */\n","ex":[{"k":"Reference","t":"dispose","c":"discord.js!CollectorOptions#dispose"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5218,"co":3,"ro":false,"op":true,"r":"Public","n":"dispose","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CollectorOptions#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Reference","t":"filter","c":"discord.js!CollectorOptions#filter"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"FilterArguments"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5215,"co":3,"ro":false,"op":true,"r":"Public","n":"filter","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!CollectorOptions#idle:member","d":"/**\n * How long to stop the collector after inactivity in milliseconds\n */\n","ex":[{"k":"Reference","t":"idle","c":"discord.js!CollectorOptions#idle"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5217,"co":3,"ro":false,"op":true,"r":"Public","n":"idle","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CollectorOptions#time:member","d":"/**\n * How long to run the collector for in milliseconds\n */\n","ex":[{"k":"Reference","t":"time","c":"discord.js!CollectorOptions#time"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5216,"co":3,"ro":false,"op":true,"r":"Public","n":"time","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!CollectorResetTimerOptions:interface","d":"/**\n * Options used to reset the timeout and idle timer of a {@link Collector}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CollectorResetTimerOptions","c":"discord.js!CollectorResetTimerOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/Collector.js","l":236,"co":1,"r":"Public","n":"CollectorResetTimerOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CollectorResetTimerOptions#idle:member","d":"/**\n * How long to wait to stop the collector after inactivity (in milliseconds)\n */\n","ex":[{"k":"Reference","t":"idle","c":"discord.js!CollectorResetTimerOptions#idle"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5223,"co":3,"ro":false,"op":true,"r":"Public","n":"idle","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CollectorResetTimerOptions#time:member","d":"/**\n * How long to run the collector for (in milliseconds)\n */\n","ex":[{"k":"Reference","t":"time","c":"discord.js!CollectorResetTimerOptions#time"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5222,"co":3,"ro":false,"op":true,"r":"Public","n":"time","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!ColorResolvable:type","d":"/**\n * Can be a number, hex string, an RGB array like:\n * ```js\n * [255, 0, 255] // purple\n * ```\n *\n * or one of the following strings: - `Default` - `White` - `Aqua` - `Green` - `Blue` - `Yellow` - `Purple` - `LuminousVividPink` - `Fuchsia` - `Gold` - `Orange` - `Red` - `Grey` - `Navy` - `DarkAqua` - `DarkGreen` - `DarkBlue` - `DarkPurple` - `DarkVividPink` - `DarkGold` - `DarkOrange` - `DarkRed` - `DarkGrey` - `DarkerGrey` - `LightGrey` - `DarkNavy` - `Blurple` - `Greyple` - `DarkButNotBlack` - `NotQuiteBlack` - `Random`\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Colors","c":"discord.js!Colors:var"},{"k":"Content","t":" | 'Random' | readonly [red: "},{"k":"Reference","t":"number"},{"k":"Content","t":", green: "},{"k":"Reference","t":"number"},{"k":"Content","t":", blue: "},{"k":"Reference","t":"number"},{"k":"Content","t":"] | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"HexColorString","c":"discord.js!HexColorString:type"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":235,"co":1,"r":"Public","n":"ColorResolvable","ttr":{"st":3,"en":17}},{"k":"Variable","c":"discord.js!Colors:var","d":"","ex":[{"k":"Reference","t":"Colors","c":"discord.js!Colors"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"Default","c":"discord.js!~__type#Default"},{"k":"Content","t":": 0x000000; "},{"k":"Reference","t":"White","c":"discord.js!~__type#White"},{"k":"Content","t":": 0xffffff; "},{"k":"Reference","t":"Aqua","c":"discord.js!~__type#Aqua"},{"k":"Content","t":": 0x1abc9c; "},{"k":"Reference","t":"Green","c":"discord.js!~__type#Green"},{"k":"Content","t":": 0x57f287; "},{"k":"Reference","t":"Blue","c":"discord.js!~__type#Blue"},{"k":"Content","t":": 0x3498db; "},{"k":"Reference","t":"Yellow","c":"discord.js!~__type#Yellow"},{"k":"Content","t":": 0xfee75c; "},{"k":"Reference","t":"Purple","c":"discord.js!~__type#Purple"},{"k":"Content","t":": 0x9b59b6; "},{"k":"Reference","t":"LuminousVividPink","c":"discord.js!~__type#LuminousVividPink"},{"k":"Content","t":": 0xe91e63; "},{"k":"Reference","t":"Fuchsia","c":"discord.js!~__type#Fuchsia"},{"k":"Content","t":": 0xeb459e; "},{"k":"Reference","t":"Gold","c":"discord.js!~__type#Gold"},{"k":"Content","t":": 0xf1c40f; "},{"k":"Reference","t":"Orange","c":"discord.js!~__type#Orange"},{"k":"Content","t":": 0xe67e22; "},{"k":"Reference","t":"Red","c":"discord.js!~__type#Red"},{"k":"Content","t":": 0xed4245; "},{"k":"Reference","t":"Grey","c":"discord.js!~__type#Grey"},{"k":"Content","t":": 0x95a5a6; "},{"k":"Reference","t":"Navy","c":"discord.js!~__type#Navy"},{"k":"Content","t":": 0x34495e; "},{"k":"Reference","t":"DarkAqua","c":"discord.js!~__type#DarkAqua"},{"k":"Content","t":": 0x11806a; "},{"k":"Reference","t":"DarkGreen","c":"discord.js!~__type#DarkGreen"},{"k":"Content","t":": 0x1f8b4c; "},{"k":"Reference","t":"DarkBlue","c":"discord.js!~__type#DarkBlue"},{"k":"Content","t":": 0x206694; "},{"k":"Reference","t":"DarkPurple","c":"discord.js!~__type#DarkPurple"},{"k":"Content","t":": 0x71368a; "},{"k":"Reference","t":"DarkVividPink","c":"discord.js!~__type#DarkVividPink"},{"k":"Content","t":": 0xad1457; "},{"k":"Reference","t":"DarkGold","c":"discord.js!~__type#DarkGold"},{"k":"Content","t":": 0xc27c0e; "},{"k":"Reference","t":"DarkOrange","c":"discord.js!~__type#DarkOrange"},{"k":"Content","t":": 0xa84300; "},{"k":"Reference","t":"DarkRed","c":"discord.js!~__type#DarkRed"},{"k":"Content","t":": 0x992d22; "},{"k":"Reference","t":"DarkGrey","c":"discord.js!~__type#DarkGrey"},{"k":"Content","t":": 0x979c9f; "},{"k":"Reference","t":"DarkerGrey","c":"discord.js!~__type#DarkerGrey"},{"k":"Content","t":": 0x7f8c8d; "},{"k":"Reference","t":"LightGrey","c":"discord.js!~__type#LightGrey"},{"k":"Content","t":": 0xbcc0c0; "},{"k":"Reference","t":"DarkNavy","c":"discord.js!~__type#DarkNavy"},{"k":"Content","t":": 0x2c3e50; "},{"k":"Reference","t":"Blurple","c":"discord.js!~__type#Blurple"},{"k":"Content","t":": 0x5865f2; "},{"k":"Reference","t":"Greyple","c":"discord.js!~__type#Greyple"},{"k":"Content","t":": 0x99aab5; "},{"k":"Reference","t":"DarkButNotBlack","c":"discord.js!~__type#DarkButNotBlack"},{"k":"Content","t":": 0x2c2f33; "},{"k":"Reference","t":"NotQuiteBlack","c":"discord.js!~__type#NotQuiteBlack"},{"k":"Content","t":": 0x23272a;}"}],"pat":"typings/index.d.ts","l":5266,"co":22,"ro":true,"r":"Public","n":"Colors","vtr":{"st":2,"en":63}},{"k":"Class","c":"discord.js!CommandInteraction:class","d":"/**\n * Represents a command interaction.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/CommandInteraction.js","l":14,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":true,"n":"CommandInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!CommandInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteraction#awaitModalSubmit:member(1)","d":"/**\n * Collects a single modal submit interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a modal submit interaction\n * const filter = (interaction) => interaction.customId === 'modal';\n * interaction.awaitModalSubmit({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was submitted!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"awaitModalSubmit","c":"discord.js!CommandInteraction#awaitModalSubmit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AwaitModalSubmitOptions","c":"discord.js!AwaitModalSubmitOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":300,"co":3,"sta":false,"rtr":{"st":10,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"awaitModalSubmit"},{"k":"Property","c":"discord.js!CommandInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!CommandInteraction#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"command","c":"discord.js!CommandInteraction#command"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"<{ "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":" }> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":true,"op":false,"r":"Public","n":"command","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandGuildId","c":"discord.js!CommandInteraction#commandGuildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":46,"co":3,"ro":false,"op":false,"r":"Public","n":"commandGuildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandId","c":"discord.js!CommandInteraction#commandId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandName","c":"discord.js!CommandInteraction#commandName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!CommandInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType","c":"discord-api-types!ApplicationCommandType:enum"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferred","c":"discord.js!CommandInteraction#deferred"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteraction#deferReply:member(1)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!CommandInteraction#deferReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!CommandInteraction#deferReply:member(2)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!CommandInteraction#deferReply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!CommandInteraction#deleteReply:member(1)","d":"/**\n * Deletes a reply to this interaction.\n *\n * @param message - The response to delete\n *\n * @example\n * ```js\n * // Delete the initial reply to this interaction\n * interaction.deleteReply()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteReply","c":"discord.js!CommandInteraction#deleteReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":176,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteReply"},{"k":"Method","c":"discord.js!CommandInteraction#editReply:member(1)","d":"/**\n * Edits a reply to this interaction.\n *\n * @param options - The new options for the message\n *\n * @example\n * ```js\n * // Edit the initial reply to this interaction\n * interaction.editReply('New content')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editReply","c":"discord.js!CommandInteraction#editReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionEditReplyOptions","c":"discord.js!InteractionEditReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":158,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"editReply"},{"k":"Property","c":"discord.js!CommandInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ephemeral","c":"discord.js!CommandInteraction#ephemeral"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"ephemeral","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteraction#fetchReply:member(1)","d":"/**\n * Fetches a reply to this interaction.\n *\n * @param message - The response to fetch\n *\n * @example\n * ```js\n * // Fetch the initial reply to this interaction\n * interaction.fetchReply()\n *   .then(reply => console.log(`Replied with ${reply.content}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchReply","c":"discord.js!CommandInteraction#fetchReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":137,"co":3,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchReply"},{"k":"Method","c":"discord.js!CommandInteraction#followUp:member(1)","d":"/**\n * Send a follow-up message to this interaction.\n *\n * @param options - The options for the reply\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"followUp","c":"discord.js!CommandInteraction#followUp"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":185,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"followUp"},{"k":"Property","c":"discord.js!CommandInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!CommandInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!CommandInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!CommandInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!CommandInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!CommandInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!CommandInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#options:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!CommandInteraction#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">,  | 'getMessage'  | 'getFocused'  | 'getMentionable'  | 'getRole'  | 'getUser'  | 'getMember'  | 'getAttachment'  | 'getNumber'  | 'getInteger'  | 'getString'  | 'getChannel'  | 'getBoolean'  | 'getSubcommandGroup'  | 'getSubcommand' >"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":544,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"replied","c":"discord.js!CommandInteraction#replied"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteraction#reply:member(1)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!CommandInteraction#reply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!CommandInteraction#reply:member(2)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!CommandInteraction#reply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!CommandInteraction#sendPremiumRequired:member(1)","d":"/**\n * Responds to the interaction with an upgrade button. <info>Only available for applications with monetization enabled.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sendPremiumRequired","c":"discord.js!CommandInteraction#sendPremiumRequired"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":270,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendPremiumRequired"},{"k":"Method","c":"discord.js!CommandInteraction#showModal:member(1)","d":"/**\n * Shows a modal component\n *\n * @param modal - The modal to show\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"showModal","c":"discord.js!CommandInteraction#showModal"},{"k":"Content","t":"(  "},{"k":"Reference","t":"modal","c":"discord.js!~modal"},{"k":"Content","t":":   "},{"k":"Content","t":" "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">   | "},{"k":"Reference","t":"ModalComponentData","c":"discord.js!ModalComponentData:interface"},{"k":"Content","t":"   | "},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":253,"co":3,"sta":false,"rtr":{"st":14,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"modal","ptr":{"st":5,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"showModal"},{"k":"Property","c":"discord.js!CommandInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!CommandInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType.ApplicationCommand","c":"discord-api-types!InteractionType.ApplicationCommand:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"webhook","c":"discord.js!CommandInteraction#webhook"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!CommandInteractionOption:interface","d":"/**\n * Represents an option of a received command interaction.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> "}],"pat":"src/structures/CommandInteraction.js","l":93,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"CommandInteractionOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#attachment:member","d":"/**\n * The resolved attachment\n */\n","ex":[{"k":"Reference","t":"attachment","c":"discord.js!CommandInteractionOption#attachment"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5244,"co":3,"ro":false,"op":true,"r":"Public","n":"attachment","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#autocomplete:member","d":"/**\n * Whether the autocomplete interaction is enabled for a {@link discord-api-types#(ApplicationCommandOptionType:enum).String}, {@link discord-api-types#(ApplicationCommandOptionType:enum).Integer} or {@link discord-api-types#(ApplicationCommandOptionType:enum).Number} option\n */\n","ex":[{"k":"Reference","t":"autocomplete","c":"discord.js!CommandInteractionOption#autocomplete"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5238,"co":3,"ro":false,"op":true,"r":"Public","n":"autocomplete","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#channel:member","d":"/**\n * The resolved channel\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!CommandInteractionOption#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionDataResolvedChannel","c":"discord-api-types!APIInteractionDataResolvedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5242,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#focused:member","d":"","ex":[{"k":"Reference","t":"focused","c":"discord.js!CommandInteractionOption#focused"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5237,"co":3,"ro":false,"op":true,"r":"Public","n":"focused","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#member:member","d":"/**\n * The resolved member\n */\n","ex":[{"k":"Reference","t":"member","c":"discord.js!CommandInteractionOption#member"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionDataResolvedGuildMember","c":"discord-api-types!APIInteractionDataResolvedGuildMember:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5241,"co":3,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#message:member","d":"","ex":[{"k":"Reference","t":"message","c":"discord.js!CommandInteractionOption#message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5245,"co":3,"ro":false,"op":true,"r":"Public","n":"message","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#name:member","d":"/**\n * The name of the option\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!CommandInteractionOption#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5234,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#options:member","d":"/**\n * Additional options if this option is a subcommand (group)\n */\n","ex":[{"k":"Reference","t":"options","c":"discord.js!CommandInteractionOption#options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5239,"co":3,"ro":false,"op":true,"r":"Public","n":"options","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#role:member","d":"/**\n * The resolved role\n */\n","ex":[{"k":"Reference","t":"role","c":"discord.js!CommandInteractionOption#role"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5243,"co":3,"ro":false,"op":true,"r":"Public","n":"role","prtr":{"st":2,"en":10}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#type:member","d":"/**\n * The type of the option\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!CommandInteractionOption#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5235,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#user:member","d":"/**\n * The resolved user\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!CommandInteractionOption#user"},{"k":"Content","t":"?: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5240,"co":3,"ro":false,"op":true,"r":"Public","n":"user","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CommandInteractionOption#value:member","d":"/**\n * The value of the option\n */\n","ex":[{"k":"Reference","t":"value","c":"discord.js!CommandInteractionOption#value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5236,"co":3,"ro":false,"op":true,"r":"Public","n":"value","prtr":{"st":2,"en":7}}],"etrs":[]},{"k":"Class","c":"discord.js!CommandInteractionOptionResolver:class","d":"/**\n * A resolver for command interaction options.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> "}],"pat":"src/structures/CommandInteractionOptionResolver.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"CommandInteractionOptionResolver","pmo":false,"ms":[{"k":"Property","c":"discord.js!CommandInteractionOptionResolver#client:member","d":"/**\n * The client that instantiated this.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!CommandInteractionOptionResolver#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":11,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!CommandInteractionOptionResolver#data:member","d":"/**\n * The interaction options array.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"data","c":"discord.js!CommandInteractionOptionResolver#data"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#get:member(1)","d":"/**\n * Gets an option by its name.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The option, if found.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"get","c":"discord.js!CommandInteractionOptionResolver#get"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":74,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"get"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#get:member(2)","d":"/**\n * Gets an option by its name.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The option, if found.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"get","c":"discord.js!CommandInteractionOptionResolver#get"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":74,"co":3,"sta":false,"rtr":{"st":11,"en":16},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"get"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getAttachment:member(1)","d":"/**\n * Gets an attachment option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getAttachment","c":"discord.js!CommandInteractionOptionResolver#getAttachment"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['attachment']>"},{"k":"Content","t":";"}],"l":252,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getAttachment"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getAttachment:member(2)","d":"/**\n * Gets an attachment option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getAttachment","c":"discord.js!CommandInteractionOptionResolver#getAttachment"},{"k":"Content","t":"(  "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":",  "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['attachment']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":252,"co":3,"sta":false,"rtr":{"st":11,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getAttachment"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getBoolean:member(1)","d":"/**\n * Gets a boolean option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getBoolean","c":"discord.js!CommandInteractionOptionResolver#getBoolean"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":136,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getBoolean"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getBoolean:member(2)","d":"/**\n * Gets a boolean option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getBoolean","c":"discord.js!CommandInteractionOptionResolver#getBoolean"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":136,"co":3,"sta":false,"rtr":{"st":11,"en":14},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getBoolean"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getChannel:member(1)","d":"/**\n * Gets a channel option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @param channelTypes - The allowed types of channels. If empty, all channel types are allowed.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getChannel","c":"discord.js!CommandInteractionOptionResolver#getChannel"},{"k":"Content","t":"<const "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":">(  "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":",  "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":",  "},{"k":"Reference","t":"channelTypes","c":"discord.js!~channelTypes"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"Type"},{"k":"Content","t":"[]"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['channel']>,  {   "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":"    ? "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":"    : "},{"k":"Reference","t":"Type"},{"k":"Content","t":";  } >"},{"k":"Content","t":";"}],"l":149,"co":3,"tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"sta":false,"rtr":{"st":23,"en":45},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"required","ptr":{"st":15,"en":16},"op":false,"rs":false},{"pn":"channelTypes","ptr":{"st":19,"en":22},"op":true,"rs":false}],"op":false,"ab":false,"n":"getChannel"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getChannel:member(2)","d":"/**\n * Gets a channel option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @param channelTypes - The allowed types of channels. If empty, all channel types are allowed.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getChannel","c":"discord.js!CommandInteractionOptionResolver#getChannel"},{"k":"Content","t":"<const "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":">(  "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":",  "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":",  "},{"k":"Reference","t":"channelTypes","c":"discord.js!~channelTypes"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"Type"},{"k":"Content","t":"[]"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['channel']>,  {   "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":"    ? "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":"    : "},{"k":"Reference","t":"Type"},{"k":"Content","t":";  } > | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":149,"co":3,"tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"sta":false,"rtr":{"st":23,"en":46},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"required","ptr":{"st":15,"en":16},"op":true,"rs":false},{"pn":"channelTypes","ptr":{"st":19,"en":22},"op":true,"rs":false}],"op":false,"ab":false,"n":"getChannel"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getFocused:member(1)","d":"/**\n * Gets the focused option.\n *\n * @param getFull - Whether to get the full option object\n *\n * @returns The value of the option, or the whole option if getFull is true\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getFocused","c":"discord.js!CommandInteractionOptionResolver#getFocused"},{"k":"Content","t":"("},{"k":"Reference","t":"getFull","c":"discord.js!~getFull"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"AutocompleteFocusedOption","c":"discord.js!AutocompleteFocusedOption:interface"},{"k":"Content","t":";"}],"l":301,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"getFull","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"getFocused"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getFocused:member(2)","d":"/**\n * Gets the focused option.\n *\n * @param getFull - Whether to get the full option object\n *\n * @returns The value of the option, or the whole option if getFull is true\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getFocused","c":"discord.js!CommandInteractionOptionResolver#getFocused"},{"k":"Content","t":"("},{"k":"Reference","t":"getFull","c":"discord.js!~getFull"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":301,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"getFull","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"getFocused"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getInteger:member(1)","d":"/**\n * Gets an integer option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getInteger","c":"discord.js!CommandInteractionOptionResolver#getInteger"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":182,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getInteger"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getInteger:member(2)","d":"/**\n * Gets an integer option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getInteger","c":"discord.js!CommandInteractionOptionResolver#getInteger"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":182,"co":3,"sta":false,"rtr":{"st":11,"en":14},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getInteger"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getMember:member(1)","d":"/**\n * Gets a member option.\n *\n * @param name - The name of the option.\n *\n * @returns The value of the option, or null if the user is not present in the guild or the option is not set.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getMember","c":"discord.js!CommandInteractionOptionResolver#getMember"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['member']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":220,"co":3,"sta":false,"rtr":{"st":7,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"getMember"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getMentionable:member(1)","d":"/**\n * Gets a mentionable option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getMentionable","c":"discord.js!CommandInteractionOptionResolver#getMentionable"},{"k":"Content","t":"(  "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":",  "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":", ): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['member' | 'role' | 'user']>"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getMentionable"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getMentionable:member(2)","d":"/**\n * Gets a mentionable option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getMentionable","c":"discord.js!CommandInteractionOptionResolver#getMentionable"},{"k":"Content","t":"(  "},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":",  "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['member' | 'role' | 'user']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":11,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getMentionable"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getMessage:member(1)","d":"/**\n * Gets a message option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getMessage","c":"discord.js!CommandInteractionOptionResolver#getMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['message']>"},{"k":"Content","t":";"}],"l":281,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getMessage"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getMessage:member(2)","d":"/**\n * Gets a message option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getMessage","c":"discord.js!CommandInteractionOptionResolver#getMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['message']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":281,"co":3,"sta":false,"rtr":{"st":11,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getMessage"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getNumber:member(1)","d":"/**\n * Gets a number option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getNumber","c":"discord.js!CommandInteractionOptionResolver#getNumber"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":193,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getNumber"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getNumber:member(2)","d":"/**\n * Gets a number option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getNumber","c":"discord.js!CommandInteractionOptionResolver#getNumber"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":193,"co":3,"sta":false,"rtr":{"st":11,"en":14},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getNumber"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getRole:member(1)","d":"/**\n * Gets a role option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getRole","c":"discord.js!CommandInteractionOptionResolver#getRole"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['role']>"},{"k":"Content","t":";"}],"l":236,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getRole"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getRole:member(2)","d":"/**\n * Gets a role option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getRole","c":"discord.js!CommandInteractionOptionResolver#getRole"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['role']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":236,"co":3,"sta":false,"rtr":{"st":11,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getRole"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getString:member(1)","d":"/**\n * Gets a string option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getString","c":"discord.js!CommandInteractionOptionResolver#getString"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":171,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getString"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getString:member(2)","d":"/**\n * Gets a string option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getString","c":"discord.js!CommandInteractionOptionResolver#getString"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":171,"co":3,"sta":false,"rtr":{"st":11,"en":14},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getString"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getSubcommand:member(1)","d":"/**\n * Gets the selected subcommand.\n *\n * @param required - Whether to throw an error if there is no subcommand.\n *\n * @returns The name of the selected subcommand, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getSubcommand","c":"discord.js!CommandInteractionOptionResolver#getSubcommand"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":111,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"required","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"getSubcommand"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getSubcommand:member(2)","d":"/**\n * Gets the selected subcommand.\n *\n * @param required - Whether to throw an error if there is no subcommand.\n *\n * @returns The name of the selected subcommand, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getSubcommand","c":"discord.js!CommandInteractionOptionResolver#getSubcommand"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":111,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"required","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"getSubcommand"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getSubcommandGroup:member(1)","d":"/**\n * Gets the selected subcommand group.\n *\n * @param required - Whether to throw an error if there is no subcommand group.\n *\n * @returns The name of the selected subcommand group, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getSubcommandGroup","c":"discord.js!CommandInteractionOptionResolver#getSubcommandGroup"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":123,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"required","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"getSubcommandGroup"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getSubcommandGroup:member(2)","d":"/**\n * Gets the selected subcommand group.\n *\n * @param required - Whether to throw an error if there is no subcommand group.\n *\n * @returns The name of the selected subcommand group, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getSubcommandGroup","c":"discord.js!CommandInteractionOptionResolver#getSubcommandGroup"},{"k":"Content","t":"("},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":123,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"required","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"getSubcommandGroup"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getUser:member(1)","d":"/**\n * Gets a user option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getUser","c":"discord.js!CommandInteractionOptionResolver#getUser"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['user']>"},{"k":"Content","t":";"}],"l":204,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"getUser"},{"k":"Method","c":"discord.js!CommandInteractionOptionResolver#getUser:member(2)","d":"/**\n * Gets a user option.\n *\n * @param name - The name of the option.\n *\n * @param required - Whether to throw an error if the option is not found.\n *\n * @returns The value of the option, or null if not set and not required.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getUser","c":"discord.js!CommandInteractionOptionResolver#getUser"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"required","c":"discord.js!~required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['user']> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":204,"co":3,"sta":false,"rtr":{"st":11,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"required","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getUser"},{"k":"Property","c":"discord.js!CommandInteractionOptionResolver#resolved:member","d":"/**\n * The interaction resolved data\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"resolved","c":"discord.js!CommandInteractionOptionResolver#resolved"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionResolvedData","c":"discord.js!CommandInteractionResolvedData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"resolved","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!CommandInteractionResolvedData:interface","d":"/**\n * Resolved data from auto-populated select menus.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CommandInteractionResolvedData","c":"discord.js!CommandInteractionResolvedData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> "}],"pat":"src/structures/Message.js","l":227,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"CommandInteractionResolvedData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#attachments:member","d":"","ex":[{"k":"Reference","t":"attachments","c":"discord.js!CommandInteractionResolvedData#attachments"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5254,"co":3,"ro":false,"op":true,"r":"Public","n":"attachments","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#channels:member","d":"","ex":[{"k":"Reference","t":"channels","c":"discord.js!CommandInteractionResolvedData#channels"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionDataResolvedChannel","c":"discord-api-types!APIInteractionDataResolvedChannel:type"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5252,"co":3,"ro":false,"op":true,"r":"Public","n":"channels","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#members:member","d":"","ex":[{"k":"Reference","t":"members","c":"discord.js!CommandInteractionResolvedData#members"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionDataResolvedGuildMember","c":"discord-api-types!APIInteractionDataResolvedGuildMember:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5250,"co":3,"ro":false,"op":true,"r":"Public","n":"members","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#messages:member","d":"","ex":[{"k":"Reference","t":"messages","c":"discord.js!CommandInteractionResolvedData#messages"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5253,"co":3,"ro":false,"op":true,"r":"Public","n":"messages","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#roles:member","d":"","ex":[{"k":"Reference","t":"roles","c":"discord.js!CommandInteractionResolvedData#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5251,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!CommandInteractionResolvedData#users:member","d":"","ex":[{"k":"Reference","t":"users","c":"discord.js!CommandInteractionResolvedData#users"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5249,"co":3,"ro":false,"op":true,"r":"Public","n":"users","prtr":{"st":2,"en":8}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!CommandOptionChannelResolvableType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionChannelResolvableType","c":"discord.js!CommandOptionChannelResolvableType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ApplicationCommandOptionType.Channel","c":"discord-api-types!ApplicationCommandOptionType.Channel:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4615,"co":1,"r":"Public","n":"CommandOptionChannelResolvableType","ttr":{"st":3,"en":4}},{"k":"TypeAlias","c":"discord.js!CommandOptionChoiceResolvableType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionChoiceResolvableType","c":"discord.js!CommandOptionChoiceResolvableType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandOptionType.String","c":"discord-api-types!ApplicationCommandOptionType.String:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4617,"co":1,"r":"Public","n":"CommandOptionChoiceResolvableType","ttr":{"st":3,"en":7}},{"k":"TypeAlias","c":"discord.js!CommandOptionDataTypeResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionDataTypeResolvable","c":"discord.js!CommandOptionDataTypeResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ApplicationCommandOptionType","c":"discord-api-types!ApplicationCommandOptionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4613,"co":1,"r":"Public","n":"CommandOptionDataTypeResolvable","ttr":{"st":3,"en":4}},{"k":"TypeAlias","c":"discord.js!CommandOptionNonChoiceResolvableType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionNonChoiceResolvableType","c":"discord.js!CommandOptionNonChoiceResolvableType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"CommandOptionDataTypeResolvable","c":"discord.js!CommandOptionDataTypeResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CommandOptionChoiceResolvableType","c":"discord.js!CommandOptionChoiceResolvableType:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"CommandOptionSubOptionResolvableType","c":"discord.js!CommandOptionSubOptionResolvableType:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"CommandOptionChannelResolvableType","c":"discord.js!CommandOptionChannelResolvableType:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4629,"co":1,"r":"Public","n":"CommandOptionNonChoiceResolvableType","ttr":{"st":3,"en":13}},{"k":"TypeAlias","c":"discord.js!CommandOptionNumericResolvableType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionNumericResolvableType","c":"discord.js!CommandOptionNumericResolvableType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandOptionType.Number","c":"discord-api-types!ApplicationCommandOptionType.Number:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandOptionType.Integer","c":"discord-api-types!ApplicationCommandOptionType.Integer:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4621,"co":1,"r":"Public","n":"CommandOptionNumericResolvableType","ttr":{"st":3,"en":7}},{"k":"TypeAlias","c":"discord.js!CommandOptionSubOptionResolvableType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"CommandOptionSubOptionResolvableType","c":"discord.js!CommandOptionSubOptionResolvableType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ApplicationCommandOptionType.Subcommand","c":"discord-api-types!ApplicationCommandOptionType.Subcommand:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandOptionType.SubcommandGroup","c":"discord-api-types!ApplicationCommandOptionType.SubcommandGroup:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4625,"co":1,"r":"Public","n":"CommandOptionSubOptionResolvableType","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!Component:class","d":"/**\n * Represents a component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawComponentData"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnyComponent","c":"discord.js!AnyComponent:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AnyComponent","c":"discord.js!AnyComponent:type"},{"k":"Content","t":"> "}],"pat":"src/structures/Component.js","l":8,"co":1,"r":"Public","tps":[{"tp":"RawComponentData","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"Component","pmo":false,"ms":[{"k":"Property","c":"discord.js!Component#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"data","c":"discord.js!Component#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawComponentData"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":14,"co":3,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Component#equals:member(1)","d":"/**\n * Whether or not the given components are equal\n *\n * @param other - The component to compare against\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Component#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Content","t":"this | "},{"k":"Reference","t":"RawComponentData"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":31,"co":3,"sta":false,"rtr":{"st":8,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!Component#toJSON:member(1)","d":"/**\n * Returns the API-compatible JSON for this component\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Component#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"RawComponentData"},{"k":"Content","t":";"}],"l":42,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!Component#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"type","c":"discord.js!Component#type"},{"k":"Content","t":"(): "},{"k":"Reference","t":"RawComponentData"},{"k":"Content","t":"['type']"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!ComponentData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ComponentData","c":"discord.js!ComponentData:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"MessageActionRowComponentData","c":"discord.js!MessageActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponentData","c":"discord.js!ModalActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowData","c":"discord.js!ActionRowData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageActionRowComponentData","c":"discord.js!MessageActionRowComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponentData","c":"discord.js!ModalActionRowComponentData:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":61,"co":1,"r":"Public","n":"ComponentData","ttr":{"st":3,"en":14}},{"k":"TypeAlias","c":"discord.js!ComponentEmojiResolvable:type","d":"/**\n * Any emoji data that can be used within a button\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ComponentEmojiResolvable","c":"discord.js!ComponentEmojiResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"APIMessageComponentEmoji","c":"discord-api-types!APIMessageComponentEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":65,"co":1,"r":"Public","n":"ComponentEmojiResolvable","ttr":{"st":3,"en":6}},{"k":"Variable","c":"discord.js!Constants:var","d":"","ex":[{"k":"Reference","t":"Constants","c":"discord.js!Constants"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"MaxBulkDeletableMessageAge","c":"discord.js!~__type#MaxBulkDeletableMessageAge"},{"k":"Content","t":": 1_209_600_000; "},{"k":"Reference","t":"SweeperKeys","c":"discord.js!~__type#SweeperKeys"},{"k":"Content","t":": "},{"k":"Reference","t":"SweeperKey","c":"discord.js!SweeperKey:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"NonSystemMessageTypes","c":"discord.js!~__type#NonSystemMessageTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"NonSystemMessageType","c":"discord.js!NonSystemMessageType:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"TextBasedChannelTypes","c":"discord.js!~__type#TextBasedChannelTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannelTypes","c":"discord.js!TextBasedChannelTypes:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"GuildTextBasedChannelTypes","c":"discord.js!~__type#GuildTextBasedChannelTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannelTypes","c":"discord.js!GuildTextBasedChannelTypes:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"ThreadChannelTypes","c":"discord.js!~__type#ThreadChannelTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadChannelType","c":"discord.js!ThreadChannelType:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"VoiceBasedChannelTypes","c":"discord.js!~__type#VoiceBasedChannelTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"VoiceBasedChannelTypes","c":"discord.js!VoiceBasedChannelTypes:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"SelectMenuTypes","c":"discord.js!~__type#SelectMenuTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"SelectMenuType","c":"discord.js!SelectMenuType:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"UndeletableMessageTypes","c":"discord.js!~__type#UndeletableMessageTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"UndeletableMessageType","c":"discord.js!UndeletableMessageType:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"DeletableMessageTypes","c":"discord.js!~__type#DeletableMessageTypes"},{"k":"Content","t":": "},{"k":"Reference","t":"DeletableMessageType","c":"discord.js!DeletableMessageType:type"},{"k":"Content","t":"[]; "},{"k":"Reference","t":"StickerFormatExtensionMap","c":"discord.js!~__type#StickerFormatExtensionMap"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"StickerFormatType","c":"discord-api-types!StickerFormatType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"ImageFormat","c":"discord-api-types!ImageFormat:enum"},{"k":"Content","t":">;}"}],"pat":"typings/index.d.ts","l":3707,"co":14,"ro":true,"r":"Public","n":"Constants","vtr":{"st":2,"en":49}},{"k":"TypeAlias","c":"discord.js!Constructable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Constructable","c":"discord.js!Constructable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Entity"},{"k":"Content","t":"> = "},{"k":"Content","t":"abstract new (..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"Entity"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4486,"co":1,"r":"Public","n":"Constructable","tps":[{"tp":"Entity","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":11}},{"k":"Class","c":"discord.js!ContextMenuCommandInteraction:class","d":"/**\n * Represents a context menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"CommandInteraction","c":"discord.js!CommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ContextMenuCommandInteraction.js","l":15,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ContextMenuCommandInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":18,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"undefined command :"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":77,"ro":false,"op":true,"r":"Public","n":"command","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"undefined commandGuildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":46,"ro":false,"op":true,"r":"Public","n":"commandGuildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"undefined commandId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":28,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"undefined commandName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":34,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!ContextMenuCommandInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.Message","c":"discord-api-types!ApplicationCommandType.Message:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ApplicationCommandType.User","c":"discord-api-types!ApplicationCommandType.User:member"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":52,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":64,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ContextMenuCommandInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!ContextMenuCommandInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!ContextMenuCommandInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!ContextMenuCommandInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!ContextMenuCommandInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!ContextMenuCommandInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#options:member","d":"/**\n * The target of the interaction, parsed into options\n */\n","ex":[{"k":"Content","t":"undefined options :"},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":";"}],"l":22,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":58,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#targetId:member","d":"/**\n * The id of the target of this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetId","c":"discord.js!ContextMenuCommandInteraction#targetId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"targetId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ContextMenuCommandInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":70,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Function","c":"discord.js!createComponent:function(1)","d":"/**\n * Transforms API data into a component\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponent","c":"discord.js!createComponent"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"MappedComponentTypes","c":"discord.js!MappedComponentTypes:interface"},{"k":"Content","t":">( "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" & { "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" }"},{"k":"Content","t":",): "},{"k":"Reference","t":"MappedComponentTypes","c":"discord.js!MappedComponentTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":75,"co":1,"rtr":{"st":17,"en":21},"r":"Public","oi":1,"ps":[{"pn":"data","ptr":{"st":10,"en":16},"op":false,"rs":false}],"tps":[{"tp":"Type","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"n":"createComponent"},{"k":"Function","c":"discord.js!createComponent:function(2)","d":"/**\n * Transforms API data into a component\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponent","c":"discord.js!createComponent"},{"k":"Content","t":"<"},{"k":"Reference","t":"Data"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":">("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Data"},{"k":"Content","t":"): "},{"k":"Reference","t":"Data"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":75,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":2,"ps":[{"pn":"data","ptr":{"st":9,"en":10},"op":false,"rs":false}],"tps":[{"tp":"Data","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"createComponent"},{"k":"Function","c":"discord.js!createComponent:function(3)","d":"/**\n * Transforms API data into a component\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponent","c":"discord.js!createComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":75,"co":1,"rtr":{"st":9,"en":10},"r":"Public","oi":3,"ps":[{"pn":"data","ptr":{"st":5,"en":8},"op":false,"rs":false}],"n":"createComponent"},{"k":"Function","c":"discord.js!createComponentBuilder:function(1)","d":"/**\n * Transforms API data into a component builder\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponentBuilder","c":"discord.js!createComponentBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"MappedComponentBuilderTypes","c":"discord.js!MappedComponentBuilderTypes:interface"},{"k":"Content","t":">( "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" & { "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" }"},{"k":"Content","t":",): "},{"k":"Reference","t":"MappedComponentBuilderTypes","c":"discord.js!MappedComponentBuilderTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Type"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":107,"co":1,"rtr":{"st":17,"en":21},"r":"Public","oi":1,"ps":[{"pn":"data","ptr":{"st":10,"en":16},"op":false,"rs":false}],"tps":[{"tp":"Type","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"n":"createComponentBuilder"},{"k":"Function","c":"discord.js!createComponentBuilder:function(2)","d":"/**\n * Transforms API data into a component builder\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponentBuilder","c":"discord.js!createComponentBuilder"},{"k":"Content","t":"<"},{"k":"Reference","t":"Data"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":">("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Data"},{"k":"Content","t":"): "},{"k":"Reference","t":"Data"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":107,"co":1,"rtr":{"st":11,"en":12},"r":"Public","oi":2,"ps":[{"pn":"data","ptr":{"st":9,"en":10},"op":false,"rs":false}],"tps":[{"tp":"Data","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"createComponentBuilder"},{"k":"Function","c":"discord.js!createComponentBuilder:function(3)","d":"/**\n * Transforms API data into a component builder\n *\n * @param data - The data to create the component from\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"createComponentBuilder","c":"discord.js!createComponentBuilder"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"ComponentBuilder","c":"@discordjs/builders!ComponentBuilder:class"},{"k":"Content","t":";"}],"pat":"src/util/Components.js","l":107,"co":1,"rtr":{"st":9,"en":10},"r":"Public","oi":3,"ps":[{"pn":"data","ptr":{"st":5,"en":8},"op":false,"rs":false}],"n":"createComponentBuilder"},{"k":"Interface","c":"discord.js!CrosspostedChannel:interface","d":"/**\n * Crossposted channel data.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"CrosspostedChannel","c":"discord.js!CrosspostedChannel:interface"},{"k":"Content","t":" "}],"pat":"src/structures/MessageMentions.js","l":151,"co":1,"r":"Public","n":"CrosspostedChannel","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!CrosspostedChannel#channelId:member","d":"/**\n * The mentioned channel's id\n */\n","ex":[{"k":"Reference","t":"channelId","c":"discord.js!CrosspostedChannel#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5432,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CrosspostedChannel#guildId:member","d":"/**\n * The id of the guild that has the channel\n */\n","ex":[{"k":"Reference","t":"guildId","c":"discord.js!CrosspostedChannel#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5433,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CrosspostedChannel#name:member","d":"/**\n * The channel's name\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!CrosspostedChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5435,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!CrosspostedChannel#type:member","d":"/**\n * The channel's type\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!CrosspostedChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5434,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!DataManager:class","d":"/**\n * Manages the API methods of a data model along with a collection of instances.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Holds"},{"k":"Content","t":", "},{"k":"Reference","t":"Resolvable"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseManager","c":"discord.js!BaseManager:class"},{"k":"Content","t":" "}],"pat":"src/managers/DataManager.js","l":11,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Holds","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Resolvable","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":true,"n":"DataManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!DataManager:constructor(1)","d":"/**\n * Constructs a new instance of the `DataManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"holds","c":"discord.js!~holds"},{"k":"Content","t":": "},{"k":"Reference","t":"Constructable","c":"discord.js!Constructable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"holds","ptr":{"st":8,"en":12},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!DataManager#cache:member","d":"/**\n * The cache of items for this manager.\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"cache","c":"discord.js!DataManager#cache"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":true,"op":false,"r":"Public","n":"cache","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DataManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DataManager#holds:member","d":"/**\n * The data structure belonging to this manager.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"holds","c":"discord.js!DataManager#holds"},{"k":"Content","t":": "},{"k":"Reference","t":"Constructable","c":"discord.js!Constructable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"holds","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!DataManager#resolve:member(1)","d":"/**\n * Resolves a data entry to a data Object.\n *\n * @param idOrInstance - The id or instance of something in this Manager\n *\n * @returns An instance from this Manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolve","c":"discord.js!DataManager#resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"resolvable","c":"discord.js!~resolvable"},{"k":"Content","t":": "},{"k":"Reference","t":"Holds"},{"k":"Content","t":"): "},{"k":"Reference","t":"Holds"},{"k":"Content","t":";"}],"l":39,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"resolvable","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!DataManager#resolve:member(2)","d":"/**\n * Resolves a data entry to a data Object.\n *\n * @param idOrInstance - The id or instance of something in this Manager\n *\n * @returns An instance from this Manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolve","c":"discord.js!DataManager#resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"resolvable","c":"discord.js!~resolvable"},{"k":"Content","t":": "},{"k":"Reference","t":"Resolvable"},{"k":"Content","t":"): "},{"k":"Reference","t":"Holds"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":39,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"resolvable","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!DataManager#resolveId:member(1)","d":"/**\n * Resolves a data entry to an instance id.\n *\n * @param idOrInstance - The id or instance of something in this Manager\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveId","c":"discord.js!DataManager#resolveId"},{"k":"Content","t":"("},{"k":"Reference","t":"resolvable","c":"discord.js!~resolvable"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"Holds"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":";"}],"l":50,"co":3,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"resolvable","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!DataManager#resolveId:member(2)","d":"/**\n * Resolves a data entry to an instance id.\n *\n * @param idOrInstance - The id or instance of something in this Manager\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveId","c":"discord.js!DataManager#resolveId"},{"k":"Content","t":"("},{"k":"Reference","t":"resolvable","c":"discord.js!~resolvable"},{"k":"Content","t":": "},{"k":"Reference","t":"Resolvable"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":50,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"resolvable","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!DataManager#valueOf:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"valueOf","c":"discord.js!DataManager#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Holds"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3936,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!DateResolvable:type","d":"/**\n * Data that can be resolved to a Date object. This can be:\n *\n * * A Date object\n *\n * * A number representing a timestamp\n *\n * * An [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) string\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadManager.js","l":110,"co":1,"r":"Public","n":"DateResolvable","ttr":{"st":3,"en":8}},{"k":"Interface","c":"discord.js!DefaultReactionEmoji:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadOnlyChannel.js","l":32,"co":1,"r":"Public","n":"DefaultReactionEmoji","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!DefaultReactionEmoji#id:member","d":"/**\n * The id of a guild's custom emoji\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!DefaultReactionEmoji#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2468,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!DefaultReactionEmoji#name:member","d":"/**\n * The unicode character of the emoji\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!DefaultReactionEmoji#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2469,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!DeletableMessageType:type","d":"/**\n * @deprecated\n *\n * This type will no longer be updated. Use {@link UndeletableMessageType} instead.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"DeletableMessageType","c":"discord.js!DeletableMessageType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"MessageType.AutoModerationAction","c":"discord-api-types!MessageType.AutoModerationAction:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChannelFollowAdd","c":"discord-api-types!MessageType.ChannelFollowAdd:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChannelPinnedMessage","c":"discord-api-types!MessageType.ChannelPinnedMessage:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChatInputCommand","c":"discord-api-types!MessageType.ChatInputCommand:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ContextMenuCommand","c":"discord-api-types!MessageType.ContextMenuCommand:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.Default","c":"discord-api-types!MessageType.Default:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.GuildBoost","c":"discord-api-types!MessageType.GuildBoost:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.GuildBoostTier1","c":"discord-api-types!MessageType.GuildBoostTier1:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.GuildBoostTier2","c":"discord-api-types!MessageType.GuildBoostTier2:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.GuildBoostTier3","c":"discord-api-types!MessageType.GuildBoostTier3:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.GuildInviteReminder","c":"discord-api-types!MessageType.GuildInviteReminder:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.InteractionPremiumUpsell","c":"discord-api-types!MessageType.InteractionPremiumUpsell:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.Reply","c":"discord-api-types!MessageType.Reply:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.RoleSubscriptionPurchase","c":"discord-api-types!MessageType.RoleSubscriptionPurchase:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.StageEnd","c":"discord-api-types!MessageType.StageEnd:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.StageRaiseHand","c":"discord-api-types!MessageType.StageRaiseHand:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.StageSpeaker","c":"discord-api-types!MessageType.StageSpeaker:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.StageStart","c":"discord-api-types!MessageType.StageStart:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.StageTopic","c":"discord-api-types!MessageType.StageTopic:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ThreadCreated","c":"discord-api-types!MessageType.ThreadCreated:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.UserJoin","c":"discord-api-types!MessageType.UserJoin:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3684,"co":1,"r":"Public","n":"DeletableMessageType","ttr":{"st":3,"en":45}},{"k":"Class","c":"discord.js!DirectoryChannel:class","d":"/**\n * Represents a channel that displays a directory of guilds.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DirectoryChannel","c":"discord.js!DirectoryChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/DirectoryChannel.js","l":9,"co":1,"r":"Public","ab":false,"n":"DirectoryChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!DirectoryChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!DirectoryChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!DirectoryChannel#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteGuild","c":"discord.js!InviteGuild:class"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!DirectoryChannel#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#name:member","d":"/**\n * The channel's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!DirectoryChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!DirectoryChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <#123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!DirectoryChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":91,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!DirectoryChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DirectoryChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!DiscordjsError:class","d":"","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DiscordjsError","c":"discord.js!DiscordjsError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DiscordjsErrorMixin","c":"discord.js!DiscordjsErrorMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":", 'Error')"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3913,"co":1,"r":"Public","ab":false,"n":"DiscordjsError","pmo":false,"ms":[],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Enum","c":"discord.js!DiscordjsErrorCodes:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"DiscordjsErrorCodes","c":"discord.js!DiscordjsErrorCodes:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3727,"co":1,"r":"Public","n":"DiscordjsErrorCodes","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ApplicationCommandPermissionsTokenMissing:member","d":"","ex":[{"k":"Reference","t":"ApplicationCommandPermissionsTokenMissing","c":"discord.js!DiscordjsErrorCodes.ApplicationCommandPermissionsTokenMissing:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ApplicationCommandPermissionsTokenMissing'"}],"l":3735,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ApplicationCommandPermissionsTokenMissing"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption:member","d":"","ex":[{"k":"Reference","t":"AutocompleteInteractionOptionNoFocusedOption","c":"discord.js!DiscordjsErrorCodes.AutocompleteInteractionOptionNoFocusedOption:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'AutocompleteInteractionOptionNoFocusedOption'"}],"l":3884,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AutocompleteInteractionOptionNoFocusedOption"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.BanResolveId:member","d":"","ex":[{"k":"Reference","t":"BanResolveId","c":"discord.js!DiscordjsErrorCodes.BanResolveId:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'BanResolveId'"}],"l":3819,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"BanResolveId"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.BitFieldInvalid:member","d":"","ex":[{"k":"Reference","t":"BitFieldInvalid","c":"discord.js!DiscordjsErrorCodes.BitFieldInvalid:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'BitFieldInvalid'"}],"l":3746,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"BitFieldInvalid"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ButtonCustomId:member","d":"/**\n * @deprecated\n *\n * Button validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"ButtonCustomId","c":"discord.js!DiscordjsErrorCodes.ButtonCustomId:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ButtonCustomId'"}],"l":3779,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ButtonCustomId"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ButtonLabel:member","d":"/**\n * @deprecated\n *\n * Button validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"ButtonLabel","c":"discord.js!DiscordjsErrorCodes.ButtonLabel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ButtonLabel'"}],"l":3775,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ButtonLabel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ButtonURL:member","d":"/**\n * @deprecated\n *\n * Button validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"ButtonURL","c":"discord.js!DiscordjsErrorCodes.ButtonURL:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ButtonURL'"}],"l":3777,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ButtonURL"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ChannelNotCached:member","d":"","ex":[{"k":"Reference","t":"ChannelNotCached","c":"discord.js!DiscordjsErrorCodes.ChannelNotCached:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ChannelNotCached'"}],"l":3831,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ChannelNotCached"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ClientInvalidOption:member","d":"","ex":[{"k":"Reference","t":"ClientInvalidOption","c":"discord.js!DiscordjsErrorCodes.ClientInvalidOption:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ClientInvalidOption'"}],"l":3728,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ClientInvalidOption"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ClientInvalidProvidedShards:member","d":"","ex":[{"k":"Reference","t":"ClientInvalidProvidedShards","c":"discord.js!DiscordjsErrorCodes.ClientInvalidProvidedShards:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ClientInvalidProvidedShards'"}],"l":3729,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ClientInvalidProvidedShards"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ClientMissingIntents:member","d":"","ex":[{"k":"Reference","t":"ClientMissingIntents","c":"discord.js!DiscordjsErrorCodes.ClientMissingIntents:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ClientMissingIntents'"}],"l":3730,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ClientMissingIntents"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ClientNotReady:member","d":"","ex":[{"k":"Reference","t":"ClientNotReady","c":"discord.js!DiscordjsErrorCodes.ClientNotReady:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ClientNotReady'"}],"l":3731,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ClientNotReady"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ColorConvert:member","d":"","ex":[{"k":"Reference","t":"ColorConvert","c":"discord.js!DiscordjsErrorCodes.ColorConvert:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ColorConvert'"}],"l":3770,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ColorConvert"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ColorRange:member","d":"","ex":[{"k":"Reference","t":"ColorRange","c":"discord.js!DiscordjsErrorCodes.ColorRange:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ColorRange'"}],"l":3769,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ColorRange"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionEmpty:member","d":"","ex":[{"k":"Reference","t":"CommandInteractionOptionEmpty","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionEmpty:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'CommandInteractionOptionEmpty'"}],"l":3881,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CommandInteractionOptionEmpty"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommand:member","d":"","ex":[{"k":"Reference","t":"CommandInteractionOptionNoSubcommand","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommand:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'CommandInteractionOptionNoSubcommand'"}],"l":3882,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CommandInteractionOptionNoSubcommand"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommandGroup:member","d":"","ex":[{"k":"Reference","t":"CommandInteractionOptionNoSubcommandGroup","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNoSubcommandGroup:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'CommandInteractionOptionNoSubcommandGroup'"}],"l":3883,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CommandInteractionOptionNoSubcommandGroup"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNotFound:member","d":"","ex":[{"k":"Reference","t":"CommandInteractionOptionNotFound","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionNotFound:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'CommandInteractionOptionNotFound'"}],"l":3879,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CommandInteractionOptionNotFound"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionType:member","d":"","ex":[{"k":"Reference","t":"CommandInteractionOptionType","c":"discord.js!DiscordjsErrorCodes.CommandInteractionOptionType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'CommandInteractionOptionType'"}],"l":3880,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CommandInteractionOptionType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.DeleteGroupDMChannel:member","d":"","ex":[{"k":"Reference","t":"DeleteGroupDMChannel","c":"discord.js!DiscordjsErrorCodes.DeleteGroupDMChannel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'DeleteGroupDMChannel'"}],"l":3866,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"DeleteGroupDMChannel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.DisallowedIntents:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"DisallowedIntents","c":"discord.js!DiscordjsErrorCodes.DisallowedIntents:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'DisallowedIntents'"}],"l":3755,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"DisallowedIntents"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.EmojiManaged:member","d":"","ex":[{"k":"Reference","t":"EmojiManaged","c":"discord.js!DiscordjsErrorCodes.EmojiManaged:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'EmojiManaged'"}],"l":3850,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EmojiManaged"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.EmojiType:member","d":"","ex":[{"k":"Reference","t":"EmojiType","c":"discord.js!DiscordjsErrorCodes.EmojiType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'EmojiType'"}],"l":3849,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EmojiType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.EntitlementCreateInvalidOwner:member","d":"","ex":[{"k":"Reference","t":"EntitlementCreateInvalidOwner","c":"discord.js!DiscordjsErrorCodes.EntitlementCreateInvalidOwner:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'EntitlementCreateInvalidOwner'"}],"l":3898,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EntitlementCreateInvalidOwner"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.FetchBanResolveId:member","d":"","ex":[{"k":"Reference","t":"FetchBanResolveId","c":"discord.js!DiscordjsErrorCodes.FetchBanResolveId:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'FetchBanResolveId'"}],"l":3820,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"FetchBanResolveId"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.FetchGroupDMChannel:member","d":"","ex":[{"k":"Reference","t":"FetchGroupDMChannel","c":"discord.js!DiscordjsErrorCodes.FetchGroupDMChannel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'FetchGroupDMChannel'"}],"l":3867,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"FetchGroupDMChannel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.FetchOwnerId:member","d":"","ex":[{"k":"Reference","t":"FetchOwnerId","c":"discord.js!DiscordjsErrorCodes.FetchOwnerId:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'FetchOwnerId'"}],"l":3834,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"FetchOwnerId"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.FileNotFound:member","d":"","ex":[{"k":"Reference","t":"FileNotFound","c":"discord.js!DiscordjsErrorCodes.FileNotFound:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'FileNotFound'"}],"l":3794,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"FileNotFound"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GlobalCommandPermissions:member","d":"","ex":[{"k":"Reference","t":"GlobalCommandPermissions","c":"discord.js!DiscordjsErrorCodes.GlobalCommandPermissions:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GlobalCommandPermissions'"}],"l":3871,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GlobalCommandPermissions"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildChannelOrphan:member","d":"","ex":[{"k":"Reference","t":"GuildChannelOrphan","c":"discord.js!DiscordjsErrorCodes.GuildChannelOrphan:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildChannelOrphan'"}],"l":3826,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildChannelOrphan"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildChannelResolve:member","d":"","ex":[{"k":"Reference","t":"GuildChannelResolve","c":"discord.js!DiscordjsErrorCodes.GuildChannelResolve:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildChannelResolve'"}],"l":3824,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildChannelResolve"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildChannelUnowned:member","d":"","ex":[{"k":"Reference","t":"GuildChannelUnowned","c":"discord.js!DiscordjsErrorCodes.GuildChannelUnowned:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildChannelUnowned'"}],"l":3827,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildChannelUnowned"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildForumMessageRequired:member","d":"","ex":[{"k":"Reference","t":"GuildForumMessageRequired","c":"discord.js!DiscordjsErrorCodes.GuildForumMessageRequired:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildForumMessageRequired'"}],"l":3896,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildForumMessageRequired"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildMembersTimeout:member","d":"","ex":[{"k":"Reference","t":"GuildMembersTimeout","c":"discord.js!DiscordjsErrorCodes.GuildMembersTimeout:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildMembersTimeout'"}],"l":3829,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMembersTimeout"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildOwned:member","d":"","ex":[{"k":"Reference","t":"GuildOwned","c":"discord.js!DiscordjsErrorCodes.GuildOwned:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildOwned'"}],"l":3828,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildOwned"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildScheduledEventResolve:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventResolve","c":"discord.js!DiscordjsErrorCodes.GuildScheduledEventResolve:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildScheduledEventResolve'"}],"l":3833,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventResolve"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildUncachedEntityResolve:member","d":"","ex":[{"k":"Reference","t":"GuildUncachedEntityResolve","c":"discord.js!DiscordjsErrorCodes.GuildUncachedEntityResolve:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildUncachedEntityResolve'"}],"l":3872,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildUncachedEntityResolve"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildUncachedMe:member","d":"","ex":[{"k":"Reference","t":"GuildUncachedMe","c":"discord.js!DiscordjsErrorCodes.GuildUncachedMe:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildUncachedMe'"}],"l":3830,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildUncachedMe"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.GuildVoiceChannelResolve:member","d":"","ex":[{"k":"Reference","t":"GuildVoiceChannelResolve","c":"discord.js!DiscordjsErrorCodes.GuildVoiceChannelResolve:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'GuildVoiceChannelResolve'"}],"l":3825,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildVoiceChannelResolve"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ImageFormat:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/rest`\n */\n","ex":[{"k":"Reference","t":"ImageFormat","c":"discord.js!DiscordjsErrorCodes.ImageFormat:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ImageFormat'"}],"l":3808,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ImageFormat"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ImageSize:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/rest`\n */\n","ex":[{"k":"Reference","t":"ImageSize","c":"discord.js!DiscordjsErrorCodes.ImageSize:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ImageSize'"}],"l":3810,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ImageSize"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InteractionAlreadyReplied:member","d":"","ex":[{"k":"Reference","t":"InteractionAlreadyReplied","c":"discord.js!DiscordjsErrorCodes.InteractionAlreadyReplied:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InteractionAlreadyReplied'"}],"l":3874,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InteractionAlreadyReplied"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InteractionCollectorError:member","d":"","ex":[{"k":"Reference","t":"InteractionCollectorError","c":"discord.js!DiscordjsErrorCodes.InteractionCollectorError:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InteractionCollectorError'"}],"l":3792,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InteractionCollectorError"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InteractionEphemeralReplied:member","d":"/**\n * @deprecated\n *\n * Not used anymore since ephemeral replies can now be deleted\n */\n","ex":[{"k":"Reference","t":"InteractionEphemeralReplied","c":"discord.js!DiscordjsErrorCodes.InteractionEphemeralReplied:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InteractionEphemeralReplied'"}],"l":3877,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InteractionEphemeralReplied"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InteractionNotReplied:member","d":"","ex":[{"k":"Reference","t":"InteractionNotReplied","c":"discord.js!DiscordjsErrorCodes.InteractionNotReplied:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InteractionNotReplied'"}],"l":3875,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InteractionNotReplied"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InvalidElement:member","d":"","ex":[{"k":"Reference","t":"InvalidElement","c":"discord.js!DiscordjsErrorCodes.InvalidElement:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InvalidElement'"}],"l":3837,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidElement"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InvalidIntents:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"InvalidIntents","c":"discord.js!DiscordjsErrorCodes.InvalidIntents:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InvalidIntents'"}],"l":3753,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidIntents"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InvalidMissingScopes:member","d":"","ex":[{"k":"Reference","t":"InvalidMissingScopes","c":"discord.js!DiscordjsErrorCodes.InvalidMissingScopes:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InvalidMissingScopes'"}],"l":3889,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidMissingScopes"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InvalidScopesWithPermissions:member","d":"","ex":[{"k":"Reference","t":"InvalidScopesWithPermissions","c":"discord.js!DiscordjsErrorCodes.InvalidScopesWithPermissions:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InvalidScopesWithPermissions'"}],"l":3890,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidScopesWithPermissions"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InvalidType:member","d":"","ex":[{"k":"Reference","t":"InvalidType","c":"discord.js!DiscordjsErrorCodes.InvalidType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InvalidType'"}],"l":3836,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InviteNotFound:member","d":"","ex":[{"k":"Reference","t":"InviteNotFound","c":"discord.js!DiscordjsErrorCodes.InviteNotFound:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InviteNotFound'"}],"l":3864,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InviteNotFound"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InviteOptionsMissingChannel:member","d":"","ex":[{"k":"Reference","t":"InviteOptionsMissingChannel","c":"discord.js!DiscordjsErrorCodes.InviteOptionsMissingChannel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InviteOptionsMissingChannel'"}],"l":3772,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InviteOptionsMissingChannel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.InviteResolveCode:member","d":"","ex":[{"k":"Reference","t":"InviteResolveCode","c":"discord.js!DiscordjsErrorCodes.InviteResolveCode:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'InviteResolveCode'"}],"l":3862,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InviteResolveCode"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ManagerDestroyed:member","d":"/**\n * @deprecated\n *\n * No longer in use\n */\n","ex":[{"k":"Reference","t":"ManagerDestroyed","c":"discord.js!DiscordjsErrorCodes.ManagerDestroyed:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ManagerDestroyed'"}],"l":3744,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ManagerDestroyed"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MemberFetchNonceLength:member","d":"","ex":[{"k":"Reference","t":"MemberFetchNonceLength","c":"discord.js!DiscordjsErrorCodes.MemberFetchNonceLength:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MemberFetchNonceLength'"}],"l":3869,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MemberFetchNonceLength"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageBulkDeleteType:member","d":"","ex":[{"k":"Reference","t":"MessageBulkDeleteType","c":"discord.js!DiscordjsErrorCodes.MessageBulkDeleteType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageBulkDeleteType'"}],"l":3812,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageBulkDeleteType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageContentType:member","d":"","ex":[{"k":"Reference","t":"MessageContentType","c":"discord.js!DiscordjsErrorCodes.MessageContentType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageContentType'"}],"l":3814,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageContentType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageExistingThread:member","d":"","ex":[{"k":"Reference","t":"MessageExistingThread","c":"discord.js!DiscordjsErrorCodes.MessageExistingThread:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageExistingThread'"}],"l":3840,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageExistingThread"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageNonceType:member","d":"","ex":[{"k":"Reference","t":"MessageNonceType","c":"discord.js!DiscordjsErrorCodes.MessageNonceType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageNonceType'"}],"l":3813,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageNonceType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageReferenceMissing:member","d":"","ex":[{"k":"Reference","t":"MessageReferenceMissing","c":"discord.js!DiscordjsErrorCodes.MessageReferenceMissing:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageReferenceMissing'"}],"l":3847,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageReferenceMissing"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MessageThreadParent:member","d":"","ex":[{"k":"Reference","t":"MessageThreadParent","c":"discord.js!DiscordjsErrorCodes.MessageThreadParent:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MessageThreadParent'"}],"l":3839,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageThreadParent"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MissingManageEmojisAndStickersPermission:member","d":"/**\n * @deprecated\n *\n * Use {@link DiscordjsErrorCodes.MissingManageGuildExpressionsPermission} instead.\n */\n","ex":[{"k":"Reference","t":"MissingManageEmojisAndStickersPermission","c":"discord.js!DiscordjsErrorCodes.MissingManageEmojisAndStickersPermission:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MissingManageEmojisAndStickersPermission'"}],"l":3853,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MissingManageEmojisAndStickersPermission"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.MissingManageGuildExpressionsPermission:member","d":"","ex":[{"k":"Reference","t":"MissingManageGuildExpressionsPermission","c":"discord.js!DiscordjsErrorCodes.MissingManageGuildExpressionsPermission:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'MissingManageGuildExpressionsPermission'"}],"l":3851,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MissingManageGuildExpressionsPermission"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldNotFound:member","d":"","ex":[{"k":"Reference","t":"ModalSubmitInteractionFieldNotFound","c":"discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldNotFound:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ModalSubmitInteractionFieldNotFound'"}],"l":3886,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ModalSubmitInteractionFieldNotFound"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldType:member","d":"","ex":[{"k":"Reference","t":"ModalSubmitInteractionFieldType","c":"discord.js!DiscordjsErrorCodes.ModalSubmitInteractionFieldType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ModalSubmitInteractionFieldType'"}],"l":3887,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ModalSubmitInteractionFieldType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.NotGuildSticker:member","d":"","ex":[{"k":"Reference","t":"NotGuildSticker","c":"discord.js!DiscordjsErrorCodes.NotGuildSticker:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'NotGuildSticker'"}],"l":3855,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"NotGuildSticker"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.NotImplemented:member","d":"","ex":[{"k":"Reference","t":"NotImplemented","c":"discord.js!DiscordjsErrorCodes.NotImplemented:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'NotImplemented'"}],"l":3892,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"NotImplemented"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.PruneDaysType:member","d":"","ex":[{"k":"Reference","t":"PruneDaysType","c":"discord.js!DiscordjsErrorCodes.PruneDaysType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'PruneDaysType'"}],"l":3822,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"PruneDaysType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ReactionResolveUser:member","d":"","ex":[{"k":"Reference","t":"ReactionResolveUser","c":"discord.js!DiscordjsErrorCodes.ReactionResolveUser:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ReactionResolveUser'"}],"l":3857,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ReactionResolveUser"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ReqResourceType:member","d":"","ex":[{"k":"Reference","t":"ReqResourceType","c":"discord.js!DiscordjsErrorCodes.ReqResourceType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ReqResourceType'"}],"l":3805,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ReqResourceType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SelectMenuCustomId:member","d":"/**\n * @deprecated\n *\n * Select Menu validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"SelectMenuCustomId","c":"discord.js!DiscordjsErrorCodes.SelectMenuCustomId:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SelectMenuCustomId'"}],"l":3782,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SelectMenuCustomId"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SelectMenuPlaceholder:member","d":"/**\n * @deprecated\n *\n * Select Menu validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"SelectMenuPlaceholder","c":"discord.js!DiscordjsErrorCodes.SelectMenuPlaceholder:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SelectMenuPlaceholder'"}],"l":3784,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SelectMenuPlaceholder"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SelectOptionDescription:member","d":"/**\n * @deprecated\n *\n * Select Menu validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"SelectOptionDescription","c":"discord.js!DiscordjsErrorCodes.SelectOptionDescription:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SelectOptionDescription'"}],"l":3790,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SelectOptionDescription"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SelectOptionLabel:member","d":"/**\n * @deprecated\n *\n * Select Menu validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"SelectOptionLabel","c":"discord.js!DiscordjsErrorCodes.SelectOptionLabel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SelectOptionLabel'"}],"l":3786,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SelectOptionLabel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SelectOptionValue:member","d":"/**\n * @deprecated\n *\n * Select Menu validation errors are now handled in `@discordjs/builders`\n */\n","ex":[{"k":"Reference","t":"SelectOptionValue","c":"discord.js!DiscordjsErrorCodes.SelectOptionValue:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SelectOptionValue'"}],"l":3788,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SelectOptionValue"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingAlreadySpawned:member","d":"","ex":[{"k":"Reference","t":"ShardingAlreadySpawned","c":"discord.js!DiscordjsErrorCodes.ShardingAlreadySpawned:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingAlreadySpawned'"}],"l":3760,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingAlreadySpawned"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingInProcess:member","d":"","ex":[{"k":"Reference","t":"ShardingInProcess","c":"discord.js!DiscordjsErrorCodes.ShardingInProcess:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingInProcess'"}],"l":3757,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingInProcess"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingInvalid:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"ShardingInvalid","c":"discord.js!DiscordjsErrorCodes.ShardingInvalid:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingInvalid'"}],"l":3749,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingInvalid"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingInvalidEvalBroadcast:member","d":"","ex":[{"k":"Reference","t":"ShardingInvalidEvalBroadcast","c":"discord.js!DiscordjsErrorCodes.ShardingInvalidEvalBroadcast:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingInvalidEvalBroadcast'"}],"l":3758,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingInvalidEvalBroadcast"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingNoChildExists:member","d":"","ex":[{"k":"Reference","t":"ShardingNoChildExists","c":"discord.js!DiscordjsErrorCodes.ShardingNoChildExists:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingNoChildExists'"}],"l":3766,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingNoChildExists"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingNoShards:member","d":"","ex":[{"k":"Reference","t":"ShardingNoShards","c":"discord.js!DiscordjsErrorCodes.ShardingNoShards:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingNoShards'"}],"l":3756,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingNoShards"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingProcessExists:member","d":"","ex":[{"k":"Reference","t":"ShardingProcessExists","c":"discord.js!DiscordjsErrorCodes.ShardingProcessExists:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingProcessExists'"}],"l":3761,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingProcessExists"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingReadyDied:member","d":"","ex":[{"k":"Reference","t":"ShardingReadyDied","c":"discord.js!DiscordjsErrorCodes.ShardingReadyDied:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingReadyDied'"}],"l":3765,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingReadyDied"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingReadyDisconnected:member","d":"","ex":[{"k":"Reference","t":"ShardingReadyDisconnected","c":"discord.js!DiscordjsErrorCodes.ShardingReadyDisconnected:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingReadyDisconnected'"}],"l":3764,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingReadyDisconnected"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingReadyTimeout:member","d":"","ex":[{"k":"Reference","t":"ShardingReadyTimeout","c":"discord.js!DiscordjsErrorCodes.ShardingReadyTimeout:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingReadyTimeout'"}],"l":3763,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingReadyTimeout"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingRequired:member","d":"/**\n * @deprecated\n *\n * This error is now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"ShardingRequired","c":"discord.js!DiscordjsErrorCodes.ShardingRequired:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingRequired'"}],"l":3751,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingRequired"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingShardMiscalculation:member","d":"","ex":[{"k":"Reference","t":"ShardingShardMiscalculation","c":"discord.js!DiscordjsErrorCodes.ShardingShardMiscalculation:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingShardMiscalculation'"}],"l":3767,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingShardMiscalculation"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingShardNotFound:member","d":"","ex":[{"k":"Reference","t":"ShardingShardNotFound","c":"discord.js!DiscordjsErrorCodes.ShardingShardNotFound:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingShardNotFound'"}],"l":3759,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingShardNotFound"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ShardingWorkerExists:member","d":"","ex":[{"k":"Reference","t":"ShardingWorkerExists","c":"discord.js!DiscordjsErrorCodes.ShardingWorkerExists:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ShardingWorkerExists'"}],"l":3762,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardingWorkerExists"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SplitMaxLen:member","d":"/**\n * @deprecated\n *\n * No longer in use\n */\n","ex":[{"k":"Reference","t":"SplitMaxLen","c":"discord.js!DiscordjsErrorCodes.SplitMaxLen:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SplitMaxLen'"}],"l":3817,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SplitMaxLen"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.StageChannelResolve:member","d":"","ex":[{"k":"Reference","t":"StageChannelResolve","c":"discord.js!DiscordjsErrorCodes.StageChannelResolve:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'StageChannelResolve'"}],"l":3832,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"StageChannelResolve"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.SweepFilterReturn:member","d":"","ex":[{"k":"Reference","t":"SweepFilterReturn","c":"discord.js!DiscordjsErrorCodes.SweepFilterReturn:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'SweepFilterReturn'"}],"l":3894,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"SweepFilterReturn"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.ThreadInvitableType:member","d":"","ex":[{"k":"Reference","t":"ThreadInvitableType","c":"discord.js!DiscordjsErrorCodes.ThreadInvitableType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ThreadInvitableType'"}],"l":3841,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadInvitableType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.TokenInvalid:member","d":"","ex":[{"k":"Reference","t":"TokenInvalid","c":"discord.js!DiscordjsErrorCodes.TokenInvalid:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'TokenInvalid'"}],"l":3733,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"TokenInvalid"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.TokenMissing:member","d":"","ex":[{"k":"Reference","t":"TokenMissing","c":"discord.js!DiscordjsErrorCodes.TokenMissing:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'TokenMissing'"}],"l":3734,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"TokenMissing"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.UserBannerNotFetched:member","d":"/**\n * @deprecated\n *\n * No longer in use\n */\n","ex":[{"k":"Reference","t":"UserBannerNotFetched","c":"discord.js!DiscordjsErrorCodes.UserBannerNotFetched:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'UserBannerNotFetched'"}],"l":3797,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"UserBannerNotFetched"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.UserNoDMChannel:member","d":"","ex":[{"k":"Reference","t":"UserNoDMChannel","c":"discord.js!DiscordjsErrorCodes.UserNoDMChannel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'UserNoDMChannel'"}],"l":3798,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"UserNoDMChannel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.VanityURL:member","d":"/**\n * @deprecated\n *\n * Not used anymore since the introduction of `GUILD_WEB_PAGE_VANITY_URL` feature\n */\n","ex":[{"k":"Reference","t":"VanityURL","c":"discord.js!DiscordjsErrorCodes.VanityURL:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'VanityURL'"}],"l":3860,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VanityURL"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.VoiceNotStageChannel:member","d":"","ex":[{"k":"Reference","t":"VoiceNotStageChannel","c":"discord.js!DiscordjsErrorCodes.VoiceNotStageChannel:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'VoiceNotStageChannel'"}],"l":3800,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VoiceNotStageChannel"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.VoiceStateInvalidType:member","d":"","ex":[{"k":"Reference","t":"VoiceStateInvalidType","c":"discord.js!DiscordjsErrorCodes.VoiceStateInvalidType:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'VoiceStateInvalidType'"}],"l":3803,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VoiceStateInvalidType"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.VoiceStateNotOwn:member","d":"","ex":[{"k":"Reference","t":"VoiceStateNotOwn","c":"discord.js!DiscordjsErrorCodes.VoiceStateNotOwn:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'VoiceStateNotOwn'"}],"l":3802,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VoiceStateNotOwn"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WebhookApplication:member","d":"","ex":[{"k":"Reference","t":"WebhookApplication","c":"discord.js!DiscordjsErrorCodes.WebhookApplication:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WebhookApplication'"}],"l":3846,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WebhookApplication"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WebhookMessage:member","d":"","ex":[{"k":"Reference","t":"WebhookMessage","c":"discord.js!DiscordjsErrorCodes.WebhookMessage:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WebhookMessage'"}],"l":3843,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WebhookMessage"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WebhookTokenUnavailable:member","d":"","ex":[{"k":"Reference","t":"WebhookTokenUnavailable","c":"discord.js!DiscordjsErrorCodes.WebhookTokenUnavailable:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WebhookTokenUnavailable'"}],"l":3844,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WebhookTokenUnavailable"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WebhookURLInvalid:member","d":"","ex":[{"k":"Reference","t":"WebhookURLInvalid","c":"discord.js!DiscordjsErrorCodes.WebhookURLInvalid:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WebhookURLInvalid'"}],"l":3845,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WebhookURLInvalid"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WSCloseRequested:member","d":"/**\n * @deprecated\n *\n * WebSocket errors are now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"WSCloseRequested","c":"discord.js!DiscordjsErrorCodes.WSCloseRequested:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WSCloseRequested'"}],"l":3738,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WSCloseRequested"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WSConnectionExists:member","d":"/**\n * @deprecated\n *\n * WebSocket errors are now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"WSConnectionExists","c":"discord.js!DiscordjsErrorCodes.WSConnectionExists:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WSConnectionExists'"}],"l":3740,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WSConnectionExists"},{"k":"EnumMember","c":"discord.js!DiscordjsErrorCodes.WSNotOpen:member","d":"/**\n * @deprecated\n *\n * WebSocket errors are now handled in `@discordjs/ws`\n */\n","ex":[{"k":"Reference","t":"WSNotOpen","c":"discord.js!DiscordjsErrorCodes.WSNotOpen:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'WSNotOpen'"}],"l":3742,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WSNotOpen"}]},{"k":"Class","c":"discord.js!DiscordjsRangeError:class","d":"","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DiscordjsRangeError","c":"discord.js!DiscordjsRangeError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DiscordjsErrorMixin","c":"discord.js!DiscordjsErrorMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"RangeError","c":"!RangeError:interface"},{"k":"Content","t":", 'RangeError')"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3917,"co":1,"r":"Public","ab":false,"n":"DiscordjsRangeError","pmo":false,"ms":[],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!DiscordjsTypeError:class","d":"","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DiscordjsTypeError","c":"discord.js!DiscordjsTypeError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DiscordjsErrorMixin","c":"discord.js!DiscordjsErrorMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"TypeError","c":"!TypeError:interface"},{"k":"Content","t":", 'TypeError')"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3915,"co":1,"r":"Public","ab":false,"n":"DiscordjsTypeError","pmo":false,"ms":[],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Function","c":"discord.js!discordSort:function(1)","d":"/**\n * Sorts by Discord's position and id.\n *\n * @param collection - Collection of objects to sort\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"discordSort","c":"discord.js!discordSort"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Content","t":"{ "},{"k":"Reference","t":"rawPosition","c":"discord.js!~__type#rawPosition"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"; "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":">( "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":",): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":308,"co":1,"rtr":{"st":26,"en":32},"r":"Public","oi":1,"ps":[{"pn":"collection","ptr":{"st":19,"en":25},"op":false,"rs":false}],"tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":7,"en":16},"dtr":{"st":0,"en":0}}],"n":"discordSort"},{"k":"Class","c":"discord.js!DMChannel:class","d":"/**\n * Represents a direct message channel between two users.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextBasedChannelMixin","c":"discord.js!TextBasedChannelMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":", false, [ 'bulkDelete', 'fetchWebhooks', 'createWebhook', 'setRateLimitPerUser', 'setNSFW',])"},{"k":"Content","t":" "}],"pat":"src/structures/DMChannel.js","l":15,"co":1,"r":"Public","ab":false,"n":"DMChannel","pmo":false,"ms":[{"k":"Method","c":"discord.js!DMChannel#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a message component interaction\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * channel.awaitMessageComponent({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessageComponent(options?"},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":249,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Method","c":"discord.js!DMChannel#awaitMessages:member(1)","d":"/**\n * Similar to createMessageCollector but in promise form. Resolves with a collection of messages that pass the specified filter.\n *\n * @param options - Optional options to pass to the internal collector\n *\n * @example\n * ```js\n * // Await !vote messages\n * const filter = m => m.content.startsWith('!vote');\n * // Errors: ['time'] treats ending because of the time limit as an error\n * channel.awaitMessages({ filter, max: 4, time: 60_000, errors: ['time'] })\n *   .then(collected => console.log(collected.size))\n *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessages(options?"},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":205,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessages"},{"k":"Property","c":"discord.js!DMChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!DMChannel#createMessageCollector:member(1)","d":"/**\n * Creates a Message Collector.\n *\n * @param options - The options to pass to the collector\n *\n * @example\n * ```js\n * // Create a message collector\n * const filter = message => message.content.includes('discord');\n * const collector = channel.createMessageCollector({ filter, time: 15_000 });\n * collector.on('collect', message => console.log(`Collected ${message.content}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageCollector(options?"},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":182,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageCollector"},{"k":"Method","c":"discord.js!DMChannel#createMessageComponentCollector:member(1)","d":"/**\n * Creates a component interaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a button interaction collector\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * const collector = channel.createMessageComponentCollector({ filter, time: 15_000 });\n * collector.on('collect', interaction => console.log(`Collected ${interaction.customId}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageComponentCollector(options?"},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":229,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!DMChannel#fetch:member(1)","d":"/**\n * Fetch this DMChannel.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!DMChannel#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":88,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!DMChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!DMChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#lastMessageId:member","d":"/**\n * The channel's last message id, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":51,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#lastPinAt:member","d":"/**\n * The date when the last pinned message was pinned, if there was one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastPinAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":51,"ro":true,"op":true,"r":"Public","n":"lastPinAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#lastPinTimestamp:member","d":"/**\n * The timestamp when the last pinned message was pinned, if there was one\n */\n","ex":[{"k":"Content","t":"undefined lastPinTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":59,"ro":false,"op":true,"r":"Public","n":"lastPinTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#messages:member","d":"/**\n * A manager of the messages belonging to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"DMMessageManager","c":"discord.js!DMMessageManager:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#partial:member","d":"/**\n * Whether this DMChannel is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"l":70,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#recipient:member","d":"/**\n * The recipient on the other end of the DM\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"recipient","c":"discord.js!DMChannel#recipient"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":true,"op":false,"r":"Public","n":"recipient","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#recipientId:member","d":"/**\n * The recipient's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"recipientId","c":"discord.js!DMChannel#recipientId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"recipientId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!DMChannel#send:member(1)","d":"/**\n * Sends a message to this channel.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a basic message\n * channel.send('hello!')\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a remote file\n * channel.send({\n *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a local file\n * channel.send({\n *   files: [{\n *     attachment: 'entire/path/to/file.jpg',\n *     name: 'file.jpg',\n *     description: 'A description of the file'\n *   }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":137,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!DMChannel#sendTyping:member(1)","d":"/**\n * Sends a typing indicator in the channel.\n *\n * @returns Resolves upon the typing status being sent *\n *\n * @example\n * ```js\n * // Start typing in a channel\n * channel.sendTyping();\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendTyping(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":167,"sta":false,"rtr":{"st":1,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendTyping"},{"k":"Method","c":"discord.js!DMChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the recipient's mention instead of the DMChannel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <@123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!DMChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!DMChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!DMChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types!ChannelType.DM:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!DMMessageManager:class","d":"/**\n * Manages API methods for messages in direct message channels and holds their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"DMMessageManager","c":"discord.js!DMMessageManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":" "}],"pat":"src/managers/DMMessageManager.js","l":9,"co":1,"r":"Public","ab":false,"n":"DMMessageManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!DMMessageManager#cache:member","d":"/**\n * The cache of Messages\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/MessageManager.js","l":31,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMMessageManager#channel:member","d":"/**\n * The channel that the messages belong to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!DMMessageManager#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":";"}],"l":10,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!DMMessageManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!EditApplicationCommandPermissionsMixin:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EditApplicationCommandPermissionsMixin","c":"discord.js!EditApplicationCommandPermissionsMixin:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4867,"co":1,"r":"Public","n":"EditApplicationCommandPermissionsMixin","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EditApplicationCommandPermissionsMixin#permissions:member","d":"","ex":[{"k":"Reference","t":"permissions","c":"discord.js!EditApplicationCommandPermissionsMixin#permissions"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ApplicationCommandPermissions","c":"discord.js!ApplicationCommandPermissions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":4868,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!EditApplicationCommandPermissionsMixin#token:member","d":"","ex":[{"k":"Reference","t":"token","c":"discord.js!EditApplicationCommandPermissionsMixin#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":4869,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!Embed:class","d":"/**\n * Represents an embed.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Embed","c":"discord.js!Embed:class"},{"k":"Content","t":" "}],"pat":"src/structures/Embed.js","l":9,"co":1,"r":"Public","ab":false,"n":"Embed","pmo":false,"ms":[{"k":"Property","c":"discord.js!Embed#author:member","d":"/**\n * The author of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"author","c":"discord.js!Embed#author"},{"k":"Content","t":"(): "},{"k":"Reference","t":"EmbedAuthorData","c":"discord.js!EmbedAuthorData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":139,"co":3,"ro":true,"op":false,"r":"Public","n":"author","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#color:member","d":"/**\n * The color of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"color","c":"discord.js!Embed#color"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"color","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#data:member","d":"/**\n * The API embed data.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"data","c":"discord.js!Embed#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":true,"op":false,"r":"Public","n":"data","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#description:member","d":"/**\n * The description of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"description","c":"discord.js!Embed#description"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":true,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Embed#equals:member(1)","d":"/**\n * Whether the given embeds are equal.\n *\n * @param other - The embed to compare against\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Embed#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"Embed","c":"discord.js!Embed:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":212,"co":3,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!Embed#fields:member","d":"/**\n * An array of fields of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"fields","c":"discord.js!Embed#fields"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":true,"op":false,"r":"Public","n":"fields","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#footer:member","d":"/**\n * The footer of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"footer","c":"discord.js!Embed#footer"},{"k":"Content","t":"(): "},{"k":"Reference","t":"EmbedFooterData","c":"discord.js!EmbedFooterData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":170,"co":3,"ro":true,"op":false,"r":"Public","n":"footer","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#hexColor:member","d":"/**\n * The hex color of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"hexColor","c":"discord.js!Embed#hexColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":193,"co":3,"ro":true,"op":false,"r":"Public","n":"hexColor","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#image:member","d":"/**\n * The image of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"image","c":"discord.js!Embed#image"},{"k":"Content","t":"(): "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":101,"co":3,"ro":true,"op":false,"r":"Public","n":"image","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#length:member","d":"/**\n * The accumulated length for the embed title, description, fields, footer text, and author name.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"length","c":"discord.js!Embed#length"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":184,"co":3,"ro":true,"op":false,"r":"Public","n":"length","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#provider:member","d":"/**\n * The provider of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"provider","c":"discord.js!Embed#provider"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIEmbedProvider","c":"discord-api-types!APIEmbedProvider:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":154,"co":3,"ro":true,"op":false,"r":"Public","n":"provider","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#thumbnail:member","d":"/**\n * The thumbnail of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"thumbnail","c":"discord.js!Embed#thumbnail"},{"k":"Content","t":"(): "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":true,"op":false,"r":"Public","n":"thumbnail","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#timestamp:member","d":"/**\n * The timestamp of this embed. This is in an ISO 8601 format.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"timestamp","c":"discord.js!Embed#timestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":true,"op":false,"r":"Public","n":"timestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#title:member","d":"/**\n * The title of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"title","c":"discord.js!Embed#title"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":true,"op":false,"r":"Public","n":"title","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Embed#toJSON:member(1)","d":"/**\n * Returns the API-compatible JSON for this embed.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Embed#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":";"}],"l":203,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!Embed#url:member","d":"/**\n * The URL of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!Embed#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Embed#video:member","d":"/**\n * The video of this embed.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"video","c":"discord.js!Embed#video"},{"k":"Content","t":"(): "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":true,"op":false,"r":"Public","n":"video","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!EmbedAssetData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedImage","c":"discord-api-types!APIEmbedImage:interface"},{"k":"Content","t":", 'proxy_url'>"},{"k":"Content","t":" "}],"pat":"src/structures/Embed.js","l":73,"co":1,"r":"Public","n":"EmbedAssetData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EmbedAssetData#height:member","d":"/**\n * The height of the image\n */\n","ex":[{"k":"Content","t":"undefined height :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"height","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedAssetData#proxyURL:member","d":"/**\n * The proxy URL of the image\n */\n","ex":[{"k":"Reference","t":"proxyURL","c":"discord.js!EmbedAssetData#proxyURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":875,"co":3,"ro":false,"op":true,"r":"Public","n":"proxyURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedAssetData#url:member","d":"/**\n * The URL of the image\n */\n","ex":[{"k":"Content","t":"undefined url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"url","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedAssetData#width:member","d":"/**\n * The width of the image\n */\n","ex":[{"k":"Content","t":"undefined width :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"width","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!EmbedAuthorData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedAuthorData","c":"discord.js!EmbedAuthorData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedAuthor","c":"discord-api-types!APIEmbedAuthor:interface"},{"k":"Content","t":", 'icon_url' | 'proxy_icon_url'>"},{"k":"Content","t":", "},{"k":"Reference","t":"IconData","c":"discord.js!IconData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Embed.js","l":126,"co":1,"r":"Public","n":"EmbedAuthorData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EmbedAuthorData#iconURL:member","d":"/**\n * The icon URL of the author\n */\n","ex":[{"k":"Content","t":"undefined iconURL :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"iconURL","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedAuthorData#name:member","d":"/**\n * The name of the author\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedAuthorData#proxyIconURL:member","d":"/**\n * The proxy icon URL of the author\n */\n","ex":[{"k":"Content","t":"undefined proxyIconURL :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"proxyIconURL","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedAuthorData#url:member","d":"/**\n * The URL of the author\n */\n","ex":[{"k":"Content","t":"undefined url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"url","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]},{"st":8,"en":9,"tps":[]}]},{"k":"Class","c":"discord.js!EmbedBuilder:class","d":"/**\n * Represents an embed builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"EmbedBuilder","c":"discord.js!EmbedBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuildersEmbed","c":"@discordjs/builders!EmbedBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/EmbedBuilder.js","l":12,"co":1,"r":"Public","ab":false,"n":"EmbedBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!EmbedBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `EmbedBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedData","c":"discord.js!EmbedData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":");"}],"l":12,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":6},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!EmbedBuilder.from:member(1)","d":"/**\n * Creates a new embed builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!EmbedBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIEmbed","c":"discord-api-types!APIEmbed:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"EmbedBuilder","c":"discord.js!EmbedBuilder:class"},{"k":"Content","t":";"}],"l":31,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Property","c":"discord.js!EmbedBuilder#length:member","d":"/**\n * The accumulated length for the embed title, description, fields, footer text, and author name.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"length","c":"discord.js!EmbedBuilder#length"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":true,"op":false,"r":"Public","n":"length","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!EmbedBuilder#setColor:member(1)","d":"/**\n * Sets the color of this embed\n *\n * @param color - The color of the embed\n */\n","ex":[{"k":"Content","t":"public override "},{"k":"Reference","t":"setColor","c":"discord.js!EmbedBuilder#setColor"},{"k":"Content","t":"("},{"k":"Reference","t":"color","c":"discord.js!~color"},{"k":"Content","t":": "},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":22,"co":3,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"color","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"setColor"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!EmbedData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedData","c":"discord.js!EmbedData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":849,"co":1,"r":"Public","n":"EmbedData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EmbedData#author:member","d":"","ex":[{"k":"Reference","t":"author","c":"discord.js!EmbedData#author"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedAuthorData","c":"discord.js!EmbedAuthorData:interface"},{"k":"Content","t":";"}],"l":860,"co":3,"ro":false,"op":true,"r":"Public","n":"author","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#color:member","d":"","ex":[{"k":"Reference","t":"color","c":"discord.js!EmbedData#color"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":855,"co":3,"ro":false,"op":true,"r":"Public","n":"color","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#description:member","d":"","ex":[{"k":"Reference","t":"description","c":"discord.js!EmbedData#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":852,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#fields:member","d":"","ex":[{"k":"Reference","t":"fields","c":"discord.js!EmbedData#fields"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIEmbedField","c":"discord-api-types!APIEmbedField:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":861,"co":3,"ro":false,"op":true,"r":"Public","n":"fields","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!EmbedData#footer:member","d":"","ex":[{"k":"Reference","t":"footer","c":"discord.js!EmbedData#footer"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedFooterData","c":"discord.js!EmbedFooterData:interface"},{"k":"Content","t":";"}],"l":856,"co":3,"ro":false,"op":true,"r":"Public","n":"footer","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#image:member","d":"","ex":[{"k":"Reference","t":"image","c":"discord.js!EmbedData#image"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":";"}],"l":857,"co":3,"ro":false,"op":true,"r":"Public","n":"image","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#provider:member","d":"","ex":[{"k":"Reference","t":"provider","c":"discord.js!EmbedData#provider"},{"k":"Content","t":"?: "},{"k":"Reference","t":"APIEmbedProvider","c":"discord-api-types!APIEmbedProvider:interface"},{"k":"Content","t":";"}],"l":859,"co":3,"ro":false,"op":true,"r":"Public","n":"provider","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#thumbnail:member","d":"","ex":[{"k":"Reference","t":"thumbnail","c":"discord.js!EmbedData#thumbnail"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":";"}],"l":858,"co":3,"ro":false,"op":true,"r":"Public","n":"thumbnail","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#timestamp:member","d":"","ex":[{"k":"Reference","t":"timestamp","c":"discord.js!EmbedData#timestamp"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":854,"co":3,"ro":false,"op":true,"r":"Public","n":"timestamp","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!EmbedData#title:member","d":"","ex":[{"k":"Reference","t":"title","c":"discord.js!EmbedData#title"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":850,"co":3,"ro":false,"op":true,"r":"Public","n":"title","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!EmbedData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedType","c":"discord-api-types!EmbedType:enum"},{"k":"Content","t":";"}],"l":851,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#url:member","d":"","ex":[{"k":"Reference","t":"url","c":"discord.js!EmbedData#url"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":853,"co":3,"ro":false,"op":true,"r":"Public","n":"url","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedData#video:member","d":"","ex":[{"k":"Reference","t":"video","c":"discord.js!EmbedData#video"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmbedAssetData","c":"discord.js!EmbedAssetData:interface"},{"k":"Content","t":";"}],"l":862,"co":3,"ro":false,"op":true,"r":"Public","n":"video","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!EmbedField:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedField","c":"discord.js!EmbedField:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5445,"co":1,"r":"Public","n":"EmbedField","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EmbedField#inline:member","d":"","ex":[{"k":"Reference","t":"inline","c":"discord.js!EmbedField#inline"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":5448,"co":3,"ro":false,"op":false,"r":"Public","n":"inline","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedField#name:member","d":"","ex":[{"k":"Reference","t":"name","c":"discord.js!EmbedField#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":5446,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!EmbedField#value:member","d":"","ex":[{"k":"Reference","t":"value","c":"discord.js!EmbedField#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":5447,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!EmbedFooterData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"EmbedFooterData","c":"discord.js!EmbedFooterData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIEmbedFooter","c":"discord-api-types!APIEmbedFooter:interface"},{"k":"Content","t":", 'icon_url' | 'proxy_icon_url'>"},{"k":"Content","t":", "},{"k":"Reference","t":"IconData","c":"discord.js!IconData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Embed.js","l":158,"co":1,"r":"Public","n":"EmbedFooterData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!EmbedFooterData#iconURL:member","d":"/**\n * The URL of the icon\n */\n","ex":[{"k":"Content","t":"undefined iconURL :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"iconURL","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedFooterData#proxyIconURL:member","d":"/**\n * The proxy URL of the icon\n */\n","ex":[{"k":"Content","t":"undefined proxyIconURL :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"proxyIconURL","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!EmbedFooterData#text:member","d":"/**\n * The text of the footer\n */\n","ex":[{"k":"Content","t":"undefined text :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"text","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]},{"st":8,"en":9,"tps":[]}]},{"k":"Class","c":"discord.js!Emoji:class","d":"/**\n * Represents an emoji, see {@link GuildEmoji} and {@link ReactionEmoji}.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Emoji.js","l":14,"co":1,"r":"Public","ab":false,"n":"Emoji","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Emoji:constructor(1)","d":"/**\n * Constructs a new instance of the `Emoji` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"RawEmojiData","c":"discord.js!~RawEmojiData:type"},{"k":"Content","t":");"}],"l":14,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"emoji","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!Emoji#animated:member","d":"/**\n * Whether or not the emoji is animated\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"animated","c":"discord.js!Emoji#animated"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"animated","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Emoji#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Emoji#createdAt:member","d":"/**\n * The time the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Emoji#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Emoji#createdTimestamp:member","d":"/**\n * The timestamp the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Emoji#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Emoji#id:member","d":"/**\n * The emoji's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Emoji#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Emoji#identifier:member","d":"/**\n * The identifier of this emoji, used for message reactions\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"identifier","c":"discord.js!Emoji#identifier"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":true,"op":false,"r":"Public","n":"identifier","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Emoji#imageURL:member(1)","d":"/**\n * Returns a URL for the emoji or `null` if this is not a custom emoji.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"imageURL","c":"discord.js!Emoji#imageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"imageURL"},{"k":"Property","c":"discord.js!Emoji#name:member","d":"/**\n * The emoji's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Emoji#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Emoji#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Emoji#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1318,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Emoji#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the text required to form a graphical emoji on Discord instead of the Emoji object.\n *\n * @example\n * ```js\n * // Send a custom emoji from a guild:\n * const emoji = guild.emojis.cache.first();\n * msg.channel.send(`Hello! ${emoji}`);\n * ```\n *\n * @example\n * ```js\n * // Send the emoji used in a reaction to the channel the reaction is part of\n * reaction.message.channel.send(`The emoji used was: ${reaction.emoji}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Emoji#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!Emoji#url:member","d":"/**\n * Returns a URL for the emoji or `null` if this is not a custom emoji.\n *\n * @deprecated\n *\n * Use {@link Emoji.imageURL} instead.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!Emoji#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":61,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!EmojiIdentifierResolvable:type","d":"/**\n * Data that can be resolved to give an emoji identifier. This can be:\n *\n * * An EmojiResolvable\n *\n * * The `<a:name:id>`, `<:name:id>`, `a:name:id` or `name:id` emoji identifier string of an emoji\n *\n * * The Unicode representation of an emoji\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":" | `${'' | 'a:'}${"},{"k":"Reference","t":"string"},{"k":"Content","t":"}:${"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"}` | `<${'' | 'a'}:${"},{"k":"Reference","t":"string"},{"k":"Content","t":"}:${"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"}>` | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/managers/BaseGuildEmojiManager.js","l":51,"co":1,"r":"Public","n":"EmojiIdentifierResolvable","ttr":{"st":3,"en":15}},{"k":"TypeAlias","c":"discord.js!EmojiResolvable:type","d":"/**\n * Data that can be resolved into a GuildEmoji object. This can be:\n *\n * * A Snowflake\n *\n * * A GuildEmoji object\n *\n * * A ReactionEmoji object\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ReactionEmoji","c":"discord.js!ReactionEmoji:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseGuildEmojiManager.js","l":23,"co":1,"r":"Public","n":"EmojiResolvable","ttr":{"st":3,"en":8}},{"k":"Class","c":"discord.js!Entitlement:class","d":"/**\n * Represents an Entitlement\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Entitlement.js","l":9,"co":1,"r":"Public","ab":false,"n":"Entitlement","pmo":false,"ms":[{"k":"Property","c":"discord.js!Entitlement#applicationId:member","d":"/**\n * The id of the parent application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!Entitlement#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#deleted:member","d":"/**\n * Whether this entitlement was deleted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleted","c":"discord.js!Entitlement#deleted"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"deleted","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#endsAt:member","d":"/**\n * The end date at which this entitlement is no longer valid <info>This is only `null` for test entitlements</info>\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"endsAt","c":"discord.js!Entitlement#endsAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":119,"co":3,"ro":true,"op":false,"r":"Public","n":"endsAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#endsTimestamp:member","d":"/**\n * The timestamp at which this entitlement is no longer valid <info>This is only `null` for test entitlements</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"endsTimestamp","c":"discord.js!Entitlement#endsTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":90,"co":3,"ro":false,"op":false,"r":"Public","n":"endsTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Entitlement#fetchUser:member(1)","d":"/**\n * Fetches the user that is granted access to this entitlement's SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchUser","c":"discord.js!Entitlement#fetchUser"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":159,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchUser"},{"k":"Property","c":"discord.js!Entitlement#guild:member","d":"/**\n * The guild that is granted access to this entitlement's SKU\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!Entitlement#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#guildId:member","d":"/**\n * The id of the guild that is granted access to this entitlement's SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!Entitlement#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#id:member","d":"/**\n * The id of the entitlement\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Entitlement#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Entitlement#isActive:member(1)","d":"/**\n * Indicates whether this entitlement is active\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isActive","c":"discord.js!Entitlement#isActive"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":127,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isActive"},{"k":"Method","c":"discord.js!Entitlement#isGuildSubscription:member(1)","d":"/**\n * Indicates whether this entitlement is a guild subscription\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isGuildSubscription","c":"discord.js!Entitlement#isGuildSubscription"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & { "},{"k":"Reference","t":"guildId","c":"discord.js!~__type#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":151,"co":3,"sta":false,"rtr":{"st":3,"en":12},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isGuildSubscription"},{"k":"Method","c":"discord.js!Entitlement#isTest:member(1)","d":"/**\n * Indicates whether this entitlement is a test entitlement\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isTest","c":"discord.js!Entitlement#isTest"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"startsTimestamp","c":"discord.js!~__type#startsTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"endsTimestamp","c":"discord.js!~__type#endsTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  get "},{"k":"Reference","t":"startsAt","c":"discord.js!~__type#startsAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"null"},{"k":"Content","t":";  get "},{"k":"Reference","t":"endsAt","c":"discord.js!~__type#endsAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"null"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":135,"co":3,"sta":false,"rtr":{"st":3,"en":20},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isTest"},{"k":"Method","c":"discord.js!Entitlement#isUserSubscription:member(1)","d":"/**\n * Indicates whether this entitlement is a user subscription\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isUserSubscription","c":"discord.js!Entitlement#isUserSubscription"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & { "},{"k":"Reference","t":"guildId","c":"discord.js!~__type#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":"; get "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"null"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":143,"co":3,"sta":false,"rtr":{"st":3,"en":12},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isUserSubscription"},{"k":"Property","c":"discord.js!Entitlement#skuId:member","d":"/**\n * The id of the associated SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"skuId","c":"discord.js!Entitlement#skuId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"skuId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#startsAt:member","d":"/**\n * The start date at which this entitlement is valid <info>This is only `null` for test entitlements</info>\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"startsAt","c":"discord.js!Entitlement#startsAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":110,"co":3,"ro":true,"op":false,"r":"Public","n":"startsAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#startsTimestamp:member","d":"/**\n * The timestamp at which this entitlement is valid <info>This is only `null` for test entitlements</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"startsTimestamp","c":"discord.js!Entitlement#startsTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":false,"op":false,"r":"Public","n":"startsTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#type:member","d":"/**\n * The type of this entitlement\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Entitlement#type"},{"k":"Content","t":": "},{"k":"Reference","t":"EntitlementType","c":"discord-api-types!EntitlementType:enum"},{"k":"Content","t":";"}],"l":62,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Entitlement#userId:member","d":"/**\n * The id of the user that is granted access to this entitlement's SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"userId","c":"discord.js!Entitlement#userId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":false,"r":"Public","n":"userId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!EntitlementManager:class","d":"/**\n * Manages API methods for entitlements and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"EntitlementManager","c":"discord.js!EntitlementManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":", "},{"k":"Reference","t":"EntitlementResolvable","c":"discord.js!EntitlementResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/EntitlementManager.js","l":15,"co":1,"r":"Public","ab":false,"n":"EntitlementManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!EntitlementManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":20,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!EntitlementManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!EntitlementManager#createTest:member(1)","d":"/**\n * Creates a test entitlement\n *\n * @param options - Options for creating the test entitlement\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createTest","c":"discord.js!EntitlementManager#createTest"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEntitlementCreateOptions","c":"discord.js!GuildEntitlementCreateOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserEntitlementCreateOptions","c":"discord.js!UserEntitlementCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":91,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"createTest"},{"k":"Method","c":"discord.js!EntitlementManager#deleteTest:member(1)","d":"/**\n * Deletes a test entitlement\n *\n * @param entitlement - The entitlement to delete\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteTest","c":"discord.js!EntitlementManager#deleteTest"},{"k":"Content","t":"("},{"k":"Reference","t":"entitlement","c":"discord.js!~entitlement"},{"k":"Content","t":": "},{"k":"Reference","t":"EntitlementResolvable","c":"discord.js!EntitlementResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":121,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"entitlement","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"deleteTest"},{"k":"Method","c":"discord.js!EntitlementManager#fetch:member(1)","d":"/**\n * Fetches entitlements for this application\n *\n * @param options - Options for fetching the entitlements\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!EntitlementManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchEntitlementsOptions","c":"discord.js!FetchEntitlementsOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":59,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!EntitlementResolvable:type","d":"/**\n * Data that resolves to give an Entitlement object. This can be:\n *\n * * An Entitlement object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"EntitlementResolvable","c":"discord.js!EntitlementResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":";"}],"pat":"src/managers/EntitlementManager.js","l":26,"co":1,"r":"Public","n":"EntitlementResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!EnumLike:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"EnumLike","c":"discord.js!EnumLike:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"Enum"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":691,"co":1,"r":"Public","n":"EnumLike","tps":[{"tp":"Enum","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":13}},{"k":"Interface","c":"discord.js!ErrorEvent:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ErrorEvent","c":"discord.js!ErrorEvent:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5459,"co":1,"r":"Public","n":"ErrorEvent","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ErrorEvent#error:member","d":"","ex":[{"k":"Reference","t":"error","c":"discord.js!ErrorEvent#error"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"l":5460,"co":3,"ro":false,"op":false,"r":"Public","n":"error","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ErrorEvent#message:member","d":"","ex":[{"k":"Reference","t":"message","c":"discord.js!ErrorEvent#message"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":5461,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ErrorEvent#target:member","d":"","ex":[{"k":"Reference","t":"target","c":"discord.js!ErrorEvent#target"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocket","c":"@types/ws!WebSocket.WebSocket:interface"},{"k":"Content","t":";"}],"l":5463,"co":3,"ro":false,"op":false,"r":"Public","n":"target","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ErrorEvent#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!ErrorEvent#type"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":5462,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Enum","c":"discord.js!Events:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"Events","c":"discord.js!Events:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5299,"co":1,"r":"Public","n":"Events","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!Events.ApplicationCommandPermissionsUpdate:member","d":"","ex":[{"k":"Reference","t":"ApplicationCommandPermissionsUpdate","c":"discord.js!Events.ApplicationCommandPermissionsUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'applicationCommandPermissionsUpdate'"}],"l":5300,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ApplicationCommandPermissionsUpdate"},{"k":"EnumMember","c":"discord.js!Events.AutoModerationActionExecution:member","d":"","ex":[{"k":"Reference","t":"AutoModerationActionExecution","c":"discord.js!Events.AutoModerationActionExecution:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'autoModerationActionExecution'"}],"l":5301,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AutoModerationActionExecution"},{"k":"EnumMember","c":"discord.js!Events.AutoModerationRuleCreate:member","d":"","ex":[{"k":"Reference","t":"AutoModerationRuleCreate","c":"discord.js!Events.AutoModerationRuleCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'autoModerationRuleCreate'"}],"l":5302,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AutoModerationRuleCreate"},{"k":"EnumMember","c":"discord.js!Events.AutoModerationRuleDelete:member","d":"","ex":[{"k":"Reference","t":"AutoModerationRuleDelete","c":"discord.js!Events.AutoModerationRuleDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'autoModerationRuleDelete'"}],"l":5303,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AutoModerationRuleDelete"},{"k":"EnumMember","c":"discord.js!Events.AutoModerationRuleUpdate:member","d":"","ex":[{"k":"Reference","t":"AutoModerationRuleUpdate","c":"discord.js!Events.AutoModerationRuleUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'autoModerationRuleUpdate'"}],"l":5304,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AutoModerationRuleUpdate"},{"k":"EnumMember","c":"discord.js!Events.CacheSweep:member","d":"","ex":[{"k":"Reference","t":"CacheSweep","c":"discord.js!Events.CacheSweep:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'cacheSweep'"}],"l":5359,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"CacheSweep"},{"k":"EnumMember","c":"discord.js!Events.ChannelCreate:member","d":"","ex":[{"k":"Reference","t":"ChannelCreate","c":"discord.js!Events.ChannelCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'channelCreate'"}],"l":5331,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ChannelCreate"},{"k":"EnumMember","c":"discord.js!Events.ChannelDelete:member","d":"","ex":[{"k":"Reference","t":"ChannelDelete","c":"discord.js!Events.ChannelDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'channelDelete'"}],"l":5332,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ChannelDelete"},{"k":"EnumMember","c":"discord.js!Events.ChannelPinsUpdate:member","d":"","ex":[{"k":"Reference","t":"ChannelPinsUpdate","c":"discord.js!Events.ChannelPinsUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'channelPinsUpdate'"}],"l":5334,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ChannelPinsUpdate"},{"k":"EnumMember","c":"discord.js!Events.ChannelUpdate:member","d":"","ex":[{"k":"Reference","t":"ChannelUpdate","c":"discord.js!Events.ChannelUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'channelUpdate'"}],"l":5333,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ChannelUpdate"},{"k":"EnumMember","c":"discord.js!Events.ClientReady:member","d":"","ex":[{"k":"Reference","t":"ClientReady","c":"discord.js!Events.ClientReady:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ready'"}],"l":5305,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ClientReady"},{"k":"EnumMember","c":"discord.js!Events.Debug:member","d":"","ex":[{"k":"Reference","t":"Debug","c":"discord.js!Events.Debug:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'debug'"}],"l":5358,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Debug"},{"k":"EnumMember","c":"discord.js!Events.EntitlementCreate:member","d":"","ex":[{"k":"Reference","t":"EntitlementCreate","c":"discord.js!Events.EntitlementCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'entitlementCreate'"}],"l":5306,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EntitlementCreate"},{"k":"EnumMember","c":"discord.js!Events.EntitlementDelete:member","d":"","ex":[{"k":"Reference","t":"EntitlementDelete","c":"discord.js!Events.EntitlementDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'entitlementDelete'"}],"l":5307,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EntitlementDelete"},{"k":"EnumMember","c":"discord.js!Events.EntitlementUpdate:member","d":"","ex":[{"k":"Reference","t":"EntitlementUpdate","c":"discord.js!Events.EntitlementUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'entitlementUpdate'"}],"l":5308,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"EntitlementUpdate"},{"k":"EnumMember","c":"discord.js!Events.Error:member","d":"","ex":[{"k":"Reference","t":"Error","c":"discord.js!Events.Error:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'error'"}],"l":5356,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Error"},{"k":"EnumMember","c":"discord.js!Events.GuildAuditLogEntryCreate:member","d":"","ex":[{"k":"Reference","t":"GuildAuditLogEntryCreate","c":"discord.js!Events.GuildAuditLogEntryCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildAuditLogEntryCreate'"}],"l":5309,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildAuditLogEntryCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildAvailable:member","d":"","ex":[{"k":"Reference","t":"GuildAvailable","c":"discord.js!Events.GuildAvailable:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildAvailable'"}],"l":5310,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildAvailable"},{"k":"EnumMember","c":"discord.js!Events.GuildBanAdd:member","d":"","ex":[{"k":"Reference","t":"GuildBanAdd","c":"discord.js!Events.GuildBanAdd:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildBanAdd'"}],"l":5329,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildBanAdd"},{"k":"EnumMember","c":"discord.js!Events.GuildBanRemove:member","d":"","ex":[{"k":"Reference","t":"GuildBanRemove","c":"discord.js!Events.GuildBanRemove:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildBanRemove'"}],"l":5330,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildBanRemove"},{"k":"EnumMember","c":"discord.js!Events.GuildCreate:member","d":"","ex":[{"k":"Reference","t":"GuildCreate","c":"discord.js!Events.GuildCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildCreate'"}],"l":5311,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildDelete:member","d":"","ex":[{"k":"Reference","t":"GuildDelete","c":"discord.js!Events.GuildDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildDelete'"}],"l":5312,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildDelete"},{"k":"EnumMember","c":"discord.js!Events.GuildEmojiCreate:member","d":"","ex":[{"k":"Reference","t":"GuildEmojiCreate","c":"discord.js!Events.GuildEmojiCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'emojiCreate'"}],"l":5326,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildEmojiCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildEmojiDelete:member","d":"","ex":[{"k":"Reference","t":"GuildEmojiDelete","c":"discord.js!Events.GuildEmojiDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'emojiDelete'"}],"l":5327,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildEmojiDelete"},{"k":"EnumMember","c":"discord.js!Events.GuildEmojiUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildEmojiUpdate","c":"discord.js!Events.GuildEmojiUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'emojiUpdate'"}],"l":5328,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildEmojiUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildIntegrationsUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildIntegrationsUpdate","c":"discord.js!Events.GuildIntegrationsUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildIntegrationsUpdate'"}],"l":5320,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildIntegrationsUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildMemberAdd:member","d":"","ex":[{"k":"Reference","t":"GuildMemberAdd","c":"discord.js!Events.GuildMemberAdd:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildMemberAdd'"}],"l":5315,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMemberAdd"},{"k":"EnumMember","c":"discord.js!Events.GuildMemberAvailable:member","d":"","ex":[{"k":"Reference","t":"GuildMemberAvailable","c":"discord.js!Events.GuildMemberAvailable:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildMemberAvailable'"}],"l":5318,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMemberAvailable"},{"k":"EnumMember","c":"discord.js!Events.GuildMemberRemove:member","d":"","ex":[{"k":"Reference","t":"GuildMemberRemove","c":"discord.js!Events.GuildMemberRemove:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildMemberRemove'"}],"l":5316,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMemberRemove"},{"k":"EnumMember","c":"discord.js!Events.GuildMembersChunk:member","d":"","ex":[{"k":"Reference","t":"GuildMembersChunk","c":"discord.js!Events.GuildMembersChunk:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildMembersChunk'"}],"l":5319,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMembersChunk"},{"k":"EnumMember","c":"discord.js!Events.GuildMemberUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildMemberUpdate","c":"discord.js!Events.GuildMemberUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildMemberUpdate'"}],"l":5317,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildMemberUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildRoleCreate:member","d":"","ex":[{"k":"Reference","t":"GuildRoleCreate","c":"discord.js!Events.GuildRoleCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'roleCreate'"}],"l":5321,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildRoleCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildRoleDelete:member","d":"","ex":[{"k":"Reference","t":"GuildRoleDelete","c":"discord.js!Events.GuildRoleDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'roleDelete'"}],"l":5322,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildRoleDelete"},{"k":"EnumMember","c":"discord.js!Events.GuildRoleUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildRoleUpdate","c":"discord.js!Events.GuildRoleUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'roleUpdate'"}],"l":5325,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildRoleUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildScheduledEventCreate:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventCreate","c":"discord.js!Events.GuildScheduledEventCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildScheduledEventCreate'"}],"l":5373,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildScheduledEventDelete:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventDelete","c":"discord.js!Events.GuildScheduledEventDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildScheduledEventDelete'"}],"l":5375,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventDelete"},{"k":"EnumMember","c":"discord.js!Events.GuildScheduledEventUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventUpdate","c":"discord.js!Events.GuildScheduledEventUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildScheduledEventUpdate'"}],"l":5374,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildScheduledEventUserAdd:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventUserAdd","c":"discord.js!Events.GuildScheduledEventUserAdd:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildScheduledEventUserAdd'"}],"l":5376,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventUserAdd"},{"k":"EnumMember","c":"discord.js!Events.GuildScheduledEventUserRemove:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEventUserRemove","c":"discord.js!Events.GuildScheduledEventUserRemove:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildScheduledEventUserRemove'"}],"l":5377,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildScheduledEventUserRemove"},{"k":"EnumMember","c":"discord.js!Events.GuildStickerCreate:member","d":"","ex":[{"k":"Reference","t":"GuildStickerCreate","c":"discord.js!Events.GuildStickerCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stickerCreate'"}],"l":5370,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildStickerCreate"},{"k":"EnumMember","c":"discord.js!Events.GuildStickerDelete:member","d":"","ex":[{"k":"Reference","t":"GuildStickerDelete","c":"discord.js!Events.GuildStickerDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stickerDelete'"}],"l":5371,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildStickerDelete"},{"k":"EnumMember","c":"discord.js!Events.GuildStickerUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildStickerUpdate","c":"discord.js!Events.GuildStickerUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stickerUpdate'"}],"l":5372,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildStickerUpdate"},{"k":"EnumMember","c":"discord.js!Events.GuildUnavailable:member","d":"","ex":[{"k":"Reference","t":"GuildUnavailable","c":"discord.js!Events.GuildUnavailable:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildUnavailable'"}],"l":5314,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildUnavailable"},{"k":"EnumMember","c":"discord.js!Events.GuildUpdate:member","d":"","ex":[{"k":"Reference","t":"GuildUpdate","c":"discord.js!Events.GuildUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'guildUpdate'"}],"l":5313,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"GuildUpdate"},{"k":"EnumMember","c":"discord.js!Events.InteractionCreate:member","d":"","ex":[{"k":"Reference","t":"InteractionCreate","c":"discord.js!Events.InteractionCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'interactionCreate'"}],"l":5355,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InteractionCreate"},{"k":"EnumMember","c":"discord.js!Events.Invalidated:member","d":"","ex":[{"k":"Reference","t":"Invalidated","c":"discord.js!Events.Invalidated:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'invalidated'"}],"l":5365,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Invalidated"},{"k":"EnumMember","c":"discord.js!Events.InviteCreate:member","d":"","ex":[{"k":"Reference","t":"InviteCreate","c":"discord.js!Events.InviteCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'inviteCreate'"}],"l":5323,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InviteCreate"},{"k":"EnumMember","c":"discord.js!Events.InviteDelete:member","d":"","ex":[{"k":"Reference","t":"InviteDelete","c":"discord.js!Events.InviteDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'inviteDelete'"}],"l":5324,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InviteDelete"},{"k":"EnumMember","c":"discord.js!Events.MessageBulkDelete:member","d":"","ex":[{"k":"Reference","t":"MessageBulkDelete","c":"discord.js!Events.MessageBulkDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageDeleteBulk'"}],"l":5338,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageBulkDelete"},{"k":"EnumMember","c":"discord.js!Events.MessageCreate:member","d":"","ex":[{"k":"Reference","t":"MessageCreate","c":"discord.js!Events.MessageCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageCreate'"}],"l":5335,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageCreate"},{"k":"EnumMember","c":"discord.js!Events.MessageDelete:member","d":"","ex":[{"k":"Reference","t":"MessageDelete","c":"discord.js!Events.MessageDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageDelete'"}],"l":5336,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageDelete"},{"k":"EnumMember","c":"discord.js!Events.MessageReactionAdd:member","d":"","ex":[{"k":"Reference","t":"MessageReactionAdd","c":"discord.js!Events.MessageReactionAdd:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageReactionAdd'"}],"l":5339,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageReactionAdd"},{"k":"EnumMember","c":"discord.js!Events.MessageReactionRemove:member","d":"","ex":[{"k":"Reference","t":"MessageReactionRemove","c":"discord.js!Events.MessageReactionRemove:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageReactionRemove'"}],"l":5340,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageReactionRemove"},{"k":"EnumMember","c":"discord.js!Events.MessageReactionRemoveAll:member","d":"","ex":[{"k":"Reference","t":"MessageReactionRemoveAll","c":"discord.js!Events.MessageReactionRemoveAll:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageReactionRemoveAll'"}],"l":5341,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageReactionRemoveAll"},{"k":"EnumMember","c":"discord.js!Events.MessageReactionRemoveEmoji:member","d":"","ex":[{"k":"Reference","t":"MessageReactionRemoveEmoji","c":"discord.js!Events.MessageReactionRemoveEmoji:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageReactionRemoveEmoji'"}],"l":5342,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageReactionRemoveEmoji"},{"k":"EnumMember","c":"discord.js!Events.MessageUpdate:member","d":"","ex":[{"k":"Reference","t":"MessageUpdate","c":"discord.js!Events.MessageUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'messageUpdate'"}],"l":5337,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"MessageUpdate"},{"k":"EnumMember","c":"discord.js!Events.PresenceUpdate:member","d":"","ex":[{"k":"Reference","t":"PresenceUpdate","c":"discord.js!Events.PresenceUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'presenceUpdate'"}],"l":5350,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"PresenceUpdate"},{"k":"EnumMember","c":"discord.js!Events.Raw:member","d":"","ex":[{"k":"Reference","t":"Raw","c":"discord.js!Events.Raw:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'raw'"}],"l":5366,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Raw"},{"k":"EnumMember","c":"discord.js!Events.ShardDisconnect:member","d":"","ex":[{"k":"Reference","t":"ShardDisconnect","c":"discord.js!Events.ShardDisconnect:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'shardDisconnect'"}],"l":5360,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardDisconnect"},{"k":"EnumMember","c":"discord.js!Events.ShardError:member","d":"","ex":[{"k":"Reference","t":"ShardError","c":"discord.js!Events.ShardError:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'shardError'"}],"l":5361,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardError"},{"k":"EnumMember","c":"discord.js!Events.ShardReady:member","d":"","ex":[{"k":"Reference","t":"ShardReady","c":"discord.js!Events.ShardReady:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'shardReady'"}],"l":5363,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardReady"},{"k":"EnumMember","c":"discord.js!Events.ShardReconnecting:member","d":"","ex":[{"k":"Reference","t":"ShardReconnecting","c":"discord.js!Events.ShardReconnecting:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'shardReconnecting'"}],"l":5362,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardReconnecting"},{"k":"EnumMember","c":"discord.js!Events.ShardResume:member","d":"","ex":[{"k":"Reference","t":"ShardResume","c":"discord.js!Events.ShardResume:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'shardResume'"}],"l":5364,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ShardResume"},{"k":"EnumMember","c":"discord.js!Events.StageInstanceCreate:member","d":"","ex":[{"k":"Reference","t":"StageInstanceCreate","c":"discord.js!Events.StageInstanceCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stageInstanceCreate'"}],"l":5367,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"StageInstanceCreate"},{"k":"EnumMember","c":"discord.js!Events.StageInstanceDelete:member","d":"","ex":[{"k":"Reference","t":"StageInstanceDelete","c":"discord.js!Events.StageInstanceDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stageInstanceDelete'"}],"l":5369,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"StageInstanceDelete"},{"k":"EnumMember","c":"discord.js!Events.StageInstanceUpdate:member","d":"","ex":[{"k":"Reference","t":"StageInstanceUpdate","c":"discord.js!Events.StageInstanceUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'stageInstanceUpdate'"}],"l":5368,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"StageInstanceUpdate"},{"k":"EnumMember","c":"discord.js!Events.ThreadCreate:member","d":"","ex":[{"k":"Reference","t":"ThreadCreate","c":"discord.js!Events.ThreadCreate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadCreate'"}],"l":5343,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadCreate"},{"k":"EnumMember","c":"discord.js!Events.ThreadDelete:member","d":"","ex":[{"k":"Reference","t":"ThreadDelete","c":"discord.js!Events.ThreadDelete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadDelete'"}],"l":5344,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadDelete"},{"k":"EnumMember","c":"discord.js!Events.ThreadListSync:member","d":"","ex":[{"k":"Reference","t":"ThreadListSync","c":"discord.js!Events.ThreadListSync:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadListSync'"}],"l":5346,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadListSync"},{"k":"EnumMember","c":"discord.js!Events.ThreadMembersUpdate:member","d":"","ex":[{"k":"Reference","t":"ThreadMembersUpdate","c":"discord.js!Events.ThreadMembersUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadMembersUpdate'"}],"l":5348,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadMembersUpdate"},{"k":"EnumMember","c":"discord.js!Events.ThreadMemberUpdate:member","d":"","ex":[{"k":"Reference","t":"ThreadMemberUpdate","c":"discord.js!Events.ThreadMemberUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadMemberUpdate'"}],"l":5347,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadMemberUpdate"},{"k":"EnumMember","c":"discord.js!Events.ThreadUpdate:member","d":"","ex":[{"k":"Reference","t":"ThreadUpdate","c":"discord.js!Events.ThreadUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'threadUpdate'"}],"l":5345,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"ThreadUpdate"},{"k":"EnumMember","c":"discord.js!Events.TypingStart:member","d":"","ex":[{"k":"Reference","t":"TypingStart","c":"discord.js!Events.TypingStart:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'typingStart'"}],"l":5353,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"TypingStart"},{"k":"EnumMember","c":"discord.js!Events.UserUpdate:member","d":"","ex":[{"k":"Reference","t":"UserUpdate","c":"discord.js!Events.UserUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'userUpdate'"}],"l":5349,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"UserUpdate"},{"k":"EnumMember","c":"discord.js!Events.VoiceServerUpdate:member","d":"","ex":[{"k":"Reference","t":"VoiceServerUpdate","c":"discord.js!Events.VoiceServerUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'voiceServerUpdate'"}],"l":5351,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VoiceServerUpdate"},{"k":"EnumMember","c":"discord.js!Events.VoiceStateUpdate:member","d":"","ex":[{"k":"Reference","t":"VoiceStateUpdate","c":"discord.js!Events.VoiceStateUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'voiceStateUpdate'"}],"l":5352,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"VoiceStateUpdate"},{"k":"EnumMember","c":"discord.js!Events.Warn:member","d":"","ex":[{"k":"Reference","t":"Warn","c":"discord.js!Events.Warn:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'warn'"}],"l":5357,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Warn"},{"k":"EnumMember","c":"discord.js!Events.WebhooksUpdate:member","d":"","ex":[{"k":"Reference","t":"WebhooksUpdate","c":"discord.js!Events.WebhooksUpdate:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'webhookUpdate'"}],"l":5354,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WebhooksUpdate"}]},{"k":"Interface","c":"discord.js!FetchApplicationCommandOptions:interface","d":"/**\n * Options used to fetch Application Commands from Discord\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ApplicationCommandManager.js","l":81,"co":1,"r":"Public","n":"FetchApplicationCommandOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchApplicationCommandOptions#guildId:member","d":"/**\n * The guild's id to fetch commands for, for when the guild is not cached\n */\n","ex":[{"k":"Reference","t":"guildId","c":"discord.js!FetchApplicationCommandOptions#guildId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5467,"co":3,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchApplicationCommandOptions#locale:member","d":"/**\n * The locale to use when fetching this command\n */\n","ex":[{"k":"Reference","t":"locale","c":"discord.js!FetchApplicationCommandOptions#locale"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LocaleString","c":"discord-api-types!LocaleString:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5468,"co":3,"ro":false,"op":true,"r":"Public","n":"locale","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchApplicationCommandOptions#withLocalizations:member","d":"/**\n * Whether to fetch all localization data\n */\n","ex":[{"k":"Reference","t":"withLocalizations","c":"discord.js!FetchApplicationCommandOptions#withLocalizations"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5469,"co":3,"ro":false,"op":true,"r":"Public","n":"withLocalizations","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchArchivedThreadOptions:interface","d":"/**\n * The options used to fetch archived threads.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchArchivedThreadOptions","c":"discord.js!FetchArchivedThreadOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadManager.js","l":118,"co":1,"r":"Public","n":"FetchArchivedThreadOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchArchivedThreadOptions#before:member","d":"/**\n * Only return threads that were archived before this Date or Snowflake <warn>Must be a {@link ThreadChannelResolvable} when `type` is `private` and `fetchAll` is `false`.</warn>\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!FetchArchivedThreadOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5475,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!FetchArchivedThreadOptions#fetchAll:member","d":"/**\n * Whether to fetch **all* * archived threads when `type` is `private` <info>This property requires the {@link discord-api-types#(PermissionFlagsBits:type).ManageThreads} permission if `true`.</info>\n */\n","ex":[{"k":"Reference","t":"fetchAll","c":"discord.js!FetchArchivedThreadOptions#fetchAll"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5474,"co":3,"ro":false,"op":true,"r":"Public","n":"fetchAll","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchArchivedThreadOptions#limit:member","d":"/**\n * Maximum number of threads to return\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchArchivedThreadOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5476,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchArchivedThreadOptions#type:member","d":"/**\n * The type of threads to fetch (`public` or `private`)\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!FetchArchivedThreadOptions#type"},{"k":"Content","t":"?: "},{"k":"Content","t":"'public' | 'private'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5473,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchAutoModerationRuleOptions:interface","d":"/**\n * Options used to fetch a single auto moderation rule from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchAutoModerationRuleOptions","c":"discord.js!FetchAutoModerationRuleOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":214,"co":1,"r":"Public","n":"FetchAutoModerationRuleOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchAutoModerationRuleOptions#autoModerationRule:member","d":"/**\n * The auto moderation rule to fetch\n */\n","ex":[{"k":"Reference","t":"autoModerationRule","c":"discord.js!FetchAutoModerationRuleOptions#autoModerationRule"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleResolvable","c":"discord.js!AutoModerationRuleResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5480,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRule","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchAutoModerationRulesOptions:interface","d":"/**\n * Options used to fetch all auto moderation rules from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchAutoModerationRulesOptions","c":"discord.js!FetchAutoModerationRulesOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/AutoModerationRuleManager.js","l":220,"co":1,"r":"Public","n":"FetchAutoModerationRulesOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchAutoModerationRulesOptions#cache:member","d":"/**\n * Whether to cache the fetched auto moderation rules\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchAutoModerationRulesOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5484,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchBanOptions:interface","d":"/**\n * Options used to fetch a single ban from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchBanOptions","c":"discord.js!FetchBanOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildBanManager.js","l":55,"co":1,"r":"Public","n":"FetchBanOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchBanOptions#user:member","d":"/**\n * The ban to fetch\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!FetchBanOptions#user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5488,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchBansOptions:interface","d":"/**\n * Options used to fetch multiple bans from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchBansOptions","c":"discord.js!FetchBansOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildBanManager.js","l":61,"co":1,"r":"Public","n":"FetchBansOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchBansOptions#after:member","d":"/**\n * Consider only bans after this id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchBansOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5494,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchBansOptions#before:member","d":"/**\n * Consider only bans before this id\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!FetchBansOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5493,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchBansOptions#cache:member","d":"/**\n * Whether to cache the fetched bans\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchBansOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5495,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchBansOptions#limit:member","d":"/**\n * The maximum number of bans to return\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchBansOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5492,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchChannelOptions:interface","d":"/**\n * Options for fetching a channel from Discord\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchChannelOptions","c":"discord.js!FetchChannelOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ChannelManager.js","l":99,"co":1,"r":"Public","n":"FetchChannelOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchChannelOptions#allowUnknownGuild:member","d":"/**\n * Allows the channel to be returned even if the guild is not in cache, it will not be cached. <warn>Many of the properties and methods on the returned channel will throw errors</warn>\n */\n","ex":[{"k":"Reference","t":"allowUnknownGuild","c":"discord.js!FetchChannelOptions#allowUnknownGuild"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5499,"co":3,"ro":false,"op":true,"r":"Public","n":"allowUnknownGuild","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchedThreads:interface","d":"/**\n * Data returned from fetching threads.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchedThreads","c":"discord.js!FetchedThreads:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":457,"co":1,"r":"Public","n":"FetchedThreads","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchedThreads#members:member","d":"/**\n * The thread members in the received threads\n */\n","ex":[{"k":"Reference","t":"members","c":"discord.js!FetchedThreads#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5504,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!FetchedThreads#threads:member","d":"/**\n * The threads that were fetched\n */\n","ex":[{"k":"Reference","t":"threads","c":"discord.js!FetchedThreads#threads"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5503,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":2,"en":8}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchedThreadsMore:interface","d":"/**\n * Data returned from fetching multiple threads.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchedThreadsMore","c":"discord.js!FetchedThreadsMore:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"FetchedThreads","c":"discord.js!FetchedThreads:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadManager.js","l":130,"co":1,"r":"Public","n":"FetchedThreadsMore","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchedThreadsMore#hasMore:member","d":"/**\n * Whether there are potentially additional threads that require a subsequent call\n */\n","ex":[{"k":"Reference","t":"hasMore","c":"discord.js!FetchedThreadsMore#hasMore"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5508,"co":3,"ro":false,"op":false,"r":"Public","n":"hasMore","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchEntitlementsOptions:interface","d":"/**\n * Options used to fetch entitlements\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchEntitlementsOptions","c":"discord.js!FetchEntitlementsOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/EntitlementManager.js","l":40,"co":1,"r":"Public","n":"FetchEntitlementsOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#after:member","d":"/**\n * Consider only entitlements after this entitlement id <warn>If both `before` and `after` are provided, only `before` is respected</warn>\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchEntitlementsOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4103,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#before:member","d":"/**\n * Consider only entitlements before this entitlement id\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!FetchEntitlementsOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4102,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#cache:member","d":"/**\n * Whether to cache the fetched entitlements\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchEntitlementsOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4101,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#excludeEnded:member","d":"/**\n * Whether to exclude ended entitlements\n */\n","ex":[{"k":"Reference","t":"excludeEnded","c":"discord.js!FetchEntitlementsOptions#excludeEnded"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4100,"co":3,"ro":false,"op":true,"r":"Public","n":"excludeEnded","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#guild:member","d":"/**\n * The guild to fetch entitlements for\n */\n","ex":[{"k":"Reference","t":"guild","c":"discord.js!FetchEntitlementsOptions#guild"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4097,"co":3,"ro":false,"op":true,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#limit:member","d":"/**\n * The maximum number of entitlements to fetch\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchEntitlementsOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4096,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#skus:member","d":"/**\n * The SKUs to fetch entitlements for\n */\n","ex":[{"k":"Reference","t":"skus","c":"discord.js!FetchEntitlementsOptions#skus"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"SKUResolvable","c":"discord.js!SKUResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4099,"co":3,"ro":false,"op":true,"r":"Public","n":"skus","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!FetchEntitlementsOptions#user:member","d":"/**\n * The user to fetch entitlements for\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!FetchEntitlementsOptions#user"},{"k":"Content","t":"?: "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4098,"co":3,"ro":false,"op":true,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchGuildApplicationCommandFetchOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildApplicationCommandFetchOptions","c":"discord.js!FetchGuildApplicationCommandFetchOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchApplicationCommandOptions","c":"discord.js!FetchApplicationCommandOptions:interface"},{"k":"Content","t":", 'guildId'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4113,"co":1,"r":"Public","n":"FetchGuildApplicationCommandFetchOptions","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!FetchGuildOptions:interface","d":"/**\n * Options used to fetch a single guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildOptions","c":"discord.js!FetchGuildOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":244,"co":1,"r":"Public","n":"FetchGuildOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchGuildOptions#guild:member","d":"/**\n * The guild to fetch\n */\n","ex":[{"k":"Reference","t":"guild","c":"discord.js!FetchGuildOptions#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5512,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildOptions#withCounts:member","d":"/**\n * Whether the approximate member and presence counts should be returned\n */\n","ex":[{"k":"Reference","t":"withCounts","c":"discord.js!FetchGuildOptions#withCounts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5513,"co":3,"ro":false,"op":true,"r":"Public","n":"withCounts","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchGuildScheduledEventOptions:interface","d":"/**\n * Options used to fetch a single guild scheduled event from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildScheduledEventOptions","c":"discord.js!FetchGuildScheduledEventOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":114,"co":1,"r":"Public","n":"FetchGuildScheduledEventOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventOptions#guildScheduledEvent:member","d":"/**\n * The guild scheduled event to fetch\n */\n","ex":[{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!FetchGuildScheduledEventOptions#guildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5523,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEvent","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventOptions#withUserCount:member","d":"/**\n * Whether to fetch the number of users subscribed to the scheduled event\n */\n","ex":[{"k":"Reference","t":"withUserCount","c":"discord.js!FetchGuildScheduledEventOptions#withUserCount"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5524,"co":3,"ro":false,"op":true,"r":"Public","n":"withUserCount","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchGuildScheduledEventsOptions:interface","d":"/**\n * Options used to fetch multiple guild scheduled events from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildScheduledEventsOptions","c":"discord.js!FetchGuildScheduledEventsOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":121,"co":1,"r":"Public","n":"FetchGuildScheduledEventsOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventsOptions#cache:member","d":"/**\n * Whether or not to cache the fetched guild scheduled events\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchGuildScheduledEventsOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5528,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventsOptions#withUserCount:member","d":"/**\n * Whether to fetch the number of users subscribed to each scheduled event should be returned\n */\n","ex":[{"k":"Reference","t":"withUserCount","c":"discord.js!FetchGuildScheduledEventsOptions#withUserCount"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5529,"co":3,"ro":false,"op":true,"r":"Public","n":"withUserCount","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchGuildScheduledEventSubscribersOptions:interface","d":"/**\n * Options used to fetch subscribers of a guild scheduled event\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildScheduledEventSubscribersOptions","c":"discord.js!FetchGuildScheduledEventSubscribersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":246,"co":1,"r":"Public","n":"FetchGuildScheduledEventSubscribersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#after:member","d":"/**\n * Consider only users after this user id <warn>If both `before` and `after` are provided, only `before` is respected</warn>\n */\n","ex":[{"k":"Content","t":"undefined after :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"after","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#before:member","d":"/**\n * Consider only users before this user id\n */\n","ex":[{"k":"Content","t":"undefined before :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"before","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#limit:member","d":"/**\n * The maximum numbers of users to fetch\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5533,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#withMember:member","d":"/**\n * Whether to fetch guild member data of the users\n */\n","ex":[{"k":"Reference","t":"withMember","c":"discord.js!FetchGuildScheduledEventSubscribersOptions#withMember"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5534,"co":3,"ro":false,"op":true,"r":"Public","n":"withMember","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchGuildsOptions:interface","d":"/**\n * Options used to fetch multiple guilds.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchGuildsOptions","c":"discord.js!FetchGuildsOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":251,"co":1,"r":"Public","n":"FetchGuildsOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchGuildsOptions#after:member","d":"/**\n * Get guilds after this guild id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchGuildsOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5518,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildsOptions#before:member","d":"/**\n * Get guilds before this guild id\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!FetchGuildsOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5517,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchGuildsOptions#limit:member","d":"/**\n * Maximum number of guilds to request (1-200)\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchGuildsOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5519,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchInviteOptions:interface","d":"/**\n * Options used to fetch a single invite from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchInviteOptions","c":"discord.js!FetchInviteOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildInviteManager.js","l":73,"co":1,"r":"Public","n":"FetchInviteOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchInviteOptions#cache:member","d":"/**\n * Whether or not to cache the fetched invite\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!FetchInviteOptions#code:member","d":"/**\n * The invite to fetch\n */\n","ex":[{"k":"Reference","t":"code","c":"discord.js!FetchInviteOptions#code"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5538,"co":3,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchInviteOptions#force:member","d":"/**\n * Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"undefined force :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"force","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchInvitesOptions:interface","d":"/**\n * Options used to fetch all invites from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchInvitesOptions","c":"discord.js!FetchInvitesOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildInviteManager.js","l":81,"co":1,"r":"Public","n":"FetchInvitesOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchInvitesOptions#cache:member","d":"/**\n * Whether or not to cache the fetched invites\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchInvitesOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5543,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchInvitesOptions#channelId:member","d":"/**\n * The channel to fetch all invites from\n */\n","ex":[{"k":"Reference","t":"channelId","c":"discord.js!FetchInvitesOptions#channelId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildInvitableChannelResolvable","c":"discord.js!GuildInvitableChannelResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5542,"co":3,"ro":false,"op":true,"r":"Public","n":"channelId","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchMemberOptions:interface","d":"/**\n * Options used to fetch a single member from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchMemberOptions","c":"discord.js!FetchMemberOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":153,"co":1,"r":"Public","n":"FetchMemberOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchMemberOptions#user:member","d":"/**\n * The user to fetch\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!FetchMemberOptions#user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5547,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchMembersOptions:interface","d":"/**\n * Options used to fetch multiple members from a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchMembersOptions","c":"discord.js!FetchMembersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":159,"co":1,"r":"Public","n":"FetchMembersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#limit:member","d":"/**\n * Maximum number of members to request\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchMembersOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5553,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#nonce:member","d":"/**\n * Nonce for this request (32 characters max - default to base 16 now timestamp)\n */\n","ex":[{"k":"Reference","t":"nonce","c":"discord.js!FetchMembersOptions#nonce"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5556,"co":3,"ro":false,"op":true,"r":"Public","n":"nonce","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#query:member","d":"/**\n * Limit fetch to members with similar usernames\n */\n","ex":[{"k":"Reference","t":"query","c":"discord.js!FetchMembersOptions#query"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5552,"co":3,"ro":false,"op":true,"r":"Public","n":"query","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#time:member","d":"/**\n * Timeout for receipt of members\n */\n","ex":[{"k":"Reference","t":"time","c":"discord.js!FetchMembersOptions#time"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5555,"co":3,"ro":false,"op":true,"r":"Public","n":"time","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#user:member","d":"/**\n * The user(s) to fetch\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!FetchMembersOptions#user"},{"k":"Content","t":"?: "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5551,"co":3,"ro":false,"op":true,"r":"Public","n":"user","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!FetchMembersOptions#withPresences:member","d":"/**\n * Whether to include the presences\n */\n","ex":[{"k":"Reference","t":"withPresences","c":"discord.js!FetchMembersOptions#withPresences"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5554,"co":3,"ro":false,"op":true,"r":"Public","n":"withPresences","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchMessageOptions:interface","d":"/**\n * Options used to fetch a message.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchMessageOptions","c":"discord.js!FetchMessageOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/MessageManager.js","l":48,"co":1,"r":"Public","n":"FetchMessageOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchMessageOptions#message:member","d":"/**\n * The message to fetch\n */\n","ex":[{"k":"Reference","t":"message","c":"discord.js!FetchMessageOptions#message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5560,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!FetchMessagesOptions:interface","d":"/**\n * Options used to fetch multiple messages. <info>The `before`, `after`, and `around` parameters are mutually exclusive.</info>\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchMessagesOptions","c":"discord.js!FetchMessagesOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/MessageManager.js","l":54,"co":1,"r":"Public","n":"FetchMessagesOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchMessagesOptions#after:member","d":"/**\n * Consider only messages after this id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchMessagesOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5566,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMessagesOptions#around:member","d":"/**\n * Consider only messages around this id\n */\n","ex":[{"k":"Reference","t":"around","c":"discord.js!FetchMessagesOptions#around"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5567,"co":3,"ro":false,"op":true,"r":"Public","n":"around","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMessagesOptions#before:member","d":"/**\n * Consider only messages before this id\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!FetchMessagesOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5565,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMessagesOptions#cache:member","d":"/**\n * Whether to cache the fetched messages\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchMessagesOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5568,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchMessagesOptions#limit:member","d":"/**\n * The maximum number of messages to return\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchMessagesOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5564,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchReactionUsersOptions:interface","d":"/**\n * Options used to fetch users who gave a reaction.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchReactionUsersOptions","c":"discord.js!FetchReactionUsersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ReactionUserManager.js","l":31,"co":1,"r":"Public","n":"FetchReactionUsersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchReactionUsersOptions#after:member","d":"/**\n * Limit fetching users to those with an id greater than the supplied id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchReactionUsersOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5573,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchReactionUsersOptions#limit:member","d":"/**\n * The maximum amount of users to fetch, defaults to `100`\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchReactionUsersOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5572,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"discord.js!fetchRecommendedShardCount:function(1)","d":"/**\n * Gets the recommended shard count from Discord.\n *\n * @param token - Discord auth token\n *\n * @param options - Options for fetching the recommended shard count\n *\n * @returns The recommended number of shards\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"fetchRecommendedShardCount","c":"discord.js!fetchRecommendedShardCount"},{"k":"Content","t":"("},{"k":"Reference","t":"token","c":"discord.js!~token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchRecommendedShardCountOptions","c":"discord.js!FetchRecommendedShardCountOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":68,"co":1,"rtr":{"st":11,"en":15},"r":"Public","oi":1,"ps":[{"pn":"token","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"n":"fetchRecommendedShardCount"},{"k":"Interface","c":"discord.js!FetchRecommendedShardCountOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchRecommendedShardCountOptions","c":"discord.js!FetchRecommendedShardCountOptions:interface"},{"k":"Content","t":" "}],"pat":"src/util/Util.js","l":56,"co":1,"r":"Public","n":"FetchRecommendedShardCountOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchRecommendedShardCountOptions#guildsPerShard:member","d":"/**\n * Number of guilds assigned per shard\n */\n","ex":[{"k":"Reference","t":"guildsPerShard","c":"discord.js!FetchRecommendedShardCountOptions#guildsPerShard"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2911,"co":3,"ro":false,"op":true,"r":"Public","n":"guildsPerShard","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchRecommendedShardCountOptions#multipleOf:member","d":"/**\n * The multiple the shard count should round up to. (16 for large bot sharding)\n */\n","ex":[{"k":"Reference","t":"multipleOf","c":"discord.js!FetchRecommendedShardCountOptions#multipleOf"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2912,"co":3,"ro":false,"op":true,"r":"Public","n":"multipleOf","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchThreadMemberOptions:interface","d":"/**\n * Options used to fetch a thread member.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchThreadMemberOptions","c":"discord.js!FetchThreadMemberOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadMemberManager.js","l":117,"co":1,"r":"Public","n":"FetchThreadMemberOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchThreadMemberOptions#member:member","d":"/**\n * The thread member to fetch\n */\n","ex":[{"k":"Reference","t":"member","c":"discord.js!FetchThreadMemberOptions#member"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5577,"co":3,"ro":false,"op":false,"r":"Public","n":"member","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchThreadMemberOptions#withMember:member","d":"/**\n * Whether to also return the guild member associated with this thread member\n */\n","ex":[{"k":"Reference","t":"withMember","c":"discord.js!FetchThreadMemberOptions#withMember"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5578,"co":3,"ro":false,"op":true,"r":"Public","n":"withMember","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"TypeAlias","c":"discord.js!FetchThreadMembersOptions:type","d":"/**\n * Options used to fetch multiple thread members.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"FetchThreadMembersOptions","c":"discord.js!FetchThreadMembersOptions:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"FetchThreadMembersWithGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchThreadMembersWithoutGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions:interface"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadMemberManager.js","l":141,"co":1,"r":"Public","n":"FetchThreadMembersOptions","ttr":{"st":3,"en":7}},{"k":"Interface","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions:interface","d":"/**\n * Options used to fetch multiple thread members with guild member data. <info>With `withMember` set to `true`, pagination is enabled.</info>\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchThreadMembersWithGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadMemberManager.js","l":124,"co":1,"r":"Public","n":"FetchThreadMembersWithGuildMemberDataOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#after:member","d":"/**\n * Consider only thread members after this id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5583,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#cache:member","d":"/**\n * Whether to cache the fetched thread members and guild members\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5585,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#limit:member","d":"/**\n * The maximum number of thread members to return\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5584,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#withMember:member","d":"/**\n * Whether to also return the guild member data\n */\n","ex":[{"k":"Reference","t":"withMember","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions#withMember"},{"k":"Content","t":": "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5582,"co":3,"ro":false,"op":false,"r":"Public","n":"withMember","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions:interface","d":"/**\n * Options used to fetch multiple thread members without guild member data.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchThreadMembersWithoutGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadMemberManager.js","l":134,"co":1,"r":"Public","n":"FetchThreadMembersWithoutGuildMemberDataOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions#cache:member","d":"/**\n * Whether to cache the fetched thread members\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5590,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions#withMember:member","d":"/**\n * Whether to also return the guild member data\n */\n","ex":[{"k":"Reference","t":"withMember","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions#withMember"},{"k":"Content","t":"?: "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5589,"co":3,"ro":false,"op":true,"r":"Public","n":"withMember","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!FetchThreadsOptions:interface","d":"/**\n * Options for fetching multiple threads.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"FetchThreadsOptions","c":"discord.js!FetchThreadsOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadManager.js","l":80,"co":1,"r":"Public","n":"FetchThreadsOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!FetchThreadsOptions#archived:member","d":"/**\n * Options used to fetch archived threads\n */\n","ex":[{"k":"Reference","t":"archived","c":"discord.js!FetchThreadsOptions#archived"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchArchivedThreadOptions","c":"discord.js!FetchArchivedThreadOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5598,"co":3,"ro":false,"op":true,"r":"Public","n":"archived","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"discord.js!flatten:function(1)","d":"/**\n * Flatten an object. Any properties that are collections will get converted to an array of keys.\n *\n * @param obj - The object to flatten.\n *\n * @param props - Specific properties to include/exclude.\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"flatten","c":"discord.js!flatten"},{"k":"Content","t":"("},{"k":"Reference","t":"obj","c":"discord.js!~obj"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", ..."},{"k":"Reference","t":"props","c":"discord.js!~props"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":17,"co":1,"rtr":{"st":18,"en":19},"r":"Public","oi":1,"ps":[{"pn":"obj","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"props","ptr":{"st":9,"en":17},"op":false,"rs":true}],"n":"flatten"},{"k":"Class","c":"discord.js!Formatters:class","d":"/**\n * Contains various Discord-specific functions for formatting messages.\n *\n * @deprecated\n *\n * This class is redundant as all methods of the class can be imported from discord.js directly.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Formatters","c":"discord.js!Formatters:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"null"},{"k":"Content","t":" "}],"pat":"src/util/Formatters.js","l":188,"co":1,"r":"Public","ab":false,"n":"Formatters","pmo":false,"ms":[{"k":"Method","c":"discord.js!Formatters.blockQuote:member(1)","d":"/**\n * Formats the content into a block quote. <info>This needs to be at the start of the line for Discord to format it.</info>\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static blockQuote(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":189,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"blockQuote"},{"k":"Property","c":"discord.js!Formatters.blockQuote:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"blockQuote","c":"discord.js!Formatters.blockQuote"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"blockQuote","c":"@discordjs/formatters!blockQuote:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3398,"co":3,"ro":false,"op":false,"r":"Public","n":"blockQuote","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.bold:member(1)","d":"/**\n * Formats the content into bold text.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static bold(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":203,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"bold"},{"k":"Property","c":"discord.js!Formatters.bold:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"bold","c":"discord.js!Formatters.bold"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"bold","c":"@discordjs/formatters!bold:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3400,"co":3,"ro":false,"op":false,"r":"Public","n":"bold","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.channelMention:member(1)","d":"/**\n * Formats a channel id into a channel mention.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param channelId - The channel id to format\n */\n","ex":[{"k":"Content","t":"static channelMention(channelId"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":216,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channelId","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"channelMention"},{"k":"Property","c":"discord.js!Formatters.channelMention:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"channelMention","c":"discord.js!Formatters.channelMention"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"channelMention","c":"@discordjs/formatters!channelMention:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3402,"co":3,"ro":false,"op":false,"r":"Public","n":"channelMention","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.codeBlock:member(1)","d":"/**\n * Wraps the content inside a code block with an optional language.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param contentOrLanguage - The language to use or content if a second parameter isn't provided\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static codeBlock(contentOrLanguage"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", content?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":229,"sta":true,"rtr":{"st":5,"en":6},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"contentOrLanguage","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"content","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"codeBlock"},{"k":"Property","c":"discord.js!Formatters.codeBlock:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"codeBlock","c":"discord.js!Formatters.codeBlock"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"codeBlock","c":"@discordjs/formatters!codeBlock:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3404,"co":3,"ro":false,"op":false,"r":"Public","n":"codeBlock","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.formatEmoji:member(1)","d":"/**\n * Formats an emoji id into a fully qualified emoji identifier.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param emojiId - The emoji id to format\n *\n * @param animated - Whether the emoji is animated\n */\n","ex":[{"k":"Content","t":"static formatEmoji(emojiId"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", animated?: "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":243,"sta":true,"rtr":{"st":5,"en":6},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emojiId","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"animated","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"formatEmoji"},{"k":"Property","c":"discord.js!Formatters.formatEmoji:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"formatEmoji","c":"discord.js!Formatters.formatEmoji"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"formatEmoji","c":"@discordjs/formatters!formatEmoji:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3406,"co":3,"ro":false,"op":false,"r":"Public","n":"formatEmoji","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.hideLinkEmbed:member(1)","d":"/**\n * Wraps the URL into `<>`, which stops it from embedding.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static hideLinkEmbed(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":257,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"hideLinkEmbed"},{"k":"Property","c":"discord.js!Formatters.hideLinkEmbed:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"hideLinkEmbed","c":"discord.js!Formatters.hideLinkEmbed"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"hideLinkEmbed","c":"@discordjs/formatters!hideLinkEmbed:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3408,"co":3,"ro":false,"op":false,"r":"Public","n":"hideLinkEmbed","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.hyperlink:member(1)","d":"/**\n * Formats the content and the URL into a masked URL with an optional title.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to display\n *\n * @param url - The URL the content links to\n *\n * @param title - The title shown when hovering on the masked link\n */\n","ex":[{"k":"Content","t":"static hyperlink(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", url: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", title?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":270,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"url","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"title","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"hyperlink"},{"k":"Property","c":"discord.js!Formatters.hyperlink:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"hyperlink","c":"discord.js!Formatters.hyperlink"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"hyperlink","c":"@discordjs/formatters!hyperlink:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3410,"co":3,"ro":false,"op":false,"r":"Public","n":"hyperlink","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.inlineCode:member(1)","d":"/**\n * Wraps the content inside \\`backticks\\`, which formats it as inline code.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static inlineCode(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":285,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"inlineCode"},{"k":"Property","c":"discord.js!Formatters.inlineCode:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"inlineCode","c":"discord.js!Formatters.inlineCode"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"inlineCode","c":"@discordjs/formatters!inlineCode:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3412,"co":3,"ro":false,"op":false,"r":"Public","n":"inlineCode","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.italic:member(1)","d":"/**\n * Formats the content into italic text.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static italic(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":298,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"italic"},{"k":"Property","c":"discord.js!Formatters.italic:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"italic","c":"discord.js!Formatters.italic"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"italic","c":"@discordjs/formatters!italic:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3414,"co":3,"ro":false,"op":false,"r":"Public","n":"italic","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.quote:member(1)","d":"/**\n * Formats the content into a quote. This needs to be at the start of the line for Discord to format it.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static quote(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":311,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"quote"},{"k":"Property","c":"discord.js!Formatters.quote:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"quote","c":"discord.js!Formatters.quote"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"quote","c":"@discordjs/formatters!quote:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3416,"co":3,"ro":false,"op":false,"r":"Public","n":"quote","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.roleMention:member(1)","d":"/**\n * Formats a role id into a role mention.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param roleId - The role id to format\n */\n","ex":[{"k":"Content","t":"static roleMention(roleId"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":324,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleId","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"roleMention"},{"k":"Property","c":"discord.js!Formatters.roleMention:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"roleMention","c":"discord.js!Formatters.roleMention"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"roleMention","c":"@discordjs/formatters!roleMention:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3418,"co":3,"ro":false,"op":false,"r":"Public","n":"roleMention","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.spoiler:member(1)","d":"/**\n * Formats the content into spoiler text.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to spoiler\n */\n","ex":[{"k":"Content","t":"static spoiler(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":337,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"spoiler"},{"k":"Property","c":"discord.js!Formatters.spoiler:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"spoiler","c":"discord.js!Formatters.spoiler"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"spoiler","c":"@discordjs/formatters!spoiler:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3420,"co":3,"ro":false,"op":false,"r":"Public","n":"spoiler","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.strikethrough:member(1)","d":"/**\n * Formats the content into strike-through text.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static strikethrough(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":350,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"strikethrough"},{"k":"Property","c":"discord.js!Formatters.strikethrough:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"strikethrough","c":"discord.js!Formatters.strikethrough"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"strikethrough","c":"@discordjs/formatters!strikethrough:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3422,"co":3,"ro":false,"op":false,"r":"Public","n":"strikethrough","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.time:member(1)","d":"/**\n * Formats a date into a short date-time string.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param date - The date to format\n *\n * @param style - The style to use\n */\n","ex":[{"k":"Content","t":"static time(date?"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":", style?: "},{"k":"Reference","t":"TimestampStylesString","c":"discord.js!TimestampStylesString:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":363,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"date","ptr":{"st":1,"en":4},"op":true,"rs":false},{"pn":"style","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"time"},{"k":"Property","c":"discord.js!Formatters.time:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"time","c":"discord.js!Formatters.time"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"time","c":"@discordjs/formatters!time:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3424,"co":3,"ro":false,"op":false,"r":"Public","n":"time","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Formatters.TimestampStyles:member","d":"/**\n * The message formatting timestamp [styles](https://discord.com/developers/docs/reference#message-formatting-timestamp-styles) supported by Discord.\n *\n * @deprecated\n *\n * Import this property directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"TimestampStyles","c":"discord.js!Formatters.TimestampStyles"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"TimestampStyles","c":"@discordjs/formatters!TimestampStyles:var"},{"k":"Content","t":";"}],"l":384,"co":3,"ro":false,"op":false,"r":"Public","n":"TimestampStyles","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.underscore:member(1)","d":"/**\n * Formats the content into underscored text.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param content - The content to wrap\n */\n","ex":[{"k":"Content","t":"static underscore(content"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":386,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"underscore"},{"k":"Property","c":"discord.js!Formatters.underscore:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"underscore","c":"discord.js!Formatters.underscore"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"underscore","c":"@discordjs/formatters!underscore:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3428,"co":3,"ro":false,"op":false,"r":"Public","n":"underscore","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Formatters.userMention:member(1)","d":"/**\n * Formats a user id into a user mention.\n *\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n *\n * @param userId - The user id to format\n */\n","ex":[{"k":"Content","t":"static userMention(userId"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":399,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userId","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"userMention"},{"k":"Property","c":"discord.js!Formatters.userMention:member","d":"/**\n * @deprecated\n *\n * Import this method directly from discord.js instead.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"userMention","c":"discord.js!Formatters.userMention"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"userMention","c":"@discordjs/formatters!userMention:function"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3430,"co":3,"ro":false,"op":false,"r":"Public","n":"userMention","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ForumChannel:class","d":"/**\n * Represents a forum channel.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadOnlyChannel","c":"discord.js!ThreadOnlyChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/ForumChannel.js","l":9,"co":1,"r":"Public","ab":false,"n":"ForumChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!ForumChannel#availableTags:member","d":"/**\n * The set of tags that can be used in this channel.\n */\n","ex":[{"k":"Content","t":"undefined availableTags :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildForumTag","c":"discord.js!GuildForumTag:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"availableTags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultAutoArchiveDuration :"},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":106,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#defaultForumLayout:member","d":"/**\n * The default layout type used to display posts\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultForumLayout","c":"discord.js!ForumChannel#defaultForumLayout"},{"k":"Content","t":": "},{"k":"Reference","t":"ForumLayoutType","c":"discord-api-types!ForumLayoutType:enum"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultForumLayout","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#defaultReactionEmoji:member","d":"/**\n * The emoji to show in the add reaction button on a thread in a guild forum channel\n */\n","ex":[{"k":"Content","t":"undefined defaultReactionEmoji :"},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#defaultSortOrder:member","d":"/**\n * The default sort order mode used to order posts\n */\n","ex":[{"k":"Content","t":"undefined defaultSortOrder :"},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":134,"ro":false,"op":true,"r":"Public","n":"defaultSortOrder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultThreadRateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":86,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#nsfw:member","d":"/**\n * If this channel is considered NSFW.\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":116,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel.\n */\n","ex":[{"k":"Content","t":"undefined rateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":96,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ForumChannel#setDefaultForumLayout:member(1)","d":"/**\n * Sets the default forum layout type used to display posts\n *\n * @param defaultForumLayout - The default forum layout type to set on this channel\n *\n * @param reason - Reason for changing the default forum layout\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultForumLayout","c":"discord.js!ForumChannel#setDefaultForumLayout"},{"k":"Content","t":"("},{"k":"Reference","t":"defaultForumLayout","c":"discord.js!~defaultForumLayout"},{"k":"Content","t":": "},{"k":"Reference","t":"ForumLayoutType","c":"discord-api-types!ForumLayoutType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":26,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultForumLayout","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultForumLayout"},{"k":"Property","c":"discord.js!ForumChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"undefined threads :"},{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!GuildForumThreadManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":52,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#topic:member","d":"/**\n * The topic of this channel.\n */\n","ex":[{"k":"Content","t":"undefined topic :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":126,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ForumChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types!ChannelType.GuildForum:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ForumChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GatewayIntentsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GatewayIntentsString","c":"discord.js!GatewayIntentsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GatewayIntentBits","c":"discord-api-types!GatewayIntentBits:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1808,"co":1,"r":"Public","n":"GatewayIntentsString","ttr":{"st":3,"en":7}},{"k":"TypeAlias","c":"discord.js!GlobalSweepFilter:type","d":"/**\n * @returns Return `null` to skip sweeping, otherwise a function passed to `sweep()`, See {@link https://discord.js.org/docs/packages/collection/stable/Collection:Class#sweep | Collection#sweep} for the definition of this function.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Content","t":"() => | (("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">) => "},{"k":"Reference","t":"boolean"},{"k":"Content","t":") | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"src/util/Sweepers.js","l":8,"co":1,"r":"Public","n":"GlobalSweepFilter","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":27}},{"k":"Class","c":"discord.js!Guild:class","d":"/**\n * Represents a guild (or a server) on Discord. <info>It's recommended to see if a guild is available before performing operations or reading data from it. You can check this with {@link Guild.available}.</info>\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnonymousGuild","c":"discord.js!AnonymousGuild:class"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":40,"co":1,"r":"Public","ab":false,"n":"Guild","pmo":false,"ms":[{"k":"Property","c":"discord.js!Guild#afkChannel:member","d":"/**\n * AFK voice channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"afkChannel","c":"discord.js!Guild#afkChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":509,"co":3,"ro":true,"op":false,"r":"Public","n":"afkChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#afkChannelId:member","d":"/**\n * The id of the voice channel where AFK members are moved\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"afkChannelId","c":"discord.js!Guild#afkChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":202,"co":3,"ro":false,"op":false,"r":"Public","n":"afkChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#afkTimeout:member","d":"/**\n * The time in seconds before a user is counted as \"away from keyboard\"\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"afkTimeout","c":"discord.js!Guild#afkTimeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":194,"co":3,"ro":false,"op":false,"r":"Public","n":"afkTimeout","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#applicationId:member","d":"/**\n * The id of the application that created this guild (if applicable)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!Guild#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":186,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#approximateMemberCount:member","d":"/**\n * The approximate amount of members the guild has <info>You will need to fetch the guild using {@link Guild.fetch} if you want to receive this parameter</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"approximateMemberCount","c":"discord.js!Guild#approximateMemberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":328,"co":3,"ro":false,"op":false,"r":"Public","n":"approximateMemberCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#approximatePresenceCount:member","d":"/**\n * The approximate amount of presences the guild has <info>You will need to fetch the guild using {@link Guild.fetch} if you want to receive this parameter</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"approximatePresenceCount","c":"discord.js!Guild#approximatePresenceCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":339,"co":3,"ro":false,"op":false,"r":"Public","n":"approximatePresenceCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#autoModerationRules:member","d":"/**\n * A manager of the auto moderation rules of this guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"autoModerationRules","c":"discord.js!Guild#autoModerationRules"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRuleManager","c":"discord.js!AutoModerationRuleManager:class"},{"k":"Content","t":";"}],"l":108,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRules","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#available:member","d":"/**\n * Whether the guild is available to access. If it is not available, it indicates a server outage\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"available","c":"discord.js!Guild#available"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"available","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#banner:member","d":"/**\n * The hash of the guild banner\n */\n","ex":[{"k":"Content","t":"undefined banner :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":32,"ro":false,"op":true,"r":"Public","n":"banner","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#bans:member","d":"/**\n * A manager of the bans belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bans","c":"discord.js!Guild#bans"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildBanManager","c":"discord.js!GuildBanManager:class"},{"k":"Content","t":";"}],"l":66,"co":3,"ro":false,"op":false,"r":"Public","n":"bans","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#channels:member","d":"/**\n * A manager of the channels belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channels","c":"discord.js!Guild#channels"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelManager","c":"discord.js!GuildChannelManager:class"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":false,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#commands:member","d":"/**\n * A manager of the application commands belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commands","c":"discord.js!Guild#commands"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildApplicationCommandManager","c":"discord.js!GuildApplicationCommandManager:class"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"commands","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":56,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":47,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#createTemplate:member(1)","d":"/**\n * Creates a template for the guild.\n *\n * @param name - The name for the template\n *\n * @param description - The description for the template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createTemplate","c":"discord.js!Guild#createTemplate"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"description","c":"discord.js!~description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":623,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"description","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"createTemplate"},{"k":"Property","c":"discord.js!Guild#defaultMessageNotifications:member","d":"/**\n * The default message notification level of the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultMessageNotifications","c":"discord.js!Guild#defaultMessageNotifications"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildDefaultMessageNotifications","c":"discord-api-types!GuildDefaultMessageNotifications:enum"},{"k":"Content","t":";"}],"l":270,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultMessageNotifications","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#delete:member(1)","d":"/**\n * Deletes the guild.\n *\n * @example\n * ```js\n * // Delete a guild\n * guild.delete()\n *   .then(guild => console.log(`Deleted the guild ${guild}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Guild#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1349,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!Guild#description:member","d":"/**\n * The description of the guild, if any\n */\n","ex":[{"k":"Content","t":"undefined description :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":40,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#disableInvites:member(1)","d":"/**\n * Sets whether this guild's invites are disabled.\n *\n * @param disabled - Whether the invites are disabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"disableInvites","c":"discord.js!Guild#disableInvites"},{"k":"Content","t":"("},{"k":"Reference","t":"disabled","c":"discord.js!~disabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1359,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"disabled","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"disableInvites"},{"k":"Property","c":"discord.js!Guild#discoverySplash:member","d":"/**\n * The hash of the guild discovery splash image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discoverySplash","c":"discord.js!Guild#discoverySplash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":154,"co":3,"ro":false,"op":false,"r":"Public","n":"discoverySplash","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#discoverySplashURL:member(1)","d":"/**\n * The URL to this guild's discovery splash image.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discoverySplashURL","c":"discord.js!Guild#discoverySplashURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":486,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"discoverySplashURL"},{"k":"Method","c":"discord.js!Guild#edit:member(1)","d":"/**\n * Updates the guild with new information - e.g. a new name.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Set the guild name\n * guild.edit({\n *   name: 'Discord Guild',\n * })\n *   .then(updated => console.log(`New guild name ${updated}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!Guild#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEditOptions","c":"discord.js!GuildEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":837,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!Guild#editOnboarding:member(1)","d":"/**\n * Edits the guild onboarding data for this guild.\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editOnboarding","c":"discord.js!Guild#editOnboarding"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildOnboardingEditOptions","c":"discord.js!GuildOnboardingEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildOnboarding","c":"discord.js!GuildOnboarding:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":928,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"editOnboarding"},{"k":"Method","c":"discord.js!Guild#editWelcomeScreen:member(1)","d":"/**\n * Updates the guild's welcome screen\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * guild.editWelcomeScreen({\n *   description: 'Hello World',\n *   enabled: true,\n *   welcomeChannels: [\n *     {\n *       description: 'foobar',\n *       channel: '222197033908436994',\n *     }\n *   ],\n * })\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editWelcomeScreen","c":"discord.js!Guild#editWelcomeScreen"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"WelcomeScreenEditOptions","c":"discord.js!WelcomeScreenEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"WelcomeScreen","c":"discord.js!WelcomeScreen:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1013,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"editWelcomeScreen"},{"k":"Property","c":"discord.js!Guild#emojis:member","d":"/**\n * A manager of the emojis belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emojis","c":"discord.js!Guild#emojis"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmojiManager","c":"discord.js!GuildEmojiManager:class"},{"k":"Content","t":";"}],"l":448,"co":3,"ro":false,"op":false,"r":"Public","n":"emojis","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#equals:member(1)","d":"/**\n * Whether this guild equals another guild. It compares all properties, so for most operations it is advisable to just compare `guild.id === guild2.id` as it is much faster and is often what most users need.\n *\n * @param guild - The guild to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Guild#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":1372,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!Guild#explicitContentFilter:member","d":"/**\n * The explicit content filter level of the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"explicitContentFilter","c":"discord.js!Guild#explicitContentFilter"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildExplicitContentFilter","c":"discord-api-types!GuildExplicitContentFilter:enum"},{"k":"Content","t":";"}],"l":246,"co":3,"ro":false,"op":false,"r":"Public","n":"explicitContentFilter","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#features:member","d":"/**\n * An array of features available to this guild\n */\n","ex":[{"k":"Content","t":"undefined features :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":39,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#fetchAuditLogs:member(1)","d":"/**\n * Fetches audit logs for this guild.\n *\n * @param options - Options for fetching audit logs\n *\n * @example\n * ```js\n * // Output audit log entries\n * guild.fetchAuditLogs()\n *   .then(audit => console.log(audit.entries.first()))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchAuditLogs","c":"discord.js!Guild#fetchAuditLogs"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsResolvable","c":"discord.js!GuildAuditLogsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"null"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildAuditLogsFetchOptions","c":"discord.js!GuildAuditLogsFetchOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildAuditLogs","c":"discord.js!GuildAuditLogs:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":757,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"sta":false,"rtr":{"st":16,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":11,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchAuditLogs"},{"k":"Method","c":"discord.js!Guild#fetchIntegrations:member(1)","d":"/**\n * Fetches a collection of integrations to this guild. Resolves with a collection mapping integrations by their ids.\n *\n * @example\n * ```js\n * // Fetch integrations\n * guild.fetchIntegrations()\n *   .then(integrations => console.log(`Fetched ${integrations.size} integrations`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchIntegrations","c":"discord.js!Guild#fetchIntegrations"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Integration","c":"discord.js!Integration:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":590,"co":3,"sta":false,"rtr":{"st":3,"en":13},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchIntegrations"},{"k":"Method","c":"discord.js!Guild#fetchOnboarding:member(1)","d":"/**\n * Fetches the guild onboarding data for this guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchOnboarding","c":"discord.js!Guild#fetchOnboarding"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildOnboarding","c":"discord.js!GuildOnboarding:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":779,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchOnboarding"},{"k":"Method","c":"discord.js!Guild#fetchOwner:member(1)","d":"/**\n * Fetches the owner of the guild. If the member object isn't needed, use {@link Guild.ownerId} instead.\n *\n * @param options - The options for fetching the member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchOwner","c":"discord.js!Guild#fetchOwner"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":496,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchOwner"},{"k":"Method","c":"discord.js!Guild#fetchPreview:member(1)","d":"/**\n * Obtains a guild preview for this guild from Discord.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchPreview","c":"discord.js!Guild#fetchPreview"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":632,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchPreview"},{"k":"Method","c":"discord.js!Guild#fetchTemplates:member(1)","d":"/**\n * Fetches a collection of templates from this guild. Resolves with a collection mapping templates by their codes.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchTemplates","c":"discord.js!Guild#fetchTemplates"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":"['code'], "},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":603,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchTemplates"},{"k":"Method","c":"discord.js!Guild#fetchVanityData:member(1)","d":"/**\n * Fetches the vanity URL invite object to this guild. Resolves with an object containing the vanity URL invite code and the use count\n *\n * @example\n * ```js\n * // Fetch invite data\n * guild.fetchVanityData()\n *   .then(res => {\n *     console.log(`Vanity URL: https://discord.gg/${res.code} with ${res.uses} uses`);\n *   })\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchVanityData","c":"discord.js!Guild#fetchVanityData"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Vanity","c":"discord.js!Vanity:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":656,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchVanityData"},{"k":"Method","c":"discord.js!Guild#fetchWebhooks:member(1)","d":"/**\n * Fetches all webhooks for the guild.\n *\n * @example\n * ```js\n * // Fetch webhooks\n * guild.fetchWebhooks()\n *   .then(webhooks => console.log(`Fetched ${webhooks.size} webhooks`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWebhooks","c":"discord.js!Guild#fetchWebhooks"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":673,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWebhooks"},{"k":"Method","c":"discord.js!Guild#fetchWelcomeScreen:member(1)","d":"/**\n * Fetches the welcome screen for this guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWelcomeScreen","c":"discord.js!Guild#fetchWelcomeScreen"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"WelcomeScreen","c":"discord.js!WelcomeScreen:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":612,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWelcomeScreen"},{"k":"Method","c":"discord.js!Guild#fetchWidget:member(1)","d":"/**\n * Fetches the guild widget data, requires the widget to be enabled.\n *\n * @example\n * ```js\n * // Fetches the guild widget data\n * guild.fetchWidget()\n *   .then(widget => console.log(`The widget shows ${widget.channels.size} channels`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWidget","c":"discord.js!Guild#fetchWidget"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Widget","c":"discord.js!Widget:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":689,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWidget"},{"k":"Method","c":"discord.js!Guild#fetchWidgetSettings:member(1)","d":"/**\n * Fetches the guild widget settings.\n *\n * @example\n * ```js\n * // Fetches the guild widget settings\n * guild.fetchWidgetSettings()\n *   .then(widget => console.log(`The widget is ${widget.enabled ? 'enabled' : 'disabled'}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWidgetSettings","c":"discord.js!Guild#fetchWidgetSettings"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildWidgetSettings","c":"discord.js!GuildWidgetSettings:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":718,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWidgetSettings"},{"k":"Property","c":"discord.js!Guild#icon:member","d":"/**\n * The icon hash of this guild\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":33,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#id:member","d":"/**\n * The guild's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":21,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#invites:member","d":"/**\n * A manager of the invites of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"invites","c":"discord.js!Guild#invites"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildInviteManager","c":"discord.js!GuildInviteManager:class"},{"k":"Content","t":";"}],"l":96,"co":3,"ro":false,"op":false,"r":"Public","n":"invites","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#joinedAt:member","d":"/**\n * The time the client user joined the guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joinedAt","c":"discord.js!Guild#joinedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":477,"co":3,"ro":true,"op":false,"r":"Public","n":"joinedAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#joinedTimestamp:member","d":"/**\n * The timestamp the client user joined the guild at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"joinedTimestamp","c":"discord.js!Guild#joinedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":262,"co":3,"ro":false,"op":false,"r":"Public","n":"joinedTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#large:member","d":"/**\n * Whether the guild is \"large\" (has more than {@link WebsocketOptions | large_threshold} members, 50 by default)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"large","c":"discord.js!Guild#large"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":170,"co":3,"ro":false,"op":false,"r":"Public","n":"large","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#leave:member(1)","d":"/**\n * Leaves the guild.\n *\n * @example\n * ```js\n * // Leave a guild\n * guild.leave()\n *   .then(guild => console.log(`Left the guild: ${guild.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"leave","c":"discord.js!Guild#leave"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1334,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"leave"},{"k":"Property","c":"discord.js!Guild#maximumBitrate:member","d":"/**\n * The maximum bitrate available for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"maximumBitrate","c":"discord.js!Guild#maximumBitrate"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":563,"co":3,"ro":true,"op":false,"r":"Public","n":"maximumBitrate","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#maximumMembers:member","d":"/**\n * The maximum amount of members the guild can have\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maximumMembers","c":"discord.js!Guild#maximumMembers"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":286,"co":3,"ro":false,"op":false,"r":"Public","n":"maximumMembers","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#maximumPresences:member","d":"/**\n * The maximum amount of presences the guild can have (this is `null` for all but the largest of guilds) <info>You will need to fetch the guild using {@link Guild.fetch} if you want to receive this parameter</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maximumPresences","c":"discord.js!Guild#maximumPresences"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":297,"co":3,"ro":false,"op":false,"r":"Public","n":"maximumPresences","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#maxStageVideoChannelUsers:member","d":"/**\n * The maximum amount of users allowed in a stage video channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maxStageVideoChannelUsers","c":"discord.js!Guild#maxStageVideoChannelUsers"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":317,"co":3,"ro":false,"op":false,"r":"Public","n":"maxStageVideoChannelUsers","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#maxVideoChannelUsers:member","d":"/**\n * The maximum amount of users allowed in a video channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maxVideoChannelUsers","c":"discord.js!Guild#maxVideoChannelUsers"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":307,"co":3,"ro":false,"op":false,"r":"Public","n":"maxVideoChannelUsers","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#memberCount:member","d":"/**\n * The full amount of members in this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"memberCount","c":"discord.js!Guild#memberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":162,"co":3,"ro":false,"op":false,"r":"Public","n":"memberCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#members:member","d":"/**\n * A manager of the members belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!Guild#members"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberManager","c":"discord.js!GuildMemberManager:class"},{"k":"Content","t":";"}],"l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#mfaLevel:member","d":"/**\n * The required MFA level for this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mfaLevel","c":"discord.js!Guild#mfaLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMFALevel","c":"discord-api-types!GuildMFALevel:enum"},{"k":"Content","t":";"}],"l":254,"co":3,"ro":false,"op":false,"r":"Public","n":"mfaLevel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":27,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#nameAcronym:member","d":"/**\n * The acronym that shows up in place of a guild icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly nameAcronym :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":65,"ro":true,"op":false,"r":"Public","n":"nameAcronym","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#nsfwLevel:member","d":"/**\n * The NSFW level of this guild\n */\n","ex":[{"k":"Content","t":"undefined nsfwLevel :"},{"k":"Reference","t":"GuildNSFWLevel","c":"discord-api-types!GuildNSFWLevel:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":64,"ro":false,"op":false,"r":"Public","n":"nsfwLevel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#ownerId:member","d":"/**\n * The user id of this guild's owner\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ownerId","c":"discord.js!Guild#ownerId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":413,"co":3,"ro":false,"op":false,"r":"Public","n":"ownerId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#partnered:member","d":"/**\n * Whether this guild is partnered\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partnered :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":77,"ro":true,"op":false,"r":"Public","n":"partnered","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#preferredLocale:member","d":"/**\n * The preferred locale of the guild, defaults to `en-US`\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"preferredLocale","c":"discord.js!Guild#preferredLocale"},{"k":"Content","t":": "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":";"}],"l":372,"co":3,"ro":false,"op":false,"r":"Public","n":"preferredLocale","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#premiumProgressBarEnabled:member","d":"/**\n * Whether this guild has its premium (boost) progress bar enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"premiumProgressBarEnabled","c":"discord.js!Guild#premiumProgressBarEnabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":178,"co":3,"ro":false,"op":false,"r":"Public","n":"premiumProgressBarEnabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#premiumSubscriptionCount:member","d":"/**\n * The total number of boosts for this server\n */\n","ex":[{"k":"Content","t":"undefined premiumSubscriptionCount :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":72,"ro":false,"op":true,"r":"Public","n":"premiumSubscriptionCount","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#premiumTier:member","d":"/**\n * The premium tier of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"premiumTier","c":"discord.js!Guild#premiumTier"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildPremiumTier","c":"discord-api-types!GuildPremiumTier:enum"},{"k":"Content","t":";"}],"l":218,"co":3,"ro":false,"op":false,"r":"Public","n":"premiumTier","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#presences:member","d":"/**\n * A manager of the presences belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"presences","c":"discord.js!Guild#presences"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceManager","c":"discord.js!PresenceManager:class"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"presences","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#publicUpdatesChannel:member","d":"/**\n * Public updates channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"publicUpdatesChannel","c":"discord.js!Guild#publicUpdatesChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":545,"co":3,"ro":true,"op":false,"r":"Public","n":"publicUpdatesChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#publicUpdatesChannelId:member","d":"/**\n * The community updates channel's id for the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"publicUpdatesChannelId","c":"discord.js!Guild#publicUpdatesChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":364,"co":3,"ro":false,"op":false,"r":"Public","n":"publicUpdatesChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#roles:member","d":"/**\n * A manager of the roles belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!Guild#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleManager","c":"discord.js!RoleManager:class"},{"k":"Content","t":";"}],"l":72,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#rulesChannel:member","d":"/**\n * Rules channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"rulesChannel","c":"discord.js!Guild#rulesChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":536,"co":3,"ro":true,"op":false,"r":"Public","n":"rulesChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#rulesChannelId:member","d":"/**\n * The rules channel's id for the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rulesChannelId","c":"discord.js!Guild#rulesChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":356,"co":3,"ro":false,"op":false,"r":"Public","n":"rulesChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#safetyAlertsChannel:member","d":"/**\n * Safety alerts channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"safetyAlertsChannel","c":"discord.js!Guild#safetyAlertsChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":554,"co":3,"ro":true,"op":false,"r":"Public","n":"safetyAlertsChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#safetyAlertsChannelId:member","d":"/**\n * The safety alerts channel's id for the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"safetyAlertsChannelId","c":"discord.js!Guild#safetyAlertsChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":380,"co":3,"ro":false,"op":false,"r":"Public","n":"safetyAlertsChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#scheduledEvents:member","d":"/**\n * A manager of the scheduled events of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"scheduledEvents","c":"discord.js!Guild#scheduledEvents"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventManager","c":"discord.js!GuildScheduledEventManager:class"},{"k":"Content","t":";"}],"l":102,"co":3,"ro":false,"op":false,"r":"Public","n":"scheduledEvents","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#setAFKChannel:member(1)","d":"/**\n * Edits the AFK channel of the guild.\n *\n * @param afkChannel - The new AFK channel\n *\n * @param reason - Reason for changing the guild's AFK channel\n *\n * @example\n * ```js\n * // Edit the guild AFK channel\n * guild.setAFKChannel(channel)\n *  .then(updated => console.log(`Updated guild AFK channel to ${guild.afkChannel.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAFKChannel","c":"discord.js!Guild#setAFKChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"afkChannel","c":"discord.js!~afkChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"VoiceChannelResolvable","c":"discord.js!VoiceChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1107,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"afkChannel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAFKChannel"},{"k":"Method","c":"discord.js!Guild#setAFKTimeout:member(1)","d":"/**\n * Edits the AFK timeout of the guild.\n *\n * @param afkTimeout - The time in seconds that a user must be idle to be considered AFK\n *\n * @param reason - Reason for changing the guild's AFK timeout\n *\n * @example\n * ```js\n * // Edit the guild AFK channel\n * guild.setAFKTimeout(60)\n *  .then(updated => console.log(`Updated guild AFK timeout to ${guild.afkTimeout}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAFKTimeout","c":"discord.js!Guild#setAFKTimeout"},{"k":"Content","t":"("},{"k":"Reference","t":"afkTimeout","c":"discord.js!~afkTimeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1137,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"afkTimeout","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAFKTimeout"},{"k":"Method","c":"discord.js!Guild#setBanner:member(1)","d":"/**\n * Sets a new guild banner.\n *\n * @param banner - The new banner of the guild\n *\n * @param reason - Reason for changing the guild's banner\n *\n * @example\n * ```js\n * guild.setBanner('./banner.png')\n *  .then(updated => console.log('Updated the guild banner'))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setBanner","c":"discord.js!Guild#setBanner"},{"k":"Content","t":"("},{"k":"Reference","t":"banner","c":"discord.js!~banner"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1212,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"banner","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"reason","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setBanner"},{"k":"Method","c":"discord.js!Guild#setDefaultMessageNotifications:member(1)","d":"/**\n * Edits the setting of the default message notifications of the guild.\n *\n * @param defaultMessageNotifications - The new default message notification level of the guild\n *\n * @param reason - Reason for changing the setting of the default message notifications\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultMessageNotifications","c":"discord.js!Guild#setDefaultMessageNotifications"},{"k":"Content","t":"(  "},{"k":"Reference","t":"defaultMessageNotifications","c":"discord.js!~defaultMessageNotifications"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildDefaultMessageNotifications","c":"discord-api-types!GuildDefaultMessageNotifications:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1052,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultMessageNotifications","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultMessageNotifications"},{"k":"Method","c":"discord.js!Guild#setDiscoverySplash:member(1)","d":"/**\n * Sets a new guild discovery splash image.\n *\n * @param discoverySplash - The new discovery splash image of the guild\n *\n * @param reason - Reason for changing the guild's discovery splash image\n *\n * @example\n * ```js\n * // Edit the guild discovery splash\n * guild.setDiscoverySplash('./discoverysplash.png')\n *   .then(updated => console.log('Updated the guild discovery splash'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDiscoverySplash","c":"discord.js!Guild#setDiscoverySplash"},{"k":"Content","t":"(  "},{"k":"Reference","t":"discoverySplash","c":"discord.js!~discoverySplash"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1198,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"discoverySplash","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"reason","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDiscoverySplash"},{"k":"Method","c":"discord.js!Guild#setExplicitContentFilter:member(1)","d":"/**\n * Edits the level of the explicit content filter.\n *\n * @param explicitContentFilter - The new level of the explicit content filter\n *\n * @param reason - Reason for changing the level of the guild's explicit content filter\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setExplicitContentFilter","c":"discord.js!Guild#setExplicitContentFilter"},{"k":"Content","t":"(  "},{"k":"Reference","t":"explicitContentFilter","c":"discord.js!~explicitContentFilter"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildExplicitContentFilter","c":"discord-api-types!GuildExplicitContentFilter:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1041,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"explicitContentFilter","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setExplicitContentFilter"},{"k":"Method","c":"discord.js!Guild#setIcon:member(1)","d":"/**\n * Sets a new guild icon.\n *\n * @param icon - The new icon of the guild\n *\n * @param reason - Reason for changing the guild's icon\n *\n * @example\n * ```js\n * // Edit the guild icon\n * guild.setIcon('./icon.png')\n *  .then(updated => console.log('Updated the guild icon'))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setIcon","c":"discord.js!Guild#setIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"icon","c":"discord.js!~icon"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1152,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"icon","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"reason","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setIcon"},{"k":"Method","c":"discord.js!Guild#setMFALevel:member(1)","d":"/**\n * Sets the guild's MFA level <info>An elevated MFA level requires guild moderators to have 2FA enabled.</info>\n *\n * @param level - The MFA level\n *\n * @param reason - Reason for changing the guild's MFA level\n *\n * @example\n * ```js\n * // Set the MFA level of the guild to Elevated\n * guild.setMFALevel(GuildMFALevel.Elevated)\n *   .then(guild => console.log(\"Set guild's MFA level to Elevated\"))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setMFALevel","c":"discord.js!Guild#setMFALevel"},{"k":"Content","t":"("},{"k":"Reference","t":"level","c":"discord.js!~level"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMFALevel","c":"discord-api-types!GuildMFALevel:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1315,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"level","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setMFALevel"},{"k":"Method","c":"discord.js!Guild#setName:member(1)","d":"/**\n * Edits the name of the guild.\n *\n * @param name - The new name of the guild\n *\n * @param reason - Reason for changing the guild's name\n *\n * @example\n * ```js\n * // Edit the guild name\n * guild.setName('Discord Guild')\n *  .then(updated => console.log(`Updated guild name to ${updated.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!Guild#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1077,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!Guild#setOwner:member(1)","d":"/**\n * Sets a new owner of the guild.\n *\n * @param owner - The new owner of the guild\n *\n * @param reason - Reason for setting the new owner\n *\n * @example\n * ```js\n * // Edit the guild owner\n * guild.setOwner(guild.members.cache.first())\n *  .then(guild => guild.fetchOwner())\n *  .then(owner => console.log(`Updated the guild owner to ${owner.displayName}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setOwner","c":"discord.js!Guild#setOwner"},{"k":"Content","t":"("},{"k":"Reference","t":"owner","c":"discord.js!~owner"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1168,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"owner","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setOwner"},{"k":"Method","c":"discord.js!Guild#setPreferredLocale:member(1)","d":"/**\n * Edits the preferred locale of the guild.\n *\n * @param preferredLocale - The new preferred locale of the guild\n *\n * @param reason - Reason for changing the guild's preferred locale\n *\n * @example\n * ```js\n * // Edit the guild preferred locale\n * guild.setPreferredLocale('en-US')\n *  .then(updated => console.log(`Updated guild preferred locale to ${guild.preferredLocale}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPreferredLocale","c":"discord.js!Guild#setPreferredLocale"},{"k":"Content","t":"("},{"k":"Reference","t":"preferredLocale","c":"discord.js!~preferredLocale"},{"k":"Content","t":": "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1257,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"preferredLocale","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPreferredLocale"},{"k":"Method","c":"discord.js!Guild#setPremiumProgressBarEnabled:member(1)","d":"/**\n * Edits the enabled state of the guild's premium progress bar\n *\n * @param enabled - The new enabled state of the guild's premium progress bar\n *\n * @param reason - Reason for changing the state of the guild's premium progress bar\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPremiumProgressBarEnabled","c":"discord.js!Guild#setPremiumProgressBarEnabled"},{"k":"Content","t":"("},{"k":"Reference","t":"enabled","c":"discord.js!~enabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1267,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"enabled","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPremiumProgressBarEnabled"},{"k":"Method","c":"discord.js!Guild#setPublicUpdatesChannel:member(1)","d":"/**\n * Edits the community updates channel of the guild.\n *\n * @param publicUpdatesChannel - The new community updates channel\n *\n * @param reason - Reason for changing the guild's community updates channel\n *\n * @example\n * ```js\n * // Edit the guild community updates channel\n * guild.setPublicUpdatesChannel(channel)\n *  .then(updated => console.log(`Updated guild community updates channel to ${guild.publicUpdatesChannel.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPublicUpdatesChannel","c":"discord.js!Guild#setPublicUpdatesChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"publicUpdatesChannel","c":"discord.js!~publicUpdatesChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1242,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"publicUpdatesChannel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPublicUpdatesChannel"},{"k":"Method","c":"discord.js!Guild#setRulesChannel:member(1)","d":"/**\n * Edits the rules channel of the guild.\n *\n * @param rulesChannel - The new rules channel\n *\n * @param reason - Reason for changing the guild's rules channel\n *\n * @example\n * ```js\n * // Edit the guild rules channel\n * guild.setRulesChannel(channel)\n *  .then(updated => console.log(`Updated guild rules channel to ${guild.rulesChannel.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setRulesChannel","c":"discord.js!Guild#setRulesChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"rulesChannel","c":"discord.js!~rulesChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1227,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rulesChannel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRulesChannel"},{"k":"Method","c":"discord.js!Guild#setSafetyAlertsChannel:member(1)","d":"/**\n * Edits the safety alerts channel of the guild.\n *\n * @param safetyAlertsChannel - The new safety alerts channel\n *\n * @param reason - Reason for changing the guild's safety alerts channel\n *\n * @example\n * ```js\n * // Edit the guild safety alerts channel\n * guild.setSafetyAlertsChannel(channel)\n *  .then(updated => console.log(`Updated guild safety alerts channel to ${updated.safetyAlertsChannel.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSafetyAlertsChannel","c":"discord.js!Guild#setSafetyAlertsChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"safetyAlertsChannel","c":"discord.js!~safetyAlertsChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1282,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"safetyAlertsChannel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSafetyAlertsChannel"},{"k":"Method","c":"discord.js!Guild#setSplash:member(1)","d":"/**\n * Sets a new guild invite splash image.\n *\n * @param splash - The new invite splash image of the guild\n *\n * @param reason - Reason for changing the guild's invite splash image\n *\n * @example\n * ```js\n * // Edit the guild splash\n * guild.setSplash('./splash.png')\n *  .then(updated => console.log('Updated the guild splash'))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSplash","c":"discord.js!Guild#setSplash"},{"k":"Content","t":"("},{"k":"Reference","t":"splash","c":"discord.js!~splash"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1183,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"splash","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"reason","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSplash"},{"k":"Method","c":"discord.js!Guild#setSystemChannel:member(1)","d":"/**\n * Edits the system channel of the guild.\n *\n * @param systemChannel - The new system channel\n *\n * @param reason - Reason for changing the guild's system channel\n *\n * @example\n * ```js\n * // Edit the guild system channel\n * guild.setSystemChannel(channel)\n *  .then(updated => console.log(`Updated guild system channel to ${guild.systemChannel.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSystemChannel","c":"discord.js!Guild#setSystemChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"systemChannel","c":"discord.js!~systemChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1122,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"systemChannel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSystemChannel"},{"k":"Method","c":"discord.js!Guild#setSystemChannelFlags:member(1)","d":"/**\n * Edits the flags of the default message notifications of the guild.\n *\n * @param systemChannelFlags - The new flags for the default message notifications\n *\n * @param reason - Reason for changing the flags of the default message notifications\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSystemChannelFlags","c":"discord.js!Guild#setSystemChannelFlags"},{"k":"Content","t":"("},{"k":"Reference","t":"systemChannelFlags","c":"discord.js!~systemChannelFlags"},{"k":"Content","t":": "},{"k":"Reference","t":"SystemChannelFlagsResolvable","c":"discord.js!SystemChannelFlagsResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1062,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"systemChannelFlags","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSystemChannelFlags"},{"k":"Method","c":"discord.js!Guild#setVerificationLevel:member(1)","d":"/**\n * Edits the verification level of the guild.\n *\n * @param verificationLevel - The new verification level of the guild\n *\n * @param reason - Reason for changing the guild's verification level\n *\n * @example\n * ```js\n * // Edit the guild verification level\n * guild.setVerificationLevel(1)\n *  .then(updated => console.log(`Updated guild verification level to ${guild.verificationLevel}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setVerificationLevel","c":"discord.js!Guild#setVerificationLevel"},{"k":"Content","t":"("},{"k":"Reference","t":"verificationLevel","c":"discord.js!~verificationLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1092,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"verificationLevel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setVerificationLevel"},{"k":"Method","c":"discord.js!Guild#setWidgetSettings:member(1)","d":"/**\n * Edits the guild's widget settings.\n *\n * @param settings - The widget settings for the guild\n *\n * @param reason - Reason for changing the guild's widget settings\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setWidgetSettings","c":"discord.js!Guild#setWidgetSettings"},{"k":"Content","t":"("},{"k":"Reference","t":"settings","c":"discord.js!~settings"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildWidgetSettingsData","c":"discord.js!GuildWidgetSettingsData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1292,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"settings","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setWidgetSettings"},{"k":"Property","c":"discord.js!Guild#shard:member","d":"/**\n * The Shard this Guild belongs to.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"shard","c":"discord.js!Guild#shard"},{"k":"Content","t":"(): "},{"k":"Reference","t":"WebSocketShard","c":"discord.js!WebSocketShard:class"},{"k":"Content","t":";"}],"l":134,"co":3,"ro":true,"op":false,"r":"Public","n":"shard","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#shardId:member","d":"/**\n * The id of the shard this Guild belongs to.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shardId","c":"discord.js!Guild#shardId"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":126,"co":3,"ro":false,"op":false,"r":"Public","n":"shardId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#splash:member","d":"/**\n * The hash of the guild invite splash image\n */\n","ex":[{"k":"Content","t":"undefined splash :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":24,"ro":false,"op":true,"r":"Public","n":"splash","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#stageInstances:member","d":"/**\n * A manager of the stage instances of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stageInstances","c":"discord.js!Guild#stageInstances"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstanceManager","c":"discord.js!StageInstanceManager:class"},{"k":"Content","t":";"}],"l":90,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstances","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#stickers:member","d":"/**\n * A manager of the stickers belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stickers","c":"discord.js!Guild#stickers"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildStickerManager","c":"discord.js!GuildStickerManager:class"},{"k":"Content","t":";"}],"l":462,"co":3,"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#systemChannel:member","d":"/**\n * System channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"systemChannel","c":"discord.js!Guild#systemChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":518,"co":3,"ro":true,"op":false,"r":"Public","n":"systemChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#systemChannelFlags:member","d":"/**\n * The value set for the guild's system channel flags\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"systemChannelFlags","c":"discord.js!Guild#systemChannelFlags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SystemChannelFlagsBitField","c":"discord.js!SystemChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":278,"co":3,"ro":false,"op":false,"r":"Public","n":"systemChannelFlags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#systemChannelId:member","d":"/**\n * The system channel's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"systemChannelId","c":"discord.js!Guild#systemChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":210,"co":3,"ro":false,"op":false,"r":"Public","n":"systemChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Guild#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1458,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!Guild#vanityURLCode:member","d":"/**\n * The vanity invite code of the guild, if any\n */\n","ex":[{"k":"Content","t":"undefined vanityURLCode :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":56,"ro":false,"op":true,"r":"Public","n":"vanityURLCode","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#vanityURLUses:member","d":"/**\n * The use count of the vanity URL code of the guild, if any <info>You will need to fetch this parameter using {@link Guild.fetchVanityData} if you want to receive it</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"vanityURLUses","c":"discord.js!Guild#vanityURLUses"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":349,"co":3,"ro":false,"op":false,"r":"Public","n":"vanityURLUses","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#verificationLevel:member","d":"/**\n * The verification level of the guild\n */\n","ex":[{"k":"Content","t":"undefined verificationLevel :"},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":48,"ro":false,"op":false,"r":"Public","n":"verificationLevel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#verified:member","d":"/**\n * Whether this guild is verified\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly verified :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":86,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#voiceAdapterCreator:member","d":"/**\n * The voice state adapter for this guild that can be used with `@discordjs/voice` to play audio in voice and stage channels.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"voiceAdapterCreator","c":"discord.js!Guild#voiceAdapterCreator"},{"k":"Content","t":"(): "},{"k":"Reference","t":"InternalDiscordGatewayAdapterCreator","c":"discord.js!InternalDiscordGatewayAdapterCreator:type"},{"k":"Content","t":";"}],"l":1413,"co":3,"ro":true,"op":false,"r":"Public","n":"voiceAdapterCreator","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#voiceStates:member","d":"/**\n * A manager of the voice states of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"voiceStates","c":"discord.js!Guild#voiceStates"},{"k":"Content","t":": "},{"k":"Reference","t":"VoiceStateManager","c":"discord.js!VoiceStateManager:class"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":false,"op":false,"r":"Public","n":"voiceStates","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#widgetChannel:member","d":"/**\n * Widget channel for this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"widgetChannel","c":"discord.js!Guild#widgetChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":527,"co":3,"ro":true,"op":false,"r":"Public","n":"widgetChannel","prtr":{"st":3,"en":14},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#widgetChannelId:member","d":"/**\n * The widget channel's id, if enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"widgetChannelId","c":"discord.js!Guild#widgetChannelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":236,"co":3,"ro":false,"op":false,"r":"Public","n":"widgetChannelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Guild#widgetEnabled:member","d":"/**\n * Whether widget images are enabled on this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"widgetEnabled","c":"discord.js!Guild#widgetEnabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":226,"co":3,"ro":false,"op":false,"r":"Public","n":"widgetEnabled","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Guild#widgetImageURL:member(1)","d":"/**\n * Returns a URL for the PNG widget of the guild.\n *\n * @param style - The style for the widget image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"widgetImageURL","c":"discord.js!Guild#widgetImageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"style","c":"discord.js!~style"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildWidgetStyle","c":"discord-api-types!GuildWidgetStyle:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":733,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"style","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"widgetImageURL"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!GuildApplicationCommandManager:class","d":"/**\n * An extension for guild-specific application commands.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildApplicationCommandManager","c":"discord.js!GuildApplicationCommandManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ApplicationCommandManager","c":"discord.js!ApplicationCommandManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":", "},{"k":"Content","t":"{}"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildApplicationCommandManager.js","l":10,"co":1,"r":"Public","ab":false,"n":"GuildApplicationCommandManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildApplicationCommandManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":28,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildApplicationCommandManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#create:member(1)","d":"/**\n * Creates an application command.\n *\n * @param command - The command\n *\n * @param guildId - The guild's id to create this command in, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Create a new command\n * client.application.commands.create({\n *   name: 'test',\n *   description: 'A test command',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildApplicationCommandManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":141,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#delete:member(1)","d":"/**\n * Deletes an application command.\n *\n * @param command - The command to delete\n *\n * @param guildId - The guild's id where the command is registered, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Delete a command\n * guild.commands.delete('123456789012345678')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildApplicationCommandManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":217,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#edit:member(1)","d":"/**\n * Edits an application command.\n *\n * @param command - The command to edit\n *\n * @param data - The data to update the command with\n *\n * @param guildId - The guild's id where the command registered, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Edit an existing command\n * client.application.commands.edit('123456789012345678', {\n *   description: 'New description',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildApplicationCommandManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"command","c":"discord.js!~command"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandResolvable","c":"discord.js!ApplicationCommandResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":195,"co":3,"sta":false,"rtr":{"st":14,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"command","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#fetch:member(1)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildApplicationCommandManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchGuildApplicationCommandFetchOptions","c":"discord.js!FetchGuildApplicationCommandFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":105,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#fetch:member(2)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildApplicationCommandManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchGuildApplicationCommandFetchOptions","c":"discord.js!FetchGuildApplicationCommandFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":105,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#fetch:member(3)","d":"/**\n * Obtains one or multiple application commands from Discord, or the cache if it's already available.\n *\n * @param id - Options for fetching application command(s)\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a single command\n * client.application.commands.fetch('123456789012345678')\n *   .then(command => console.log(`Fetched command ${command.name}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all commands\n * guild.commands.fetch()\n *   .then(commands => console.log(`Fetched ${commands.size} commands`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildApplicationCommandManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"undefined"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchGuildApplicationCommandFetchOptions","c":"discord.js!FetchGuildApplicationCommandFetchOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":105,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildApplicationCommandManager#guild:member","d":"/**\n * The guild that this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildApplicationCommandManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildApplicationCommandManager#permissions:member","d":"/**\n * The manager for permissions of arbitrary commands on this guild\n */\n","ex":[{"k":"Content","t":"undefined permissions :"},{"k":"Reference","t":"ApplicationCommandPermissionsManager","c":"discord.js!ApplicationCommandPermissionsManager:class"},{"k":"Content","t":";"}],"l":24,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildApplicationCommandManager#set:member(1)","d":"/**\n * Sets all the commands for this application or guild.\n *\n * @param commands - The commands\n *\n * @param guildId - The guild's id to create the commands in, ignored when using a {@link GuildApplicationCommandManager}\n *\n * @example\n * ```js\n * // Set all commands to just this one\n * client.application.commands.set([\n *   {\n *     name: 'test',\n *     description: 'A test command',\n *   },\n * ])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all commands\n * guild.commands.set([])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!GuildApplicationCommandManager#set"},{"k":"Content","t":"("},{"k":"Reference","t":"commands","c":"discord.js!~commands"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandDataResolvable","c":"discord.js!ApplicationCommandDataResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandManager.js","l":170,"co":3,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"commands","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"discord.js!GuildAuditLogs:class","d":"/**\n * Audit logs entries are held in this class.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildAuditLogs","c":"discord.js!GuildAuditLogs:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsResolvable","c":"discord.js!GuildAuditLogsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":"> "}],"pat":"src/structures/GuildAuditLogs.js","l":13,"co":1,"r":"Public","tps":[{"tp":"Event","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"GuildAuditLogs","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildAuditLogs#entries:member","d":"/**\n * The entries for this guild's audit logs\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entries","c":"discord.js!GuildAuditLogs#entries"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":false,"op":false,"r":"Public","n":"entries","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildAuditLogs#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!GuildAuditLogs#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1469,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildAuditLogsActionType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildAuditLogsActionType","c":"discord.js!GuildAuditLogsActionType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"[keyof "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"][1] | 'All'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5668,"co":1,"r":"Public","n":"GuildAuditLogsActionType","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!GuildAuditLogsEntry:class","d":"/**\n * Audit logs entry.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"TAction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsResolvable","c":"discord.js!GuildAuditLogsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"TActionType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsActionType","c":"discord.js!GuildAuditLogsActionType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TAction"},{"k":"Content","t":" extends keyof "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"  ? "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"TAction"},{"k":"Content","t":"][1]  : "},{"k":"Reference","t":"GuildAuditLogsActionType","c":"discord.js!GuildAuditLogsActionType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"TTargetType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TAction"},{"k":"Content","t":" extends keyof "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"  ? "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"TAction"},{"k":"Content","t":"][0]  : "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"TResolvedType"},{"k":"Content","t":" = "},{"k":"Reference","t":"TAction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"null"},{"k":"Content","t":" ? "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":" : "},{"k":"Reference","t":"TAction"},{"k":"Content","t":",> "}],"pat":"src/structures/GuildAuditLogsEntry.js","l":103,"co":1,"r":"Public","tps":[{"tp":"TAction","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}},{"tp":"TActionType","ctr":{"st":11,"en":12},"dtr":{"st":13,"en":22}},{"tp":"TTargetType","ctr":{"st":25,"en":26},"dtr":{"st":27,"en":36}},{"tp":"TResolvedType","ctr":{"st":0,"en":0},"dtr":{"st":39,"en":46}}],"ab":false,"n":"GuildAuditLogsEntry","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildAuditLogsEntry#action:member","d":"/**\n * The type of action that occurred.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"action","c":"discord.js!GuildAuditLogsEntry#action"},{"k":"Content","t":": "},{"k":"Reference","t":"TResolvedType"},{"k":"Content","t":";"}],"l":129,"co":3,"ro":false,"op":false,"r":"Public","n":"action","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildAuditLogsEntry.actionType:member(1)","d":"/**\n * Finds the action type from the guild audit log entry action.\n *\n * @param action - The action target\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"actionType","c":"discord.js!GuildAuditLogsEntry.actionType"},{"k":"Content","t":"("},{"k":"Reference","t":"action","c":"discord.js!~action"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildAuditLogsActionType","c":"discord.js!GuildAuditLogsActionType:type"},{"k":"Content","t":";"}],"l":386,"co":3,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"action","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"actionType"},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#actionType:member","d":"/**\n * The action type of this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"actionType","c":"discord.js!GuildAuditLogsEntry#actionType"},{"k":"Content","t":": "},{"k":"Reference","t":"TActionType"},{"k":"Content","t":";"}],"l":123,"co":3,"ro":false,"op":false,"r":"Public","n":"actionType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#changes:member","d":"/**\n * Specific property changes\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"changes","c":"discord.js!GuildAuditLogsEntry#changes"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogChange","c":"discord.js!AuditLogChange:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":false,"op":false,"r":"Public","n":"changes","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#createdAt:member","d":"/**\n * The time this entry was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!GuildAuditLogsEntry#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":477,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#createdTimestamp:member","d":"/**\n * The timestamp this entry was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!GuildAuditLogsEntry#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":468,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#executor:member","d":"/**\n * The user that executed this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"executor","c":"discord.js!GuildAuditLogsEntry#executor"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":147,"co":3,"ro":false,"op":false,"r":"Public","n":"executor","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#executorId:member","d":"/**\n * The id of the user that executed this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"executorId","c":"discord.js!GuildAuditLogsEntry#executorId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":141,"co":3,"ro":false,"op":false,"r":"Public","n":"executorId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#extra:member","d":"/**\n * Any extra data from the entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"extra","c":"discord.js!GuildAuditLogsEntry#extra"},{"k":"Content","t":": "},{"k":"Reference","t":"TResolvedType"},{"k":"Content","t":" extends keyof "},{"k":"Reference","t":"GuildAuditLogsEntryExtraField","c":"discord.js!GuildAuditLogsEntryExtraField:interface"},{"k":"Content","t":"  ? "},{"k":"Reference","t":"GuildAuditLogsEntryExtraField","c":"discord.js!GuildAuditLogsEntryExtraField:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"TResolvedType"},{"k":"Content","t":"]  : "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":180,"co":3,"ro":false,"op":false,"r":"Public","n":"extra","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#id:member","d":"/**\n * The entry's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!GuildAuditLogsEntry#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":174,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#reason:member","d":"/**\n * The reason of this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reason","c":"discord.js!GuildAuditLogsEntry#reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":135,"co":3,"ro":false,"op":false,"r":"Public","n":"reason","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#target:member","d":"/**\n * The target of this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"target","c":"discord.js!GuildAuditLogsEntry#target"},{"k":"Content","t":": "},{"k":"Reference","t":"TTargetType"},{"k":"Content","t":" extends keyof "},{"k":"Reference","t":"GuildAuditLogsEntryTargetField","c":"discord.js!GuildAuditLogsEntryTargetField:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TActionType"},{"k":"Content","t":">  ? "},{"k":"Reference","t":"GuildAuditLogsEntryTargetField","c":"discord.js!GuildAuditLogsEntryTargetField:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TActionType"},{"k":"Content","t":">["},{"k":"Reference","t":"TTargetType"},{"k":"Content","t":"]  : "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" } | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":284,"co":3,"ro":false,"op":false,"r":"Public","n":"target","prtr":{"st":3,"en":24},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#targetId:member","d":"/**\n * The id of the target of this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetId","c":"discord.js!GuildAuditLogsEntry#targetId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":278,"co":3,"ro":false,"op":false,"r":"Public","n":"targetId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildAuditLogsEntry.Targets:member","d":"/**\n * Key mirror of all available audit log targets.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Targets","c":"discord.js!GuildAuditLogsEntry.Targets"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildAuditLogsTargets","c":"discord.js!GuildAuditLogsTargets:type"},{"k":"Content","t":";"}],"l":109,"co":3,"ro":false,"op":false,"r":"Public","n":"Targets","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildAuditLogsEntry.targetType:member(1)","d":"/**\n * Finds the target type of a guild audit log entry.\n *\n * @param target - The action target\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"targetType","c":"discord.js!GuildAuditLogsEntry.targetType"},{"k":"Content","t":"("},{"k":"Reference","t":"target","c":"discord.js!~target"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":";"}],"l":362,"co":3,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"target","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"targetType"},{"k":"Property","c":"discord.js!GuildAuditLogsEntry#targetType:member","d":"/**\n * The target type of this entry\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetType","c":"discord.js!GuildAuditLogsEntry#targetType"},{"k":"Content","t":": "},{"k":"Reference","t":"TTargetType"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"targetType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildAuditLogsEntry#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!GuildAuditLogsEntry#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1503,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Interface","c":"discord.js!GuildAuditLogsEntryExtraField:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildAuditLogsEntryExtraField","c":"discord.js!GuildAuditLogsEntryExtraField:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5670,"co":1,"r":"Public","n":"GuildAuditLogsEntryExtraField","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"121\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.ApplicationCommandPermissionUpdate","c":"discord-api-types!AuditLogEvent.ApplicationCommandPermissionUpdate:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"applicationId","c":"discord.js!~__type#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5698,"co":3,"ro":false,"op":false,"r":"Public","n":"\"121\"","prtr":{"st":3,"en":8}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"13\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.ChannelOverwriteCreate","c":"discord-api-types!AuditLogEvent.ChannelOverwriteCreate:member"},{"k":"Content","t":"]:  "},{"k":"Content","t":" "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"name","c":"discord.js!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Role","c":"discord-api-types!AuditLogOptionsType.Role:member"},{"k":"Content","t":" }  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Member","c":"discord-api-types!AuditLogOptionsType.Member:member"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5680,"co":3,"ro":false,"op":false,"r":"Public","n":"\"13\"","prtr":{"st":3,"en":28}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"14\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.ChannelOverwriteUpdate","c":"discord-api-types!AuditLogEvent.ChannelOverwriteUpdate:member"},{"k":"Content","t":"]:  "},{"k":"Content","t":" "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"name","c":"discord.js!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Role","c":"discord-api-types!AuditLogOptionsType.Role:member"},{"k":"Content","t":" }  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Member","c":"discord-api-types!AuditLogOptionsType.Member:member"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5685,"co":3,"ro":false,"op":false,"r":"Public","n":"\"14\"","prtr":{"st":3,"en":28}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"143\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.AutoModerationBlockMessage","c":"discord-api-types!AuditLogEvent.AutoModerationBlockMessage:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{  "},{"k":"Reference","t":"autoModerationRuleName","c":"discord.js!~__type#autoModerationRuleName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"autoModerationRuleTriggerType","c":"discord.js!~__type#autoModerationRuleTriggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogRuleTriggerType","c":"discord-api-types!AuditLogRuleTriggerType:type"},{"k":"Content","t":";  "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; }"},{"k":"Content","t":";"}],"l":5699,"co":3,"ro":false,"op":false,"r":"Public","n":"\"143\"","prtr":{"st":3,"en":20}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"144\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.AutoModerationFlagToChannel","c":"discord-api-types!AuditLogEvent.AutoModerationFlagToChannel:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{  "},{"k":"Reference","t":"autoModerationRuleName","c":"discord.js!~__type#autoModerationRuleName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"autoModerationRuleTriggerType","c":"discord.js!~__type#autoModerationRuleTriggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogRuleTriggerType","c":"discord-api-types!AuditLogRuleTriggerType:type"},{"k":"Content","t":";  "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; }"},{"k":"Content","t":";"}],"l":5704,"co":3,"ro":false,"op":false,"r":"Public","n":"\"144\"","prtr":{"st":3,"en":20}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"145\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.AutoModerationUserCommunicationDisabled","c":"discord-api-types!AuditLogEvent.AutoModerationUserCommunicationDisabled:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{  "},{"k":"Reference","t":"autoModerationRuleName","c":"discord.js!~__type#autoModerationRuleName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  "},{"k":"Reference","t":"autoModerationRuleTriggerType","c":"discord.js!~__type#autoModerationRuleTriggerType"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogRuleTriggerType","c":"discord-api-types!AuditLogRuleTriggerType:type"},{"k":"Content","t":";  "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; }"},{"k":"Content","t":";"}],"l":5709,"co":3,"ro":false,"op":false,"r":"Public","n":"\"145\"","prtr":{"st":3,"en":20}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"15\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.ChannelOverwriteDelete","c":"discord-api-types!AuditLogEvent.ChannelOverwriteDelete:member"},{"k":"Content","t":"]:  "},{"k":"Content","t":" "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"  | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"name","c":"discord.js!~__type#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Role","c":"discord-api-types!AuditLogOptionsType.Role:member"},{"k":"Content","t":" }  | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"AuditLogOptionsType.Member","c":"discord-api-types!AuditLogOptionsType.Member:member"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5690,"co":3,"ro":false,"op":false,"r":"Public","n":"\"15\"","prtr":{"st":3,"en":28}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"20\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MemberKick","c":"discord-api-types!AuditLogEvent.MemberKick:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"integrationType","c":"discord.js!~__type#integrationType"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" } | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":5671,"co":3,"ro":false,"op":false,"r":"Public","n":"\"20\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"21\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MemberPrune","c":"discord-api-types!AuditLogEvent.MemberPrune:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"removed","c":"discord.js!~__type#removed"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"; "},{"k":"Reference","t":"days","c":"discord.js!~__type#days"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5673,"co":3,"ro":false,"op":false,"r":"Public","n":"\"21\"","prtr":{"st":3,"en":12}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"25\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MemberRoleUpdate","c":"discord-api-types!AuditLogEvent.MemberRoleUpdate:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"integrationType","c":"discord.js!~__type#integrationType"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" } | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":5672,"co":3,"ro":false,"op":false,"r":"Public","n":"\"25\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"26\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MemberMove","c":"discord-api-types!AuditLogEvent.MemberMove:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5674,"co":3,"ro":false,"op":false,"r":"Public","n":"\"26\"","prtr":{"st":3,"en":16}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"27\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MemberDisconnect","c":"discord-api-types!AuditLogEvent.MemberDisconnect:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5679,"co":3,"ro":false,"op":false,"r":"Public","n":"\"27\"","prtr":{"st":3,"en":8}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"72\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MessageDelete","c":"discord-api-types!AuditLogEvent.MessageDelete:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5675,"co":3,"ro":false,"op":false,"r":"Public","n":"\"72\"","prtr":{"st":3,"en":16}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"73\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MessageBulkDelete","c":"discord-api-types!AuditLogEvent.MessageBulkDelete:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5676,"co":3,"ro":false,"op":false,"r":"Public","n":"\"73\"","prtr":{"st":3,"en":16}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"74\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MessagePin","c":"discord-api-types!AuditLogEvent.MessagePin:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; "},{"k":"Reference","t":"messageId","c":"discord.js!~__type#messageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5677,"co":3,"ro":false,"op":false,"r":"Public","n":"\"74\"","prtr":{"st":3,"en":16}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"75\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.MessageUnpin","c":"discord-api-types!AuditLogEvent.MessageUnpin:member"},{"k":"Content","t":"]: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }; "},{"k":"Reference","t":"messageId","c":"discord.js!~__type#messageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5678,"co":3,"ro":false,"op":false,"r":"Public","n":"\"75\"","prtr":{"st":3,"en":16}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"83\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.StageInstanceCreate","c":"discord-api-types!AuditLogEvent.StageInstanceCreate:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5695,"co":3,"ro":false,"op":false,"r":"Public","n":"\"83\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"84\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.StageInstanceUpdate","c":"discord-api-types!AuditLogEvent.StageInstanceUpdate:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5697,"co":3,"ro":false,"op":false,"r":"Public","n":"\"84\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryExtraField#\"85\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"AuditLogEvent.StageInstanceDelete","c":"discord-api-types!AuditLogEvent.StageInstanceDelete:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5696,"co":3,"ro":false,"op":false,"r":"Public","n":"\"85\"","prtr":{"st":3,"en":9}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildAuditLogsEntryTargetField:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildAuditLogsEntryTargetField","c":"discord.js!GuildAuditLogsEntryTargetField:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TActionType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsActionType","c":"discord.js!GuildAuditLogsActionType:type"},{"k":"Content","t":"> "}],"pat":"typings/index.d.ts","l":5716,"co":1,"r":"Public","tps":[{"tp":"TActionType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"GuildAuditLogsEntryTargetField","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#ApplicationCommand:member","d":"","ex":[{"k":"Reference","t":"ApplicationCommand","c":"discord.js!GuildAuditLogsEntryTargetField#ApplicationCommand"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5728,"co":3,"ro":false,"op":false,"r":"Public","n":"ApplicationCommand","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#AutoModerationRule:member","d":"","ex":[{"k":"Reference","t":"AutoModerationRule","c":"discord.js!GuildAuditLogsEntryTargetField#AutoModerationRule"},{"k":"Content","t":": "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":";"}],"l":5729,"co":3,"ro":false,"op":false,"r":"Public","n":"AutoModerationRule","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Channel:member","d":"","ex":[{"k":"Reference","t":"Channel","c":"discord.js!GuildAuditLogsEntryTargetField#Channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; ["},{"k":"Reference","t":"x","c":"discord.js!~x"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"]: "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5723,"co":3,"ro":false,"op":false,"r":"Public","n":"Channel","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Guild:member","d":"","ex":[{"k":"Reference","t":"Guild","c":"discord.js!GuildAuditLogsEntryTargetField#Guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":5718,"co":3,"ro":false,"op":false,"r":"Public","n":"Guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#GuildScheduledEvent:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildAuditLogsEntryTargetField#GuildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":";"}],"l":5727,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildScheduledEvent","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Integration:member","d":"","ex":[{"k":"Reference","t":"Integration","c":"discord.js!GuildAuditLogsEntryTargetField#Integration"},{"k":"Content","t":": "},{"k":"Reference","t":"Integration","c":"discord.js!Integration:class"},{"k":"Content","t":";"}],"l":5722,"co":3,"ro":false,"op":false,"r":"Public","n":"Integration","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Invite:member","d":"","ex":[{"k":"Reference","t":"Invite","c":"discord.js!GuildAuditLogsEntryTargetField#Invite"},{"k":"Content","t":": "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":";"}],"l":5720,"co":3,"ro":false,"op":false,"r":"Public","n":"Invite","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Message:member","d":"","ex":[{"k":"Reference","t":"Message","c":"discord.js!GuildAuditLogsEntryTargetField#Message"},{"k":"Content","t":": "},{"k":"Reference","t":"TActionType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AuditLogEvent.MessageBulkDelete","c":"discord-api-types!AuditLogEvent.MessageBulkDelete:member"},{"k":"Content","t":" ? "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" } : "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":5721,"co":3,"ro":false,"op":false,"r":"Public","n":"Message","prtr":{"st":2,"en":13}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#StageInstance:member","d":"","ex":[{"k":"Reference","t":"StageInstance","c":"discord.js!GuildAuditLogsEntryTargetField#StageInstance"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":";"}],"l":5725,"co":3,"ro":false,"op":false,"r":"Public","n":"StageInstance","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Sticker:member","d":"","ex":[{"k":"Reference","t":"Sticker","c":"discord.js!GuildAuditLogsEntryTargetField#Sticker"},{"k":"Content","t":": "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":";"}],"l":5726,"co":3,"ro":false,"op":false,"r":"Public","n":"Sticker","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Thread:member","d":"","ex":[{"k":"Reference","t":"Thread","c":"discord.js!GuildAuditLogsEntryTargetField#Thread"},{"k":"Content","t":": "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":" | { "},{"k":"Reference","t":"id","c":"discord.js!~__type#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"; ["},{"k":"Reference","t":"x","c":"discord.js!~x"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"]: "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" }"},{"k":"Content","t":";"}],"l":5724,"co":3,"ro":false,"op":false,"r":"Public","n":"Thread","prtr":{"st":2,"en":14}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#User:member","d":"","ex":[{"k":"Reference","t":"User","c":"discord.js!GuildAuditLogsEntryTargetField#User"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":5717,"co":3,"ro":false,"op":false,"r":"Public","n":"User","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsEntryTargetField#Webhook:member","d":"","ex":[{"k":"Reference","t":"Webhook","c":"discord.js!GuildAuditLogsEntryTargetField#Webhook"},{"k":"Content","t":": "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":";"}],"l":5719,"co":3,"ro":false,"op":false,"r":"Public","n":"Webhook","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildAuditLogsFetchOptions:interface","d":"/**\n * Options used to fetch audit logs.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildAuditLogsFetchOptions","c":"discord.js!GuildAuditLogsFetchOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildAuditLogsResolvable","c":"discord.js!GuildAuditLogsResolvable:type"},{"k":"Content","t":"> "}],"pat":"src/structures/Guild.js","l":737,"co":1,"r":"Public","tps":[{"tp":"Event","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"GuildAuditLogsFetchOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildAuditLogsFetchOptions#after:member","d":"/**\n * Consider only entries after this entry\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!GuildAuditLogsFetchOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5734,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsFetchOptions#before:member","d":"/**\n * Consider only entries before this entry\n */\n","ex":[{"k":"Reference","t":"before","c":"discord.js!GuildAuditLogsFetchOptions#before"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildAuditLogsEntry","c":"discord.js!GuildAuditLogsEntry:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5733,"co":3,"ro":false,"op":true,"r":"Public","n":"before","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsFetchOptions#limit:member","d":"/**\n * The number of entries to return\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!GuildAuditLogsFetchOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5735,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsFetchOptions#type:member","d":"/**\n * Only return entries for this action type\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildAuditLogsFetchOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Event"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5737,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildAuditLogsFetchOptions#user:member","d":"/**\n * Only return entries for actions made by this user\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!GuildAuditLogsFetchOptions#user"},{"k":"Content","t":"?: "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5736,"co":3,"ro":false,"op":true,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!GuildAuditLogsResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildAuditLogsResolvable","c":"discord.js!GuildAuditLogsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AuditLogEvent","c":"discord-api-types!AuditLogEvent:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5740,"co":1,"r":"Public","n":"GuildAuditLogsResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!GuildAuditLogsTargets:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildAuditLogsTargets","c":"discord.js!GuildAuditLogsTargets:type"},{"k":"Content","t":" = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"key"},{"k":"Content","t":" in "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":"]: "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":";}"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5744,"co":1,"r":"Public","n":"GuildAuditLogsTargets","ttr":{"st":3,"en":10}},{"k":"TypeAlias","c":"discord.js!GuildAuditLogsTargetType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildAuditLogsTargetType","c":"discord.js!GuildAuditLogsTargetType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"[keyof "},{"k":"Reference","t":"GuildAuditLogsTypes","c":"discord.js!~GuildAuditLogsTypes:interface"},{"k":"Content","t":"][0] | 'All' | 'Unknown'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5742,"co":1,"r":"Public","n":"GuildAuditLogsTargetType","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!GuildBan:class","d":"/**\n * Represents a ban in a guild on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildBan.js","l":9,"co":1,"r":"Public","ab":false,"n":"GuildBan","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildBan#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildBan#fetch:member(1)","d":"/**\n * Fetches this GuildBan.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildBan#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":54,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildBan#guild:member","d":"/**\n * The guild in which the ban is\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildBan#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildBan#partial:member","d":"/**\n * Whether this GuildBan is partial. If the reason is not provided the value is null\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!GuildBan#partial"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildBan#reason:member","d":"/**\n * The reason for the ban\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reason","c":"discord.js!GuildBan#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildBan#user:member","d":"/**\n * The user this ban applies to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!GuildBan#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!GuildBanManager:class","d":"/**\n * Manages API methods for guild bans and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildBanManager","c":"discord.js!GuildBanManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBanResolvable","c":"discord.js!GuildBanResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildBanManager.js","l":18,"co":1,"r":"Public","ab":false,"n":"GuildBanManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildBanManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":29,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildBanManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildBanManager#create:member(1)","d":"/**\n * Bans a user from the guild.\n *\n * @param user - The user to ban\n *\n * @param options - Options for the ban\n *\n * @returns Result object will be resolved as specifically as possible. If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot be resolved, the user id will be the result.\n *\n * @example\n * ```js\n * // Ban a user by id (or with a user/guild member object)\n * guild.bans.create('84484653687267328')\n *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildBanManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BanOptions","c":"discord.js!BanOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildBanManager#fetch:member(1)","d":"/**\n * Fetches ban(s) from Discord.\n *\n * @param options - Options for fetching guild ban(s)\n *\n * @example\n * ```js\n * // Fetch multiple bans from a guild\n * guild.bans.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 5 bans from a guild without caching\n * guild.bans.fetch({ limit: 5, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban\n * guild.bans.fetch('351871113346809860')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban without checking cache\n * guild.bans.fetch({ user, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban without caching\n * guild.bans.fetch({ user, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildBanManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchBanOptions","c":"discord.js!FetchBanOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildBanManager#fetch:member(2)","d":"/**\n * Fetches ban(s) from Discord.\n *\n * @param options - Options for fetching guild ban(s)\n *\n * @example\n * ```js\n * // Fetch multiple bans from a guild\n * guild.bans.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 5 bans from a guild without caching\n * guild.bans.fetch({ limit: 5, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban\n * guild.bans.fetch('351871113346809860')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban without checking cache\n * guild.bans.fetch({ user, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single ban without caching\n * guild.bans.fetch({ user, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildBanManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchBansOptions","c":"discord.js!FetchBansOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildBanManager#guild:member","d":"/**\n * The guild this Manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildBanManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildBanManager#remove:member(1)","d":"/**\n * Unbans a user from the guild.\n *\n * @param user - The user to unban\n *\n * @param reason - Reason for unbanning user\n *\n * @example\n * ```js\n * // Unban a user by id (or with a user/guild member object)\n * guild.bans.remove('84484653687267328')\n *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!GuildBanManager#remove"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":196,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!GuildBanManager#resolve:member(1)","d":"/**\n * Resolves a GuildBanResolvable to a GuildBan object.\n *\n * @param ban - The ban that is in the guild\n */\n","ex":[{"k":"Content","t":"resolve(ban"},{"k":"Reference","t":"GuildBanResolvable","c":"discord.js!GuildBanResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":";"}],"l":51,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"ban","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildBanResolvable:type","d":"/**\n * Data that resolves to give a GuildBan object. This can be:\n *\n * * A GuildBan object\n *\n * * A User resolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildBanResolvable","c":"discord.js!GuildBanResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildBanManager.js","l":39,"co":1,"r":"Public","n":"GuildBanResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!GuildBasedChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", { "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" }>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6641,"co":1,"r":"Public","n":"GuildBasedChannel","ttr":{"st":3,"en":11}},{"k":"TypeAlias","c":"discord.js!GuildCacheMessage:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildCacheMessage","c":"discord.js!GuildCacheMessage:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":531,"co":1,"r":"Public","n":"GuildCacheMessage","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":23}},{"k":"Class","c":"discord.js!GuildChannel:class","d":"/**\n * Represents a guild channel from any of the following: - {@link TextChannel} - {@link VoiceChannel} - {@link CategoryChannel} - {@link NewsChannel} - {@link StageChannel} - {@link ForumChannel} - {@link MediaChannel}\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildChannel.js","l":24,"co":1,"r":"Public","ab":true,"n":"GuildChannel","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!GuildChannel:constructor(1)","d":"/**\n * Constructs a new instance of the `GuildChannel` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawGuildChannelData","c":"discord.js!~RawGuildChannelData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"immediatePatch","c":"discord.js!~immediatePatch"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":");"}],"l":24,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"data","ptr":{"st":7,"en":8},"op":true,"rs":false},{"pn":"client","ptr":{"st":11,"en":13},"op":true,"rs":false},{"pn":"immediatePatch","ptr":{"st":16,"en":17},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!GuildChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannel#clone:member(1)","d":"/**\n * Clones this channel.\n *\n * @param options - The options for cloning this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"clone","c":"discord.js!GuildChannel#clone"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildChannelCloneOptions","c":"discord.js!GuildChannelCloneOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":375,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"clone"},{"k":"Property","c":"discord.js!GuildChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!GuildChannel#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!GuildChannel#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"deletable","c":"discord.js!GuildChannel#deletable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":423,"co":3,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannel#delete:member(1)","d":"/**\n * Deletes this channel.\n *\n * @param reason - Reason for deleting this channel\n *\n * @example\n * ```js\n * // Delete the channel\n * channel.delete('making room for new channels')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildChannel#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":469,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildChannel#edit:member(1)","d":"/**\n * Edits the channel.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Edit a channel\n * channel.edit({ name: 'new-channel' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildChannel#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelEditOptions","c":"discord.js!GuildChannelEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":297,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildChannel#equals:member(1)","d":"/**\n * Checks if this channel has the same type, topic, position, name, overwrites, and id as another channel. In most cases, a simple `channel.id === channel2.id` will do, and is much faster too.\n *\n * @param channel - Channel to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!GuildChannel#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":398,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!GuildChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!GuildChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildChannel#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildChannel#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannel#isTextBased:member(1)","d":"/**\n * Indicates whether this channel is {@link TextBasedChannels | text-based}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isTextBased","c":"discord.js!GuildChannel#isTextBased"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":" & "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":130,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isTextBased"},{"k":"Method","c":"discord.js!GuildChannel#lockPermissions:member(1)","d":"/**\n * Locks in the permission overwrites from the parent channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"lockPermissions","c":"discord.js!GuildChannel#lockPermissions"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":268,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"lockPermissions"},{"k":"Property","c":"discord.js!GuildChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"manageable","c":"discord.js!GuildChannel#manageable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":432,"co":3,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"members","c":"discord.js!GuildChannel#members"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":281,"co":3,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!GuildChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"parent","c":"discord.js!GuildChannel#parent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":true,"op":false,"r":"Public","n":"parent","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"parentId","c":"discord.js!GuildChannel#parentId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":76,"co":3,"ro":false,"op":false,"r":"Public","n":"parentId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionOverwrites","c":"discord.js!GuildChannel#permissionOverwrites"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannel#permissionsFor:member(1)","d":"/**\n * Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.\n *\n * @param memberOrRole - The member or role to obtain the overall permissions for\n *\n * @param checkAdmin - Whether having the {@link discord-api-types#(PermissionFlagsBits:type).Administrator} permission will return all permissions\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsFor","c":"discord.js!GuildChannel#permissionsFor"},{"k":"Content","t":"("},{"k":"Reference","t":"memberOrRole","c":"discord.js!~memberOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":175,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"memberOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"permissionsFor"},{"k":"Method","c":"discord.js!GuildChannel#permissionsFor:member(2)","d":"/**\n * Gets the overall set of permissions for a member or role in this channel, taking into account channel overwrites.\n *\n * @param memberOrRole - The member or role to obtain the overall permissions for\n *\n * @param checkAdmin - Whether having the {@link discord-api-types#(PermissionFlagsBits:type).Administrator} permission will return all permissions\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsFor","c":"discord.js!GuildChannel#permissionsFor"},{"k":"Content","t":"(  "},{"k":"Reference","t":"memberOrRole","c":"discord.js!~memberOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":175,"co":3,"sta":false,"rtr":{"st":13,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"memberOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"permissionsFor"},{"k":"Property","c":"discord.js!GuildChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"permissionsLocked","c":"discord.js!GuildChannel#permissionsLocked"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":109,"co":3,"ro":true,"op":false,"r":"Public","n":"permissionsLocked","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"position","c":"discord.js!GuildChannel#position"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":150,"co":3,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rawPosition","c":"discord.js!GuildChannel#rawPosition"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannel#setName:member(1)","d":"/**\n * Sets a new name for the guild channel.\n *\n * @param name - The new name for the guild channel\n *\n * @param reason - Reason for changing the guild channel's name\n *\n * @example\n * ```js\n * // Set a new channel name\n * channel.setName('not_general')\n *   .then(newChannel => console.log(`Channel's new name is ${newChannel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!GuildChannel#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":312,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!GuildChannel#setParent:member(1)","d":"/**\n * Sets the parent of this channel.\n *\n * @param channel - The category channel to set as the parent\n *\n * @param options - The options for setting the parent\n *\n * @example\n * ```js\n * // Add a parent to a channel\n * message.channel.setParent('355908108431917066', { lockPermissions: false })\n *   .then(channel => console.log(`New parent of ${message.channel.name}: ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setParent","c":"discord.js!GuildChannel#setParent"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SetParentOptions","c":"discord.js!SetParentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":334,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"options","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setParent"},{"k":"Method","c":"discord.js!GuildChannel#setPosition:member(1)","d":"/**\n * Sets a new position for the guild channel.\n *\n * @param position - The new position for the guild channel\n *\n * @param options - Options for setting position\n *\n * @example\n * ```js\n * // Set a new channel position\n * channel.setPosition(2)\n *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPosition","c":"discord.js!GuildChannel#setPosition"},{"k":"Content","t":"("},{"k":"Reference","t":"position","c":"discord.js!~position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SetChannelPositionOptions","c":"discord.js!SetChannelPositionOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":360,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"position","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPosition"},{"k":"Method","c":"discord.js!GuildChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <#123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!GuildChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":91,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!GuildChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!GuildChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types!ChannelType.DM:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types!ChannelType.GroupDM:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"viewable","c":"discord.js!GuildChannel#viewable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":452,"co":3,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildChannelCloneOptions:interface","d":"/**\n * Options used to clone a guild channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildChannelCloneOptions","c":"discord.js!GuildChannelCloneOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannelCreateOptions","c":"discord.js!GuildChannelCreateOptions:interface"},{"k":"Content","t":", 'name'>"},{"k":"Content","t":" "}],"pat":"src/structures/GuildChannel.js","l":364,"co":1,"r":"Public","n":"GuildChannelCloneOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildChannelCloneOptions#name:member","d":"/**\n * Name of the new channel\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildChannelCloneOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5790,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!GuildChannelCreateOptions:interface","d":"/**\n * Options used to create a new channel in a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildChannelCreateOptions","c":"discord.js!GuildChannelCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CategoryCreateChannelOptions","c":"discord.js!CategoryCreateChannelOptions:interface"},{"k":"Content","t":", 'type'>"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":119,"co":1,"r":"Public","n":"GuildChannelCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildChannelCreateOptions#parent:member","d":"/**\n * Parent of the new channel\n */\n","ex":[{"k":"Reference","t":"parent","c":"discord.js!GuildChannelCreateOptions#parent"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5778,"co":3,"ro":false,"op":true,"r":"Public","n":"parent","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelCreateOptions#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildChannelCreateOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"ChannelType","c":"discord-api-types!ChannelType:enum"},{"k":"Content","t":",  | "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types!ChannelType.DM:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types!ChannelType.GroupDM:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":"  | "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5779,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":16}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!GuildChannelEditOptions:interface","d":"/**\n * Options used to edit a guild channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildChannelEditOptions","c":"discord.js!GuildChannelEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":234,"co":1,"r":"Public","n":"GuildChannelEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#availableTags:member","d":"/**\n * The tags to set as available in a forum channel\n */\n","ex":[{"k":"Reference","t":"availableTags","c":"discord.js!GuildChannelEditOptions#availableTags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildForumTagData","c":"discord.js!GuildForumTagData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5808,"co":3,"ro":false,"op":true,"r":"Public","n":"availableTags","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#bitrate:member","d":"/**\n * The bitrate of the voice channel\n */\n","ex":[{"k":"Reference","t":"bitrate","c":"discord.js!GuildChannelEditOptions#bitrate"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5799,"co":3,"ro":false,"op":true,"r":"Public","n":"bitrate","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for all new threads in this channel\n */\n","ex":[{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!GuildChannelEditOptions#defaultAutoArchiveDuration"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5805,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#defaultForumLayout:member","d":"/**\n * The default forum layout to set on the channel\n */\n","ex":[{"k":"Reference","t":"defaultForumLayout","c":"discord.js!GuildChannelEditOptions#defaultForumLayout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ForumLayoutType","c":"discord-api-types!ForumLayoutType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5813,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultForumLayout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#defaultReactionEmoji:member","d":"/**\n * The emoji to set as the default reaction emoji\n */\n","ex":[{"k":"Reference","t":"defaultReactionEmoji","c":"discord.js!GuildChannelEditOptions#defaultReactionEmoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5809,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#defaultSortOrder:member","d":"/**\n * The default sort order mode to set on the channel\n */\n","ex":[{"k":"Reference","t":"defaultSortOrder","c":"discord.js!GuildChannelEditOptions#defaultSortOrder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5812,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultSortOrder","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#defaultThreadRateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) to set on forum posts\n */\n","ex":[{"k":"Reference","t":"defaultThreadRateLimitPerUser","c":"discord.js!GuildChannelEditOptions#defaultThreadRateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5810,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#flags:member","d":"/**\n * The flags to set on the channel\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!GuildChannelEditOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelFlagsResolvable","c":"discord.js!ChannelFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5811,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#lockPermissions:member","d":"/**\n * Lock the permissions of the channel to what the parent's permissions are\n */\n","ex":[{"k":"Reference","t":"lockPermissions","c":"discord.js!GuildChannelEditOptions#lockPermissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5803,"co":3,"ro":false,"op":true,"r":"Public","n":"lockPermissions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#name:member","d":"/**\n * The name of the channel\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildChannelEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5794,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#nsfw:member","d":"/**\n * Whether the channel is NSFW\n */\n","ex":[{"k":"Reference","t":"nsfw","c":"discord.js!GuildChannelEditOptions#nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5798,"co":3,"ro":false,"op":true,"r":"Public","n":"nsfw","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#parent:member","d":"/**\n * The parent of the channel\n */\n","ex":[{"k":"Reference","t":"parent","c":"discord.js!GuildChannelEditOptions#parent"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CategoryChannelResolvable","c":"discord.js!CategoryChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5801,"co":3,"ro":false,"op":true,"r":"Public","n":"parent","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#permissionOverwrites:member","d":"/**\n * Permission overwrites for the channel\n */\n","ex":[{"k":"Reference","t":"permissionOverwrites","c":"discord.js!GuildChannelEditOptions#permissionOverwrites"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5804,"co":3,"ro":false,"op":true,"r":"Public","n":"permissionOverwrites","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#position:member","d":"/**\n * The position of the channel\n */\n","ex":[{"k":"Reference","t":"position","c":"discord.js!GuildChannelEditOptions#position"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5796,"co":3,"ro":false,"op":true,"r":"Public","n":"position","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for the channel in seconds\n */\n","ex":[{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!GuildChannelEditOptions#rateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5802,"co":3,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#reason:member","d":"/**\n * Reason for editing this channel\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildChannelEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5814,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#rtcRegion:member","d":"/**\n * The RTC region of the channel\n */\n","ex":[{"k":"Reference","t":"rtcRegion","c":"discord.js!GuildChannelEditOptions#rtcRegion"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5806,"co":3,"ro":false,"op":true,"r":"Public","n":"rtcRegion","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#topic:member","d":"/**\n * The topic of the text channel\n */\n","ex":[{"k":"Reference","t":"topic","c":"discord.js!GuildChannelEditOptions#topic"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5797,"co":3,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#type:member","d":"/**\n * The type of the channel (only conversion between text and news is supported)\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildChannelEditOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types!ChannelType.GuildText:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5795,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#userLimit:member","d":"/**\n * The user limit of the voice channel\n */\n","ex":[{"k":"Reference","t":"userLimit","c":"discord.js!GuildChannelEditOptions#userLimit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5800,"co":3,"ro":false,"op":true,"r":"Public","n":"userLimit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelEditOptions#videoQualityMode:member","d":"/**\n * The camera video quality mode of the channel\n */\n","ex":[{"k":"Reference","t":"videoQualityMode","c":"discord.js!GuildChannelEditOptions#videoQualityMode"},{"k":"Content","t":"?: "},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5807,"co":3,"ro":false,"op":true,"r":"Public","n":"videoQualityMode","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildChannelManager:class","d":"/**\n * Manages API methods for GuildChannels and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildChannelManager","c":"discord.js!GuildChannelManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":25,"co":1,"r":"Public","ab":false,"n":"GuildChannelManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!GuildChannelManager#addFollower:member(1)","d":"/**\n * Adds the target channel to a channel's followers.\n *\n * @param channel - The channel to follow\n *\n * @param targetChannel - The channel where published announcements will be posted at\n *\n * @param reason - Reason for creating the webhook\n *\n * @returns Returns created target webhook id.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"addFollower","c":"discord.js!GuildChannelManager#addFollower"},{"k":"Content","t":"(  "},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"targetChannel","c":"discord.js!~targetChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":108,"co":3,"sta":false,"rtr":{"st":17,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"targetChannel","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"reason","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"addFollower"},{"k":"Property","c":"discord.js!GuildChannelManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ("},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":")>"},{"k":"Content","t":";"}],"l":60,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannelManager#channelCountWithoutThreads:member","d":"/**\n * The number of channels in this managers cache excluding thread channels that do not count towards a guild's maximum channels restriction.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channelCountWithoutThreads","c":"discord.js!GuildChannelManager#channelCountWithoutThreads"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":true,"op":false,"r":"Public","n":"channelCountWithoutThreads","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildChannelManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannelManager#create:member(1)","d":"/**\n * Creates a new channel in the guild.\n *\n * @param options - Options for creating the new channel\n *\n * @example\n * ```js\n * // Create a new text channel\n * guild.channels.create({ name: 'new-general', reason: 'Needed a cool new channel' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new channel with permission overwrites\n * guild.channels.create({\n *   name: 'new-general',\n *   type: ChannelType.GuildVoice,\n *   permissionOverwrites: [\n *      {\n *        id: message.author.id,\n *        deny: [PermissionFlagsBits.ViewChannel],\n *     },\n *   ],\n * })\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildChannelManager#create"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildChannelTypes","c":"discord.js!GuildChannelTypes:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelCreateOptions","c":"discord.js!GuildChannelCreateOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedGuildChannelTypes","c":"discord.js!MappedGuildChannelTypes:type"},{"k":"Content","t":"["},{"k":"Reference","t":"Type"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":147,"co":3,"tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildChannelManager#create:member(2)","d":"/**\n * Creates a new channel in the guild.\n *\n * @param options - Options for creating the new channel\n *\n * @example\n * ```js\n * // Create a new text channel\n * guild.channels.create({ name: 'new-general', reason: 'Needed a cool new channel' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new channel with permission overwrites\n * guild.channels.create({\n *   name: 'new-general',\n *   type: ChannelType.GuildVoice,\n *   permissionOverwrites: [\n *      {\n *        id: message.author.id,\n *        deny: [PermissionFlagsBits.ViewChannel],\n *     },\n *   ],\n * })\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildChannelManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelCreateOptions","c":"discord.js!GuildChannelCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":147,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildChannelManager#createWebhook:member(1)","d":"/**\n * Creates a webhook for the channel.\n *\n * @param options - Options for creating the webhook\n *\n * @returns Returns the created Webhook\n *\n * @example\n * ```js\n * // Create a webhook for the current channel\n * guild.channels.createWebhook({\n *   channel: '222197033908436994',\n *   name: 'Snek',\n *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n *   reason: 'Needed a cool new Webhook'\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createWebhook","c":"discord.js!GuildChannelManager#createWebhook"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookCreateOptions","c":"discord.js!WebhookCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":218,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"createWebhook"},{"k":"Method","c":"discord.js!GuildChannelManager#delete:member(1)","d":"/**\n * Deletes the channel.\n *\n * @param channel - The channel to delete\n *\n * @param reason - Reason for deleting this channel\n *\n * @example\n * ```js\n * // Delete the channel\n * guild.channels.delete('858850993013260338', 'making room for new channels')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildChannelManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":499,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildChannelManager#edit:member(1)","d":"/**\n * Edits the channel.\n *\n * @param channel - The channel to edit\n *\n * @param options - Options for editing the channel\n *\n * @example\n * ```js\n * // Edit a channel\n * guild.channels.edit('222197033908436994', { name: 'new-channel' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildChannelManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelEditOptions","c":"discord.js!GuildChannelEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":274,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildChannelManager#fetch:member(1)","d":"/**\n * Obtains one or more guild channels from Discord, or the channel cache if they're already available.\n *\n * @param id - The channel's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all channels from the guild (excluding threads)\n * message.guild.channels.fetch()\n *   .then(channels => console.log(`There are ${channels.size} channels.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single channel\n * message.guild.channels.fetch('222197033908436994')\n *   .then(channel => console.log(`The channel name is: ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildChannelManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":380,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildChannelManager#fetch:member(2)","d":"/**\n * Obtains one or more guild channels from Discord, or the channel cache if they're already available.\n *\n * @param id - The channel's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all channels from the guild (excluding threads)\n * message.guild.channels.fetch()\n *   .then(channels => console.log(`There are ${channels.size} channels.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single channel\n * message.guild.channels.fetch('222197033908436994')\n *   .then(channel => console.log(`The channel name is: ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildChannelManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"undefined"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":380,"co":3,"sta":false,"rtr":{"st":11,"en":21},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildChannelManager#fetchActiveThreads:member(1)","d":"/**\n * Obtains all active thread channels in the guild.\n *\n * @param cache - Whether to cache the fetched data\n *\n * @example\n * ```js\n * // Fetch all threads from the guild\n * message.guild.channels.fetchActiveThreads()\n *   .then(fetched => console.log(`There are ${fetched.threads.size} threads.`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchActiveThreads","c":"discord.js!GuildChannelManager#fetchActiveThreads"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchedThreads","c":"discord.js!FetchedThreads:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":474,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchActiveThreads"},{"k":"Method","c":"discord.js!GuildChannelManager#fetchWebhooks:member(1)","d":"/**\n * Fetches all webhooks for the channel.\n *\n * @param channel - The channel to fetch webhooks for\n *\n * @example\n * ```js\n * // Fetch webhooks\n * guild.channels.fetchWebhooks('769862166131245066')\n *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWebhooks","c":"discord.js!GuildChannelManager#fetchWebhooks"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":409,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchWebhooks"},{"k":"Property","c":"discord.js!GuildChannelManager#guild:member","d":"/**\n * The guild this Manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildChannelManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildChannelManager#resolve:member(1)","d":"/**\n * Resolves a GuildChannelResolvable to a Channel object.\n *\n * @param channel - The GuildChannel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(channel"},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":";"}],"l":86,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!GuildChannelManager#resolveId:member(1)","d":"/**\n * Resolves a GuildChannelResolvable to a channel id.\n *\n * @param channel - The GuildChannel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(channel"},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":96,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!GuildChannelManager#setPosition:member(1)","d":"/**\n * Sets a new position for the guild channel.\n *\n * @param channel - The channel to set the position for\n *\n * @param position - The new position for the guild channel\n *\n * @param options - Options for setting position\n *\n * @example\n * ```js\n * // Set a new channel position\n * guild.channels.setPosition('222078374472843266', 2)\n *   .then(newChannel => console.log(`Channel's new position is ${newChannel.position}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPosition","c":"discord.js!GuildChannelManager#setPosition"},{"k":"Content","t":"(  "},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"position","c":"discord.js!~position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SetChannelPositionOptions","c":"discord.js!SetChannelPositionOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":344,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"position","ptr":{"st":9,"en":10},"op":false,"rs":false},{"pn":"options","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPosition"},{"k":"Method","c":"discord.js!GuildChannelManager#setPositions:member(1)","d":"/**\n * Batch-updates the guild's channels' positions. <info>Only one channel's parent can be changed at a time</info>\n *\n * @param channelPositions - Channel positions to update\n *\n * @example\n * ```js\n * guild.channels.setPositions([{ channel: channelId, position: newChannelIndex }])\n *   .then(guild => console.log(`Updated channel positions for ${guild}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPositions","c":"discord.js!GuildChannelManager#setPositions"},{"k":"Content","t":"("},{"k":"Reference","t":"channelPositions","c":"discord.js!~channelPositions"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ChannelPosition","c":"discord.js!ChannelPosition:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":442,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channelPositions","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"setPositions"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildChannelOverwriteOptions:interface","d":"/**\n * Extra information about the overwrite.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildChannelOverwriteOptions","c":"discord.js!GuildChannelOverwriteOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/PermissionOverwriteManager.js","l":79,"co":1,"r":"Public","n":"GuildChannelOverwriteOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildChannelOverwriteOptions#reason:member","d":"/**\n * The reason for creating/editing this overwrite\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildChannelOverwriteOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5818,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildChannelOverwriteOptions#type:member","d":"/**\n * The type of overwrite. Use this to bypass automatic resolution of `type` that results in an error for an uncached structure\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildChannelOverwriteOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"OverwriteType","c":"discord-api-types!OverwriteType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5819,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!GuildChannelResolvable:type","d":"/**\n * Data that can be resolved to give a Guild Channel object. This can be:\n *\n * * A GuildChannel object\n *\n * * A ThreadChannel object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildChannelManager.js","l":73,"co":1,"r":"Public","n":"GuildChannelResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!GuildChannelTypes:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildChannelTypes","c":"discord.js!GuildChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CategoryChannelType","c":"discord.js!CategoryChannelType:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types!ChannelType.GuildCategory:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4137,"co":1,"r":"Public","n":"GuildChannelTypes","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!GuildCreateOptions:interface","d":"/**\n * Options used to create a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildCreateOptions","c":"discord.js!GuildCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":141,"co":1,"r":"Public","n":"GuildCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#afkChannelId:member","d":"/**\n * The AFK channel's id\n */\n","ex":[{"k":"Reference","t":"afkChannelId","c":"discord.js!GuildCreateOptions#afkChannelId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5830,"co":3,"ro":false,"op":true,"r":"Public","n":"afkChannelId","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#afkTimeout:member","d":"/**\n * The AFK timeout in seconds the first element of this array is used to change properties of the guild's everyone role.\n */\n","ex":[{"k":"Reference","t":"afkTimeout","c":"discord.js!GuildCreateOptions#afkTimeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5831,"co":3,"ro":false,"op":true,"r":"Public","n":"afkTimeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#channels:member","d":"/**\n * The channels for this guild\n */\n","ex":[{"k":"Reference","t":"channels","c":"discord.js!GuildCreateOptions#channels"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PartialChannelData","c":"discord.js!PartialChannelData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5829,"co":3,"ro":false,"op":true,"r":"Public","n":"channels","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#defaultMessageNotifications:member","d":"/**\n * The default message notifications for the guild\n */\n","ex":[{"k":"Reference","t":"defaultMessageNotifications","c":"discord.js!GuildCreateOptions#defaultMessageNotifications"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildDefaultMessageNotifications","c":"discord-api-types!GuildDefaultMessageNotifications:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5826,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultMessageNotifications","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#explicitContentFilter:member","d":"/**\n * The explicit content filter level for the guild\n */\n","ex":[{"k":"Reference","t":"explicitContentFilter","c":"discord.js!GuildCreateOptions#explicitContentFilter"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildExplicitContentFilter","c":"discord-api-types!GuildExplicitContentFilter:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5827,"co":3,"ro":false,"op":true,"r":"Public","n":"explicitContentFilter","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#icon:member","d":"/**\n * The icon for the guild\n */\n","ex":[{"k":"Reference","t":"icon","c":"discord.js!GuildCreateOptions#icon"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5824,"co":3,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#name:member","d":"/**\n * The name of the guild\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5823,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#roles:member","d":"/**\n * The roles for this guild,\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildCreateOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PartialRoleData","c":"discord.js!PartialRoleData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5828,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#systemChannelFlags:member","d":"/**\n * The flags of the system channel\n */\n","ex":[{"k":"Reference","t":"systemChannelFlags","c":"discord.js!GuildCreateOptions#systemChannelFlags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SystemChannelFlagsResolvable","c":"discord.js!SystemChannelFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5833,"co":3,"ro":false,"op":true,"r":"Public","n":"systemChannelFlags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#systemChannelId:member","d":"/**\n * The system channel's id\n */\n","ex":[{"k":"Reference","t":"systemChannelId","c":"discord.js!GuildCreateOptions#systemChannelId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5832,"co":3,"ro":false,"op":true,"r":"Public","n":"systemChannelId","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildCreateOptions#verificationLevel:member","d":"/**\n * The verification level for the guild\n */\n","ex":[{"k":"Reference","t":"verificationLevel","c":"discord.js!GuildCreateOptions#verificationLevel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5825,"co":3,"ro":false,"op":true,"r":"Public","n":"verificationLevel","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildEditOptions:interface","d":"/**\n * The data for editing a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildEditOptions","c":"discord.js!GuildEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":784,"co":1,"r":"Public","n":"GuildEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildEditOptions#afkChannel:member","d":"/**\n * The AFK channel of the guild\n */\n","ex":[{"k":"Reference","t":"afkChannel","c":"discord.js!GuildEditOptions#afkChannel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"VoiceChannelResolvable","c":"discord.js!VoiceChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5847,"co":3,"ro":false,"op":true,"r":"Public","n":"afkChannel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#afkTimeout:member","d":"/**\n * The AFK timeout of the guild\n */\n","ex":[{"k":"Reference","t":"afkTimeout","c":"discord.js!GuildEditOptions#afkTimeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5846,"co":3,"ro":false,"op":true,"r":"Public","n":"afkTimeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#banner:member","d":"/**\n * The banner of the guild\n */\n","ex":[{"k":"Reference","t":"banner","c":"discord.js!GuildEditOptions#banner"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5852,"co":3,"ro":false,"op":true,"r":"Public","n":"banner","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#defaultMessageNotifications:member","d":"/**\n * The default message notification level of the guild\n */\n","ex":[{"k":"Reference","t":"defaultMessageNotifications","c":"discord.js!GuildEditOptions#defaultMessageNotifications"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildDefaultMessageNotifications","c":"discord-api-types!GuildDefaultMessageNotifications:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5844,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultMessageNotifications","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#description:member","d":"/**\n * The discovery description of the guild\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildEditOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5860,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#discoverySplash:member","d":"/**\n * The discovery splash image of the guild\n */\n","ex":[{"k":"Reference","t":"discoverySplash","c":"discord.js!GuildEditOptions#discoverySplash"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5851,"co":3,"ro":false,"op":true,"r":"Public","n":"discoverySplash","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#explicitContentFilter:member","d":"/**\n * The level of the explicit content filter\n */\n","ex":[{"k":"Reference","t":"explicitContentFilter","c":"discord.js!GuildEditOptions#explicitContentFilter"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildExplicitContentFilter","c":"discord-api-types!GuildExplicitContentFilter:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5845,"co":3,"ro":false,"op":true,"r":"Public","n":"explicitContentFilter","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#features:member","d":"/**\n * The features of the guild\n */\n","ex":[{"k":"Reference","t":"features","c":"discord.js!GuildEditOptions#features"},{"k":"Content","t":"?: "},{"k":"Content","t":"`${"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:enum"},{"k":"Content","t":"}`[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5859,"co":3,"ro":false,"op":true,"r":"Public","n":"features","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#icon:member","d":"/**\n * The icon of the guild\n */\n","ex":[{"k":"Reference","t":"icon","c":"discord.js!GuildEditOptions#icon"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5848,"co":3,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#name:member","d":"/**\n * The name of the guild\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5842,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#owner:member","d":"/**\n * The owner of the guild\n */\n","ex":[{"k":"Reference","t":"owner","c":"discord.js!GuildEditOptions#owner"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5849,"co":3,"ro":false,"op":true,"r":"Public","n":"owner","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#preferredLocale:member","d":"/**\n * The preferred locale of the guild\n */\n","ex":[{"k":"Reference","t":"preferredLocale","c":"discord.js!GuildEditOptions#preferredLocale"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5858,"co":3,"ro":false,"op":true,"r":"Public","n":"preferredLocale","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#premiumProgressBarEnabled:member","d":"/**\n * Whether the guild's premium progress bar is enabled\n */\n","ex":[{"k":"Reference","t":"premiumProgressBarEnabled","c":"discord.js!GuildEditOptions#premiumProgressBarEnabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5861,"co":3,"ro":false,"op":true,"r":"Public","n":"premiumProgressBarEnabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#publicUpdatesChannel:member","d":"/**\n * The community updates channel of the guild\n */\n","ex":[{"k":"Reference","t":"publicUpdatesChannel","c":"discord.js!GuildEditOptions#publicUpdatesChannel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5856,"co":3,"ro":false,"op":true,"r":"Public","n":"publicUpdatesChannel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#reason:member","d":"/**\n * Reason for editing this guild\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5862,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#rulesChannel:member","d":"/**\n * The rules channel of the guild\n */\n","ex":[{"k":"Reference","t":"rulesChannel","c":"discord.js!GuildEditOptions#rulesChannel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5855,"co":3,"ro":false,"op":true,"r":"Public","n":"rulesChannel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#safetyAlertsChannel:member","d":"/**\n * The safety alerts channel of the guild\n */\n","ex":[{"k":"Reference","t":"safetyAlertsChannel","c":"discord.js!GuildEditOptions#safetyAlertsChannel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5857,"co":3,"ro":false,"op":true,"r":"Public","n":"safetyAlertsChannel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#splash:member","d":"/**\n * The invite splash image of the guild\n */\n","ex":[{"k":"Reference","t":"splash","c":"discord.js!GuildEditOptions#splash"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5850,"co":3,"ro":false,"op":true,"r":"Public","n":"splash","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#systemChannel:member","d":"/**\n * The system channel of the guild\n */\n","ex":[{"k":"Reference","t":"systemChannel","c":"discord.js!GuildEditOptions#systemChannel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5853,"co":3,"ro":false,"op":true,"r":"Public","n":"systemChannel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#systemChannelFlags:member","d":"/**\n * The system channel flags of the guild\n */\n","ex":[{"k":"Reference","t":"systemChannelFlags","c":"discord.js!GuildEditOptions#systemChannelFlags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SystemChannelFlagsResolvable","c":"discord.js!SystemChannelFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5854,"co":3,"ro":false,"op":true,"r":"Public","n":"systemChannelFlags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEditOptions#verificationLevel:member","d":"/**\n * The verification level of the guild\n */\n","ex":[{"k":"Reference","t":"verificationLevel","c":"discord.js!GuildEditOptions#verificationLevel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5843,"co":3,"ro":false,"op":true,"r":"Public","n":"verificationLevel","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildEmoji:class","d":"/**\n * Represents a custom emoji.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildEmoji","c":"discord.js!BaseGuildEmoji:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildEmoji.js","l":12,"co":1,"r":"Public","ab":false,"n":"GuildEmoji","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildEmoji#animated:member","d":"/**\n * Whether or not the emoji is animated\n */\n","ex":[{"k":"Content","t":"undefined animated :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":21,"ro":false,"op":true,"r":"Public","n":"animated","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#author:member","d":"/**\n * The user who created this emoji\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"author","c":"discord.js!GuildEmoji#author"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"author","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#available:member","d":"/**\n * Whether this emoji is available\n */\n","ex":[{"k":"Content","t":"undefined available :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":51,"ro":false,"op":true,"r":"Public","n":"available","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#createdAt:member","d":"/**\n * The time the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":84,"ro":true,"op":true,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#createdTimestamp:member","d":"/**\n * The timestamp the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":75,"ro":true,"op":true,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#deletable:member","d":"/**\n * Whether the emoji is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"deletable","c":"discord.js!GuildEmoji#deletable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":57,"co":3,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildEmoji#delete:member(1)","d":"/**\n * Deletes the emoji.\n *\n * @param reason - Reason for deleting the emoji\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildEmoji#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":116,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildEmoji#edit:member(1)","d":"/**\n * Edits the emoji.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Edit an emoji\n * emoji.edit({ name: 'newemoji' })\n *   .then(emoji => console.log(`Edited emoji ${emoji}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildEmoji#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmojiEditOptions","c":"discord.js!GuildEmojiEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":97,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildEmoji#equals:member(1)","d":"/**\n * Whether this emoji is the same as another one.\n *\n * @param other - The emoji to compare it to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!GuildEmoji#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":126,"co":3,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!GuildEmoji#fetchAuthor:member(1)","d":"/**\n * Fetches the author for this emoji\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchAuthor","c":"discord.js!GuildEmoji#fetchAuthor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":75,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchAuthor"},{"k":"Property","c":"discord.js!GuildEmoji#guild:member","d":"/**\n * The guild this emoji is part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildEmoji#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#id:member","d":"/**\n * The emoji's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":33,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#identifier:member","d":"/**\n * The identifier of this emoji, used for message reactions\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly identifier :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":41,"ro":true,"op":false,"r":"Public","n":"identifier","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#managed:member","d":"/**\n * Whether this emoji is managed by an external service\n */\n","ex":[{"k":"Content","t":"undefined managed :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":43,"ro":false,"op":true,"r":"Public","n":"managed","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#name:member","d":"/**\n * The emoji's name\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":27,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#requiresColons:member","d":"/**\n * Whether or not this emoji requires colons surrounding it\n */\n","ex":[{"k":"Content","t":"undefined requiresColons :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":35,"ro":false,"op":true,"r":"Public","n":"requiresColons","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmoji#roles:member","d":"/**\n * A manager for roles this emoji is active for.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"roles","c":"discord.js!GuildEmoji#roles"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildEmojiRoleManager","c":"discord.js!GuildEmojiRoleManager:class"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":true,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildEmoji#setName:member(1)","d":"/**\n * Sets the name of the emoji.\n *\n * @param name - The new name for the emoji\n *\n * @param reason - Reason for changing the emoji's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!GuildEmoji#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":107,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Property","c":"discord.js!GuildEmoji#url:member","d":"/**\n * Returns a URL for the emoji.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":65,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildEmojiCreateOptions:interface","d":"/**\n * Options used for creating an emoji in a guild.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildEmojiCreateOptions","c":"discord.js!GuildEmojiCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildEmojiManager.js","l":28,"co":1,"r":"Public","n":"GuildEmojiCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildEmojiCreateOptions#attachment:member","d":"/**\n * The image for the emoji\n */\n","ex":[{"k":"Reference","t":"attachment","c":"discord.js!GuildEmojiCreateOptions#attachment"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5866,"co":3,"ro":false,"op":false,"r":"Public","n":"attachment","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildEmojiCreateOptions#name:member","d":"/**\n * The name for the emoji\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildEmojiCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5867,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEmojiCreateOptions#reason:member","d":"/**\n * The reason for creating the emoji\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildEmojiCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5869,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEmojiCreateOptions#roles:member","d":"/**\n * The roles to limit the emoji to\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildEmojiCreateOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5868,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":10}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildEmojiEditOptions:interface","d":"/**\n * Data for editing an emoji.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildEmojiEditOptions","c":"discord.js!GuildEmojiEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildEmoji.js","l":79,"co":1,"r":"Public","n":"GuildEmojiEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildEmojiEditOptions#name:member","d":"/**\n * The name of the emoji\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildEmojiEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5873,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEmojiEditOptions#reason:member","d":"/**\n * Reason for editing this emoji\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildEmojiEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5875,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEmojiEditOptions#roles:member","d":"/**\n * Roles to restrict emoji to\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildEmojiEditOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5874,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":10}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildEmojiManager:class","d":"/**\n * Manages API methods for GuildEmojis and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildEmojiManager","c":"discord.js!GuildEmojiManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildEmojiManager","c":"discord.js!BaseGuildEmojiManager:class"},{"k":"Content","t":" "}],"pat":"src/managers/GuildEmojiManager.js","l":13,"co":1,"r":"Public","ab":false,"n":"GuildEmojiManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildEmojiManager#cache:member","d":"/**\n * The cache of GuildEmojis\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/BaseGuildEmojiManager.js","l":17,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmojiManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildEmojiManager#create:member(1)","d":"/**\n * Creates a new custom emoji in the guild.\n *\n * @param options - Options for creating the emoji\n *\n * @returns The created emoji\n *\n * @example\n * ```js\n * // Create a new emoji from a URL\n * guild.emojis.create({ attachment: 'https://i.imgur.com/w3duR07.png', name: 'rip' })\n *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new emoji from a file on your computer\n * guild.emojis.create({ attachment: './memes/banana.png', name: 'banana' })\n *   .then(emoji => console.log(`Created new emoji with name ${emoji.name}!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildEmojiManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmojiCreateOptions","c":"discord.js!GuildEmojiCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":52,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildEmojiManager#delete:member(1)","d":"/**\n * Deletes an emoji.\n *\n * @param emoji - The Emoji resolvable to delete\n *\n * @param reason - Reason for deleting the emoji\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildEmojiManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":118,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildEmojiManager#edit:member(1)","d":"/**\n * Edits an emoji.\n *\n * @param emoji - The Emoji resolvable to edit\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildEmojiManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmojiEditOptions","c":"discord.js!GuildEmojiEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":130,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildEmojiManager#fetch:member(1)","d":"/**\n * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n *\n * @param id - The emoji's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all emojis from the guild\n * message.guild.emojis.fetch()\n *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single emoji\n * message.guild.emojis.fetch('222078108977594368')\n *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildEmojiManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":96,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildEmojiManager#fetch:member(2)","d":"/**\n * Obtains one or more emojis from Discord, or the emoji cache if they're already available.\n *\n * @param id - The emoji's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all emojis from the guild\n * message.guild.emojis.fetch()\n *   .then(emojis => console.log(`There are ${emojis.size} emojis.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single emoji\n * message.guild.emojis.fetch('222078108977594368')\n *   .then(emoji => console.log(`The emoji name is: ${emoji.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildEmojiManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"undefined"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":96,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildEmojiManager#fetchAuthor:member(1)","d":"/**\n * Fetches the author for this emoji\n *\n * @param emoji - The emoji to fetch the author of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchAuthor","c":"discord.js!GuildEmojiManager#fetchAuthor"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":155,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchAuthor"},{"k":"Property","c":"discord.js!GuildEmojiManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildEmojiManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!GuildEmojiRoleManager:class","d":"/**\n * Manages API methods for roles belonging to emojis and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildEmojiRoleManager","c":"discord.js!GuildEmojiRoleManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildEmojiRoleManager.js","l":12,"co":1,"r":"Public","ab":false,"n":"GuildEmojiRoleManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!GuildEmojiRoleManager#add:member(1)","d":"/**\n * Adds a role (or multiple roles) to the list of roles that can use this emoji.\n *\n * @param roleOrRoles - The role or roles to add\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!GuildEmojiRoleManager#add"},{"k":"Content","t":"(  "},{"k":"Reference","t":"roleOrRoles","c":"discord.js!~roleOrRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":42,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleOrRoles","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Property","c":"discord.js!GuildEmojiRoleManager#cache:member","d":"/**\n * The cache of roles belonging to this emoji\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":33,"ro":true,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmojiRoleManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmojiRoleManager#emoji:member","d":"/**\n * The emoji belonging to this manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emoji","c":"discord.js!GuildEmojiRoleManager#emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildEmojiRoleManager#guild:member","d":"/**\n * The guild belonging to this manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildEmojiRoleManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildEmojiRoleManager#remove:member(1)","d":"/**\n * Removes a role (or multiple roles) from the list of roles that can use this emoji.\n *\n * @param roleOrRoles - The role or roles to remove\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!GuildEmojiRoleManager#remove"},{"k":"Content","t":"(  "},{"k":"Reference","t":"roleOrRoles","c":"discord.js!~roleOrRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":63,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleOrRoles","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!GuildEmojiRoleManager#set:member(1)","d":"/**\n * Sets the role(s) that can use this emoji.\n *\n * @param roles - The roles or role ids to apply\n *\n * @example\n * ```js\n * // Set the emoji's roles to a single role\n * guildEmoji.roles.set(['391156570408615936'])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all roles from an emoji\n * guildEmoji.roles.set([])\n *    .then(console.log)\n *    .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!GuildEmojiRoleManager#set"},{"k":"Content","t":"("},{"k":"Reference","t":"roles","c":"discord.js!~roles"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":94,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":5,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildEntitlementCreateOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildEntitlementCreateOptions","c":"discord.js!GuildEntitlementCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4085,"co":1,"r":"Public","n":"GuildEntitlementCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildEntitlementCreateOptions#guild:member","d":"","ex":[{"k":"Reference","t":"guild","c":"discord.js!GuildEntitlementCreateOptions#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":";"}],"l":4087,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildEntitlementCreateOptions#sku:member","d":"","ex":[{"k":"Reference","t":"sku","c":"discord.js!GuildEntitlementCreateOptions#sku"},{"k":"Content","t":": "},{"k":"Reference","t":"SKUResolvable","c":"discord.js!SKUResolvable:type"},{"k":"Content","t":";"}],"l":4086,"co":3,"ro":false,"op":false,"r":"Public","n":"sku","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildForumTag:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildForumTag","c":"discord.js!GuildForumTag:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadOnlyChannel.js","l":14,"co":1,"r":"Public","n":"GuildForumTag","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildForumTag#emoji:member","d":"/**\n * The emoji of this tag\n */\n","ex":[{"k":"Reference","t":"emoji","c":"discord.js!GuildForumTag#emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumTagEmoji","c":"discord.js!GuildForumTagEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2460,"co":3,"ro":false,"op":false,"r":"Public","n":"emoji","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildForumTag#id:member","d":"/**\n * The id of the tag\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!GuildForumTag#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2457,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildForumTag#moderated:member","d":"/**\n * Whether this tag can only be added to or removed from threads by a member with the `ManageThreads` permission\n */\n","ex":[{"k":"Reference","t":"moderated","c":"discord.js!GuildForumTag#moderated"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2459,"co":3,"ro":false,"op":false,"r":"Public","n":"moderated","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildForumTag#name:member","d":"/**\n * The name of the tag\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildForumTag#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2458,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildForumTagData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildForumTagData","c":"discord.js!GuildForumTagData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildForumTag","c":"discord.js!GuildForumTag:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadOnlyChannel.js","l":23,"co":1,"r":"Public","n":"GuildForumTagData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildForumTagData#emoji:member","d":"/**\n * The emoji of this tag\n */\n","ex":[{"k":"Content","t":"undefined emoji :"},{"k":"Reference","t":"GuildForumTagEmoji","c":"discord.js!GuildForumTagEmoji:interface"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"emoji","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildForumTagData#id:member","d":"/**\n * The id of the tag\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildForumTagData#moderated:member","d":"/**\n * Whether this tag can only be added to or removed from threads by a member with the `ManageThreads` permission\n */\n","ex":[{"k":"Content","t":"undefined moderated :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"moderated","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildForumTagData#name:member","d":"/**\n * The name of the tag\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildForumTagData#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2464,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6}]}]},{"k":"Interface","c":"discord.js!GuildForumTagEmoji:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildForumTagEmoji","c":"discord.js!GuildForumTagEmoji:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadOnlyChannel.js","l":8,"co":1,"r":"Public","n":"GuildForumTagEmoji","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildForumTagEmoji#id:member","d":"/**\n * The id of a guild's custom emoji\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!GuildForumTagEmoji#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2452,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildForumTagEmoji#name:member","d":"/**\n * The unicode character of the emoji\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildForumTagEmoji#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2453,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildForumThreadCreateOptions:interface","d":"/**\n * Options for creating a thread.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildForumThreadCreateOptions","c":"discord.js!GuildForumThreadCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"StartThreadOptions","c":"discord.js!StartThreadOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildForumThreadManager.js","l":26,"co":1,"r":"Public","n":"GuildForumThreadCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildForumThreadCreateOptions#appliedTags:member","d":"/**\n * The tags to apply to the thread\n */\n","ex":[{"k":"Reference","t":"appliedTags","c":"discord.js!GuildForumThreadCreateOptions#appliedTags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6665,"co":3,"ro":false,"op":true,"r":"Public","n":"appliedTags","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!GuildForumThreadCreateOptions#message:member","d":"/**\n * The message associated with the thread post\n */\n","ex":[{"k":"Reference","t":"message","c":"discord.js!GuildForumThreadCreateOptions#message"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumThreadMessageCreateOptions","c":"discord.js!GuildForumThreadMessageCreateOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6664,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":5}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!GuildForumThreadManager:class","d":"/**\n * Manages API methods for threads in forum channels and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!GuildForumThreadManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadManager","c":"discord.js!ThreadManager:class"},{"k":"Content","t":"<"},{"k":"Content","t":"true"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildForumThreadManager.js","l":12,"co":1,"r":"Public","ab":false,"n":"GuildForumThreadManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildForumThreadManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadManager.js","l":35,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildForumThreadManager#channel:member","d":"/**\n * The channel this Manager belongs to\n */\n","ex":[{"k":"Content","t":"undefined channel :"},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":";"}],"l":13,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildForumThreadManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildForumThreadManager#create:member(1)","d":"/**\n * Creates a new thread in the channel.\n *\n * @param options - Options to create a new thread\n *\n * @example\n * ```js\n * // Create a new forum post\n * forum.threads\n *   .create({\n *     name: 'Food Talk',\n *     autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n *     message: {\n *      content: 'Discuss your favorite food!',\n *     },\n *     reason: 'Needed a separate thread for food',\n *   })\n *   .then(threadChannel => console.log(threadChannel))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildForumThreadManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumThreadCreateOptions","c":"discord.js!GuildForumThreadCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":51,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildForumThreadMessageCreateOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildForumThreadMessageCreateOptions","c":"discord.js!GuildForumThreadMessageCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseMessageOptions","c":"discord.js!BaseMessageOptions:interface"},{"k":"Content","t":",  "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":", 'flags' | 'stickers'>"},{"k":"Content","t":" "}],"pat":"src/managers/GuildForumThreadManager.js","l":19,"co":1,"r":"Public","n":"GuildForumThreadMessageCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildForumThreadMessageCreateOptions#flags:member","d":"/**\n * The flags to send with the message <info>Only `MessageFlags.SuppressEmbeds` and `MessageFlags.SuppressNotifications` can be set.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildForumThreadMessageCreateOptions#stickers:member","d":"/**\n * The stickers to send with the message\n */\n","ex":[{"k":"Content","t":"undefined stickers :"},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":4,"tps":[]},{"st":5,"en":9,"tps":[{"st":7,"en":8},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!GuildInvitableChannelResolvable:type","d":"/**\n * Data that can be resolved to a channel that an invite can be created on. This can be:\n *\n * * TextChannel\n *\n * * VoiceChannel\n *\n * * NewsChannel\n *\n * * StageChannel\n *\n * * ForumChannel\n *\n * * MediaChannel\n *\n * * Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildInvitableChannelResolvable","c":"discord.js!GuildInvitableChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildInviteManager.js","l":42,"co":1,"r":"Public","n":"GuildInvitableChannelResolvable","ttr":{"st":3,"en":17}},{"k":"Class","c":"discord.js!GuildInviteManager:class","d":"/**\n * Manages API methods for GuildInvites and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildInviteManager","c":"discord.js!GuildInviteManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":", "},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildInviteManager.js","l":14,"co":1,"r":"Public","ab":false,"n":"GuildInviteManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildInviteManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildInviteManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildInviteManager#create:member(1)","d":"/**\n * Create an invite to the guild from the provided channel.\n *\n * @param channel - The options for creating the invite from a channel.\n *\n * @param options - The options for creating the invite from a channel.\n *\n * @example\n * ```js\n * // Create an invite to a selected channel\n * guild.invites.create('599942732013764608')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildInviteManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildInvitableChannelResolvable","c":"discord.js!GuildInvitableChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":180,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildInviteManager#delete:member(1)","d":"/**\n * Deletes an invite.\n *\n * @param invite - The invite to delete\n *\n * @param reason - Reason for deleting the invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildInviteManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"invite","c":"discord.js!~invite"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":208,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"invite","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildInviteManager#fetch:member(1)","d":"/**\n * Fetches invite(s) from Discord.\n *\n * @param options - Options for fetching guild invite(s)\n *\n * @example\n * ```js\n * // Fetch all invites from a guild\n * guild.invites.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all invites from a guild without caching\n * guild.invites.fetch({ cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all invites from a channel\n * guild.invites.fetch({ channelId: '222197033908436994' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite\n * guild.invites.fetch('bRCvFy9')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite without checking cache\n * guild.invites.fetch({ code: 'bRCvFy9', force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite without caching\n * guild.invites.fetch({ code: 'bRCvFy9', cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildInviteManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchInviteOptions","c":"discord.js!FetchInviteOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":124,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildInviteManager#fetch:member(2)","d":"/**\n * Fetches invite(s) from Discord.\n *\n * @param options - Options for fetching guild invite(s)\n *\n * @example\n * ```js\n * // Fetch all invites from a guild\n * guild.invites.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all invites from a guild without caching\n * guild.invites.fetch({ cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch all invites from a channel\n * guild.invites.fetch({ channelId: '222197033908436994' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite\n * guild.invites.fetch('bRCvFy9')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite without checking cache\n * guild.invites.fetch({ code: 'bRCvFy9', force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single invite without caching\n * guild.invites.fetch({ code: 'bRCvFy9', cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildInviteManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchInvitesOptions","c":"discord.js!FetchInvitesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":124,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildInviteManager#guild:member","d":"/**\n * The guild this Manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildInviteManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildInviteManager#resolve:member(1)","d":"/**\n * Resolves an InviteResolvable to an Invite object.\n *\n * @param invite - The invite resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(invite"},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":";"}],"l":55,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"invite","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!GuildInviteManager#resolveId:member(1)","d":"/**\n * Resolves an InviteResolvable to an invite code string.\n *\n * @param invite - The invite resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(invite"},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":64,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"invite","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildListMembersOptions:interface","d":"/**\n * Options used for listing guild members.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildListMembersOptions","c":"discord.js!GuildListMembersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":303,"co":1,"r":"Public","n":"GuildListMembersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildListMembersOptions#after:member","d":"/**\n * Limit fetching members to those with an id greater than the supplied id\n */\n","ex":[{"k":"Reference","t":"after","c":"discord.js!GuildListMembersOptions#after"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5928,"co":3,"ro":false,"op":true,"r":"Public","n":"after","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildListMembersOptions#cache:member","d":"/**\n * Whether or not to cache the fetched member(s)\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!GuildListMembersOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5930,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildListMembersOptions#limit:member","d":"/**\n * Maximum number of members to list\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!GuildListMembersOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5929,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildManager:class","d":"/**\n * Manages API methods for Guilds and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildManager","c":"discord.js!GuildManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":29,"co":1,"r":"Public","ab":false,"n":"GuildManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":41,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildManager#create:member(1)","d":"/**\n * Creates a guild. <warn>This is only available to bots in fewer than 10 guilds.</warn>\n *\n * @param options - Options for creating the guild\n *\n * @returns The guild that was created\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildCreateOptions","c":"discord.js!GuildCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":166,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildManager#fetch:member(1)","d":"/**\n * Obtains one or multiple guilds from Discord, or the guild cache if it's already available.\n *\n * @param options - The guild's id or options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildOptions","c":"discord.js!FetchGuildOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildManager#fetch:member(2)","d":"/**\n * Obtains one or multiple guilds from Discord, or the guild cache if it's already available.\n *\n * @param options - The guild's id or options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchGuildsOptions","c":"discord.js!FetchGuildsOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"OAuth2Guild","c":"discord.js!OAuth2Guild:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildManager#resolve:member(1)","d":"/**\n * Resolves a GuildResolvable to a Guild object.\n *\n * @param guild - The guild resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolve(guild"},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":99,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!GuildManager#resolveId:member(1)","d":"/**\n * Resolves a {@link GuildResolvable} to a {@link Guild} id string.\n *\n * @param guild - The guild resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolveId(guild"},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":120,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!GuildManager#widgetImageURL:member(1)","d":"/**\n * Returns a URL for the PNG widget of a guild.\n *\n * @param guild - The guild of the widget image\n *\n * @param style - The style for the widget image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"widgetImageURL","c":"discord.js!GuildManager#widgetImageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"style","c":"discord.js!~style"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildWidgetStyle","c":"discord-api-types!GuildWidgetStyle:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":290,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guild","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"style","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"widgetImageURL"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"discord.js!GuildMember:class","d":"/**\n * Represents a member of a guild on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"PartialTextBasedChannel","c":"discord.js!PartialTextBasedChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":")"},{"k":"Content","t":" "}],"pat":"src/structures/GuildMember.js","l":17,"co":1,"r":"Public","ab":false,"n":"GuildMember","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildMember#avatar:member","d":"/**\n * The guild member's avatar hash\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatar","c":"discord.js!GuildMember#avatar"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"avatar","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#avatarURL:member(1)","d":"/**\n * A link to the member's guild avatar.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarURL","c":"discord.js!GuildMember#avatarURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatarURL"},{"k":"Method","c":"discord.js!GuildMember#ban:member(1)","d":"/**\n * Bans this guild member.\n *\n * @param options - Options for the ban\n *\n * @example\n * ```js\n * // Ban a guild member, deleting a week's worth of messages\n * guildMember.ban({ deleteMessageSeconds: 60 * 60 * 24 * 7, reason: 'They deserved it' })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ban","c":"discord.js!GuildMember#ban"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BanOptions","c":"discord.js!BanOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":401,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"ban"},{"k":"Property","c":"discord.js!GuildMember#bannable:member","d":"/**\n * Whether this member is bannable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"bannable","c":"discord.js!GuildMember#bannable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":288,"co":3,"ro":true,"op":false,"r":"Public","n":"bannable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#communicationDisabledUntil:member","d":"/**\n * The time this member's timeout will be removed\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"communicationDisabledUntil","c":"discord.js!GuildMember#communicationDisabledUntil"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":182,"co":3,"ro":true,"op":false,"r":"Public","n":"communicationDisabledUntil","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#communicationDisabledUntilTimestamp:member","d":"/**\n * The timestamp this member's timeout will be removed\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"communicationDisabledUntilTimestamp","c":"discord.js!GuildMember#communicationDisabledUntilTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"communicationDisabledUntilTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#createDM:member(1)","d":"/**\n * Creates a DM channel between the client and this member.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createDM","c":"discord.js!GuildMember#createDM"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":370,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createDM"},{"k":"Method","c":"discord.js!GuildMember#deleteDM:member(1)","d":"/**\n * Deletes any DMs with this member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteDM","c":"discord.js!GuildMember#deleteDM"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":378,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"deleteDM"},{"k":"Method","c":"discord.js!GuildMember#disableCommunicationUntil:member(1)","d":"/**\n * Times this guild member out.\n *\n * @param communicationDisabledUntil - The date or timestamp for the member's communication to be disabled until. Provide `null` to remove the timeout.\n *\n * @param reason - The reason for this timeout.\n *\n * @example\n * ```js\n * // Time a guild member out for 5 minutes\n * guildMember.disableCommunicationUntil(Date.now() + (5 * 60 * 1000), 'They deserved it')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove the timeout of a guild member\n * guildMember.disableCommunicationUntil(null)\n *   .then(member => console.log(`Removed timeout for ${member.displayName}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"disableCommunicationUntil","c":"discord.js!GuildMember#disableCommunicationUntil"},{"k":"Content","t":"("},{"k":"Reference","t":"timeout","c":"discord.js!~timeout"},{"k":"Content","t":": "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":422,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"timeout","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"disableCommunicationUntil"},{"k":"Method","c":"discord.js!GuildMember#displayAvatarURL:member(1)","d":"/**\n * A link to the member's guild avatar if they have one. Otherwise, a link to their {@link User.displayAvatarURL} will be returned.\n *\n * @param options - Options for the Image URL\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"displayAvatarURL","c":"discord.js!GuildMember#displayAvatarURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":164,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"displayAvatarURL"},{"k":"Property","c":"discord.js!GuildMember#displayColor:member","d":"/**\n * The displayed role color of this member in base 10\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"displayColor","c":"discord.js!GuildMember#displayColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":209,"co":3,"ro":true,"op":false,"r":"Public","n":"displayColor","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#displayHexColor:member","d":"/**\n * The displayed role color of this member in hexadecimal\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"displayHexColor","c":"discord.js!GuildMember#displayHexColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"HexColorString","c":"discord.js!HexColorString:type"},{"k":"Content","t":";"}],"l":218,"co":3,"ro":true,"op":false,"r":"Public","n":"displayHexColor","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#displayName:member","d":"/**\n * The nickname of this member, or their user display name if they don't have one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"displayName","c":"discord.js!GuildMember#displayName"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":245,"co":3,"ro":true,"op":false,"r":"Public","n":"displayName","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#dmChannel:member","d":"/**\n * The DM between the client's user and this member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"dmChannel","c":"discord.js!GuildMember#dmChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":236,"co":3,"ro":true,"op":false,"r":"Public","n":"dmChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#edit:member(1)","d":"/**\n * Edits this member.\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildMember#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberEditOptions","c":"discord.js!GuildMemberEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":331,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildMember#equals:member(1)","d":"/**\n * Whether this guild member equals another guild member. It compares all properties, so for most comparison it is advisable to just compare `member.id === member2.id` as it is significantly faster and is often what most users need.\n *\n * @param member - The member to compare with\n */\n","ex":[{"k":"Content","t":"equals(member"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"l":458,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!GuildMember#fetch:member(1)","d":"/**\n * Fetches this GuildMember.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildMember#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":447,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildMember#flags:member","d":"/**\n * The flags of this member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!GuildMember#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMemberFlagsBitField","c":"discord.js!GuildMemberFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":110,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#guild:member","d":"/**\n * The guild that this member is part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildMember#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#id:member","d":"/**\n * The member's id\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"id","c":"discord.js!GuildMember#id"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":227,"co":3,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#isCommunicationDisabled:member(1)","d":"/**\n * Whether this member is currently timed out\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isCommunicationDisabled","c":"discord.js!GuildMember#isCommunicationDisabled"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" & {  "},{"k":"Reference","t":"communicationDisabledUntilTimestamp","c":"discord.js!~__type#communicationDisabledUntilTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";  readonly "},{"k":"Reference","t":"communicationDisabledUntil","c":"discord.js!~__type#communicationDisabledUntil"},{"k":"Content","t":": "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":310,"co":3,"sta":false,"rtr":{"st":3,"en":14},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isCommunicationDisabled"},{"k":"Property","c":"discord.js!GuildMember#joinedAt:member","d":"/**\n * The time this member joined the guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joinedAt","c":"discord.js!GuildMember#joinedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":173,"co":3,"ro":true,"op":false,"r":"Public","n":"joinedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#joinedTimestamp:member","d":"/**\n * The timestamp the member joined the guild at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"joinedTimestamp","c":"discord.js!GuildMember#joinedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"joinedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#kick:member(1)","d":"/**\n * Kicks this member from the guild.\n *\n * @param reason - Reason for kicking user\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"kick","c":"discord.js!GuildMember#kick"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":387,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"kick"},{"k":"Property","c":"discord.js!GuildMember#kickable:member","d":"/**\n * Whether this member is kickable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"kickable","c":"discord.js!GuildMember#kickable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":278,"co":3,"ro":true,"op":false,"r":"Public","n":"kickable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#manageable:member","d":"/**\n * Whether the client user is above this user in the hierarchy, according to role position and guild ownership. This is a prerequisite for many moderative actions.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"manageable","c":"discord.js!GuildMember#manageable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":265,"co":3,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#moderatable:member","d":"/**\n * Whether this member is moderatable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"moderatable","c":"discord.js!GuildMember#moderatable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":298,"co":3,"ro":true,"op":false,"r":"Public","n":"moderatable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#nickname:member","d":"/**\n * The nickname of this member, if they have one\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nickname","c":"discord.js!GuildMember#nickname"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"nickname","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#partial:member","d":"/**\n * Whether this GuildMember is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!GuildMember#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":127,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#pending:member","d":"/**\n * Whether this member has yet to pass the guild's membership gate\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"pending","c":"discord.js!GuildMember#pending"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"pending","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#permissions:member","d":"/**\n * The overall set of permissions for this member, taking only roles and owner status into account\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"permissions","c":"discord.js!GuildMember#permissions"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":254,"co":3,"ro":true,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#permissionsIn:member(1)","d":"/**\n * Returns `channel.permissionsFor(guildMember)`. Returns permissions for a member in a guild channel, taking into account roles and permission overwrites.\n *\n * @param channel - The guild channel to use as context\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsIn","c":"discord.js!GuildMember#permissionsIn"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildChannelResolvable","c":"discord.js!GuildChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":320,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"permissionsIn"},{"k":"Property","c":"discord.js!GuildMember#premiumSince:member","d":"/**\n * The last time this member started boosting the guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"premiumSince","c":"discord.js!GuildMember#premiumSince"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":191,"co":3,"ro":true,"op":false,"r":"Public","n":"premiumSince","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#premiumSinceTimestamp:member","d":"/**\n * The last timestamp this member started boosting the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"premiumSinceTimestamp","c":"discord.js!GuildMember#premiumSinceTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"premiumSinceTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#presence:member","d":"/**\n * The presence of this guild member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"presence","c":"discord.js!GuildMember#presence"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":200,"co":3,"ro":true,"op":false,"r":"Public","n":"presence","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMember#roles:member","d":"/**\n * A manager for the roles belonging to this member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"roles","c":"discord.js!GuildMember#roles"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMemberRoleManager","c":"discord.js!GuildMemberRoleManager:class"},{"k":"Content","t":";"}],"l":136,"co":3,"ro":true,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#send:member(1)","d":"/**\n * Sends a message to this user.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a direct message\n * guildMember.send('Hello!')\n *   .then(message => console.log(`Sent message: ${message.content} to ${guildMember.displayName}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":499,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!GuildMember#setFlags:member(1)","d":"/**\n * Sets the flags for this member.\n *\n * @param flags - The flags to set\n *\n * @param reason - Reason for setting the flags\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setFlags","c":"discord.js!GuildMember#setFlags"},{"k":"Content","t":"("},{"k":"Reference","t":"flags","c":"discord.js!~flags"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberFlagsResolvable","c":"discord.js!GuildMemberFlagsResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":341,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"flags","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setFlags"},{"k":"Method","c":"discord.js!GuildMember#setNickname:member(1)","d":"/**\n * Sets the nickname for this member.\n *\n * @param nick - The nickname for the guild member, or `null` if you want to reset their nickname\n *\n * @param reason - Reason for setting the nickname\n *\n * @example\n * ```js\n * // Set a nickname for a guild member\n * guildMember.setNickname('cool nickname', 'Needed a new nickname')\n *   .then(member => console.log(`Set nickname of ${member.user.username}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove a nickname for a guild member\n * guildMember.setNickname(null, 'No nicknames allowed!')\n *   .then(member => console.log(`Removed nickname for ${member.user.username}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setNickname","c":"discord.js!GuildMember#setNickname"},{"k":"Content","t":"("},{"k":"Reference","t":"nickname","c":"discord.js!~nickname"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":361,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nickname","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setNickname"},{"k":"Method","c":"discord.js!GuildMember#timeout:member(1)","d":"/**\n * Times this guild member out.\n *\n * @param timeout - The duration in milliseconds for the member's communication to be disabled. Provide `null` to remove the timeout.\n *\n * @param reason - The reason for this timeout.\n *\n * @example\n * ```js\n * // Time a guild member out for 5 minutes\n * guildMember.timeout(5 * 60 * 1000, 'They deserved it')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"timeout","c":"discord.js!GuildMember#timeout"},{"k":"Content","t":"("},{"k":"Reference","t":"timeout","c":"discord.js!~timeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":438,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"timeout","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"timeout"},{"k":"Method","c":"discord.js!GuildMember#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!GuildMember#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1623,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!GuildMember#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the user's mention instead of the GuildMember object.\n *\n * @example\n * ```js\n * // Logs: Hello from <@123456789012345678>!\n * console.log(`Hello from ${member}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!GuildMember#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":";"}],"l":482,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!GuildMember#user:member","d":"/**\n * The user that this guild member instance represents\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!GuildMember#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":74,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMember#valueOf:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"valueOf","c":"discord.js!GuildMember#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1625,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"},{"k":"Property","c":"discord.js!GuildMember#voice:member","d":"/**\n * The voice state of this member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"voice","c":"discord.js!GuildMember#voice"},{"k":"Content","t":"(): "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":";"}],"l":145,"co":3,"ro":true,"op":false,"r":"Public","n":"voice","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildMemberEditOptions:interface","d":"/**\n * The data for editing a guild member.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildMemberEditOptions","c":"discord.js!GuildMemberEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":322,"co":1,"r":"Public","n":"GuildMemberEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#channel:member","d":"/**\n * Channel to move the member to (if they are connected to voice), or `null` if you want to disconnect them from voice\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildMemberEditOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildVoiceChannelResolvable","c":"discord.js!GuildVoiceChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5898,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#communicationDisabledUntil:member","d":"/**\n * The date or timestamp for the member's communication to be disabled until. Provide `null` to enable communication again.\n */\n","ex":[{"k":"Reference","t":"communicationDisabledUntil","c":"discord.js!GuildMemberEditOptions#communicationDisabledUntil"},{"k":"Content","t":"?: "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5899,"co":3,"ro":false,"op":true,"r":"Public","n":"communicationDisabledUntil","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#deaf:member","d":"/**\n * Whether or not the member should be deafened\n */\n","ex":[{"k":"Reference","t":"deaf","c":"discord.js!GuildMemberEditOptions#deaf"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5897,"co":3,"ro":false,"op":true,"r":"Public","n":"deaf","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#flags:member","d":"/**\n * The flags to set for the member\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!GuildMemberEditOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildMemberFlagsResolvable","c":"discord.js!GuildMemberFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5900,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#mute:member","d":"/**\n * Whether or not the member should be muted\n */\n","ex":[{"k":"Reference","t":"mute","c":"discord.js!GuildMemberEditOptions#mute"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5896,"co":3,"ro":false,"op":true,"r":"Public","n":"mute","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#nick:member","d":"/**\n * The nickname to set for the member\n */\n","ex":[{"k":"Reference","t":"nick","c":"discord.js!GuildMemberEditOptions#nick"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5894,"co":3,"ro":false,"op":true,"r":"Public","n":"nick","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#reason:member","d":"/**\n * Reason for editing this user\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildMemberEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5901,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildMemberEditOptions#roles:member","d":"/**\n * The roles or role ids to apply\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildMemberEditOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"> | readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5895,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":10}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildMemberFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link GuildMember.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildMemberFlagsBitField","c":"discord.js!GuildMemberFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMemberFlagsString","c":"discord.js!GuildMemberFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/GuildMemberFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"GuildMemberFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildMemberFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberFlagsBitField.Flags:member","d":"/**\n * Numeric guild guild member flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!GuildMemberFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberFlags","c":"discord-api-types!GuildMemberFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMemberFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!GuildMemberFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMemberFlagsString","c":"discord.js!GuildMemberFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMemberFlags","c":"discord-api-types!GuildMemberFlags:enum"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1574,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildMemberFlagsResolvable:type","d":"/**\n * Data that can be resolved to give a guild member flag bitfield. This can be:\n *\n * * A string (see {@link GuildMemberFlagsBitField.Flags})\n *\n * * A guild member flag\n *\n * * An instance of GuildMemberFlagsBitField\n *\n * * An Array of GuildMemberFlagsResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildMemberFlagsResolvable","c":"discord.js!GuildMemberFlagsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMemberFlagsString","c":"discord.js!GuildMemberFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/GuildMemberFlagsBitField.js","l":32,"co":1,"r":"Public","n":"GuildMemberFlagsResolvable","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!GuildMemberFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildMemberFlagsString","c":"discord.js!GuildMemberFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildMemberFlags","c":"discord-api-types!GuildMemberFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1568,"co":1,"r":"Public","n":"GuildMemberFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!GuildMemberManager:class","d":"/**\n * Manages API methods for GuildMembers and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildMemberManager","c":"discord.js!GuildMemberManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":21,"co":1,"r":"Public","ab":false,"n":"GuildMemberManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!GuildMemberManager#add:member(1)","d":"/**\n * Adds a user to the guild using OAuth2. <info>This method requires the {@link discord-api-types#(PermissionFlagsBits:type).CreateInstantInvite} permission.\n *\n * @param user - The user to add to the guild\n *\n * @param options - Options for adding the user to the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!GuildMemberManager#add"},{"k":"Content","t":"(  "},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AddGuildMemberOptions","c":"discord.js!AddGuildMemberOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchWhenExisting","c":"discord.js!~__type#fetchWhenExisting"},{"k":"Content","t":": false }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":98,"co":3,"sta":false,"rtr":{"st":14,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Method","c":"discord.js!GuildMemberManager#add:member(2)","d":"/**\n * Adds a user to the guild using OAuth2. <info>This method requires the {@link discord-api-types#(PermissionFlagsBits:type).CreateInstantInvite} permission.\n *\n * @param user - The user to add to the guild\n *\n * @param options - Options for adding the user to the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!GuildMemberManager#add"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AddGuildMemberOptions","c":"discord.js!AddGuildMemberOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":98,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Method","c":"discord.js!GuildMemberManager#addRole:member(1)","d":"/**\n * Adds a role to a member.\n *\n * @param options - Options for adding the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"addRole","c":"discord.js!GuildMemberManager#addRole"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AddOrRemoveGuildMemberRoleOptions","c":"discord.js!AddOrRemoveGuildMemberRoleOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":516,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"addRole"},{"k":"Method","c":"discord.js!GuildMemberManager#ban:member(1)","d":"/**\n * Bans a user from the guild.\n *\n * @param user - The user to ban\n *\n * @param options - Options for the ban\n *\n * @returns Result object will be resolved as specifically as possible. If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot be resolved, the user id will be the result. Internally calls the GuildBanManager#create method.\n *\n * @example\n * ```js\n * // Ban a user by id (or with a user/guild member object)\n * guild.members.ban('84484653687267328')\n *   .then(banInfo => console.log(`Banned ${banInfo.user?.tag ?? banInfo.tag ?? banInfo}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ban","c":"discord.js!GuildMemberManager#ban"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BanOptions","c":"discord.js!BanOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":484,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"ban"},{"k":"Property","c":"discord.js!GuildMemberManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":32,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMemberManager#edit:member(1)","d":"/**\n * Edits a member of the guild. <info>The user must be a member of the guild</info>\n *\n * @param user - The member to edit\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildMemberManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberEditOptions","c":"discord.js!GuildMemberEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":344,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildMemberManager#fetch:member(1)","d":"/**\n * Fetches member(s) from a guild.\n *\n * @param options - Options for fetching member(s). Omitting the parameter or providing `undefined` will fetch all members.\n *\n * @example\n * ```js\n * // Fetch all members from a guild\n * guild.members.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member\n * guild.members.fetch('66564597481480192')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member without checking cache\n * guild.members.fetch({ user, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member without caching\n * guild.members.fetch({ user, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch by an array of users including their presences\n * guild.members.fetch({ user: ['66564597481480192', '191615925336670208'], withPresences: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch by query\n * guild.members.fetch({ query: 'hydra', limit: 1 })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildMemberManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchMemberOptions","c":"discord.js!FetchMemberOptions:interface"},{"k":"Content","t":" | ("},{"k":"Reference","t":"FetchMembersOptions","c":"discord.js!FetchMembersOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"user","c":"discord.js!~__type#user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" })"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":206,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildMemberManager#fetch:member(2)","d":"/**\n * Fetches member(s) from a guild.\n *\n * @param options - Options for fetching member(s). Omitting the parameter or providing `undefined` will fetch all members.\n *\n * @example\n * ```js\n * // Fetch all members from a guild\n * guild.members.fetch()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member\n * guild.members.fetch('66564597481480192')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member without checking cache\n * guild.members.fetch({ user, force: true })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Fetch a single member without caching\n * guild.members.fetch({ user, cache: false })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch by an array of users including their presences\n * guild.members.fetch({ user: ['66564597481480192', '191615925336670208'], withPresences: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch by query\n * guild.members.fetch({ query: 'hydra', limit: 1 })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildMemberManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchMembersOptions","c":"discord.js!FetchMembersOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":206,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildMemberManager#fetchMe:member(1)","d":"/**\n * Fetches the client user as a GuildMember of the guild.\n *\n * @param options - The options for fetching the member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchMe","c":"discord.js!GuildMemberManager#fetchMe"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":279,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchMe"},{"k":"Property","c":"discord.js!GuildMemberManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildMemberManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMemberManager#kick:member(1)","d":"/**\n * Kicks a user from the guild. <info>The user must be a member of the guild</info>\n *\n * @param user - The member to kick\n *\n * @param reason - Reason for kicking\n *\n * @returns Result object will be resolved as specifically as possible. If the GuildMember cannot be resolved, the User will instead be attempted to be resolved. If that also cannot be resolved, the user's id will be the result.\n *\n * @example\n * ```js\n * // Kick a user by id (or with a user/guild member object)\n * guild.members.kick('84484653687267328')\n *   .then(kickInfo => console.log(`Kicked ${kickInfo.user?.tag ?? kickInfo.tag ?? kickInfo}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"kick","c":"discord.js!GuildMemberManager#kick"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":461,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"kick"},{"k":"Method","c":"discord.js!GuildMemberManager#list:member(1)","d":"/**\n * Lists up to 1000 members of the guild.\n *\n * @param options - Options for listing members\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"list","c":"discord.js!GuildMemberManager#list"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildListMembersOptions","c":"discord.js!GuildListMembersOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":316,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"list"},{"k":"Property","c":"discord.js!GuildMemberManager#me:member","d":"/**\n * The client user as a GuildMember of this guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"me","c":"discord.js!GuildMemberManager#me"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":144,"co":3,"ro":true,"op":false,"r":"Public","n":"me","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMemberManager#prune:member(1)","d":"/**\n * Prunes members from the guild based on how long they have been inactive.\n *\n * @param options - Options for pruning\n *\n * @returns The number of members that were/will be kicked\n *\n * @example\n * ```js\n * // See how many members will be pruned\n * guild.members.prune({ dry: true })\n *   .then(pruned => console.log(`This will prune ${pruned} people!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Actually prune the members\n * guild.members.prune({ days: 1, reason: 'too many people!' })\n *   .then(pruned => console.log(`I just pruned ${pruned} people!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Include members with a specified role\n * guild.members.prune({ days: 7, roles: ['657259391652855808'] })\n *    .then(pruned => console.log(`I just pruned ${pruned} people!`))\n *    .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"prune","c":"discord.js!GuildMemberManager#prune"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildPruneMembersOptions","c":"discord.js!GuildPruneMembersOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"dry","c":"discord.js!~__type#dry"},{"k":"Content","t":"?: false; "},{"k":"Reference","t":"count","c":"discord.js!~__type#count"},{"k":"Content","t":": false }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":420,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"prune"},{"k":"Method","c":"discord.js!GuildMemberManager#prune:member(2)","d":"/**\n * Prunes members from the guild based on how long they have been inactive.\n *\n * @param options - Options for pruning\n *\n * @returns The number of members that were/will be kicked\n *\n * @example\n * ```js\n * // See how many members will be pruned\n * guild.members.prune({ dry: true })\n *   .then(pruned => console.log(`This will prune ${pruned} people!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Actually prune the members\n * guild.members.prune({ days: 1, reason: 'too many people!' })\n *   .then(pruned => console.log(`I just pruned ${pruned} people!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Include members with a specified role\n * guild.members.prune({ days: 7, roles: ['657259391652855808'] })\n *    .then(pruned => console.log(`I just pruned ${pruned} people!`))\n *    .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"prune","c":"discord.js!GuildMemberManager#prune"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildPruneMembersOptions","c":"discord.js!GuildPruneMembersOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":420,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"prune"},{"k":"Method","c":"discord.js!GuildMemberManager#removeRole:member(1)","d":"/**\n * Removes a role from a member.\n *\n * @param options - Options for removing the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"removeRole","c":"discord.js!GuildMemberManager#removeRole"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AddOrRemoveGuildMemberRoleOptions","c":"discord.js!AddOrRemoveGuildMemberRoleOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":530,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"removeRole"},{"k":"Method","c":"discord.js!GuildMemberManager#resolve:member(1)","d":"/**\n * Resolves a {@link GuildMemberResolvable} to a {@link GuildMember} object.\n *\n * @param member - The user that is part of the guild\n */\n","ex":[{"k":"Content","t":"resolve(member"},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":";"}],"l":54,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!GuildMemberManager#resolveId:member(1)","d":"/**\n * Resolves a {@link GuildMemberResolvable} to a member id.\n *\n * @param member - The user that is part of the guild\n */\n","ex":[{"k":"Content","t":"resolveId(member"},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":67,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!GuildMemberManager#search:member(1)","d":"/**\n * Searches for members in the guild based on a query.\n *\n * @param options - Options for searching members\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"search","c":"discord.js!GuildMemberManager#search"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildSearchMembersOptions","c":"discord.js!GuildSearchMembersOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":296,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"search"},{"k":"Method","c":"discord.js!GuildMemberManager#unban:member(1)","d":"/**\n * Unbans a user from the guild. Internally calls the {@link GuildBanManager.remove} method.\n *\n * @param user - The user to unban\n *\n * @param reason - Reason for unbanning user\n *\n * @returns The user that was unbanned\n *\n * @example\n * ```js\n * // Unban a user by id (or with a user/guild member object)\n * guild.members.unban('84484653687267328')\n *   .then(user => console.log(`Unbanned ${user.username} from ${guild.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unban","c":"discord.js!GuildMemberManager#unban"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":499,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"unban"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildMemberResolvable:type","d":"/**\n * Data that resolves to give a GuildMember object. This can be:\n *\n * * A GuildMember object\n *\n * * A User resolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildMemberManager.js","l":42,"co":1,"r":"Public","n":"GuildMemberResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!GuildMemberRoleManager:class","d":"/**\n * Manages API methods for roles of a GuildMember and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildMemberRoleManager","c":"discord.js!GuildMemberRoleManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"DataManager","c":"discord.js!DataManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberRoleManager.js","l":13,"co":1,"r":"Public","ab":false,"n":"GuildMemberRoleManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!GuildMemberRoleManager#add:member(1)","d":"/**\n * Adds a role (or multiple roles) to the member.\n *\n * @param roleOrRoles - The role or roles to add\n *\n * @param reason - Reason for adding the role(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!GuildMemberRoleManager#add"},{"k":"Content","t":"(  "},{"k":"Reference","t":"roleOrRoles","c":"discord.js!~roleOrRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":108,"co":3,"sta":false,"rtr":{"st":20,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleOrRoles","ptr":{"st":5,"en":15},"op":false,"rs":false},{"pn":"reason","ptr":{"st":18,"en":19},"op":true,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Property","c":"discord.js!GuildMemberRoleManager#botRole:member","d":"/**\n * The managed role this member created when joining the guild, if any <info>Only ever available on bots</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"botRole","c":"discord.js!GuildMemberRoleManager#botRole"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":97,"co":3,"ro":true,"op":false,"r":"Public","n":"botRole","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#cache:member","d":"/**\n * The roles of this member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":35,"ro":true,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#color:member","d":"/**\n * The role of the member used to set their color\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"color","c":"discord.js!GuildMemberRoleManager#color"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":true,"op":false,"r":"Public","n":"color","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#guild:member","d":"/**\n * The Guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildMemberRoleManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#highest:member","d":"/**\n * The role of the member with the highest position\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"highest","c":"discord.js!GuildMemberRoleManager#highest"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":true,"op":false,"r":"Public","n":"highest","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#hoist:member","d":"/**\n * The role of the member used to hoist them in a separate category in the users list\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"hoist","c":"discord.js!GuildMemberRoleManager#hoist"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":true,"op":false,"r":"Public","n":"hoist","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#icon:member","d":"/**\n * The role of the member used to set their role icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"icon","c":"discord.js!GuildMemberRoleManager#icon"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":true,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#member:member","d":"/**\n * The GuildMember this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"member","c":"discord.js!GuildMemberRoleManager#member"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMemberRoleManager#premiumSubscriberRole:member","d":"/**\n * The premium subscriber role of the guild, if present on the member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"premiumSubscriberRole","c":"discord.js!GuildMemberRoleManager#premiumSubscriberRole"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":87,"co":3,"ro":true,"op":false,"r":"Public","n":"premiumSubscriberRole","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMemberRoleManager#remove:member(1)","d":"/**\n * Removes a role (or multiple roles) from the member.\n *\n * @param roleOrRoles - The role or roles to remove\n *\n * @param reason - Reason for removing the role(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!GuildMemberRoleManager#remove"},{"k":"Content","t":"(  "},{"k":"Reference","t":"roleOrRoles","c":"discord.js!~roleOrRoles"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":145,"co":3,"sta":false,"rtr":{"st":20,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleOrRoles","ptr":{"st":5,"en":15},"op":false,"rs":false},{"pn":"reason","ptr":{"st":18,"en":19},"op":true,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!GuildMemberRoleManager#set:member(1)","d":"/**\n * Sets the roles applied to the member.\n *\n * @param roles - The roles or role ids to apply\n *\n * @param reason - Reason for applying the roles\n *\n * @example\n * ```js\n * // Set the member's roles to a single role\n * guildMember.roles.set(['391156570408615936'])\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all the roles from a member\n * guildMember.roles.set([])\n *   .then(member => console.log(`Member roles is now of ${member.roles.cache.size} size`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!GuildMemberRoleManager#set"},{"k":"Content","t":"("},{"k":"Reference","t":"roles","c":"discord.js!~roles"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":193,"co":3,"sta":false,"rtr":{"st":19,"en":23},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roles","ptr":{"st":5,"en":14},"op":false,"rs":false},{"pn":"reason","ptr":{"st":17,"en":18},"op":true,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"discord.js!GuildMessageManager:class","d":"/**\n * Manages API methods for messages in a guild and holds their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":"<"},{"k":"Content","t":"true"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMessageManager.js","l":9,"co":1,"r":"Public","ab":false,"n":"GuildMessageManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildMessageManager#cache:member","d":"/**\n * The cache of Messages\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/MessageManager.js","l":31,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMessageManager#channel:member","d":"/**\n * The channel that the messages belong to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!GuildMessageManager#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":";"}],"l":10,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildMessageManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildMessageManager#crosspost:member(1)","d":"/**\n * Publishes a message in an announcement channel to all channels following it, even if it's not cached.\n *\n * @param message - The message to publish\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"crosspost","c":"discord.js!GuildMessageManager#crosspost"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<true>>"},{"k":"Content","t":";"}],"pat":"src/managers/MessageManager.js","l":203,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"crosspost"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Class","c":"discord.js!GuildOnboarding:class","d":"/**\n * Represents the onboarding data of a guild.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildOnboarding","c":"discord.js!GuildOnboarding:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildOnboarding.js","l":11,"co":1,"r":"Public","ab":false,"n":"GuildOnboarding","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildOnboarding#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#defaultChannels:member","d":"/**\n * The ids of the channels that new members get opted into automatically\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultChannels","c":"discord.js!GuildOnboarding#defaultChannels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultChannels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#enabled:member","d":"/**\n * Whether onboarding is enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"enabled","c":"discord.js!GuildOnboarding#enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#guild:member","d":"/**\n * The guild this onboarding is from\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!GuildOnboarding#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#guildId:member","d":"/**\n * The id of the guild this onboarding data is for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildOnboarding#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#mode:member","d":"/**\n * The mode of this onboarding\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mode","c":"discord.js!GuildOnboarding#mode"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildOnboardingMode","c":"discord-api-types!GuildOnboardingMode:enum"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"mode","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboarding#prompts:member","d":"/**\n * The prompts shown during onboarding and in customize community\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"prompts","c":"discord.js!GuildOnboarding#prompts"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildOnboardingPrompt","c":"discord.js!GuildOnboardingPrompt:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"prompts","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildOnboardingEditOptions:interface","d":"/**\n * Options used to edit the guild onboarding.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildOnboardingEditOptions","c":"discord.js!GuildOnboardingEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":885,"co":1,"r":"Public","n":"GuildOnboardingEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildOnboardingEditOptions#defaultChannels:member","d":"/**\n * The channels that new members get opted into automatically\n */\n","ex":[{"k":"Reference","t":"defaultChannels","c":"discord.js!GuildOnboardingEditOptions#defaultChannels"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5996,"co":3,"ro":false,"op":true,"r":"Public","n":"defaultChannels","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingEditOptions#enabled:member","d":"/**\n * Whether the onboarding is enabled\n */\n","ex":[{"k":"Reference","t":"enabled","c":"discord.js!GuildOnboardingEditOptions#enabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5997,"co":3,"ro":false,"op":true,"r":"Public","n":"enabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingEditOptions#mode:member","d":"/**\n * The mode to edit the guild onboarding with\n */\n","ex":[{"k":"Reference","t":"mode","c":"discord.js!GuildOnboardingEditOptions#mode"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildOnboardingMode","c":"discord-api-types!GuildOnboardingMode:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5998,"co":3,"ro":false,"op":true,"r":"Public","n":"mode","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingEditOptions#prompts:member","d":"/**\n * The prompts shown during onboarding and in customize community\n */\n","ex":[{"k":"Reference","t":"prompts","c":"discord.js!GuildOnboardingEditOptions#prompts"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"GuildOnboardingPromptData","c":"discord.js!GuildOnboardingPromptData:interface"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildOnboardingPrompt","c":"discord.js!GuildOnboardingPrompt:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5995,"co":3,"ro":false,"op":true,"r":"Public","n":"prompts","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingEditOptions#reason:member","d":"/**\n * The reason for editing the guild onboarding\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildOnboardingEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5999,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildOnboardingPrompt:class","d":"/**\n * Represents the data of a prompt of a guilds onboarding.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildOnboardingPrompt","c":"discord.js!GuildOnboardingPrompt:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildOnboardingPrompt.js","l":11,"co":1,"r":"Public","ab":false,"n":"GuildOnboardingPrompt","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildOnboardingPrompt#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#guild:member","d":"/**\n * The guild this onboarding prompt is from\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!GuildOnboardingPrompt#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#guildId:member","d":"/**\n * The id of the guild this onboarding prompt is from\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildOnboardingPrompt#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#id:member","d":"/**\n * The id of the prompt\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!GuildOnboardingPrompt#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#inOnboarding:member","d":"/**\n * Whether the prompt is present in the onboarding flow. If `false`, the prompt will only appear in the Channels & Roles tab\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inOnboarding","c":"discord.js!GuildOnboardingPrompt#inOnboarding"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"inOnboarding","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#options:member","d":"/**\n * The options available within the prompt\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!GuildOnboardingPrompt#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildOnboardingPromptOption","c":"discord.js!GuildOnboardingPromptOption:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#required:member","d":"/**\n * Whether the prompt is required before a user completes the onboarding flow\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"required","c":"discord.js!GuildOnboardingPrompt#required"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":false,"op":false,"r":"Public","n":"required","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#singleSelect:member","d":"/**\n * Whether users are limited to selecting one option for the prompt\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"singleSelect","c":"discord.js!GuildOnboardingPrompt#singleSelect"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":46,"co":3,"ro":false,"op":false,"r":"Public","n":"singleSelect","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#title:member","d":"/**\n * The title of the prompt\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"title","c":"discord.js!GuildOnboardingPrompt#title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"title","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPrompt#type:member","d":"/**\n * The type of the prompt\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!GuildOnboardingPrompt#type"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildOnboardingPromptType","c":"discord-api-types!GuildOnboardingPromptType:enum"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildOnboardingPromptData:interface","d":"/**\n * Data for editing a guild onboarding prompt.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildOnboardingPromptData","c":"discord.js!GuildOnboardingPromptData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":897,"co":1,"r":"Public","n":"GuildOnboardingPromptData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#id:member","d":"/**\n * The id of the prompt\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!GuildOnboardingPromptData#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6003,"co":3,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#inOnboarding:member","d":"/**\n * Whether the prompt is present in the onboarding flow\n */\n","ex":[{"k":"Reference","t":"inOnboarding","c":"discord.js!GuildOnboardingPromptData#inOnboarding"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6007,"co":3,"ro":false,"op":true,"r":"Public","n":"inOnboarding","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#options:member","d":"/**\n * The options available within the prompt\n */\n","ex":[{"k":"Reference","t":"options","c":"discord.js!GuildOnboardingPromptData#options"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"GuildOnboardingPromptOptionData","c":"discord.js!GuildOnboardingPromptOptionData:interface"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildOnboardingPromptOption","c":"discord.js!GuildOnboardingPromptOption:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6009,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#required:member","d":"/**\n * Whether the prompt is required before a user completes the onboarding flow\n */\n","ex":[{"k":"Reference","t":"required","c":"discord.js!GuildOnboardingPromptData#required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6006,"co":3,"ro":false,"op":true,"r":"Public","n":"required","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#singleSelect:member","d":"/**\n * Whether users are limited to selecting one option for the prompt\n */\n","ex":[{"k":"Reference","t":"singleSelect","c":"discord.js!GuildOnboardingPromptData#singleSelect"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6005,"co":3,"ro":false,"op":true,"r":"Public","n":"singleSelect","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#title:member","d":"/**\n * The title for the prompt\n */\n","ex":[{"k":"Reference","t":"title","c":"discord.js!GuildOnboardingPromptData#title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6004,"co":3,"ro":false,"op":false,"r":"Public","n":"title","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptData#type:member","d":"/**\n * The type of the prompt\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildOnboardingPromptData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildOnboardingPromptType","c":"discord-api-types!GuildOnboardingPromptType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6008,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildOnboardingPromptOption:class","d":"/**\n * Represents the data of an option from a prompt of a guilds onboarding.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildOnboardingPromptOption","c":"discord.js!GuildOnboardingPromptOption:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildOnboardingPromptOption.js","l":11,"co":1,"r":"Public","ab":false,"n":"GuildOnboardingPromptOption","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#channels:member","d":"/**\n * The channels a member is added to when the option is selected\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channels","c":"discord.js!GuildOnboardingPromptOption#channels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#description:member","d":"/**\n * The description of the option\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!GuildOnboardingPromptOption#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#emoji:member","d":"/**\n * The emoji of this onboarding prompt option\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"emoji","c":"discord.js!GuildOnboardingPromptOption#emoji"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":80,"co":3,"ro":true,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#guild:member","d":"/**\n * The guild this onboarding prompt option is from\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!GuildOnboardingPromptOption#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":72,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#guildId:member","d":"/**\n * The id of the guild this onboarding prompt option is from\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildOnboardingPromptOption#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#id:member","d":"/**\n * The id of the option\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!GuildOnboardingPromptOption#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#roles:member","d":"/**\n * The roles assigned to a member when the option is selected\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!GuildOnboardingPromptOption#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildOnboardingPromptOption#title:member","d":"/**\n * The title of the option\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"title","c":"discord.js!GuildOnboardingPromptOption#title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"title","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildOnboardingPromptOptionData:interface","d":"/**\n * Data for editing a guild onboarding prompt option.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildOnboardingPromptOptionData","c":"discord.js!GuildOnboardingPromptOptionData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":910,"co":1,"r":"Public","n":"GuildOnboardingPromptOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#channels:member","d":"/**\n * The channels a member is added to when the option is selected\n */\n","ex":[{"k":"Reference","t":"channels","c":"discord.js!GuildOnboardingPromptOptionData#channels"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6014,"co":3,"ro":false,"op":true,"r":"Public","n":"channels","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#description:member","d":"/**\n * The description of the option\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildOnboardingPromptOptionData#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6017,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#emoji:member","d":"/**\n * The emoji of the option\n */\n","ex":[{"k":"Reference","t":"emoji","c":"discord.js!GuildOnboardingPromptOptionData#emoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6018,"co":3,"ro":false,"op":true,"r":"Public","n":"emoji","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#id:member","d":"/**\n * The id of the option\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!GuildOnboardingPromptOptionData#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6013,"co":3,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#roles:member","d":"/**\n * The roles assigned to a member when the option is selected\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildOnboardingPromptOptionData#roles"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6015,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!GuildOnboardingPromptOptionData#title:member","d":"/**\n * The title of the option\n */\n","ex":[{"k":"Reference","t":"title","c":"discord.js!GuildOnboardingPromptOptionData#title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6016,"co":3,"ro":false,"op":false,"r":"Public","n":"title","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildPreview:class","d":"/**\n * Represents the data about the guild any bot can preview, connected to the specified guild.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildPreview.js","l":14,"co":1,"r":"Public","ab":false,"n":"GuildPreview","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildPreview#approximateMemberCount:member","d":"/**\n * The approximate count of members in this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"approximateMemberCount","c":"discord.js!GuildPreview#approximateMemberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":false,"op":false,"r":"Public","n":"approximateMemberCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#approximatePresenceCount:member","d":"/**\n * The approximate count of online members in this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"approximatePresenceCount","c":"discord.js!GuildPreview#approximatePresenceCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"approximatePresenceCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!GuildPreview#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":133,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!GuildPreview#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":124,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#description:member","d":"/**\n * The description for this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!GuildPreview#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":91,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#discoverySplash:member","d":"/**\n * The discovery splash icon of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discoverySplash","c":"discord.js!GuildPreview#discoverySplash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"discoverySplash","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildPreview#discoverySplashURL:member(1)","d":"/**\n * The URL to this guild's discovery splash.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discoverySplashURL","c":"discord.js!GuildPreview#discoverySplashURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":151,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"discoverySplashURL"},{"k":"Property","c":"discord.js!GuildPreview#emojis:member","d":"/**\n * Collection of emojis belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"emojis","c":"discord.js!GuildPreview#emojis"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildPreviewEmoji","c":"discord.js!GuildPreviewEmoji:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":101,"co":3,"ro":false,"op":false,"r":"Public","n":"emojis","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#features:member","d":"/**\n * An array of enabled guild features\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"features","c":"discord.js!GuildPreview#features"},{"k":"Content","t":": "},{"k":"Content","t":"`${"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:enum"},{"k":"Content","t":"}`[]"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildPreview#fetch:member(1)","d":"/**\n * Fetches this guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildPreview#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":168,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!GuildPreview#icon:member","d":"/**\n * The icon of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!GuildPreview#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildPreview#iconURL:member(1)","d":"/**\n * The URL to this guild's icon.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!GuildPreview#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":160,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!GuildPreview#id:member","d":"/**\n * The id of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!GuildPreview#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!GuildPreview#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreview#splash:member","d":"/**\n * The splash icon of this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"splash","c":"discord.js!GuildPreview#splash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"splash","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildPreview#splashURL:member(1)","d":"/**\n * The URL to this guild's splash.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"splashURL","c":"discord.js!GuildPreview#splashURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":142,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"splashURL"},{"k":"Property","c":"discord.js!GuildPreview#stickers:member","d":"/**\n * Collection of stickers belonging to this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stickers","c":"discord.js!GuildPreview#stickers"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":113,"co":3,"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildPreview#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!GuildPreview#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1684,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!GuildPreview#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the guild's name instead of the Guild object.\n *\n * @example\n * ```js\n * // Logs: Hello from My Guild!\n * console.log(`Hello from ${previewGuild}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!GuildPreview#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":181,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!GuildPreviewEmoji:class","d":"/**\n * Represents an instance of an emoji belonging to a public guild obtained through Discord's preview endpoint.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildPreviewEmoji","c":"discord.js!GuildPreviewEmoji:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildEmoji","c":"discord.js!BaseGuildEmoji:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildPreviewEmoji.js","l":9,"co":1,"r":"Public","ab":false,"n":"GuildPreviewEmoji","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildPreviewEmoji#animated:member","d":"/**\n * Whether or not the emoji is animated\n */\n","ex":[{"k":"Content","t":"undefined animated :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":21,"ro":false,"op":true,"r":"Public","n":"animated","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#available:member","d":"/**\n * Whether this emoji is available\n */\n","ex":[{"k":"Content","t":"undefined available :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":51,"ro":false,"op":true,"r":"Public","n":"available","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#createdAt:member","d":"/**\n * The time the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":84,"ro":true,"op":true,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#createdTimestamp:member","d":"/**\n * The timestamp the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":75,"ro":true,"op":true,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#guild:member","d":"/**\n * The public guild this emoji is part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildPreviewEmoji#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildPreview","c":"discord.js!GuildPreview:class"},{"k":"Content","t":";"}],"l":10,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#id:member","d":"/**\n * The emoji's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":33,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#identifier:member","d":"/**\n * The identifier of this emoji, used for message reactions\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly identifier :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":41,"ro":true,"op":false,"r":"Public","n":"identifier","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#managed:member","d":"/**\n * Whether this emoji is managed by an external service\n */\n","ex":[{"k":"Content","t":"undefined managed :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":43,"ro":false,"op":true,"r":"Public","n":"managed","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#name:member","d":"/**\n * The emoji's name\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":27,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#requiresColons:member","d":"/**\n * Whether or not this emoji requires colons surrounding it\n */\n","ex":[{"k":"Content","t":"undefined requiresColons :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":35,"ro":false,"op":true,"r":"Public","n":"requiresColons","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#roles:member","d":"/**\n * The roles this emoji is active for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!GuildPreviewEmoji#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildPreviewEmoji#url:member","d":"/**\n * Returns a URL for the emoji.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildEmoji.js","l":65,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildPruneMembersOptions:interface","d":"/**\n * Options used for pruning guild members. <info>It's recommended to set {@link GuildPruneMembersOptions.count | options.count} to `false` for large guilds.</info>\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildPruneMembersOptions","c":"discord.js!GuildPruneMembersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":388,"co":1,"r":"Public","n":"GuildPruneMembersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildPruneMembersOptions#count:member","d":"/**\n * Whether or not to return the number of users that have been kicked.\n */\n","ex":[{"k":"Reference","t":"count","c":"discord.js!GuildPruneMembersOptions#count"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5909,"co":3,"ro":false,"op":true,"r":"Public","n":"count","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildPruneMembersOptions#days:member","d":"/**\n * Number of days of inactivity required to kick\n */\n","ex":[{"k":"Reference","t":"days","c":"discord.js!GuildPruneMembersOptions#days"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5910,"co":3,"ro":false,"op":true,"r":"Public","n":"days","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildPruneMembersOptions#dry:member","d":"/**\n * Get the number of users that will be kicked, without actually kicking them\n */\n","ex":[{"k":"Reference","t":"dry","c":"discord.js!GuildPruneMembersOptions#dry"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5911,"co":3,"ro":false,"op":true,"r":"Public","n":"dry","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildPruneMembersOptions#reason:member","d":"/**\n * Reason for this prune\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildPruneMembersOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5912,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildPruneMembersOptions#roles:member","d":"/**\n * Array of roles to bypass the \"...and no roles\" constraint when pruning\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!GuildPruneMembersOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5913,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!GuildResolvable:type","d":"/**\n * Data that resolves to give a Guild object. This can be:\n *\n * * A Guild object\n *\n * * A GuildChannel object\n *\n * * A GuildEmoji object\n *\n * * A Role object\n *\n * * A Snowflake\n *\n * * An Invite object\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildManager.js","l":47,"co":1,"r":"Public","n":"GuildResolvable","ttr":{"st":3,"en":16}},{"k":"Class","c":"discord.js!GuildScheduledEvent:class","d":"/**\n * Represents a scheduled event in a {@link Guild}.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus","c":"discord-api-types!GuildScheduledEventStatus:enum"},{"k":"Content","t":" = "},{"k":"Reference","t":"GuildScheduledEventStatus","c":"discord-api-types!GuildScheduledEventStatus:enum"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildScheduledEvent.js","l":12,"co":1,"r":"Public","tps":[{"tp":"Status","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"GuildScheduledEvent","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildScheduledEvent#channel:member","d":"/**\n * The channel associated with this scheduled event\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!GuildScheduledEvent#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":255,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#channelId:member","d":"/**\n * The channel id in which the scheduled event will be hosted, or `null` if entity type is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!GuildScheduledEvent#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#coverImageURL:member(1)","d":"/**\n * The URL of this scheduled event's cover image\n *\n * @param options - Options for image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"coverImageURL","c":"discord.js!GuildScheduledEvent#coverImageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":208,"co":3,"sta":false,"rtr":{"st":10,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"coverImageURL"},{"k":"Property","c":"discord.js!GuildScheduledEvent#createdAt:member","d":"/**\n * The time the guild scheduled event was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!GuildScheduledEvent#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":226,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#createdTimestamp:member","d":"/**\n * The timestamp the guild scheduled event was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!GuildScheduledEvent#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":217,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#createInviteURL:member(1)","d":"/**\n * Creates an invite URL to this guild scheduled event.\n *\n * @param options - The options to create the invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createInviteURL","c":"discord.js!GuildScheduledEvent#createInviteURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildScheduledEventInviteURLCreateOptions","c":"discord.js!GuildScheduledEventInviteURLCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":290,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createInviteURL"},{"k":"Property","c":"discord.js!GuildScheduledEvent#creator:member","d":"/**\n * The user that created this guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"creator","c":"discord.js!GuildScheduledEvent#creator"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":153,"co":3,"ro":false,"op":false,"r":"Public","n":"creator","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#creatorId:member","d":"/**\n * The id of the user that created this guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"creatorId","c":"discord.js!GuildScheduledEvent#creatorId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"creatorId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#delete:member(1)","d":"/**\n * Deletes this guild scheduled event.\n *\n * @example\n * ```js\n * // Delete a guild scheduled event\n * guildScheduledEvent.delete()\n *  .then(guildScheduledEvent => console.log(guildScheduledEvent))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildScheduledEvent#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":333,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!GuildScheduledEvent#description:member","d":"/**\n * The description of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!GuildScheduledEvent#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#edit:member(1)","d":"/**\n * Edits this guild scheduled event.\n *\n * @param options - The options to edit the guild scheduled event\n *\n * @example\n * ```js\n * // Edit a guild scheduled event\n * guildScheduledEvent.edit({ name: 'Party' })\n *  .then(guildScheduledEvent => console.log(guildScheduledEvent))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildScheduledEvent#edit"},{"k":"Content","t":"<"},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventSetStatusArg","c":"discord.js!GuildScheduledEventSetStatusArg:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventEditOptions","c":"discord.js!GuildScheduledEventEditOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":", "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":311,"co":3,"tps":[{"tp":"AcceptableStatus","ctr":{"st":5,"en":9},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":19,"en":25},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":12,"en":18},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!GuildScheduledEvent#entityId:member","d":"/**\n * The id of the hosting entity associated with the scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entityId","c":"discord.js!GuildScheduledEvent#entityId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":133,"co":3,"ro":false,"op":false,"r":"Public","n":"entityId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#entityMetadata:member","d":"/**\n * Additional metadata\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entityMetadata","c":"discord.js!GuildScheduledEvent#entityMetadata"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventEntityMetadata","c":"discord.js!GuildScheduledEventEntityMetadata:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":173,"co":3,"ro":false,"op":false,"r":"Public","n":"entityMetadata","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#entityType:member","d":"/**\n * The type of hosting entity associated with the scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"entityType","c":"discord.js!GuildScheduledEvent#entityType"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventEntityType","c":"discord-api-types!GuildScheduledEventEntityType:enum"},{"k":"Content","t":";"}],"l":122,"co":3,"ro":false,"op":false,"r":"Public","n":"entityType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#fetch:member(1)","d":"/**\n * Fetches this guild scheduled event.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildScheduledEvent#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":320,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildScheduledEvent#fetchSubscribers:member(1)","d":"/**\n * Fetches subscribers of this guild scheduled event.\n *\n * @param options - Options for fetching the subscribers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchSubscribers","c":"discord.js!GuildScheduledEvent#fetchSubscribers"},{"k":"Content","t":"<"},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"FetchGuildScheduledEventSubscribersOptions","c":"discord.js!FetchGuildScheduledEventSubscribersOptions:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Options"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventManagerFetchSubscribersResult","c":"discord.js!GuildScheduledEventManagerFetchSubscribersResult:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Options"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":436,"co":3,"tps":[{"tp":"Options","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchSubscribers"},{"k":"Property","c":"discord.js!GuildScheduledEvent#guild:member","d":"/**\n * The guild this scheduled event belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!GuildScheduledEvent#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":264,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#guildId:member","d":"/**\n * The id of the guild this guild scheduled event belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildScheduledEvent#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#id:member","d":"/**\n * The id of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!GuildScheduledEvent#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#image:member","d":"/**\n * The cover image hash for this scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"image","c":"discord.js!GuildScheduledEvent#image"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":188,"co":3,"ro":false,"op":false,"r":"Public","n":"image","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#isActive:member(1)","d":"/**\n * Indicates whether this guild scheduled event has an {@link discord-api-types#(GuildScheduledEventStatus:enum).Active} status.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isActive","c":"discord.js!GuildScheduledEvent#isActive"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventStatus.Active","c":"discord-api-types!GuildScheduledEventStatus.Active:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":455,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isActive"},{"k":"Method","c":"discord.js!GuildScheduledEvent#isCanceled:member(1)","d":"/**\n * Indicates whether this guild scheduled event has a {@link discord-api-types#(GuildScheduledEventStatus:enum).Canceled} status.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isCanceled","c":"discord.js!GuildScheduledEvent#isCanceled"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventStatus.Canceled","c":"discord-api-types!GuildScheduledEventStatus.Canceled:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":463,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isCanceled"},{"k":"Method","c":"discord.js!GuildScheduledEvent#isCompleted:member(1)","d":"/**\n * Indicates whether this guild scheduled event has a {@link discord-api-types#(GuildScheduledEventStatus:enum).Completed} status.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isCompleted","c":"discord.js!GuildScheduledEvent#isCompleted"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventStatus.Completed","c":"discord-api-types!GuildScheduledEventStatus.Completed:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":471,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isCompleted"},{"k":"Method","c":"discord.js!GuildScheduledEvent#isScheduled:member(1)","d":"/**\n * Indicates whether this guild scheduled event has a {@link discord-api-types#(GuildScheduledEventStatus:enum).Scheduled} status.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isScheduled","c":"discord.js!GuildScheduledEvent#isScheduled"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventStatus.Scheduled","c":"discord-api-types!GuildScheduledEventStatus.Scheduled:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":479,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isScheduled"},{"k":"Property","c":"discord.js!GuildScheduledEvent#name:member","d":"/**\n * The name of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!GuildScheduledEvent#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#partial:member","d":"/**\n * Whether this guild scheduled event is partial.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!GuildScheduledEvent#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":199,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#privacyLevel:member","d":"/**\n * The privacy level of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"privacyLevel","c":"discord.js!GuildScheduledEvent#privacyLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventPrivacyLevel","c":"discord-api-types!GuildScheduledEventPrivacyLevel:enum"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":false,"op":false,"r":"Public","n":"privacyLevel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#scheduledEndAt:member","d":"/**\n * The time the guild scheduled event will end at, or `null` if the event does not have a scheduled time to end\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"scheduledEndAt","c":"discord.js!GuildScheduledEvent#scheduledEndAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":246,"co":3,"ro":true,"op":false,"r":"Public","n":"scheduledEndAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#scheduledEndTimestamp:member","d":"/**\n * The timestamp the guild scheduled event will end at or `null` if the event does not have a scheduled time to end\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"scheduledEndTimestamp","c":"discord.js!GuildScheduledEvent#scheduledEndTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":90,"co":3,"ro":false,"op":false,"r":"Public","n":"scheduledEndTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#scheduledStartAt:member","d":"/**\n * The time the guild scheduled event will start at <info>This can be potentially `null` only when it's an {@link AuditLogEntryTarget}</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"scheduledStartAt","c":"discord.js!GuildScheduledEvent#scheduledStartAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":236,"co":3,"ro":true,"op":false,"r":"Public","n":"scheduledStartAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#scheduledStartTimestamp:member","d":"/**\n * The timestamp the guild scheduled event will start at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"scheduledStartTimestamp","c":"discord.js!GuildScheduledEvent#scheduledStartTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":false,"op":false,"r":"Public","n":"scheduledStartTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#setDescription:member(1)","d":"/**\n * Sets the new description of the guild scheduled event.\n *\n * @param description - The description of the guild scheduled event\n *\n * @param reason - The reason for changing the description\n *\n * @example\n * ```js\n * // Set description of a guild scheduled event\n * guildScheduledEvent.setDescription('A virtual birthday party')\n *  .then(guildScheduledEvent => console.log(`Set the description to: ${guildScheduledEvent.description}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDescription","c":"discord.js!GuildScheduledEvent#setDescription"},{"k":"Content","t":"("},{"k":"Reference","t":"description","c":"discord.js!~description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":395,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"description","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDescription"},{"k":"Method","c":"discord.js!GuildScheduledEvent#setLocation:member(1)","d":"/**\n * Sets the new location of the guild scheduled event.\n *\n * @param location - The location of the guild scheduled event\n *\n * @param reason - The reason for changing the location\n *\n * @example\n * ```js\n * // Set location of a guild scheduled event\n * guildScheduledEvent.setLocation('Earth')\n *  .then(guildScheduledEvent => console.log(`Set the location to: ${guildScheduledEvent.entityMetadata.location}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setLocation","c":"discord.js!GuildScheduledEvent#setLocation"},{"k":"Content","t":"("},{"k":"Reference","t":"location","c":"discord.js!~location"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":427,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"location","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setLocation"},{"k":"Method","c":"discord.js!GuildScheduledEvent#setName:member(1)","d":"/**\n * Sets a new name for the guild scheduled event.\n *\n * @param name - The new name of the guild scheduled event\n *\n * @param reason - The reason for changing the name\n *\n * @example\n * ```js\n * // Set name of a guild scheduled event\n * guildScheduledEvent.setName('Birthday Party')\n *  .then(guildScheduledEvent => console.log(`Set the name to: ${guildScheduledEvent.name}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!GuildScheduledEvent#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":349,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!GuildScheduledEvent#setScheduledEndTime:member(1)","d":"/**\n * Sets a new time to end the event at.\n *\n * @param scheduledEndTime - The time to end the event at\n *\n * @param reason - The reason for changing the scheduled end time\n *\n * @example\n * ```js\n * // Set end time of a guild scheduled event\n * guildScheduledEvent.setScheduledEndTime('2022-09-25T00:00:00+05:30')\n *  .then(guildScheduledEvent => console.log(`Set the end time to: ${guildScheduledEvent.scheduledEndTime}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setScheduledEndTime","c":"discord.js!GuildScheduledEvent#setScheduledEndTime"},{"k":"Content","t":"("},{"k":"Reference","t":"scheduledEndTime","c":"discord.js!~scheduledEndTime"},{"k":"Content","t":": "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":380,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"scheduledEndTime","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setScheduledEndTime"},{"k":"Method","c":"discord.js!GuildScheduledEvent#setScheduledStartTime:member(1)","d":"/**\n * Sets a new time to schedule the event at.\n *\n * @param scheduledStartTime - The time to schedule the event at\n *\n * @param reason - The reason for changing the scheduled start time\n *\n * @example\n * ```js\n * // Set start time of a guild scheduled event\n * guildScheduledEvent.setScheduledStartTime('2022-09-24T00:00:00+05:30')\n *  .then(guildScheduledEvent => console.log(`Set the start time to: ${guildScheduledEvent.scheduledStartTime}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setScheduledStartTime","c":"discord.js!GuildScheduledEvent#setScheduledStartTime"},{"k":"Content","t":"(  "},{"k":"Reference","t":"scheduledStartTime","c":"discord.js!~scheduledStartTime"},{"k":"Content","t":": "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":364,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"scheduledStartTime","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setScheduledStartTime"},{"k":"Method","c":"discord.js!GuildScheduledEvent#setStatus:member(1)","d":"/**\n * Sets the new status of the guild scheduled event. <info>If you're working with TypeScript, use this method in conjunction with status type-guards like {@link GuildScheduledEvent.isScheduled} to get only valid status as suggestion</info>\n *\n * @param status - The status of the guild scheduled event\n *\n * @param reason - The reason for changing the status\n *\n * @example\n * ```js\n * // Set status of a guild scheduled event\n * guildScheduledEvent.setStatus(GuildScheduledEventStatus.Active)\n *  .then(guildScheduledEvent => console.log(`Set the status to: ${guildScheduledEvent.status}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setStatus","c":"discord.js!GuildScheduledEvent#setStatus"},{"k":"Content","t":"<"},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventSetStatusArg","c":"discord.js!GuildScheduledEventSetStatusArg:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">"},{"k":"Content","t":">(  "},{"k":"Reference","t":"status","c":"discord.js!~status"},{"k":"Content","t":": "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":412,"co":3,"tps":[{"tp":"AcceptableStatus","ctr":{"st":5,"en":9},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":18,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"status","ptr":{"st":12,"en":13},"op":false,"rs":false},{"pn":"reason","ptr":{"st":16,"en":17},"op":true,"rs":false}],"op":false,"ab":false,"n":"setStatus"},{"k":"Property","c":"discord.js!GuildScheduledEvent#status:member","d":"/**\n * The status of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"status","c":"discord.js!GuildScheduledEvent#status"},{"k":"Content","t":": "},{"k":"Reference","t":"Status"},{"k":"Content","t":";"}],"l":111,"co":3,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEvent#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically concatenates the event's URL instead of the object.\n *\n * @example\n * ```js\n * // Logs: Event: https://discord.com/events/412345678901234567/499876543211234567\n * console.log(`Event: ${guildScheduledEvent}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!GuildScheduledEvent#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":447,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!GuildScheduledEvent#url:member","d":"/**\n * The URL to the guild scheduled event\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!GuildScheduledEvent#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":273,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEvent#userCount:member","d":"/**\n * The number of users who are subscribed to this guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"userCount","c":"discord.js!GuildScheduledEvent#userCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":143,"co":3,"ro":false,"op":false,"r":"Public","n":"userCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildScheduledEventCreateOptions:interface","d":"/**\n * Options used to create a guild scheduled event.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventCreateOptions","c":"discord.js!GuildScheduledEventCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":39,"co":1,"r":"Public","n":"GuildScheduledEventCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#channel:member","d":"/**\n * The channel of the guild scheduled event <warn>This is required if `entityType` is {@link discord-api-types#(GuildScheduledEventEntityType:enum).StageInstance} or {@link discord-api-types#(GuildScheduledEventEntityType:enum).Voice}</warn>\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildScheduledEventCreateOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildVoiceChannelResolvable","c":"discord.js!GuildVoiceChannelResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5941,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#description:member","d":"/**\n * The description of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildScheduledEventCreateOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5940,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#entityMetadata:member","d":"/**\n * The entity metadata of the guild scheduled event <warn>This is required if `entityType` is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}</warn>\n */\n","ex":[{"k":"Reference","t":"entityMetadata","c":"discord.js!GuildScheduledEventCreateOptions#entityMetadata"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildScheduledEventEntityMetadataOptions","c":"discord.js!GuildScheduledEventEntityMetadataOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5942,"co":3,"ro":false,"op":true,"r":"Public","n":"entityMetadata","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#entityType:member","d":"/**\n * The scheduled entity type of the event\n */\n","ex":[{"k":"Reference","t":"entityType","c":"discord.js!GuildScheduledEventCreateOptions#entityType"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventEntityType","c":"discord-api-types!GuildScheduledEventEntityType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5939,"co":3,"ro":false,"op":false,"r":"Public","n":"entityType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#image:member","d":"/**\n * The cover image of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"image","c":"discord.js!GuildScheduledEventCreateOptions#image"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5943,"co":3,"ro":false,"op":true,"r":"Public","n":"image","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#name:member","d":"/**\n * The name of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildScheduledEventCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5935,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#privacyLevel:member","d":"/**\n * The privacy level of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"privacyLevel","c":"discord.js!GuildScheduledEventCreateOptions#privacyLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventPrivacyLevel","c":"discord-api-types!GuildScheduledEventPrivacyLevel:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5938,"co":3,"ro":false,"op":false,"r":"Public","n":"privacyLevel","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#reason:member","d":"/**\n * The reason for creating the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildScheduledEventCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5944,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#scheduledEndTime:member","d":"/**\n * The time to end the event at <warn>This is required if `entityType` is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}</warn>\n */\n","ex":[{"k":"Reference","t":"scheduledEndTime","c":"discord.js!GuildScheduledEventCreateOptions#scheduledEndTime"},{"k":"Content","t":"?: "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5937,"co":3,"ro":false,"op":true,"r":"Public","n":"scheduledEndTime","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventCreateOptions#scheduledStartTime:member","d":"/**\n * The time to schedule the event at\n */\n","ex":[{"k":"Reference","t":"scheduledStartTime","c":"discord.js!GuildScheduledEventCreateOptions#scheduledStartTime"},{"k":"Content","t":": "},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5936,"co":3,"ro":false,"op":false,"r":"Public","n":"scheduledStartTime","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildScheduledEventEditOptions:interface","d":"/**\n * Options used to edit a guild scheduled event.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventEditOptions","c":"discord.js!GuildScheduledEventEditOptions:interface"},{"k":"Content","t":"< "},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus","c":"discord-api-types!GuildScheduledEventStatus:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventSetStatusArg","c":"discord.js!GuildScheduledEventSetStatusArg:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventCreateOptions","c":"discord.js!GuildScheduledEventCreateOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":", 'channel'>"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":164,"co":1,"r":"Public","tps":[{"tp":"Status","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"AcceptableStatus","ctr":{"st":9,"en":13},"dtr":{"st":0,"en":0}}],"n":"GuildScheduledEventEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#channel:member","d":"/**\n * The channel of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildScheduledEventEditOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildVoiceChannelResolvable","c":"discord.js!GuildVoiceChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5951,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#description:member","d":"/**\n * The description of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"undefined description :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#entityMetadata:member","d":"/**\n * The entity metadata of the guild scheduled event <warn>This can be modified only if `entityType` of the `GuildScheduledEvent` to be edited is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}</warn>\n */\n","ex":[{"k":"Content","t":"undefined entityMetadata :"},{"k":"Reference","t":"GuildScheduledEventEntityMetadataOptions","c":"discord.js!GuildScheduledEventEntityMetadataOptions:interface"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"entityMetadata","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#entityType:member","d":"/**\n * The scheduled entity type of the event\n */\n","ex":[{"k":"Content","t":"undefined entityType :"},{"k":"Reference","t":"GuildScheduledEventEntityType","c":"discord-api-types!GuildScheduledEventEntityType:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"entityType","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#image:member","d":"/**\n * The cover image of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"undefined image :"},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"image","prtr":{"st":1,"en":4}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#name:member","d":"/**\n * The name of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#privacyLevel:member","d":"/**\n * The privacy level of the guild scheduled event\n */\n","ex":[{"k":"Content","t":"undefined privacyLevel :"},{"k":"Reference","t":"GuildScheduledEventPrivacyLevel","c":"discord-api-types!GuildScheduledEventPrivacyLevel:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"privacyLevel","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#reason:member","d":"/**\n * The reason for editing the guild scheduled event\n */\n","ex":[{"k":"Content","t":"undefined reason :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"reason","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#scheduledEndTime:member","d":"/**\n * The time to end the event at\n */\n","ex":[{"k":"Content","t":"undefined scheduledEndTime :"},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"scheduledEndTime","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#scheduledStartTime:member","d":"/**\n * The time to schedule the event at\n */\n","ex":[{"k":"Content","t":"undefined scheduledStartTime :"},{"k":"Reference","t":"DateResolvable","c":"discord.js!DateResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"scheduledStartTime","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEditOptions#status:member","d":"/**\n * The status of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"status","c":"discord.js!GuildScheduledEventEditOptions#status"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5952,"co":3,"ro":false,"op":true,"r":"Public","n":"status","prtr":{"st":2,"en":3}}],"etrs":[{"st":14,"en":21,"tps":[{"st":16,"en":20},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!GuildScheduledEventEntityMetadata:interface","d":"/**\n * Represents the additional metadata for a {@link GuildScheduledEvent}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#guild-scheduled-event-object-guild-scheduled-event-entity-metadata}\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventEntityMetadata","c":"discord.js!GuildScheduledEventEntityMetadata:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildScheduledEvent.js","l":159,"co":1,"r":"Public","n":"GuildScheduledEventEntityMetadata","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEntityMetadata#location:member","d":"/**\n * The location of the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"location","c":"discord.js!GuildScheduledEventEntityMetadata#location"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5956,"co":3,"ro":false,"op":false,"r":"Public","n":"location","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildScheduledEventEntityMetadataOptions:interface","d":"/**\n * Options used to set entity metadata of a guild scheduled event.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventEntityMetadataOptions","c":"discord.js!GuildScheduledEventEntityMetadataOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":59,"co":1,"r":"Public","n":"GuildScheduledEventEntityMetadataOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventEntityMetadataOptions#location:member","d":"/**\n * The location of the guild scheduled event <warn>This is required if `entityType` is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}</warn>\n */\n","ex":[{"k":"Reference","t":"location","c":"discord.js!GuildScheduledEventEntityMetadataOptions#location"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5960,"co":3,"ro":false,"op":true,"r":"Public","n":"location","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildScheduledEventInviteURLCreateOptions:interface","d":"/**\n * Options used to create an invite URL to a {@link GuildScheduledEvent}\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventInviteURLCreateOptions","c":"discord.js!GuildScheduledEventInviteURLCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildScheduledEvent.js","l":277,"co":1,"r":"Public","n":"GuildScheduledEventInviteURLCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventInviteURLCreateOptions#channel:member","d":"/**\n * The channel to create the invite in. <warn>This is required when the `entityType` of `GuildScheduledEvent` is {@link discord-api-types#(GuildScheduledEventEntityType:enum).External}, gets ignored otherwise</warn>\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildScheduledEventInviteURLCreateOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildInvitableChannelResolvable","c":"discord.js!GuildInvitableChannelResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5413,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!GuildScheduledEventManager:class","d":"/**\n * Manages API methods for GuildScheduledEvents and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildScheduledEventManager","c":"discord.js!GuildScheduledEventManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildScheduledEventManager.js","l":15,"co":1,"r":"Public","ab":false,"n":"GuildScheduledEventManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildScheduledEventManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildScheduledEventManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildScheduledEventManager#create:member(1)","d":"/**\n * Creates a new guild scheduled event.\n *\n * @param options - Options for creating the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildScheduledEventManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventCreateOptions","c":"discord.js!GuildScheduledEventCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":71,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildScheduledEventManager#delete:member(1)","d":"/**\n * Deletes a guild scheduled event.\n *\n * @param guildScheduledEvent - The guild scheduled event to delete\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildScheduledEventManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!~guildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":239,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildScheduledEventManager#edit:member(1)","d":"/**\n * Edits a guild scheduled event.\n *\n * @param guildScheduledEvent - The guild scheduled event to edit\n *\n * @param options - Options to edit the guild scheduled event\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildScheduledEventManager#edit"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus","c":"discord-api-types!GuildScheduledEventStatus:enum"},{"k":"Content","t":",  "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventSetStatusArg","c":"discord.js!GuildScheduledEventSetStatusArg:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":">"},{"k":"Content","t":", >(  "},{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!~guildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventEditOptions","c":"discord.js!GuildScheduledEventEditOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":", "},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AcceptableStatus"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":189,"co":3,"tps":[{"tp":"Status","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"AcceptableStatus","ctr":{"st":9,"en":13},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":33},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":16,"en":17},"op":false,"rs":false},{"pn":"options","ptr":{"st":20,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildScheduledEventManager#fetch:member(1)","d":"/**\n * Obtains one or more guild scheduled events from Discord, or the guild cache if it's already available.\n *\n * @param options - The id of the guild scheduled event or options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildScheduledEventManager#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":135,"co":3,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildScheduledEventManager#fetch:member(2)","d":"/**\n * Obtains one or more guild scheduled events from Discord, or the guild cache if it's already available.\n *\n * @param options - The id of the guild scheduled event or options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildScheduledEventManager#fetch"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildScheduledEventOptions","c":"discord.js!FetchGuildScheduledEventOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildScheduledEventsOptions","c":"discord.js!FetchGuildScheduledEventsOptions:interface"},{"k":"Content","t":", >("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Options"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventManagerFetchResult","c":"discord.js!GuildScheduledEventManagerFetchResult:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Options"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":135,"co":3,"tps":[{"tp":"Options","ctr":{"st":5,"en":10},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":15,"en":21},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildScheduledEventManager#fetchSubscribers:member(1)","d":"/**\n * Fetches subscribers of a guild scheduled event.\n *\n * @param guildScheduledEvent - The guild scheduled event to fetch subscribers of\n *\n * @param options - Options for fetching the subscribers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchSubscribers","c":"discord.js!GuildScheduledEventManager#fetchSubscribers"},{"k":"Content","t":"<"},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"FetchGuildScheduledEventSubscribersOptions","c":"discord.js!FetchGuildScheduledEventSubscribersOptions:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!~guildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Options"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEventManagerFetchSubscribersResult","c":"discord.js!GuildScheduledEventManagerFetchSubscribersResult:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Options"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":270,"co":3,"tps":[{"tp":"Options","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":15,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildScheduledEvent","ptr":{"st":9,"en":10},"op":false,"rs":false},{"pn":"options","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchSubscribers"},{"k":"Property","c":"discord.js!GuildScheduledEventManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildScheduledEventManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":9}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildScheduledEventManagerFetchResult:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildScheduledEventManagerFetchResult","c":"discord.js!GuildScheduledEventManagerFetchResult:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildScheduledEventOptions","c":"discord.js!FetchGuildScheduledEventOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildScheduledEventsOptions","c":"discord.js!FetchGuildScheduledEventsOptions:interface"},{"k":"Content","t":",> = "},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchGuildScheduledEventOptions","c":"discord.js!FetchGuildScheduledEventOptions:interface"},{"k":"Content","t":" ? "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" : "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5963,"co":1,"r":"Public","n":"GuildScheduledEventManagerFetchResult","tps":[{"tp":"Options","ctr":{"st":5,"en":10},"dtr":{"st":0,"en":0}}],"ttr":{"st":11,"en":25}},{"k":"TypeAlias","c":"discord.js!GuildScheduledEventManagerFetchSubscribersResult:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildScheduledEventManagerFetchSubscribersResult","c":"discord.js!GuildScheduledEventManagerFetchSubscribersResult:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends "},{"k":"Reference","t":"FetchGuildScheduledEventSubscribersOptions","c":"discord.js!FetchGuildScheduledEventSubscribersOptions:interface"},{"k":"Content","t":",> = "},{"k":"Reference","t":"Options"},{"k":"Content","t":" extends { "},{"k":"Reference","t":"withMember","c":"discord.js!~__type#withMember"},{"k":"Content","t":": true } ? "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEventUser","c":"discord.js!GuildScheduledEventUser:interface"},{"k":"Content","t":"<true>> : "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildScheduledEventUser","c":"discord.js!GuildScheduledEventUser:interface"},{"k":"Content","t":"<false>>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5969,"co":1,"r":"Public","n":"GuildScheduledEventManagerFetchSubscribersResult","tps":[{"tp":"Options","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":23}},{"k":"TypeAlias","c":"discord.js!GuildScheduledEventResolvable:type","d":"/**\n * Data that resolves to give a GuildScheduledEvent object. This can be:\n *\n * * A Snowflake\n *\n * * A GuildScheduledEvent object\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":";"}],"pat":"src/managers/GuildScheduledEventManager.js","l":32,"co":1,"r":"Public","n":"GuildScheduledEventResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!GuildScheduledEventSetStatusArg:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildScheduledEventSetStatusArg","c":"discord.js!GuildScheduledEventSetStatusArg:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus","c":"discord-api-types!GuildScheduledEventStatus:enum"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus.Scheduled","c":"discord-api-types!GuildScheduledEventStatus.Scheduled:member"},{"k":"Content","t":"  ? "},{"k":"Reference","t":"GuildScheduledEventStatus.Active","c":"discord-api-types!GuildScheduledEventStatus.Active:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildScheduledEventStatus.Canceled","c":"discord-api-types!GuildScheduledEventStatus.Canceled:member"},{"k":"Content","t":"  : "},{"k":"Reference","t":"Status"},{"k":"Content","t":" extends "},{"k":"Reference","t":"GuildScheduledEventStatus.Active","c":"discord-api-types!GuildScheduledEventStatus.Active:member"},{"k":"Content","t":"   ? "},{"k":"Reference","t":"GuildScheduledEventStatus.Completed","c":"discord-api-types!GuildScheduledEventStatus.Completed:member"},{"k":"Content","t":"   : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5977,"co":1,"r":"Public","n":"GuildScheduledEventSetStatusArg","tps":[{"tp":"Status","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":22}},{"k":"Interface","c":"discord.js!GuildScheduledEventUser:interface","d":"/**\n * Represents a subscriber of a {@link GuildScheduledEvent}\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildScheduledEventUser","c":"discord.js!GuildScheduledEventUser:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"WithMember"},{"k":"Content","t":"> "}],"pat":"src/managers/GuildScheduledEventManager.js","l":256,"co":1,"r":"Public","tps":[{"tp":"WithMember","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"GuildScheduledEventUser","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildScheduledEventUser#guildScheduledEventId:member","d":"/**\n * The id of the guild scheduled event which the user subscribed to\n */\n","ex":[{"k":"Reference","t":"guildScheduledEventId","c":"discord.js!GuildScheduledEventUser#guildScheduledEventId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5985,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEventId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventUser#member:member","d":"/**\n * The guild member associated with the user, if any\n */\n","ex":[{"k":"Reference","t":"member","c":"discord.js!GuildScheduledEventUser#member"},{"k":"Content","t":": "},{"k":"Reference","t":"WithMember"},{"k":"Content","t":" extends true ? "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" : "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5987,"co":3,"ro":false,"op":false,"r":"Public","n":"member","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!GuildScheduledEventUser#user:member","d":"/**\n * The user that subscribed to the guild scheduled event\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!GuildScheduledEventUser#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5986,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildSearchMembersOptions:interface","d":"/**\n * Options used for searching guild members.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildSearchMembersOptions","c":"discord.js!GuildSearchMembersOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildMemberManager.js","l":283,"co":1,"r":"Public","n":"GuildSearchMembersOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildSearchMembersOptions#cache:member","d":"/**\n * Whether or not to cache the fetched member(s)\n */\n","ex":[{"k":"Reference","t":"cache","c":"discord.js!GuildSearchMembersOptions#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5924,"co":3,"ro":false,"op":true,"r":"Public","n":"cache","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildSearchMembersOptions#limit:member","d":"/**\n * Maximum number of members to search\n */\n","ex":[{"k":"Reference","t":"limit","c":"discord.js!GuildSearchMembersOptions#limit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5923,"co":3,"ro":false,"op":true,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildSearchMembersOptions#query:member","d":"/**\n * Filter members whose username or nickname start with this query\n */\n","ex":[{"k":"Reference","t":"query","c":"discord.js!GuildSearchMembersOptions#query"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5922,"co":3,"ro":false,"op":false,"r":"Public","n":"query","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildStickerCreateOptions:interface","d":"/**\n * Options used to create a guild sticker.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildStickerCreateOptions","c":"discord.js!GuildStickerCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildStickerManager.js","l":35,"co":1,"r":"Public","n":"GuildStickerCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildStickerCreateOptions#description:member","d":"/**\n * The description for the sticker\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildStickerCreateOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5882,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildStickerCreateOptions#file:member","d":"/**\n * The file for the sticker\n */\n","ex":[{"k":"Reference","t":"file","c":"discord.js!GuildStickerCreateOptions#file"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentBuilder","c":"discord.js!AttachmentBuilder:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5879,"co":3,"ro":false,"op":false,"r":"Public","n":"file","prtr":{"st":2,"en":12}},{"k":"PropertySignature","c":"discord.js!GuildStickerCreateOptions#name:member","d":"/**\n * The name for the sticker\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildStickerCreateOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5880,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildStickerCreateOptions#reason:member","d":"/**\n * Reason for creating the sticker\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildStickerCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5883,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildStickerCreateOptions#tags:member","d":"/**\n * The Discord name of a unicode emoji representing the sticker's expression\n */\n","ex":[{"k":"Reference","t":"tags","c":"discord.js!GuildStickerCreateOptions#tags"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5881,"co":3,"ro":false,"op":false,"r":"Public","n":"tags","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildStickerEditOptions:interface","d":"/**\n * Data for editing a sticker.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildStickerEditOptions","c":"discord.js!GuildStickerEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Sticker.js","l":199,"co":1,"r":"Public","n":"GuildStickerEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildStickerEditOptions#description:member","d":"/**\n * The description of the sticker\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildStickerEditOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5888,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!GuildStickerEditOptions#name:member","d":"/**\n * The name of the sticker\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildStickerEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5887,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildStickerEditOptions#reason:member","d":"/**\n * Reason for editing this sticker\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!GuildStickerEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5890,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildStickerEditOptions#tags:member","d":"/**\n * The Discord name of a unicode emoji representing the sticker's expression\n */\n","ex":[{"k":"Reference","t":"tags","c":"discord.js!GuildStickerEditOptions#tags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5889,"co":3,"ro":false,"op":true,"r":"Public","n":"tags","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!GuildStickerManager:class","d":"/**\n * Manages API methods for Guild Stickers and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildStickerManager","c":"discord.js!GuildStickerManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":", "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildStickerManager.js","l":14,"co":1,"r":"Public","ab":false,"n":"GuildStickerManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildStickerManager#cache:member","d":"/**\n * The cache of Guild Stickers\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildStickerManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildStickerManager#create:member(1)","d":"/**\n * Creates a new custom sticker in the guild.\n *\n * @param options - Options for creating a guild sticker\n *\n * @returns The created sticker\n *\n * @example\n * ```js\n * // Create a new sticker from a URL\n * guild.stickers.create({ file: 'https://i.imgur.com/w3duR07.png', name: 'rip', tags: 'headstone' })\n *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new sticker from a file on your computer\n * guild.stickers.create({ file: './memes/banana.png', name: 'banana', tags: 'banana' })\n *   .then(sticker => console.log(`Created new sticker with name ${sticker.name}!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildStickerManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildStickerCreateOptions","c":"discord.js!GuildStickerCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":60,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!GuildStickerManager#delete:member(1)","d":"/**\n * Deletes a sticker.\n *\n * @param sticker - The sticker to delete\n *\n * @param reason - Reason for deleting this sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildStickerManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"sticker","c":"discord.js!~sticker"},{"k":"Content","t":": "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":131,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"sticker","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!GuildStickerManager#edit:member(1)","d":"/**\n * Edits a sticker.\n *\n * @param sticker - The sticker to edit\n *\n * @param options - The new data for the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildStickerManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"sticker","c":"discord.js!~sticker"},{"k":"Content","t":": "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildStickerEditOptions","c":"discord.js!GuildStickerEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":107,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"sticker","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"data","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!GuildStickerManager#fetch:member(1)","d":"/**\n * Obtains one or more stickers from Discord, or the sticker cache if they're already available.\n *\n * @param id - The Sticker's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all stickers from the guild\n * message.guild.stickers.fetch()\n *   .then(stickers => console.log(`There are ${stickers.size} stickers.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single sticker\n * message.guild.stickers.fetch('222078108977594368')\n *   .then(sticker => console.log(`The sticker name is: ${sticker.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildStickerManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildStickerManager#fetch:member(2)","d":"/**\n * Obtains one or more stickers from Discord, or the sticker cache if they're already available.\n *\n * @param id - The Sticker's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all stickers from the guild\n * message.guild.stickers.fetch()\n *   .then(stickers => console.log(`There are ${stickers.size} stickers.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single sticker\n * message.guild.stickers.fetch('222078108977594368')\n *   .then(sticker => console.log(`The sticker name is: ${sticker.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!GuildStickerManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!GuildStickerManager#fetchUser:member(1)","d":"/**\n * Fetches the user who uploaded this sticker, if this is a guild sticker.\n *\n * @param sticker - The sticker to fetch the user for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchUser","c":"discord.js!GuildStickerManager#fetchUser"},{"k":"Content","t":"("},{"k":"Reference","t":"sticker","c":"discord.js!~sticker"},{"k":"Content","t":": "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":173,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"sticker","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchUser"},{"k":"Property","c":"discord.js!GuildStickerManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!GuildStickerManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildStickerManager#resolve:member(1)","d":"/**\n * Resolves a StickerResolvable to a Sticker object.\n *\n * @param sticker - The Sticker resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolve(sticker"},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":";"}],"l":83,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"sticker","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!GuildStickerManager#resolveId:member(1)","d":"/**\n * Resolves a StickerResolvable to a Sticker id string.\n *\n * @param sticker - The Sticker resolvable to identify\n */\n","ex":[{"k":"Content","t":"resolveId(sticker"},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":92,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"sticker","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Class","c":"discord.js!GuildTemplate:class","d":"/**\n * Represents the template for a guild.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/GuildTemplate.js","l":13,"co":1,"r":"Public","ab":false,"n":"GuildTemplate","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildTemplate#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#code:member","d":"/**\n * The unique code of this template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"code","c":"discord.js!GuildTemplate#code"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#createdAt:member","d":"/**\n * The time when this template was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!GuildTemplate#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":198,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#createdTimestamp:member","d":"/**\n * The timestamp of when this template was created at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!GuildTemplate#createdTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":81,"co":3,"ro":false,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildTemplate#createGuild:member(1)","d":"/**\n * Creates a guild based on this template. <warn>This is only available to bots in fewer than 10 guilds.</warn>\n *\n * @param name - The name of the guild\n *\n * @param icon - The icon for the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createGuild","c":"discord.js!GuildTemplate#createGuild"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"icon","c":"discord.js!~icon"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":124,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"icon","ptr":{"st":9,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"createGuild"},{"k":"Property","c":"discord.js!GuildTemplate#creator:member","d":"/**\n * The user that created this template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"creator","c":"discord.js!GuildTemplate#creator"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":false,"op":false,"r":"Public","n":"creator","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#creatorId:member","d":"/**\n * The id of the user that created this template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"creatorId","c":"discord.js!GuildTemplate#creatorId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":false,"op":false,"r":"Public","n":"creatorId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildTemplate#delete:member(1)","d":"/**\n * Deletes this template.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!GuildTemplate#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":179,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!GuildTemplate#description:member","d":"/**\n * The description of this template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!GuildTemplate#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildTemplate#edit:member(1)","d":"/**\n * Updates the metadata of this template.\n *\n * @param options - Options for editing the template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!GuildTemplate#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildTemplateEditOptions","c":"discord.js!GuildTemplateEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":168,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!GuildTemplate#guild:member","d":"/**\n * The guild that this template belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!GuildTemplate#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":216,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#guildId:member","d":"/**\n * The id of the guild that this template belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!GuildTemplate#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":97,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate.GuildTemplatesPattern:member","d":"/**\n * A regular expression that matches guild template links. The `code` group property is present on the `exec()` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"GuildTemplatesPattern","c":"discord.js!GuildTemplate.GuildTemplatesPattern"},{"k":"Content","t":": "},{"k":"Reference","t":"RegExp","c":"!RegExp:interface"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"GuildTemplatesPattern","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#name:member","d":"/**\n * The name of this template\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!GuildTemplate#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#serializedGuild:member","d":"/**\n * The data of the guild that this template would create\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"serializedGuild","c":"discord.js!GuildTemplate#serializedGuild"},{"k":"Content","t":": "},{"k":"Reference","t":"APITemplateSerializedSourceGuild","c":"discord-api-types!APITemplateSerializedSourceGuild:interface"},{"k":"Content","t":";"}],"l":105,"co":3,"ro":false,"op":false,"r":"Public","n":"serializedGuild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildTemplate#sync:member(1)","d":"/**\n * Syncs this template to the current state of the guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sync","c":"discord.js!GuildTemplate#sync"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildTemplate","c":"discord.js!GuildTemplate:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":188,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sync"},{"k":"Method","c":"discord.js!GuildTemplate#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the template's code instead of the template object.\n *\n * @example\n * ```js\n * // Logs: Template: FKvmczH2HyUf\n * console.log(`Template: ${guildTemplate}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"toString(): "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":236,"sta":false,"rtr":{"st":1,"en":2},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!GuildTemplate#unSynced:member","d":"/**\n * Whether this template has unsynced changes\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unSynced","c":"discord.js!GuildTemplate#unSynced"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":112,"co":3,"ro":false,"op":false,"r":"Public","n":"unSynced","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#updatedAt:member","d":"/**\n * The time when this template was last synced to the guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"updatedAt","c":"discord.js!GuildTemplate#updatedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":207,"co":3,"ro":true,"op":false,"r":"Public","n":"updatedAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#updatedTimestamp:member","d":"/**\n * The timestamp of when this template was last synced to the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"updatedTimestamp","c":"discord.js!GuildTemplate#updatedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":89,"co":3,"ro":false,"op":false,"r":"Public","n":"updatedTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#url:member","d":"/**\n * The URL of this template\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!GuildTemplate#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":225,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTemplate#usageCount:member","d":"/**\n * The amount of times this template has been used\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"usageCount","c":"discord.js!GuildTemplate#usageCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":57,"co":3,"ro":false,"op":false,"r":"Public","n":"usageCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!GuildTemplateEditOptions:interface","d":"/**\n * Options used to edit a guild template.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildTemplateEditOptions","c":"discord.js!GuildTemplateEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildTemplate.js","l":156,"co":1,"r":"Public","n":"GuildTemplateEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildTemplateEditOptions#description:member","d":"/**\n * The description of this template\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!GuildTemplateEditOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5442,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildTemplateEditOptions#name:member","d":"/**\n * The name of this template\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!GuildTemplateEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5441,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!GuildTemplateResolvable:type","d":"/**\n * Data that can be resolved to give a template code. This can be:\n *\n * * A template code\n *\n * * A template URL\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildTemplateResolvable","c":"discord.js!GuildTemplateResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/DataResolver.js","l":17,"co":1,"r":"Public","n":"GuildTemplateResolvable","ttr":{"st":3,"en":4}},{"k":"TypeAlias","c":"discord.js!GuildTextBasedChannel:type","d":"/**\n * The guild channels that are text-based.\n *\n * * TextChannel\n *\n * * NewsChannel\n *\n * * ThreadChannel\n *\n * * VoiceChannel\n *\n * * StageChannel\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/Constants.js","l":65,"co":1,"r":"Public","n":"GuildTextBasedChannel","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!GuildTextBasedChannelTypes:type","d":"/**\n * The types of guild channels that are text-based. The available types are:\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildText}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildAnnouncement}\n *\n * * {@link discord-api-types#(ChannelType:enum).AnnouncementThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).PublicThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).PrivateThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildVoice}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildStageVoice}\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildTextBasedChannelTypes","c":"discord.js!GuildTextBasedChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextBasedChannelTypes","c":"discord.js!TextBasedChannelTypes:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ChannelType.DM","c":"discord-api-types!ChannelType.DM:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/Constants.js","l":75,"co":1,"r":"Public","n":"GuildTextBasedChannelTypes","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!GuildTextChannelResolvable:type","d":"/**\n * Data that can be resolved to a GuildTextChannel object. This can be:\n *\n * * A TextChannel\n *\n * * A NewsChannel\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildTextChannelResolvable","c":"discord.js!GuildTextChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Guild.js","l":981,"co":1,"r":"Public","n":"GuildTextChannelResolvable","ttr":{"st":3,"en":8}},{"k":"Interface","c":"discord.js!GuildTextThreadCreateOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildTextThreadCreateOptions","c":"discord.js!GuildTextThreadCreateOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadType"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"StartThreadOptions","c":"discord.js!StartThreadOptions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6657,"co":1,"r":"Public","tps":[{"tp":"AllowedThreadType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"GuildTextThreadCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildTextThreadCreateOptions#invitable:member","d":"","ex":[{"k":"Reference","t":"invitable","c":"discord.js!GuildTextThreadCreateOptions#invitable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AllowedThreadType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":" ? "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" : "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":6660,"co":3,"ro":false,"op":true,"r":"Public","n":"invitable","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!GuildTextThreadCreateOptions#startMessage:member","d":"","ex":[{"k":"Reference","t":"startMessage","c":"discord.js!GuildTextThreadCreateOptions#startMessage"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":";"}],"l":6658,"co":3,"ro":false,"op":true,"r":"Public","n":"startMessage","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!GuildTextThreadCreateOptions#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!GuildTextThreadCreateOptions#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AllowedThreadType"},{"k":"Content","t":";"}],"l":6659,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":5,"en":6,"tps":[]}]},{"k":"Class","c":"discord.js!GuildTextThreadManager:class","d":"/**\n * Manages API methods for {@link ThreadChannel} objects and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!GuildTextThreadManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadType"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ThreadManager","c":"discord.js!ThreadManager:class"},{"k":"Content","t":"<"},{"k":"Content","t":"false"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/GuildTextThreadManager.js","l":11,"co":1,"r":"Public","tps":[{"tp":"AllowedThreadType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":false,"n":"GuildTextThreadManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!GuildTextThreadManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadManager.js","l":35,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTextThreadManager#channel:member","d":"/**\n * The channel this Manager belongs to\n */\n","ex":[{"k":"Content","t":"undefined channel :"},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":";"}],"l":12,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!GuildTextThreadManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!GuildTextThreadManager#create:member(1)","d":"/**\n * Creates a new thread in the channel.\n *\n * @param options - Options to create a new thread\n *\n * @example\n * ```js\n * // Create a new public thread\n * channel.threads\n *   .create({\n *     name: 'food-talk',\n *     autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n *     reason: 'Needed a separate thread for food',\n *   })\n *   .then(threadChannel => console.log(threadChannel))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new private thread\n * channel.threads\n *   .create({\n *      name: 'mod-talk',\n *      autoArchiveDuration: ThreadAutoArchiveDuration.OneHour,\n *      type: ChannelType.PrivateThread,\n *      reason: 'Needed a separate thread for moderation',\n *    })\n *   .then(threadChannel => console.log(threadChannel))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!GuildTextThreadManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextThreadCreateOptions","c":"discord.js!GuildTextThreadCreateOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadType"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":57,"co":3,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"}],"etr":{"st":5,"en":9,"tps":[{"st":7,"en":8}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!GuildVoiceChannelResolvable:type","d":"/**\n * Data that can be resolved to a GuildVoiceChannel object. This can be:\n *\n * * A VoiceChannel\n *\n * * A StageChannel\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GuildVoiceChannelResolvable","c":"discord.js!GuildVoiceChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Guild.js","l":989,"co":1,"r":"Public","n":"GuildVoiceChannelResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!GuildWidgetSettings:interface","d":"/**\n * Data for the Guild Widget Settings object\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildWidgetSettings","c":"discord.js!GuildWidgetSettings:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":693,"co":1,"r":"Public","n":"GuildWidgetSettings","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildWidgetSettings#channel:member","d":"/**\n * The widget invite channel\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildWidgetSettings#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5838,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":2,"en":13}},{"k":"PropertySignature","c":"discord.js!GuildWidgetSettings#enabled:member","d":"/**\n * Whether the widget is enabled\n */\n","ex":[{"k":"Reference","t":"enabled","c":"discord.js!GuildWidgetSettings#enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5837,"co":3,"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!GuildWidgetSettingsData:interface","d":"/**\n * The Guild Widget Settings object\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"GuildWidgetSettingsData","c":"discord.js!GuildWidgetSettingsData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":701,"co":1,"r":"Public","n":"GuildWidgetSettingsData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!GuildWidgetSettingsData#channel:member","d":"/**\n * The widget invite channel\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!GuildWidgetSettingsData#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5918,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":2,"en":15}},{"k":"PropertySignature","c":"discord.js!GuildWidgetSettingsData#enabled:member","d":"/**\n * Whether the widget is enabled\n */\n","ex":[{"k":"Reference","t":"enabled","c":"discord.js!GuildWidgetSettingsData#enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5917,"co":3,"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!HexColorString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"HexColorString","c":"discord.js!HexColorString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"`#${"},{"k":"Reference","t":"string"},{"k":"Content","t":"}`"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6021,"co":1,"r":"Public","n":"HexColorString","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!IconData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"IconData","c":"discord.js!IconData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":865,"co":1,"r":"Public","n":"IconData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!IconData#iconURL:member","d":"","ex":[{"k":"Reference","t":"iconURL","c":"discord.js!IconData#iconURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":866,"co":3,"ro":false,"op":true,"r":"Public","n":"iconURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!IconData#proxyIconURL:member","d":"","ex":[{"k":"Reference","t":"proxyIconURL","c":"discord.js!IconData#proxyIconURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":867,"co":3,"ro":false,"op":true,"r":"Public","n":"proxyIconURL","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!If:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"TrueResult"},{"k":"Content","t":", "},{"k":"Reference","t":"FalseResult"},{"k":"Content","t":" = "},{"k":"Reference","t":"null"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends true ? "},{"k":"Reference","t":"TrueResult"},{"k":"Content","t":" : "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends false  ? "},{"k":"Reference","t":"FalseResult"},{"k":"Content","t":"  : "},{"k":"Reference","t":"TrueResult"},{"k":"Content","t":" | "},{"k":"Reference","t":"FalseResult"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":963,"co":1,"r":"Public","n":"If","tps":[{"tp":"Value","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"TrueResult","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"FalseResult","ctr":{"st":0,"en":0},"dtr":{"st":11,"en":12}}],"ttr":{"st":13,"en":24}},{"k":"Class","c":"discord.js!Integration:class","d":"/**\n * Represents a guild integration.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Integration","c":"discord.js!Integration:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Integration.js","l":27,"co":1,"r":"Public","ab":false,"n":"Integration","pmo":false,"ms":[{"k":"Property","c":"discord.js!Integration#account:member","d":"/**\n * The account integration information\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"account","c":"discord.js!Integration#account"},{"k":"Content","t":": "},{"k":"Reference","t":"IntegrationAccount","c":"discord.js!IntegrationAccount:interface"},{"k":"Content","t":";"}],"l":101,"co":3,"ro":false,"op":false,"r":"Public","n":"account","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#application:member","d":"/**\n * The application for this integration\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"application","c":"discord.js!Integration#application"},{"k":"Content","t":": "},{"k":"Reference","t":"IntegrationApplication","c":"discord.js!IntegrationApplication:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":184,"co":3,"ro":false,"op":false,"r":"Public","n":"application","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Integration#delete:member(1)","d":"/**\n * Deletes this integration.\n *\n * @param reason - Reason for deleting this integration\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Integration#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Integration","c":"discord.js!Integration:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":206,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!Integration#enabled:member","d":"/**\n * Whether this integration is enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"enabled","c":"discord.js!Integration#enabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"enabled","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#enableEmoticons:member","d":"/**\n * Whether emoticons should be synced for this integration (twitch only currently)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"enableEmoticons","c":"discord.js!Integration#enableEmoticons"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":false,"op":false,"r":"Public","n":"enableEmoticons","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#expireBehavior:member","d":"/**\n * The behavior of expiring subscribers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"expireBehavior","c":"discord.js!Integration#expireBehavior"},{"k":"Content","t":": "},{"k":"Reference","t":"IntegrationExpireBehavior","c":"discord-api-types!IntegrationExpireBehavior:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":161,"co":3,"ro":false,"op":false,"r":"Public","n":"expireBehavior","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#expireGracePeriod:member","d":"/**\n * The grace period (in days) before expiring subscribers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"expireGracePeriod","c":"discord.js!Integration#expireGracePeriod"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":171,"co":3,"ro":false,"op":false,"r":"Public","n":"expireGracePeriod","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#guild:member","d":"/**\n * The guild this integration belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!Integration#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#id:member","d":"/**\n * The integration id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Integration#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#name:member","d":"/**\n * The integration name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Integration#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#revoked:member","d":"/**\n * Whether this integration has been revoked\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"revoked","c":"discord.js!Integration#revoked"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":128,"co":3,"ro":false,"op":false,"r":"Public","n":"revoked","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#role:member","d":"/**\n * The role that this integration uses for subscribers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"role","c":"discord.js!Integration#role"},{"k":"Content","t":": "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":false,"op":false,"r":"Public","n":"role","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#roles:member","d":"/**\n * All roles that are managed by this integration\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"roles","c":"discord.js!Integration#roles"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":150,"co":3,"ro":true,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#scopes:member","d":"/**\n * The scopes this application has been authorized for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"scopes","c":"discord.js!Integration#scopes"},{"k":"Content","t":": "},{"k":"Reference","t":"OAuth2Scopes","c":"discord-api-types!OAuth2Scopes:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":195,"co":3,"ro":false,"op":false,"r":"Public","n":"scopes","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#subscriberCount:member","d":"/**\n * How many subscribers this integration has\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"subscriberCount","c":"discord.js!Integration#subscriberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":118,"co":3,"ro":false,"op":false,"r":"Public","n":"subscriberCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#syncedAt:member","d":"/**\n * The date at which this integration was last synced at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"syncedAt","c":"discord.js!Integration#syncedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":141,"co":3,"ro":true,"op":false,"r":"Public","n":"syncedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#syncedTimestamp:member","d":"/**\n * The timestamp at which this integration was last synced at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"syncedTimestamp","c":"discord.js!Integration#syncedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":108,"co":3,"ro":false,"op":false,"r":"Public","n":"syncedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#syncing:member","d":"/**\n * Whether this integration is syncing\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"syncing","c":"discord.js!Integration#syncing"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":66,"co":3,"ro":false,"op":false,"r":"Public","n":"syncing","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#type:member","d":"/**\n * The integration type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Integration#type"},{"k":"Content","t":": "},{"k":"Reference","t":"IntegrationType","c":"discord.js!IntegrationType:type"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Integration#user:member","d":"/**\n * The user for this integration\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!Integration#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":92,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!IntegrationAccount:interface","d":"/**\n * The information account for an integration\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"IntegrationAccount","c":"discord.js!IntegrationAccount:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Integration.js","l":7,"co":1,"r":"Public","n":"IntegrationAccount","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!IntegrationAccount#id:member","d":"/**\n * The id of the account\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!IntegrationAccount#id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6024,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!IntegrationAccount#name:member","d":"/**\n * The name of the account\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!IntegrationAccount#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6025,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!IntegrationApplication:class","d":"/**\n * Represents an Integration's OAuth2 Application.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"IntegrationApplication","c":"discord.js!IntegrationApplication:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Application","c":"discord.js!Application:class"},{"k":"Content","t":" "}],"pat":"src/structures/IntegrationApplication.js","l":9,"co":1,"r":"Public","ab":false,"n":"IntegrationApplication","pmo":false,"ms":[{"k":"Property","c":"discord.js!IntegrationApplication#bot:member","d":"/**\n * The bot user for this application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bot","c":"discord.js!IntegrationApplication#bot"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"bot","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#cover:member","d":"/**\n * The hash of the application's cover image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"cover","c":"discord.js!IntegrationApplication#cover"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":68,"co":3,"ro":false,"op":false,"r":"Public","n":"cover","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#createdAt:member","d":"/**\n * The time the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":69,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#createdTimestamp:member","d":"/**\n * The timestamp the application was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":60,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#description:member","d":"/**\n * The application's description\n */\n","ex":[{"k":"Content","t":"undefined description :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":39,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#hook:member","d":"/**\n * Whether the application can be default hooked by the client\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"hook","c":"discord.js!IntegrationApplication#hook"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"hook","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#icon:member","d":"/**\n * The application's icon hash\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":49,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#id:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":22,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#name:member","d":"/**\n * The name of the application\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Application.js","l":29,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#privacyPolicyURL:member","d":"/**\n * The URL of the application's privacy policy\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"privacyPolicyURL","c":"discord.js!IntegrationApplication#privacyPolicyURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"privacyPolicyURL","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#rpcOrigins:member","d":"/**\n * The Array of RPC origin URLs\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rpcOrigins","c":"discord.js!IntegrationApplication#rpcOrigins"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"rpcOrigins","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#termsOfServiceURL:member","d":"/**\n * The URL of the application's terms of service\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"termsOfServiceURL","c":"discord.js!IntegrationApplication#termsOfServiceURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"termsOfServiceURL","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntegrationApplication#verifyKey:member","d":"/**\n * The hex-encoded key for verification in interactions and the GameSDK's GetTicket\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"verifyKey","c":"discord.js!IntegrationApplication#verifyKey"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"verifyKey","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!IntegrationType:type","d":"/**\n * The type of an {@link Integration}. This can be:\n *\n * * `twitch`\n *\n * * `youtube`\n *\n * * `discord`\n *\n * * `guild_subscription`\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"IntegrationType","c":"discord.js!IntegrationType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'twitch' | 'youtube' | 'discord' | 'guild_subscription'"},{"k":"Content","t":";"}],"pat":"src/structures/Integration.js","l":14,"co":1,"r":"Public","n":"IntegrationType","ttr":{"st":3,"en":4}},{"k":"Class","c":"discord.js!IntentsBitField:class","d":"/**\n * Data structure that makes it easy to calculate intents.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"IntentsBitField","c":"discord.js!IntentsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GatewayIntentsString","c":"discord.js!GatewayIntentsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/IntentsBitField.js","l":9,"co":1,"r":"Public","ab":false,"n":"IntentsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!IntentsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":33,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!IntentsBitField.Flags:member","d":"/**\n * Numeric WebSocket intents\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!IntentsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GatewayIntentBits","c":"discord-api-types!GatewayIntentBits:enum"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!IntentsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!IntentsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GatewayIntentsString","c":"discord.js!GatewayIntentsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1812,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!Interaction:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Interaction","c":"discord.js!Interaction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ChatInputCommandInteraction","c":"discord.js!ChatInputCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"AnySelectMenuInteraction","c":"discord.js!AnySelectMenuInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1831,"co":1,"r":"Public","n":"Interaction","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":38}},{"k":"Interface","c":"discord.js!InteractionButtonComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionButtonComponentData","c":"discord.js!InteractionButtonComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseButtonComponentData","c":"discord.js!BaseButtonComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6145,"co":1,"r":"Public","n":"InteractionButtonComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionButtonComponentData#customId:member","d":"","ex":[{"k":"Reference","t":"customId","c":"discord.js!InteractionButtonComponentData#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6147,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionButtonComponentData#style:member","d":"","ex":[{"k":"Reference","t":"style","c":"discord.js!InteractionButtonComponentData#style"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ButtonStyle","c":"discord-api-types!ButtonStyle:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"ButtonStyle.Link","c":"discord-api-types!ButtonStyle.Link:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":6146,"co":3,"ro":false,"op":false,"r":"Public","n":"style","prtr":{"st":2,"en":8}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!InteractionCollector:class","d":"/**\n * Collects interactions. Will automatically stop if the message ({@link Client.messageDelete | messageDelete} or {@link Client.messageDeleteBulk | messageDeleteBulk}), channel ({@link Client.channelDelete | channelDelete}), or guild ({@link Client.guildDelete | guildDelete}) is deleted. <info>Interaction collectors that do not specify `time` or `idle` may be prone to always running. Ensure your interaction collectors end via either of these options or manual cancellation.</info>\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectedInteraction","c":"discord.js!CollectedInteraction:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Collector","c":"discord.js!Collector:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":", "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"src/structures/InteractionCollector.js","l":31,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ab":false,"n":"InteractionCollector","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!InteractionCollector:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":31,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":12},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!InteractionCollector#channelId:member","d":"/**\n * The channel from which to collect interactions, if provided\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!InteractionCollector#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#client:member","d":"/**\n * The client that instantiated this Collector\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":35,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!InteractionCollector#collect:member(0)","d":"/**\n * Emitted whenever an interaction is collected.\n *\n * @param interaction - The interaction that was collected\n */\n","ex":[{"k":"Content","t":"on('collect', (interaction: "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":") => {})"}],"l":145,"r":"Public","oi":0,"ps":[{"pn":"interaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"collect"},{"k":"Method","c":"discord.js!InteractionCollector#collect:member(1)","d":"/**\n * Handles an incoming interaction for possible collection.\n *\n * @param interaction - The interaction to possibly collect\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"collect","c":"discord.js!InteractionCollector#collect"},{"k":"Content","t":"("},{"k":"Reference","t":"interaction","c":"discord.js!~interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":144,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"interaction","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"collect"},{"k":"Property","c":"discord.js!InteractionCollector#collected:member","d":"/**\n * The items collected by this collector\n */\n","ex":[{"k":"Content","t":"undefined collected :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":60,"ro":false,"op":false,"r":"Public","n":"collected","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#componentType:member","d":"/**\n * The type of component to collect\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!InteractionCollector#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!InteractionCollector#dispose:member(0)","d":"/**\n * Emitted whenever an interaction is disposed of.\n *\n * @param interaction - The interaction that was disposed of\n */\n","ex":[{"k":"Content","t":"on('dispose', (interaction: "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":") => {})"}],"l":173,"r":"Public","oi":0,"ps":[{"pn":"interaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"dispose"},{"k":"Method","c":"discord.js!InteractionCollector#dispose:member(1)","d":"/**\n * Handles an interaction for possible disposal.\n *\n * @param interaction - The interaction that could be disposed of\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"dispose","c":"discord.js!InteractionCollector#dispose"},{"k":"Content","t":"("},{"k":"Reference","t":"interaction","c":"discord.js!~interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":172,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"interaction","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"dispose"},{"k":"Method","c":"discord.js!InteractionCollector#empty:member(1)","d":"/**\n * Empties this interaction collector.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"empty","c":"discord.js!InteractionCollector#empty"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":197,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"empty"},{"k":"Event","c":"discord.js!InteractionCollector#end:member(0)","d":"/**\n * Emitted when the collector is finished collecting.\n *\n * @param collected - The elements collected by the collector\n *\n * @param reason - The reason the collector ended\n */\n","ex":[{"k":"Content","t":"on('end', (collected: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":", reason: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":227,"r":"Public","oi":0,"ps":[{"pn":"collected","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"end"},{"k":"Property","c":"discord.js!InteractionCollector#ended:member","d":"/**\n * Whether this collector has finished collecting\n */\n","ex":[{"k":"Content","t":"undefined ended :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":66,"ro":false,"op":false,"r":"Public","n":"ended","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#endReason:member","d":"/**\n * The reason this collector has ended with, or null if it hasn't ended yet\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly endReason :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":209,"ro":true,"op":true,"r":"Public","n":"endReason","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"undefined filter :"},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":48,"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#guildId:member","d":"/**\n * The guild from which to collect interactions, if provided\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!InteractionCollector#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!InteractionCollector#ignore:member(0)","d":"/**\n * Emitted whenever an element is not collected by the collector.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('ignore', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":141,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"ignore"},{"k":"Property","c":"discord.js!InteractionCollector#interactionType:member","d":"/**\n * The type of interaction to collect\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"interactionType","c":"discord.js!InteractionCollector#interactionType"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":76,"co":3,"ro":false,"op":false,"r":"Public","n":"interactionType","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#lastCollectedAt:member","d":"/**\n * The Date at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":110,"ro":false,"op":true,"r":"Public","n":"lastCollectedAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#lastCollectedTimestamp:member","d":"/**\n * The timestamp at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":103,"ro":false,"op":true,"r":"Public","n":"lastCollectedTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#messageId:member","d":"/**\n * The message from which to collect interactions, if provided\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"messageId","c":"discord.js!InteractionCollector#messageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"messageId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#messageInteractionId:member","d":"/**\n * The message interaction id from which to collect interactions, if provided\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"messageInteractionId","c":"discord.js!InteractionCollector#messageInteractionId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"messageInteractionId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#next:member","d":"/**\n * Returns a promise that resolves with the next collected element; rejects with collected elements if the collector finishes without receiving a next element\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly next :"},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":180,"ro":true,"op":false,"r":"Public","n":"next","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!InteractionCollector#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!InteractionCollector#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'collect' | 'dispose' | 'ignore'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"interaction","c":"discord.js!~interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1919,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!InteractionCollector#on:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!InteractionCollector#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'end'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"collected","c":"discord.js!~collected"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">, "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1920,"co":3,"sta":false,"rtr":{"st":24,"en":25},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":23},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!InteractionCollector#on:member(3)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!InteractionCollector#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1921,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!InteractionCollector#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!InteractionCollector#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'collect' | 'dispose' | 'ignore'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"interaction","c":"discord.js!~interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1923,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Method","c":"discord.js!InteractionCollector#once:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!InteractionCollector#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'end'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"collected","c":"discord.js!~collected"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">, "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1924,"co":3,"sta":false,"rtr":{"st":24,"en":25},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":23},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Method","c":"discord.js!InteractionCollector#once:member(3)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!InteractionCollector#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1925,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!InteractionCollector#options:member","d":"/**\n * The options of this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!InteractionCollector#options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#total:member","d":"/**\n * The total number of interactions collected\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"total","c":"discord.js!InteractionCollector#total"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":94,"co":3,"ro":false,"op":false,"r":"Public","n":"total","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionCollector#users:member","d":"/**\n * The users that have interacted with this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!InteractionCollector#users"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":88,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"etr":{"st":7,"en":21,"tps":[{"st":9,"en":10},{"st":11,"en":12},{"st":13,"en":20}]},"itrs":[]},{"k":"Interface","c":"discord.js!InteractionCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"< "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectedInteraction","c":"discord.js!CollectedInteraction:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Interaction"},{"k":"Content","t":", "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/structures/InteractionCollector.js","l":7,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Cached","ctr":{"st":9,"en":10},"dtr":{"st":11,"en":12}}],"n":"InteractionCollectorOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#channel:member","d":"/**\n * The channel to listen to interactions from\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!InteractionCollectorOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"TextBasedChannelResolvable","c":"discord.js!TextBasedChannelResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6043,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#componentType:member","d":"/**\n * The type of component to listen for\n */\n","ex":[{"k":"Reference","t":"componentType","c":"discord.js!InteractionCollectorOptions#componentType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6044,"co":3,"ro":false,"op":true,"r":"Public","n":"componentType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#guild:member","d":"/**\n * The guild to listen to interactions from\n */\n","ex":[{"k":"Reference","t":"guild","c":"discord.js!InteractionCollectorOptions#guild"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6045,"co":3,"ro":false,"op":true,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#interactionResponse:member","d":"/**\n * The interaction response to listen to message component interactions from\n */\n","ex":[{"k":"Reference","t":"interactionResponse","c":"discord.js!InteractionCollectorOptions#interactionResponse"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6051,"co":3,"ro":false,"op":true,"r":"Public","n":"interactionResponse","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#interactionType:member","d":"/**\n * The type of interaction to listen for\n */\n","ex":[{"k":"Reference","t":"interactionType","c":"discord.js!InteractionCollectorOptions#interactionType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6046,"co":3,"ro":false,"op":true,"r":"Public","n":"interactionType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#max:member","d":"/**\n * The maximum total amount of interactions to collect\n */\n","ex":[{"k":"Reference","t":"max","c":"discord.js!InteractionCollectorOptions#max"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6047,"co":3,"ro":false,"op":true,"r":"Public","n":"max","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#maxComponents:member","d":"/**\n * The maximum number of components to collect\n */\n","ex":[{"k":"Reference","t":"maxComponents","c":"discord.js!InteractionCollectorOptions#maxComponents"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6048,"co":3,"ro":false,"op":true,"r":"Public","n":"maxComponents","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#maxUsers:member","d":"/**\n * The maximum number of users to interact\n */\n","ex":[{"k":"Reference","t":"maxUsers","c":"discord.js!InteractionCollectorOptions#maxUsers"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6049,"co":3,"ro":false,"op":true,"r":"Public","n":"maxUsers","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionCollectorOptions#message:member","d":"/**\n * The message to listen to interactions from\n */\n","ex":[{"k":"Reference","t":"message","c":"discord.js!InteractionCollectorOptions#message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6050,"co":3,"ro":false,"op":true,"r":"Public","n":"message","prtr":{"st":2,"en":10}}],"etrs":[{"st":13,"en":23,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!InteractionDeferReplyOptions:interface","d":"/**\n * Options for deferring the reply to an {@link BaseInteraction}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":23,"co":1,"r":"Public","n":"InteractionDeferReplyOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionDeferReplyOptions#ephemeral:member","d":"/**\n * Whether the reply should be ephemeral\n */\n","ex":[{"k":"Reference","t":"ephemeral","c":"discord.js!InteractionDeferReplyOptions#ephemeral"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6055,"co":3,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionDeferReplyOptions#fetchReply:member","d":"/**\n * Whether to fetch the reply\n */\n","ex":[{"k":"Reference","t":"fetchReply","c":"discord.js!InteractionDeferReplyOptions#fetchReply"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6056,"co":3,"ro":false,"op":true,"r":"Public","n":"fetchReply","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!InteractionDeferUpdateOptions:interface","d":"/**\n * Options for deferring and updating the reply to a {@link MessageComponentInteraction}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionDeferUpdateOptions","c":"discord.js!InteractionDeferUpdateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":", 'ephemeral'>"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":30,"co":1,"r":"Public","n":"InteractionDeferUpdateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionDeferUpdateOptions#fetchReply:member","d":"/**\n * Whether to fetch the reply\n */\n","ex":[{"k":"Content","t":"undefined fetchReply :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"fetchReply","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!InteractionEditReplyOptions:interface","d":"/**\n * Options that can be passed into {@link InteractionResponses.editReply}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionEditReplyOptions","c":"discord.js!InteractionEditReplyOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":141,"co":1,"r":"Public","n":"InteractionEditReplyOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionEditReplyOptions#message:member","d":"/**\n * The response to edit\n */\n","ex":[{"k":"Reference","t":"message","c":"discord.js!InteractionEditReplyOptions#message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6730,"co":3,"ro":false,"op":true,"r":"Public","n":"message","prtr":{"st":2,"en":4}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!InteractionReplyOptions:interface","d":"/**\n * Options for a reply to a {@link BaseInteraction}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseMessageOptions","c":"discord.js!BaseMessageOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":36,"co":1,"r":"Public","n":"InteractionReplyOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionReplyOptions#ephemeral:member","d":"/**\n * Whether the reply should be ephemeral\n */\n","ex":[{"k":"Reference","t":"ephemeral","c":"discord.js!InteractionReplyOptions#ephemeral"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6063,"co":3,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionReplyOptions#fetchReply:member","d":"/**\n * Whether to fetch the reply\n */\n","ex":[{"k":"Reference","t":"fetchReply","c":"discord.js!InteractionReplyOptions#fetchReply"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6064,"co":3,"ro":false,"op":true,"r":"Public","n":"fetchReply","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InteractionReplyOptions#flags:member","d":"/**\n * Which flags to set for the message. <info>Only `MessageFlags.SuppressEmbeds` and `MessageFlags.Ephemeral` can be set.</info>\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!InteractionReplyOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":", 'Ephemeral' | 'SuppressEmbeds'>,  "},{"k":"Reference","t":"MessageFlags.Ephemeral","c":"discord-api-types!MessageFlags.Ephemeral:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageFlags.SuppressEmbeds","c":"discord-api-types!MessageFlags.SuppressEmbeds:member"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6065,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":12}},{"k":"PropertySignature","c":"discord.js!InteractionReplyOptions#tts:member","d":"/**\n * Whether the message should be spoken aloud\n */\n","ex":[{"k":"Reference","t":"tts","c":"discord.js!InteractionReplyOptions#tts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6062,"co":3,"ro":false,"op":true,"r":"Public","n":"tts","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!InteractionResponse:class","d":"/**\n * Represents an interaction's response\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> "}],"pat":"src/structures/InteractionResponse.js","l":10,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"InteractionResponse","pmo":false,"ms":[{"k":"Method","c":"discord.js!InteractionResponse#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"awaitMessageComponent","c":"discord.js!InteractionResponse#awaitMessageComponent"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AwaitMessageCollectorOptionsParams","c":"discord.js!AwaitMessageCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":49,"co":3,"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Property","c":"discord.js!InteractionResponse#client:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"client","c":"discord.js!InteractionResponse#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":606,"co":3,"ro":false,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionResponse#createdAt:member","d":"/**\n * The time the interaction response was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!InteractionResponse#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionResponse#createdTimestamp:member","d":"/**\n * The timestamp the interaction response was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!InteractionResponse#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!InteractionResponse#createMessageComponentCollector:member(1)","d":"/**\n * Creates a message component interaction collector\n *\n * @param options - Options to send to the collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createMessageComponentCollector","c":"discord.js!InteractionResponse#createMessageComponentCollector"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageCollectorOptionsParams","c":"discord.js!MessageCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":66,"co":3,"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!InteractionResponse#delete:member(1)","d":"/**\n * Deletes the response.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!InteractionResponse#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":86,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!InteractionResponse#edit:member(1)","d":"/**\n * Edits the response.\n *\n * @param options - The new options for the response.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!InteractionResponse#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":95,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!InteractionResponse#fetch:member(1)","d":"/**\n * Fetches the response as a {@link Message} object.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!InteractionResponse#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":78,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!InteractionResponse#id:member","d":"/**\n * The id of the original interaction response\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!InteractionResponse#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionResponse#interaction:member","d":"/**\n * The interaction associated with the interaction response\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"interaction","c":"discord.js!InteractionResponse#interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"Interaction","c":"discord.js!Interaction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"interaction","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!InteractionUpdateOptions:interface","d":"/**\n * Options for updating the message received from a {@link MessageComponentInteraction}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":46,"co":1,"r":"Public","n":"InteractionUpdateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InteractionUpdateOptions#fetchReply:member","d":"/**\n * Whether to fetch the reply\n */\n","ex":[{"k":"Reference","t":"fetchReply","c":"discord.js!InteractionUpdateOptions#fetchReply"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6072,"co":3,"ro":false,"op":true,"r":"Public","n":"fetchReply","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!InteractionWebhook:class","d":"/**\n * Represents a webhook for an Interaction\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"PartialWebhookMixin","c":"discord.js!PartialWebhookMixin"},{"k":"Content","t":"()"},{"k":"Content","t":" "}],"pat":"src/structures/InteractionWebhook.js","l":9,"co":1,"r":"Public","ab":false,"n":"InteractionWebhook","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!InteractionWebhook:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"token","c":"discord.js!~token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":");"}],"l":9,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"id","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"token","ptr":{"st":12,"en":13},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!InteractionWebhook#client:member","d":"/**\n * The client that instantiated the interaction webhook\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!InteractionWebhook#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!InteractionWebhook#deleteMessage:member(1)","d":"/**\n * Delete a message that was sent by this webhook.\n *\n * @param message - The message to delete\n *\n * @param threadId - The id of the thread this message belongs to\n */\n","ex":[{"k":"Content","t":"deleteMessage(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | "},{"k":"Content","t":"'@original'"},{"k":"Content","t":", threadId?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":382,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":4},"op":false,"rs":false},{"pn":"threadId","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteMessage"},{"k":"Method","c":"discord.js!InteractionWebhook#editMessage:member(1)","d":"/**\n * Edits a message that was sent by this webhook.\n *\n * @param message - The message to edit\n *\n * @param options - The options to provide\n *\n * @returns Returns the message edited by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editMessage","c":"discord.js!InteractionWebhook#editMessage"},{"k":"Content","t":"(  "},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":52,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"options","ptr":{"st":10,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"editMessage"},{"k":"Method","c":"discord.js!InteractionWebhook#fetchMessage:member(1)","d":"/**\n * Gets a message that was sent by this webhook.\n *\n * @param message - The id of the message to fetch\n *\n * @returns Returns the message sent by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchMessage","c":"discord.js!InteractionWebhook#fetchMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":43,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchMessage"},{"k":"Property","c":"discord.js!InteractionWebhook#id:member","d":"/**\n * The webhook's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":60,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!InteractionWebhook#send:member(1)","d":"/**\n * Sends a message with this webhook.\n *\n * @param options - The content for the reply\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!InteractionWebhook#send"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":35,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Property","c":"discord.js!InteractionWebhook#token:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"token","c":"discord.js!InteractionWebhook#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1931,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InteractionWebhook#url:member","d":"/**\n * The URL of this webhook\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":417,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":5,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!Invite:class","d":"/**\n * Represents an invitation to a guild channel.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Invite.js","l":14,"co":1,"r":"Public","ab":false,"n":"Invite","pmo":false,"ms":[{"k":"Property","c":"discord.js!Invite#channel:member","d":"/**\n * The channel this invite is for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!Invite#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialGroupDMChannel","c":"discord.js!PartialGroupDMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":175,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#channelId:member","d":"/**\n * The id of the channel this invite is for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!Invite#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#code:member","d":"/**\n * The code for this invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"code","c":"discord.js!Invite#code"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#createdAt:member","d":"/**\n * The time the invite was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Invite#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":225,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#createdTimestamp:member","d":"/**\n * The timestamp this invite was created at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Invite#createdTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":187,"co":3,"ro":false,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#deletable:member","d":"/**\n * Whether the invite is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"deletable","c":"discord.js!Invite#deletable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":234,"co":3,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Invite#delete:member(1)","d":"/**\n * Deletes this invite.\n *\n * @param reason - Reason for deleting this invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Invite#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":288,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!Invite#expiresAt:member","d":"/**\n * The time the invite will expire at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"expiresAt","c":"discord.js!Invite#expiresAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":261,"co":3,"ro":true,"op":false,"r":"Public","n":"expiresAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#expiresTimestamp:member","d":"/**\n * The timestamp the invite will expire at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"expiresTimestamp","c":"discord.js!Invite#expiresTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":249,"co":3,"ro":true,"op":false,"r":"Public","n":"expiresTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#guild:member","d":"/**\n * The guild the invite is for including welcome screen data if present\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!Invite#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteGuild","c":"discord.js!InviteGuild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#guildScheduledEvent:member","d":"/**\n * The guild scheduled event data if there is a {@link GuildScheduledEvent} in the channel this invite is for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!Invite#guildScheduledEvent"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":214,"co":3,"ro":false,"op":false,"r":"Public","n":"guildScheduledEvent","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#inviter:member","d":"/**\n * The user who created this invite\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"inviter","c":"discord.js!Invite#inviter"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":270,"co":3,"ro":true,"op":false,"r":"Public","n":"inviter","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#inviterId:member","d":"/**\n * The user's id who created this invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inviterId","c":"discord.js!Invite#inviterId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":122,"co":3,"ro":false,"op":false,"r":"Public","n":"inviterId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite.InvitesPattern:member","d":"/**\n * A regular expression that matches Discord invite links. The `code` group property is present on the `exec()` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"InvitesPattern","c":"discord.js!Invite.InvitesPattern"},{"k":"Content","t":": "},{"k":"Reference","t":"RegExp","c":"!RegExp:interface"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"InvitesPattern","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#maxAge:member","d":"/**\n * The maximum age of the invite, in seconds, 0 if never expires <info>This is only available when the invite was fetched through {@link GuildInviteManager.fetch} or created through {@link GuildInviteManager.create}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maxAge","c":"discord.js!Invite#maxAge"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":88,"co":3,"ro":false,"op":false,"r":"Public","n":"maxAge","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#maxUses:member","d":"/**\n * The maximum uses of this invite <info>This is only available when the invite was fetched through {@link GuildInviteManager.fetch} or created through {@link GuildInviteManager.create}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maxUses","c":"discord.js!Invite#maxUses"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":112,"co":3,"ro":false,"op":false,"r":"Public","n":"maxUses","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#memberCount:member","d":"/**\n * The approximate total number of members of the guild this invite is for <info>This is only available when the invite was fetched through {@link Client.fetchInvite}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"memberCount","c":"discord.js!Invite#memberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"memberCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#presenceCount:member","d":"/**\n * The approximate number of online members of the guild this invite is for <info>This is only available when the invite was fetched through {@link Client.fetchInvite}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"presenceCount","c":"discord.js!Invite#presenceCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"presenceCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#stageInstance:member","d":"/**\n * The stage instance data if there is a public {@link StageInstance} in the stage channel this invite is for\n *\n * @deprecated\n *\n * true\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stageInstance","c":"discord.js!Invite#stageInstance"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteStageInstance","c":"discord.js!InviteStageInstance:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":204,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstance","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#targetApplication:member","d":"/**\n * The embedded application to open for this voice channel embedded application invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetApplication","c":"discord.js!Invite#targetApplication"},{"k":"Content","t":": "},{"k":"Reference","t":"IntegrationApplication","c":"discord.js!IntegrationApplication:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":147,"co":3,"ro":false,"op":false,"r":"Public","n":"targetApplication","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#targetType:member","d":"/**\n * The target type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetType","c":"discord.js!Invite#targetType"},{"k":"Content","t":": "},{"k":"Reference","t":"InviteTargetType","c":"discord-api-types!InviteTargetType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":157,"co":3,"ro":false,"op":false,"r":"Public","n":"targetType","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#targetUser:member","d":"/**\n * The user whose stream to display for this voice channel stream invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"targetUser","c":"discord.js!Invite#targetUser"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":137,"co":3,"ro":false,"op":false,"r":"Public","n":"targetUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#temporary:member","d":"/**\n * Whether or not this invite only grants temporary membership <info>This is only available when the invite was fetched through {@link GuildInviteManager.fetch} or created through {@link GuildInviteManager.create}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"temporary","c":"discord.js!Invite#temporary"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":76,"co":3,"ro":false,"op":false,"r":"Public","n":"temporary","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Invite#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Invite#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1964,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Invite#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically concatenates the invite's URL instead of the object.\n *\n * @example\n * ```js\n * // Logs: Invite: https://discord.gg/A1b2C3\n * console.log(`Invite: ${invite}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Invite#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":300,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!Invite#url:member","d":"/**\n * The URL to the invite\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!Invite#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":279,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Invite#uses:member","d":"/**\n * How many times this invite has been used <info>This is only available when the invite was fetched through {@link GuildInviteManager.fetch} or created through {@link GuildInviteManager.create}.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"uses","c":"discord.js!Invite#uses"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":false,"op":false,"r":"Public","n":"uses","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!InviteCreateOptions:interface","d":"/**\n * Options used to create an invite to a guild channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/BaseGuildTextChannel.js","l":136,"co":1,"r":"Public","n":"InviteCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#maxAge:member","d":"/**\n * How long the invite should last (in seconds, 0 for forever)\n */\n","ex":[{"k":"Reference","t":"maxAge","c":"discord.js!InviteCreateOptions#maxAge"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6093,"co":3,"ro":false,"op":true,"r":"Public","n":"maxAge","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#maxUses:member","d":"/**\n * Maximum number of uses\n */\n","ex":[{"k":"Reference","t":"maxUses","c":"discord.js!InviteCreateOptions#maxUses"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6094,"co":3,"ro":false,"op":true,"r":"Public","n":"maxUses","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#reason:member","d":"/**\n * The reason for creating the invite\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!InviteCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6096,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#targetApplication:member","d":"/**\n * The embedded application to open for this invite, required if `targetType` is {@link discord-api-types#(InviteTargetType:enum).Stream}, the application must have the {@link discord-api-types#(InviteTargetType:enum).EmbeddedApplication} flag\n */\n","ex":[{"k":"Reference","t":"targetApplication","c":"discord.js!InviteCreateOptions#targetApplication"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ApplicationResolvable","c":"discord.js!ApplicationResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6097,"co":3,"ro":false,"op":true,"r":"Public","n":"targetApplication","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#targetType:member","d":"/**\n * The type of the target for this voice channel invite\n */\n","ex":[{"k":"Reference","t":"targetType","c":"discord.js!InviteCreateOptions#targetType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteTargetType","c":"discord-api-types!InviteTargetType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6099,"co":3,"ro":false,"op":true,"r":"Public","n":"targetType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#targetUser:member","d":"/**\n * The user whose stream to display for this invite, required if `targetType` is {@link discord-api-types#(InviteTargetType:enum).Stream}, the user must be streaming in the channel\n */\n","ex":[{"k":"Reference","t":"targetUser","c":"discord.js!InviteCreateOptions#targetUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6098,"co":3,"ro":false,"op":true,"r":"Public","n":"targetUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#temporary:member","d":"/**\n * Whether members that joined via the invite should be automatically kicked after 24 hours if they have not yet received a role\n */\n","ex":[{"k":"Reference","t":"temporary","c":"discord.js!InviteCreateOptions#temporary"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6092,"co":3,"ro":false,"op":true,"r":"Public","n":"temporary","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteCreateOptions#unique:member","d":"/**\n * Create a unique invite, or use an existing one with similar settings\n */\n","ex":[{"k":"Reference","t":"unique","c":"discord.js!InviteCreateOptions#unique"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6095,"co":3,"ro":false,"op":true,"r":"Public","n":"unique","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!InviteGenerationOptions:interface","d":"/**\n * Options for {@link Client.generateInvite}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InviteGenerationOptions","c":"discord.js!InviteGenerationOptions:interface"},{"k":"Content","t":" "}],"pat":"src/client/Client.js","l":400,"co":1,"r":"Public","n":"InviteGenerationOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!InviteGenerationOptions#disableGuildSelect:member","d":"/**\n * Whether to disable the guild selection\n */\n","ex":[{"k":"Reference","t":"disableGuildSelect","c":"discord.js!InviteGenerationOptions#disableGuildSelect"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6078,"co":3,"ro":false,"op":true,"r":"Public","n":"disableGuildSelect","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteGenerationOptions#guild:member","d":"/**\n * Guild to preselect\n */\n","ex":[{"k":"Reference","t":"guild","c":"discord.js!InviteGenerationOptions#guild"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildResolvable","c":"discord.js!GuildResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6077,"co":3,"ro":false,"op":true,"r":"Public","n":"guild","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteGenerationOptions#permissions:member","d":"/**\n * Permissions to request\n */\n","ex":[{"k":"Reference","t":"permissions","c":"discord.js!InviteGenerationOptions#permissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6076,"co":3,"ro":false,"op":true,"r":"Public","n":"permissions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!InviteGenerationOptions#scopes:member","d":"/**\n * Scopes that should be requested\n */\n","ex":[{"k":"Reference","t":"scopes","c":"discord.js!InviteGenerationOptions#scopes"},{"k":"Content","t":": "},{"k":"Reference","t":"OAuth2Scopes","c":"discord-api-types!OAuth2Scopes:enum"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6079,"co":3,"ro":false,"op":false,"r":"Public","n":"scopes","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Class","c":"discord.js!InviteGuild:class","d":"/**\n * Represents a guild received from an invite, includes welcome screen data if available.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"InviteGuild","c":"discord.js!InviteGuild:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AnonymousGuild","c":"discord.js!AnonymousGuild:class"},{"k":"Content","t":" "}],"pat":"src/structures/InviteGuild.js","l":10,"co":1,"r":"Public","ab":false,"n":"InviteGuild","pmo":false,"ms":[{"k":"Property","c":"discord.js!InviteGuild#banner:member","d":"/**\n * The hash of the guild banner\n */\n","ex":[{"k":"Content","t":"undefined banner :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":32,"ro":false,"op":true,"r":"Public","n":"banner","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":56,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":47,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#description:member","d":"/**\n * The description of the guild, if any\n */\n","ex":[{"k":"Content","t":"undefined description :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":40,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#features:member","d":"/**\n * An array of features available to this guild\n */\n","ex":[{"k":"Content","t":"undefined features :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":39,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#icon:member","d":"/**\n * The icon hash of this guild\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":33,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#id:member","d":"/**\n * The guild's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":21,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":27,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#nameAcronym:member","d":"/**\n * The acronym that shows up in place of a guild icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly nameAcronym :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":65,"ro":true,"op":false,"r":"Public","n":"nameAcronym","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#nsfwLevel:member","d":"/**\n * The NSFW level of this guild\n */\n","ex":[{"k":"Content","t":"undefined nsfwLevel :"},{"k":"Reference","t":"GuildNSFWLevel","c":"discord-api-types!GuildNSFWLevel:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":64,"ro":false,"op":false,"r":"Public","n":"nsfwLevel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#partnered:member","d":"/**\n * Whether this guild is partnered\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partnered :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":77,"ro":true,"op":false,"r":"Public","n":"partnered","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#premiumSubscriptionCount:member","d":"/**\n * The total number of boosts for this server\n */\n","ex":[{"k":"Content","t":"undefined premiumSubscriptionCount :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":72,"ro":false,"op":true,"r":"Public","n":"premiumSubscriptionCount","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#splash:member","d":"/**\n * The hash of the guild invite splash image\n */\n","ex":[{"k":"Content","t":"undefined splash :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":24,"ro":false,"op":true,"r":"Public","n":"splash","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#vanityURLCode:member","d":"/**\n * The vanity invite code of the guild, if any\n */\n","ex":[{"k":"Content","t":"undefined vanityURLCode :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":56,"ro":false,"op":true,"r":"Public","n":"vanityURLCode","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#verificationLevel:member","d":"/**\n * The verification level of the guild\n */\n","ex":[{"k":"Content","t":"undefined verificationLevel :"},{"k":"Reference","t":"GuildVerificationLevel","c":"discord-api-types!GuildVerificationLevel:class"},{"k":"Content","t":";"}],"pat":"src/structures/AnonymousGuild.js","l":48,"ro":false,"op":false,"r":"Public","n":"verificationLevel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#verified:member","d":"/**\n * Whether this guild is verified\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly verified :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":86,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteGuild#welcomeScreen:member","d":"/**\n * The welcome screen for this invite guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"welcomeScreen","c":"discord.js!InviteGuild#welcomeScreen"},{"k":"Content","t":": "},{"k":"Reference","t":"WelcomeScreen","c":"discord.js!WelcomeScreen:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"welcomeScreen","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!InviteResolvable:type","d":"/**\n * Data that can be resolved to give an invite code. This can be:\n *\n * * An invite code\n *\n * * An invite URL\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"InviteResolvable","c":"discord.js!InviteResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/DataResolver.js","l":10,"co":1,"r":"Public","n":"InviteResolvable","ttr":{"st":3,"en":4}},{"k":"Class","c":"discord.js!InviteStageInstance:class","d":"/**\n * Represents the data about a public {@link StageInstance} in an {@link Invite}.\n *\n * @deprecated\n *\n * true\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"InviteStageInstance","c":"discord.js!InviteStageInstance:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/InviteStageInstance.js","l":11,"co":1,"r":"Public","ab":false,"n":"InviteStageInstance","pmo":false,"ms":[{"k":"Property","c":"discord.js!InviteStageInstance#channel:member","d":"/**\n * The stage channel this invite is for\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!InviteStageInstance#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#channelId:member","d":"/**\n * The id of the stage channel this invite is for\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!InviteStageInstance#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#guild:member","d":"/**\n * The guild of the stage channel this invite is for\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!InviteStageInstance#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#guildId:member","d":"/**\n * The stage channel's guild id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!InviteStageInstance#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#members:member","d":"/**\n * The members speaking in the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!InviteStageInstance#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#participantCount:member","d":"/**\n * The number of users in the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"participantCount","c":"discord.js!InviteStageInstance#participantCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":50,"co":3,"ro":false,"op":false,"r":"Public","n":"participantCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#speakerCount:member","d":"/**\n * The number of users speaking in the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"speakerCount","c":"discord.js!InviteStageInstance#speakerCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"speakerCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!InviteStageInstance#topic:member","d":"/**\n * The topic of the stage instance\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"topic","c":"discord.js!InviteStageInstance#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!LifetimeFilterOptions:interface","d":"/**\n * Options for generating a filter function based on lifetime\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"LifetimeFilterOptions","c":"discord.js!LifetimeFilterOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> "}],"pat":"src/util/Sweepers.js","l":321,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"LifetimeFilterOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!LifetimeFilterOptions#excludeFromSweep:member","d":"/**\n * A function that takes an entry, key, and the collection and returns a boolean, `true` when the entry should not be checked for sweepability.\n */\n","ex":[{"k":"Reference","t":"excludeFromSweep","c":"discord.js!LifetimeFilterOptions#excludeFromSweep"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"LimitedCollection","c":"discord.js!LimitedCollection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">) => "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6105,"co":3,"ro":false,"op":true,"r":"Public","n":"excludeFromSweep","prtr":{"st":2,"en":20}},{"k":"PropertySignature","c":"discord.js!LifetimeFilterOptions#getComparisonTimestamp:member","d":"/**\n * A function that takes an entry, key, and the collection and returns a timestamp to compare against in order to determine the lifetime of the entry.\n */\n","ex":[{"k":"Reference","t":"getComparisonTimestamp","c":"discord.js!LifetimeFilterOptions#getComparisonTimestamp"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"LimitedCollection","c":"discord.js!LimitedCollection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">) => "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6106,"co":3,"ro":false,"op":true,"r":"Public","n":"getComparisonTimestamp","prtr":{"st":2,"en":20}},{"k":"PropertySignature","c":"discord.js!LifetimeFilterOptions#lifetime:member","d":"/**\n * How long, in seconds, an entry should stay in the collection before it is considered sweepable.\n */\n","ex":[{"k":"Reference","t":"lifetime","c":"discord.js!LifetimeFilterOptions#lifetime"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6107,"co":3,"ro":false,"op":true,"r":"Public","n":"lifetime","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!LifetimeSweepOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"LifetimeSweepOptions","c":"discord.js!LifetimeSweepOptions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6581,"co":1,"r":"Public","n":"LifetimeSweepOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!LifetimeSweepOptions#filter:member","d":"","ex":[{"k":"Reference","t":"filter","c":"discord.js!LifetimeSweepOptions#filter"},{"k":"Content","t":"?: "},{"k":"Reference","t":"never"},{"k":"Content","t":";"}],"l":6584,"co":3,"ro":false,"op":true,"r":"Public","n":"filter","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!LifetimeSweepOptions#interval:member","d":"","ex":[{"k":"Reference","t":"interval","c":"discord.js!LifetimeSweepOptions#interval"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6582,"co":3,"ro":false,"op":false,"r":"Public","n":"interval","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!LifetimeSweepOptions#lifetime:member","d":"","ex":[{"k":"Reference","t":"lifetime","c":"discord.js!LifetimeSweepOptions#lifetime"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6583,"co":3,"ro":false,"op":false,"r":"Public","n":"lifetime","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!LimitedCollection:class","d":"/**\n * A Collection which holds a max amount of entries.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"LimitedCollection","c":"discord.js!LimitedCollection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/LimitedCollection.js","l":20,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":false,"n":"LimitedCollection","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!LimitedCollection:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LimitedCollectionOptions","c":"discord.js!LimitedCollectionOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<readonly ["},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"]>"},{"k":"Content","t":");"}],"l":20,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":3,"en":9},"op":true,"rs":false},{"pn":"iterable","ptr":{"st":12,"en":18},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!LimitedCollection#keepOverLimit:member","d":"/**\n * A function called to check if an entry should be kept when the Collection is at max size.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"keepOverLimit","c":"discord.js!LimitedCollection#keepOverLimit"},{"k":"Content","t":": "},{"k":"Content","t":"(("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"boolean"},{"k":"Content","t":") | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":46,"co":3,"ro":false,"op":false,"r":"Public","n":"keepOverLimit","prtr":{"st":3,"en":17},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!LimitedCollection#maxSize:member","d":"/**\n * The max size of the Collection.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"maxSize","c":"discord.js!LimitedCollection#maxSize"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"maxSize","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":7,"en":13,"tps":[{"st":9,"en":10},{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!LimitedCollectionOptions:interface","d":"/**\n * Options for defining the behavior of a LimitedCollection\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"LimitedCollectionOptions","c":"discord.js!LimitedCollectionOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> "}],"pat":"src/util/LimitedCollection.js","l":6,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"LimitedCollectionOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!LimitedCollectionOptions#keepOverLimit:member","d":"/**\n * A function, which is passed the value and key of an entry, ran to decide to keep an entry past the maximum size\n */\n","ex":[{"k":"Reference","t":"keepOverLimit","c":"discord.js!LimitedCollectionOptions#keepOverLimit"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"discord.js!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"discord.js!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"discord.js!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"LimitedCollection","c":"discord.js!LimitedCollection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">) => "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6614,"co":3,"ro":false,"op":true,"r":"Public","n":"keepOverLimit","prtr":{"st":2,"en":20}},{"k":"PropertySignature","c":"discord.js!LimitedCollectionOptions#maxSize:member","d":"/**\n * The maximum size of the Collection\n */\n","ex":[{"k":"Reference","t":"maxSize","c":"discord.js!LimitedCollectionOptions#maxSize"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6613,"co":3,"ro":false,"op":true,"r":"Public","n":"maxSize","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!LinkButtonComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"LinkButtonComponentData","c":"discord.js!LinkButtonComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseButtonComponentData","c":"discord.js!BaseButtonComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6140,"co":1,"r":"Public","n":"LinkButtonComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!LinkButtonComponentData#style:member","d":"","ex":[{"k":"Reference","t":"style","c":"discord.js!LinkButtonComponentData#style"},{"k":"Content","t":": "},{"k":"Reference","t":"ButtonStyle.Link","c":"discord-api-types!ButtonStyle.Link:member"},{"k":"Content","t":";"}],"l":6141,"co":3,"ro":false,"op":false,"r":"Public","n":"style","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!LinkButtonComponentData#url:member","d":"","ex":[{"k":"Reference","t":"url","c":"discord.js!LinkButtonComponentData#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6142,"co":3,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!MappedChannelCategoryTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MappedChannelCategoryTypes","c":"discord.js!MappedChannelCategoryTypes:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":906,"co":1,"r":"Public","n":"MappedChannelCategoryTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"0\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types!ChannelType.GuildText:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":";"}],"l":909,"co":3,"ro":false,"op":false,"r":"Public","n":"\"0\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"13\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types!ChannelType.GuildStageVoice:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":";"}],"l":910,"co":3,"ro":false,"op":false,"r":"Public","n":"\"13\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"15\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types!ChannelType.GuildForum:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":";"}],"l":911,"co":3,"ro":false,"op":false,"r":"Public","n":"\"15\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"16\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types!ChannelType.GuildMedia:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":";"}],"l":912,"co":3,"ro":false,"op":false,"r":"Public","n":"\"16\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"2\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types!ChannelType.GuildVoice:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":";"}],"l":908,"co":3,"ro":false,"op":false,"r":"Public","n":"\"2\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedChannelCategoryTypes#\"5\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":";"}],"l":907,"co":3,"ro":false,"op":false,"r":"Public","n":"\"5\"","prtr":{"st":3,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!MappedComponentBuilderTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MappedComponentBuilderTypes","c":"discord.js!MappedComponentBuilderTypes:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3349,"co":1,"r":"Public","n":"MappedComponentBuilderTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"1\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":";"}],"l":3356,"co":3,"ro":false,"op":false,"r":"Public","n":"\"1\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"2\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ButtonBuilder","c":"discord.js!ButtonBuilder:class"},{"k":"Content","t":";"}],"l":3350,"co":3,"ro":false,"op":false,"r":"Public","n":"\"2\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"3\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"discord.js!StringSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":3351,"co":3,"ro":false,"op":false,"r":"Public","n":"\"3\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"4\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"TextInputBuilder","c":"discord.js!TextInputBuilder:class"},{"k":"Content","t":";"}],"l":3357,"co":3,"ro":false,"op":false,"r":"Public","n":"\"4\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"5\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"discord.js!UserSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":3352,"co":3,"ro":false,"op":false,"r":"Public","n":"\"5\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"6\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"discord.js!RoleSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":3353,"co":3,"ro":false,"op":false,"r":"Public","n":"\"6\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"7\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"discord.js!MentionableSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":3354,"co":3,"ro":false,"op":false,"r":"Public","n":"\"7\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentBuilderTypes#\"8\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ChannelSelectMenuBuilder","c":"discord.js!ChannelSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":3355,"co":3,"ro":false,"op":false,"r":"Public","n":"\"8\"","prtr":{"st":3,"en":4}}],"etrs":[]},{"k":"Interface","c":"discord.js!MappedComponentTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MappedComponentTypes","c":"discord.js!MappedComponentTypes:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3360,"co":1,"r":"Public","n":"MappedComponentTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"1\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ActionRowComponent","c":"discord.js!ActionRowComponent:type"},{"k":"Content","t":";"}],"l":3367,"co":3,"ro":false,"op":false,"r":"Public","n":"\"1\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"2\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":";"}],"l":3361,"co":3,"ro":false,"op":false,"r":"Public","n":"\"2\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"3\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":";"}],"l":3362,"co":3,"ro":false,"op":false,"r":"Public","n":"\"3\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"4\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"TextInputComponent","c":"discord.js!TextInputComponent:class"},{"k":"Content","t":";"}],"l":3368,"co":3,"ro":false,"op":false,"r":"Public","n":"\"4\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"5\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":";"}],"l":3363,"co":3,"ro":false,"op":false,"r":"Public","n":"\"5\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"6\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":";"}],"l":3364,"co":3,"ro":false,"op":false,"r":"Public","n":"\"6\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"7\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":";"}],"l":3365,"co":3,"ro":false,"op":false,"r":"Public","n":"\"7\"","prtr":{"st":3,"en":4}},{"k":"PropertySignature","c":"discord.js!MappedComponentTypes#\"8\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":";"}],"l":3366,"co":3,"ro":false,"op":false,"r":"Public","n":"\"8\"","prtr":{"st":3,"en":4}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!MappedGuildChannelTypes:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MappedGuildChannelTypes","c":"discord.js!MappedGuildChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types!ChannelType.GuildCategory:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";} & "},{"k":"Reference","t":"MappedChannelCategoryTypes","c":"discord.js!MappedChannelCategoryTypes:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":4133,"co":1,"r":"Public","n":"MappedGuildChannelTypes","ttr":{"st":3,"en":9}},{"k":"Interface","c":"discord.js!MappedInteractionTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> "}],"pat":"typings/index.d.ts","l":2034,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"MappedInteractionTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"2\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.Button","c":"discord-api-types!ComponentType.Button:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2035,"co":3,"ro":false,"op":false,"r":"Public","n":"\"2\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"3\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2036,"co":3,"ro":false,"op":false,"r":"Public","n":"\"3\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"5\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2037,"co":3,"ro":false,"op":false,"r":"Public","n":"\"5\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"6\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2038,"co":3,"ro":false,"op":false,"r":"Public","n":"\"6\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"7\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2039,"co":3,"ro":false,"op":false,"r":"Public","n":"\"7\"","prtr":{"st":3,"en":9}},{"k":"PropertySignature","c":"discord.js!MappedInteractionTypes#\"8\":member","d":"","ex":[{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType.ChannelSelect","c":"discord-api-types!ComponentType.ChannelSelect:member"},{"k":"Content","t":"]: "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2040,"co":3,"ro":false,"op":false,"r":"Public","n":"\"8\"","prtr":{"st":3,"en":9}}],"etrs":[]},{"k":"Class","c":"discord.js!MediaChannel:class","d":"/**\n * Represents a media channel.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadOnlyChannel","c":"discord.js!ThreadOnlyChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/MediaChannel.js","l":9,"co":1,"r":"Public","ab":false,"n":"MediaChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!MediaChannel#availableTags:member","d":"/**\n * The set of tags that can be used in this channel.\n */\n","ex":[{"k":"Content","t":"undefined availableTags :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildForumTag","c":"discord.js!GuildForumTag:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"availableTags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultAutoArchiveDuration :"},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":106,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#defaultReactionEmoji:member","d":"/**\n * The emoji to show in the add reaction button on a thread in a guild forum channel\n */\n","ex":[{"k":"Content","t":"undefined defaultReactionEmoji :"},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#defaultSortOrder:member","d":"/**\n * The default sort order mode used to order posts\n */\n","ex":[{"k":"Content","t":"undefined defaultSortOrder :"},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":134,"ro":false,"op":true,"r":"Public","n":"defaultSortOrder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultThreadRateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":86,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#nsfw:member","d":"/**\n * If this channel is considered NSFW.\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":116,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel.\n */\n","ex":[{"k":"Content","t":"undefined rateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":96,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"undefined threads :"},{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!GuildForumThreadManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":52,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#topic:member","d":"/**\n * The topic of this channel.\n */\n","ex":[{"k":"Content","t":"undefined topic :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/ThreadOnlyChannel.js","l":126,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!MediaChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types!ChannelType.GuildMedia:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MediaChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!MentionableSelectMenuBuilder:class","d":"/**\n * Class used to build select menu components to be sent through the API\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"discord.js!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderMentionableSelectMenuComponent","c":"@discordjs/builders!MentionableSelectMenuBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/MentionableSelectMenuBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"MentionableSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MentionableSelectMenuBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `MentionableSelectMenuBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MentionableSelectMenuComponentData","c":"discord.js!MentionableSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!MentionableSelectMenuBuilder.from:member(1)","d":"/**\n * Creates a new select menu builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!MentionableSelectMenuBuilder.from"},{"k":"Content","t":"(  "},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":", ): "},{"k":"Reference","t":"MentionableSelectMenuBuilder","c":"discord.js!MentionableSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":22,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!MentionableSelectMenuComponent:class","d":"/**\n * Represents a mentionable select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/MentionableSelectMenuComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"MentionableSelectMenuComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":42,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly disabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":51,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly maxValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":24,"ro":true,"op":true,"r":"Public","n":"maxValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly minValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":33,"ro":true,"op":true,"r":"Public","n":"minValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly placeholder :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":15,"ro":true,"op":true,"r":"Public","n":"placeholder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!MentionableSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MentionableSelectMenuComponentData","c":"discord.js!MentionableSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6282,"co":1,"r":"Public","n":"MentionableSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MentionableSelectMenuComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!MentionableSelectMenuComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":";"}],"l":6283,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!MentionableSelectMenuInteraction:class","d":"/**\n * Represents a {@link discord-api-types#(ComponentType:enum).MentionableSelect} select menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/MentionableSelectMenuInteraction.js","l":11,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"MentionableSelectMenuInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MentionableSelectMenuInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `MentionableSelectMenuInteraction` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageMentionableSelectInteractionData","c":"discord-api-types!APIMessageMentionableSelectInteractionData:interface"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!MentionableSelectMenuInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIMentionableSelectComponent","c":"discord-api-types!APIMentionableSelectComponent:type"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!MentionableSelectMenuInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.MentionableSelect","c":"discord-api-types!ComponentType.MentionableSelect:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MentionableSelectMenuInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!MentionableSelectMenuInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!MentionableSelectMenuInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!MentionableSelectMenuInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!MentionableSelectMenuInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!MentionableSelectMenuInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#members:member","d":"/**\n * Collection of the selected users\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!MentionableSelectMenuInteraction#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":"> >"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#roles:member","d":"/**\n * Collection of the selected roles\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!MentionableSelectMenuInteraction#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#users:member","d":"/**\n * Collection of the selected users\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!MentionableSelectMenuInteraction#users"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#values:member","d":"/**\n * An array of the selected user and role ids\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"values","c":"discord.js!MentionableSelectMenuInteraction#values"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"values","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MentionableSelectMenuInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Class","c":"discord.js!Message:class","d":"/**\n * Represents a message on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":34,"co":1,"r":"Public","tps":[{"tp":"InGuild","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"Message","pmo":false,"ms":[{"k":"Property","c":"discord.js!Message#activity:member","d":"/**\n * Group activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"activity","c":"discord.js!Message#activity"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageActivity","c":"discord.js!MessageActivity:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":324,"co":3,"ro":false,"op":false,"r":"Public","n":"activity","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#applicationId:member","d":"/**\n * The id of the application of the interaction that sent this message, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!Message#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":314,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#attachments:member","d":"/**\n * A collection of attachments in the message - e.g. Pictures - mapped by their ids. <info>This property requires the {@link discord-api-types#(GatewayIntentBits:enum).MessageContent} privileged intent in a guild for messages that do not mention the client.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"attachments","c":"discord.js!Message#attachments"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":168,"co":3,"ro":false,"op":false,"r":"Public","n":"attachments","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#author:member","d":"/**\n * The author of the message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"author","c":"discord.js!Message#author"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":false,"op":false,"r":"Public","n":"author","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a message component interaction\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * message.awaitMessageComponent({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"awaitMessageComponent","c":"discord.js!Message#awaitMessageComponent"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AwaitMessageCollectorOptionsParams","c":"discord.js!AwaitMessageCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", "},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":599,"co":3,"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Method","c":"discord.js!Message#awaitReactions:member(1)","d":"/**\n * Similar to createReactionCollector but in promise form. Resolves with a collection of reactions that pass the specified filter.\n *\n * @param options - Optional options to pass to the internal collector\n *\n * @example\n * ```js\n * // Create a reaction collector\n * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId'\n * message.awaitReactions({ filter, time: 15_000 })\n *   .then(collected => console.log(`Collected ${collected.size} reactions`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"awaitReactions","c":"discord.js!Message#awaitReactions"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AwaitReactionsOptions","c":"discord.js!AwaitReactionsOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":539,"co":3,"sta":false,"rtr":{"st":7,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitReactions"},{"k":"Property","c":"discord.js!Message#bulkDeletable:member","d":"/**\n * Whether the message is bulk deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"bulkDeletable","c":"discord.js!Message#bulkDeletable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":668,"co":3,"ro":true,"op":false,"r":"Public","n":"bulkDeletable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#channel:member","d":"/**\n * The channel that the message was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!Message#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildTextBasedChannel","c":"discord.js!GuildTextBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":416,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#channelId:member","d":"/**\n * The id of the channel the message was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!Message#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#cleanContent:member","d":"/**\n * The message contents with all mentions replaced by the equivalent text. If mentions cannot be resolved to a name, the relevant mention in the message content will not be converted.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"cleanContent","c":"discord.js!Message#cleanContent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":501,"co":3,"ro":true,"op":false,"r":"Public","n":"cleanContent","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#components:member","d":"/**\n * An array of action rows in the message. <info>This property requires the {@link discord-api-types#(GatewayIntentBits:enum).MessageContent} privileged intent in a guild for messages that do not mention the client.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"components","c":"discord.js!Message#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ActionRow","c":"discord.js!ActionRow:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":">[]"},{"k":"Content","t":";"}],"l":156,"co":3,"ro":false,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#content:member","d":"/**\n * The content of the message. <info>This property requires the {@link discord-api-types#(GatewayIntentBits:enum).MessageContent} privileged intent in a guild for messages that do not mention the client.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"content","c":"discord.js!Message#content"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":90,"co":3,"ro":false,"op":false,"r":"Public","n":"content","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#createdAt:member","d":"/**\n * The time the message was sent at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Message#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":444,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#createdTimestamp:member","d":"/**\n * The timestamp the message was sent at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Message#createdTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#createMessageComponentCollector:member(1)","d":"/**\n * Creates a message component interaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a message component interaction collector\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * const collector = message.createMessageComponentCollector({ filter, time: 15_000 });\n * collector.on('collect', i => console.log(`Collected ${i.customId}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createMessageComponentCollector","c":"discord.js!Message#createMessageComponentCollector"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageCollectorOptionsParams","c":"discord.js!MessageCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", "},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":568,"co":3,"tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":16,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!Message#createReactionCollector:member(1)","d":"/**\n * Creates a reaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a reaction collector\n * const filter = (reaction, user) => reaction.emoji.name === '👌' && user.id === 'someId';\n * const collector = message.createReactionCollector({ filter, time: 15_000 });\n * collector.on('collect', r => console.log(`Collected ${r.emoji.name}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createReactionCollector","c":"discord.js!Message#createReactionCollector"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ReactionCollectorOptions","c":"discord.js!ReactionCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"ReactionCollector","c":"discord.js!ReactionCollector:class"},{"k":"Content","t":";"}],"l":517,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createReactionCollector"},{"k":"Method","c":"discord.js!Message#crosspost:member(1)","d":"/**\n * Publishes a message in an announcement channel to all channels following it.\n *\n * @example\n * ```js\n * // Crosspost a message\n * if (message.channel.type === ChannelType.GuildAnnouncement) {\n *   message.crosspost()\n *     .then(() => console.log('Crossposted message'))\n *     .catch(console.error);\n * }\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"crosspost","c":"discord.js!Message#crosspost"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":751,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"crosspost"},{"k":"Property","c":"discord.js!Message#crosspostable:member","d":"/**\n * Whether the message is crosspostable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"crosspostable","c":"discord.js!Message#crosspostable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":711,"co":3,"ro":true,"op":false,"r":"Public","n":"crosspostable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#deletable:member","d":"/**\n * Whether the message is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"deletable","c":"discord.js!Message#deletable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":637,"co":3,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#delete:member(1)","d":"/**\n * Deletes the message.\n *\n * @example\n * ```js\n * // Delete a message\n * message.delete()\n *   .then(msg => console.log(`Deleted message from ${msg.author.username}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Message#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":827,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!Message#edit:member(1)","d":"/**\n * Edits the content of the message.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Update the content of a message\n * message.edit('This is my new content!')\n *   .then(msg => console.log(`Updated the content of a message to ${msg.content}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!Message#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"content","c":"discord.js!~content"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":735,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"content","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!Message#editable:member","d":"/**\n * Whether the message is editable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"editable","c":"discord.js!Message#editable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":616,"co":3,"ro":true,"op":false,"r":"Public","n":"editable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#editedAt:member","d":"/**\n * The time the message was last edited at (if applicable)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"editedAt","c":"discord.js!Message#editedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":453,"co":3,"ro":true,"op":false,"r":"Public","n":"editedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#editedTimestamp:member","d":"/**\n * The timestamp the message was last edited at (if applicable)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editedTimestamp","c":"discord.js!Message#editedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":245,"co":3,"ro":false,"op":false,"r":"Public","n":"editedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#embeds:member","d":"/**\n * An array of embeds in the message - e.g. YouTube Player. <info>This property requires the {@link discord-api-types#(GatewayIntentBits:enum).MessageContent} privileged intent in a guild for messages that do not mention the client.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"embeds","c":"discord.js!Message#embeds"},{"k":"Content","t":": "},{"k":"Reference","t":"Embed","c":"discord.js!Embed:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":144,"co":3,"ro":false,"op":false,"r":"Public","n":"embeds","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#equals:member(1)","d":"/**\n * Used mainly internally. Whether two messages are identical in properties. If you want to compare messages without checking all the properties, use `message.id === message2.id`, which is much more efficient. This method allows you to see if there are differences in content, embeds, attachments, nonce and tts properties.\n *\n * @param message - The message to compare it to\n *\n * @param rawData - Raw data passed through the WebSocket about this message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Message#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Reference","t":"rawData","c":"discord.js!~rawData"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":954,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"rawData","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!Message#fetch:member(1)","d":"/**\n * Fetch this message.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!Message#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":897,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!Message#fetchReference:member(1)","d":"/**\n * Fetches the Message this crosspost/reply/pin-add references, if available to the client\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchReference","c":"discord.js!Message#fetchReference"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":697,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchReference"},{"k":"Method","c":"discord.js!Message#fetchWebhook:member(1)","d":"/**\n * Fetches the webhook used to create this message.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchWebhook","c":"discord.js!Message#fetchWebhook"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":906,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWebhook"},{"k":"Property","c":"discord.js!Message#flags:member","d":"/**\n * Flags that are applied to the message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!Message#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsBitField","c":"discord.js!MessageFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":347,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#groupActivityApplication:member","d":"/**\n * Supplemental application information for group activities\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"groupActivityApplication","c":"discord.js!Message#groupActivityApplication"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientApplication","c":"discord.js!ClientApplication:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":304,"co":3,"ro":false,"op":false,"r":"Public","n":"groupActivityApplication","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#guild:member","d":"/**\n * The guild the message was sent in (if in a guild channel)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!Message#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":462,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#guildId:member","d":"/**\n * The id of the guild the message was sent in, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!Message#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#hasThread:member","d":"/**\n * Whether this message has a thread associated with it\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"hasThread","c":"discord.js!Message#hasThread"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":471,"co":3,"ro":true,"op":false,"r":"Public","n":"hasThread","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#id:member","d":"/**\n * The message's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Message#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#inGuild:member(1)","d":"/**\n * Whether this message is from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!Message#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":";"}],"l":982,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Property","c":"discord.js!Message#interaction:member","d":"/**\n * Partial data of the interaction that this message is a reply to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"interaction","c":"discord.js!Message#interaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageInteraction","c":"discord.js!MessageInteraction:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":400,"co":3,"ro":false,"op":false,"r":"Public","n":"interaction","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#member:member","d":"/**\n * Represents the author of the message as a guild member. Only available if the message comes from a guild where the author is still a member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"member","c":"discord.js!Message#member"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":435,"co":3,"ro":true,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#mentions:member","d":"/**\n * All valid mentions that the message contains\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mentions","c":"discord.js!Message#mentions"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageMentions","c":"discord.js!MessageMentions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":270,"co":3,"ro":false,"op":false,"r":"Public","n":"mentions","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#nonce:member","d":"/**\n * A random number or string used for checking message delivery <warn>This is only received after the message was sent successfully, and lost if re-fetched</warn>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nonce","c":"discord.js!Message#nonce"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":132,"co":3,"ro":false,"op":false,"r":"Public","n":"nonce","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#partial:member","d":"/**\n * Whether or not this message is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!Message#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":425,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#pin:member(1)","d":"/**\n * Pins this message to the channel's pinned messages.\n *\n * @param reason - Reason for pinning\n *\n * @example\n * ```js\n * // Pin a message\n * message.pin()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"pin","c":"discord.js!Message#pin"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":766,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"pin"},{"k":"Property","c":"discord.js!Message#pinnable:member","d":"/**\n * Whether the message is pinnable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"pinnable","c":"discord.js!Message#pinnable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":683,"co":3,"ro":true,"op":false,"r":"Public","n":"pinnable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#pinned:member","d":"/**\n * Whether or not this message is pinned\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"pinned","c":"discord.js!Message#pinned"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":110,"co":3,"ro":false,"op":false,"r":"Public","n":"pinned","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#position:member","d":"/**\n * A generally increasing integer (there may be gaps or duplicates) that represents the approximate position of the message in a thread.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"position","c":"discord.js!Message#position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":196,"co":3,"ro":false,"op":false,"r":"Public","n":"position","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#react:member(1)","d":"/**\n * Adds a reaction to the message.\n *\n * @param emoji - The emoji to react with\n *\n * @example\n * ```js\n * // React to a message with a unicode emoji\n * message.react('🤔')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // React to a message with a custom emoji\n * message.react(message.guild.emojis.cache.get('123456789012345678'))\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"react","c":"discord.js!Message#react"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":803,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"react"},{"k":"Property","c":"discord.js!Message#reactions:member","d":"/**\n * A manager of the reactions belonging to this message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reactions","c":"discord.js!Message#reactions"},{"k":"Content","t":": "},{"k":"Reference","t":"ReactionManager","c":"discord.js!ReactionManager:class"},{"k":"Content","t":";"}],"l":255,"co":3,"ro":false,"op":false,"r":"Public","n":"reactions","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#reference:member","d":"/**\n * Message reference data\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reference","c":"discord.js!Message#reference"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReference","c":"discord.js!MessageReference:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":372,"co":3,"ro":false,"op":false,"r":"Public","n":"reference","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#removeAttachments:member(1)","d":"/**\n * Removes the attachments from this message.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"removeAttachments","c":"discord.js!Message#removeAttachments"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":933,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"removeAttachments"},{"k":"Method","c":"discord.js!Message#reply:member(1)","d":"/**\n * Send an inline reply to this message.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Reply to a message\n * message.reply('This is a reply!')\n *   .then(() => console.log(`Replied to message \"${message.content}\"`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!Message#reply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageReplyOptions","c":"discord.js!MessageReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":850,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!Message#resolveComponent:member(1)","d":"/**\n * Resolves a component by a custom id.\n *\n * @param customId - The custom id to resolve against\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveComponent","c":"discord.js!Message#resolveComponent"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"discord.js!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":942,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveComponent"},{"k":"Property","c":"discord.js!Message#resolved:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolved","c":"discord.js!Message#resolved"},{"k":"Content","t":": "},{"k":"Reference","t":"CommandInteractionResolvedData","c":"discord.js!CommandInteractionResolvedData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2082,"co":3,"ro":false,"op":false,"r":"Public","n":"resolved","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#roleSubscriptionData:member","d":"/**\n * The data of the role subscription purchase or renewal. <info>This is present on {@link discord-api-types#(MessageType:enum).RoleSubscriptionPurchase} messages.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roleSubscriptionData","c":"discord.js!Message#roleSubscriptionData"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleSubscriptionData","c":"discord.js!RoleSubscriptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":216,"co":3,"ro":false,"op":false,"r":"Public","n":"roleSubscriptionData","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#startThread:member(1)","d":"/**\n * Create a new public thread from this message\n *\n * @param options - Options for starting a thread on this message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"startThread","c":"discord.js!Message#startThread"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StartThreadOptions","c":"discord.js!StartThreadOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":883,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"startThread"},{"k":"Property","c":"discord.js!Message#stickers:member","d":"/**\n * A collection of stickers in the message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stickers","c":"discord.js!Message#stickers"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":183,"co":3,"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#suppressEmbeds:member(1)","d":"/**\n * Suppresses or unsuppresses embeds on a message.\n *\n * @param suppress - If the embeds should be suppressed or not\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"suppressEmbeds","c":"discord.js!Message#suppressEmbeds"},{"k":"Content","t":"("},{"k":"Reference","t":"suppress","c":"discord.js!~suppress"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":917,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"suppress","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"suppressEmbeds"},{"k":"Property","c":"discord.js!Message#system:member","d":"/**\n * Whether or not this message was sent by Discord, not actually a user (e.g. pin notifications)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"system","c":"discord.js!Message#system"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":false,"op":false,"r":"Public","n":"system","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#thread:member","d":"/**\n * The thread started by this message <info>This property is not suitable for checking whether a message has a thread, use {@link Message.hasThread} instead.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"thread","c":"discord.js!Message#thread"},{"k":"Content","t":"(): "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":482,"co":3,"ro":true,"op":false,"r":"Public","n":"thread","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Message#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2113,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Message#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically concatenates the message's content instead of the object.\n *\n * @example\n * ```js\n * // Logs: Message: This is a message!\n * console.log(`Message: ${message}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Message#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":993,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!Message#tts:member","d":"/**\n * Whether or not the message was Text-To-Speech\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"tts","c":"discord.js!Message#tts"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":120,"co":3,"ro":false,"op":false,"r":"Public","n":"tts","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#type:member","d":"/**\n * The type of the message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Message#type"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageType","c":"discord-api-types!MessageType:enum"},{"k":"Content","t":";"}],"l":71,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Message#unpin:member(1)","d":"/**\n * Unpins this message from the channel's pinned messages.\n *\n * @param reason - Reason for unpinning\n *\n * @example\n * ```js\n * // Unpin a message\n * message.unpin()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unpin","c":"discord.js!Message#unpin"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":782,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"unpin"},{"k":"Property","c":"discord.js!Message#url:member","d":"/**\n * The URL to jump to this message\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!Message#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":491,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Message#webhookId:member","d":"/**\n * The id of the webhook that sent the message, if applicable\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"webhookId","c":"discord.js!Message#webhookId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":294,"co":3,"ro":false,"op":false,"r":"Public","n":"webhookId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!MessageActionRowComponent:type","d":"/**\n * Components that can be placed in an action row for messages.\n *\n * * ButtonComponent\n *\n * * StringSelectMenuComponent\n *\n * * UserSelectMenuComponent\n *\n * * RoleSelectMenuComponent\n *\n * * MentionableSelectMenuComponent\n *\n * * ChannelSelectMenuComponent\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":68,"co":1,"r":"Public","n":"MessageActionRowComponent","ttr":{"st":3,"en":15}},{"k":"TypeAlias","c":"discord.js!MessageActionRowComponentData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageActionRowComponentData","c":"discord.js!MessageActionRowComponentData:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ButtonComponentData","c":"discord.js!ButtonComponentData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuComponentData","c":"discord.js!StringSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuComponentData","c":"discord.js!UserSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuComponentData","c":"discord.js!RoleSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuComponentData","c":"discord.js!MentionableSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuComponentData","c":"discord.js!ChannelSelectMenuComponentData:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":291,"co":1,"r":"Public","n":"MessageActionRowComponentData","ttr":{"st":3,"en":19}},{"k":"TypeAlias","c":"discord.js!MessageActionRowComponentResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageActionRowComponentResolvable","c":"discord.js!MessageActionRowComponentResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowComponentOptions","c":"discord.js!ActionRowComponentOptions:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6125,"co":1,"r":"Public","n":"MessageActionRowComponentResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!MessageActivity:interface","d":"/**\n * Activity sent in a message.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageActivity","c":"discord.js!MessageActivity:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Presence.js","l":8,"co":1,"r":"Public","n":"MessageActivity","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageActivity#partyId:member","d":"/**\n * Id of the party represented in activity\n */\n","ex":[{"k":"Reference","t":"partyId","c":"discord.js!MessageActivity#partyId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6128,"co":3,"ro":false,"op":true,"r":"Public","n":"partyId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageActivity#type:member","d":"/**\n * Type of activity sent\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!MessageActivity#type"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageActivityType","c":"discord-api-types!MessageActivityType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6129,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!MessageApplicationCommandData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageApplicationCommandData","c":"discord.js!MessageApplicationCommandData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandData","c":"discord.js!BaseApplicationCommandData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4647,"co":1,"r":"Public","n":"MessageApplicationCommandData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageApplicationCommandData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!MessageApplicationCommandData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.Message","c":"discord-api-types!ApplicationCommandType.Message:member"},{"k":"Content","t":";"}],"l":4648,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!MessageChannelCollectorOptionsParams:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageChannelCollectorOptionsParams","c":"discord.js!MessageChannelCollectorOptionsParams:interface"},{"k":"Content","t":"< "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageChannelComponentCollectorOptions","c":"discord.js!MessageChannelComponentCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2005,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Cached","ctr":{"st":9,"en":10},"dtr":{"st":11,"en":12}}],"n":"MessageChannelCollectorOptionsParams","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageChannelCollectorOptionsParams#componentType:member","d":"","ex":[{"k":"Reference","t":"componentType","c":"discord.js!MessageChannelCollectorOptionsParams#componentType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":";"}],"l":2009,"co":3,"ro":false,"op":true,"r":"Public","n":"componentType","prtr":{"st":2,"en":3}}],"etrs":[{"st":13,"en":21,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!MessageChannelComponentCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageChannelComponentCollectorOptions","c":"discord.js!MessageChannelComponentCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectedMessageInteraction","c":"discord.js!CollectedMessageInteraction:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":", 'channel' | 'guild' | 'interactionType'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6175,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"MessageChannelComponentCollectorOptions","pmo":false,"ms":[],"etrs":[{"st":7,"en":14,"tps":[{"st":9,"en":13},{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!MessageCollector:class","d":"/**\n * Collects messages on a channel. Will automatically stop if the channel ({@link Client.channelDelete | channelDelete}), thread ({@link Client.threadDelete | threadDelete}), or guild ({@link Client.guildDelete | guildDelete}) is deleted.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Collector","c":"discord.js!Collector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">]"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/MessageCollector.js","l":19,"co":1,"r":"Public","ab":false,"n":"MessageCollector","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MessageCollector:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":");"}],"l":19,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"options","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!MessageCollector#channel:member","d":"/**\n * The channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!MessageCollector#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#client:member","d":"/**\n * The client that instantiated this Collector\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":35,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!MessageCollector#collect:member(0)","d":"/**\n * Emitted whenever a message is collected.\n *\n * @param message - The message that was collected\n */\n","ex":[{"k":"Content","t":"on('collect', (message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":") => {})"}],"l":74,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"collect"},{"k":"Method","c":"discord.js!MessageCollector#collect:member(1)","d":"/**\n * Handles a message for possible collection.\n *\n * @param message - The message that could be collected\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"collect","c":"discord.js!MessageCollector#collect"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":73,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"collect"},{"k":"Property","c":"discord.js!MessageCollector#collected:member","d":"/**\n * The items collected by this collector\n */\n","ex":[{"k":"Content","t":"undefined collected :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":60,"ro":false,"op":false,"r":"Public","n":"collected","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!MessageCollector#dispose:member(0)","d":"/**\n * Emitted whenever a message is disposed of.\n *\n * @param message - The message that was disposed of\n */\n","ex":[{"k":"Content","t":"on('dispose', (message: "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":") => {})"}],"l":90,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"dispose"},{"k":"Method","c":"discord.js!MessageCollector#dispose:member(1)","d":"/**\n * Handles a message for possible disposal.\n *\n * @param message - The message that could be disposed of\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"dispose","c":"discord.js!MessageCollector#dispose"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":89,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"dispose"},{"k":"Event","c":"discord.js!MessageCollector#end:member(0)","d":"/**\n * Emitted when the collector is finished collecting.\n *\n * @param collected - The elements collected by the collector\n *\n * @param reason - The reason the collector ended\n */\n","ex":[{"k":"Content","t":"on('end', (collected: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":", reason: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":227,"r":"Public","oi":0,"ps":[{"pn":"collected","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"end"},{"k":"Property","c":"discord.js!MessageCollector#ended:member","d":"/**\n * Whether this collector has finished collecting\n */\n","ex":[{"k":"Content","t":"undefined ended :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":66,"ro":false,"op":false,"r":"Public","n":"ended","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#endReason:member","d":"/**\n * The reason this collector has ended with, or null if it hasn't ended yet\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly endReason :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":103,"ro":true,"op":true,"r":"Public","n":"endReason","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"undefined filter :"},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":48,"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!MessageCollector#ignore:member(0)","d":"/**\n * Emitted whenever an element is not collected by the collector.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('ignore', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":141,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"ignore"},{"k":"Property","c":"discord.js!MessageCollector#lastCollectedAt:member","d":"/**\n * The Date at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":110,"ro":false,"op":true,"r":"Public","n":"lastCollectedAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#lastCollectedTimestamp:member","d":"/**\n * The timestamp at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":103,"ro":false,"op":true,"r":"Public","n":"lastCollectedTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#next:member","d":"/**\n * Returns a promise that resolves with the next collected element; rejects with collected elements if the collector finishes without receiving a next element\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly next :"},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":180,"ro":true,"op":false,"r":"Public","n":"next","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#options:member","d":"/**\n * The options of this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!MessageCollector#options"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageCollector#received:member","d":"/**\n * Total number of messages that were received in the channel during message collection\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"received","c":"discord.js!MessageCollector#received"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"received","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":17,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":16}]},"itrs":[]},{"k":"Interface","c":"discord.js!MessageCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">]>"},{"k":"Content","t":" "}],"pat":"src/structures/MessageCollector.js","l":6,"co":1,"r":"Public","n":"MessageCollectorOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageCollectorOptions#max:member","d":"/**\n * The maximum amount of messages to collect\n */\n","ex":[{"k":"Reference","t":"max","c":"discord.js!MessageCollectorOptions#max"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6153,"co":3,"ro":false,"op":true,"r":"Public","n":"max","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageCollectorOptions#maxProcessed:member","d":"/**\n * The maximum amount of messages to process\n */\n","ex":[{"k":"Reference","t":"maxProcessed","c":"discord.js!MessageCollectorOptions#maxProcessed"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6154,"co":3,"ro":false,"op":true,"r":"Public","n":"maxProcessed","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":13,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!MessageCollectorOptionsParams:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageCollectorOptionsParams","c":"discord.js!MessageCollectorOptionsParams:interface"},{"k":"Content","t":"< "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":1998,"co":1,"r":"Public","tps":[{"tp":"ComponentType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"Cached","ctr":{"st":9,"en":10},"dtr":{"st":11,"en":12}}],"n":"MessageCollectorOptionsParams","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageCollectorOptionsParams#componentType:member","d":"","ex":[{"k":"Reference","t":"componentType","c":"discord.js!MessageCollectorOptionsParams#componentType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":";"}],"l":2002,"co":3,"ro":false,"op":true,"r":"Public","n":"componentType","prtr":{"st":2,"en":3}}],"etrs":[{"st":13,"en":21,"tps":[{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!MessageComponent:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageComponent","c":"discord.js!MessageComponent:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ActionRowBuilder","c":"discord.js!ActionRowBuilder:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageActionRowComponentBuilder","c":"@discordjs/builders!MessageActionRowComponentBuilder:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ModalActionRowComponentBuilder","c":"@discordjs/builders!ModalActionRowComponentBuilder:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ButtonComponent","c":"discord.js!ButtonComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MentionableSelectMenuComponent","c":"discord.js!MentionableSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelSelectMenuComponent","c":"discord.js!ChannelSelectMenuComponent:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6157,"co":1,"r":"Public","n":"MessageComponent","ttr":{"st":3,"en":23}},{"k":"Interface","c":"discord.js!MessageComponentCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectedMessageInteraction","c":"discord.js!CollectedMessageInteraction:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":", 'channel' | 'message' | 'guild' | 'interactionType'>"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":549,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"MessageComponentCollectorOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageComponentCollectorOptions#componentType:member","d":"/**\n * The type of component to listen for\n */\n","ex":[{"k":"Content","t":"undefined componentType :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!MessageComponentCollectorOptions#max:member","d":"/**\n * The maximum total amount of interactions to collect\n */\n","ex":[{"k":"Content","t":"undefined max :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"max","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!MessageComponentCollectorOptions#maxComponents:member","d":"/**\n * The maximum number of components to collect\n */\n","ex":[{"k":"Content","t":"undefined maxComponents :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"maxComponents","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!MessageComponentCollectorOptions#maxUsers:member","d":"/**\n * The maximum number of users to interact\n */\n","ex":[{"k":"Content","t":"undefined maxUsers :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"maxUsers","prtr":{"st":1,"en":2}}],"etrs":[{"st":7,"en":14,"tps":[{"st":9,"en":13},{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!MessageComponentInteraction:class","d":"/**\n * Represents a message component interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/MessageComponentInteraction.js","l":15,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"MessageComponentInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MessageComponentInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `MessageComponentInteraction` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawMessageComponentInteractionData","c":"discord.js!~RawMessageComponentInteractionData:type"},{"k":"Content","t":");"}],"l":15,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!MessageComponentInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#awaitModalSubmit:member(1)","d":"/**\n * Collects a single modal submit interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a modal submit interaction\n * const filter = (interaction) => interaction.customId === 'modal';\n * interaction.awaitModalSubmit({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was submitted!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"awaitModalSubmit","c":"discord.js!MessageComponentInteraction#awaitModalSubmit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"AwaitModalSubmitOptions","c":"discord.js!AwaitModalSubmitOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":300,"co":3,"sta":false,"rtr":{"st":10,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"awaitModalSubmit"},{"k":"Property","c":"discord.js!MessageComponentInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!MessageComponentInteraction#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!MessageComponentInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":">>,  "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":">>,  "},{"k":"Reference","t":"MessageActionRowComponent","c":"discord.js!MessageActionRowComponent:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":", "},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessageActionRowComponent","c":"discord-api-types!APIMessageActionRowComponent:type"},{"k":"Content","t":">> >"},{"k":"Content","t":";"}],"l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":37},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!MessageComponentInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"customId","c":"discord.js!MessageComponentInteraction#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferred","c":"discord.js!MessageComponentInteraction#deferred"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#deferReply:member(1)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!MessageComponentInteraction#deferReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#deferReply:member(2)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!MessageComponentInteraction#deferReply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#deferUpdate:member(1)","d":"/**\n * Defers an update to the message to which the component was attached.\n *\n * @param options - Options for deferring the update to this interaction\n *\n * @example\n * ```js\n * // Defer updating and reset the component's loading state\n * interaction.deferUpdate()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferUpdate","c":"discord.js!MessageComponentInteraction#deferUpdate"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionDeferUpdateOptions","c":"discord.js!InteractionDeferUpdateOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":200,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"deferUpdate"},{"k":"Method","c":"discord.js!MessageComponentInteraction#deferUpdate:member(2)","d":"/**\n * Defers an update to the message to which the component was attached.\n *\n * @param options - Options for deferring the update to this interaction\n *\n * @example\n * ```js\n * // Defer updating and reset the component's loading state\n * interaction.deferUpdate()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferUpdate","c":"discord.js!MessageComponentInteraction#deferUpdate"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionDeferUpdateOptions","c":"discord.js!InteractionDeferUpdateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":200,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deferUpdate"},{"k":"Method","c":"discord.js!MessageComponentInteraction#deleteReply:member(1)","d":"/**\n * Deletes a reply to this interaction.\n *\n * @param message - The response to delete\n *\n * @example\n * ```js\n * // Delete the initial reply to this interaction\n * interaction.deleteReply()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteReply","c":"discord.js!MessageComponentInteraction#deleteReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":176,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteReply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#editReply:member(1)","d":"/**\n * Edits a reply to this interaction.\n *\n * @param options - The new options for the message\n *\n * @example\n * ```js\n * // Edit the initial reply to this interaction\n * interaction.editReply('New content')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editReply","c":"discord.js!MessageComponentInteraction#editReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionEditReplyOptions","c":"discord.js!InteractionEditReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":158,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"editReply"},{"k":"Property","c":"discord.js!MessageComponentInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ephemeral","c":"discord.js!MessageComponentInteraction#ephemeral"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"ephemeral","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#fetchReply:member(1)","d":"/**\n * Fetches a reply to this interaction.\n *\n * @param message - The response to fetch\n *\n * @example\n * ```js\n * // Fetch the initial reply to this interaction\n * interaction.fetchReply()\n *   .then(reply => console.log(`Replied with ${reply.content}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchReply","c":"discord.js!MessageComponentInteraction#fetchReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":137,"co":3,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchReply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#followUp:member(1)","d":"/**\n * Send a follow-up message to this interaction.\n *\n * @param options - The options for the reply\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"followUp","c":"discord.js!MessageComponentInteraction#followUp"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":185,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"followUp"},{"k":"Property","c":"discord.js!MessageComponentInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!MessageComponentInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!MessageComponentInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!MessageComponentInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!MessageComponentInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!MessageComponentInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!MessageComponentInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"message","c":"discord.js!MessageComponentInteraction#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"replied","c":"discord.js!MessageComponentInteraction#replied"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#reply:member(1)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!MessageComponentInteraction#reply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#reply:member(2)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!MessageComponentInteraction#reply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!MessageComponentInteraction#sendPremiumRequired:member(1)","d":"/**\n * Responds to the interaction with an upgrade button. <info>Only available for applications with monetization enabled.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sendPremiumRequired","c":"discord.js!MessageComponentInteraction#sendPremiumRequired"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":270,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendPremiumRequired"},{"k":"Method","c":"discord.js!MessageComponentInteraction#showModal:member(1)","d":"/**\n * Shows a modal component\n *\n * @param modal - The modal to show\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"showModal","c":"discord.js!MessageComponentInteraction#showModal"},{"k":"Content","t":"(  "},{"k":"Reference","t":"modal","c":"discord.js!~modal"},{"k":"Content","t":":   "},{"k":"Content","t":" "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">   | "},{"k":"Reference","t":"ModalComponentData","c":"discord.js!ModalComponentData:interface"},{"k":"Content","t":"   | "},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":253,"co":3,"sta":false,"rtr":{"st":14,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"modal","ptr":{"st":5,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"showModal"},{"k":"Property","c":"discord.js!MessageComponentInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!MessageComponentInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType.MessageComponent","c":"discord-api-types!InteractionType.MessageComponent:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageComponentInteraction#update:member(1)","d":"/**\n * Updates the original message of the component on which the interaction was received on.\n *\n * @param options - The options for the updated message\n *\n * @example\n * ```js\n * // Remove the components from the message\n * interaction.update({\n *   content: \"A component interaction was received\",\n *   components: []\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"update","c":"discord.js!MessageComponentInteraction#update"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":226,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"update"},{"k":"Method","c":"discord.js!MessageComponentInteraction#update:member(2)","d":"/**\n * Updates the original message of the component on which the interaction was received on.\n *\n * @param options - The options for the updated message\n *\n * @example\n * ```js\n * // Remove the components from the message\n * interaction.update({\n *   content: \"A component interaction was received\",\n *   components: []\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"update","c":"discord.js!MessageComponentInteraction#update"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":226,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"update"},{"k":"Property","c":"discord.js!MessageComponentInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageComponentInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"webhook","c":"discord.js!MessageComponentInteraction#webhook"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!MessageComponentType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ComponentType.ActionRow","c":"discord-api-types!ComponentType.ActionRow:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1996,"co":1,"r":"Public","n":"MessageComponentType","ttr":{"st":3,"en":11}},{"k":"Class","c":"discord.js!MessageContextMenuCommandInteraction:class","d":"/**\n * Represents a message context menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/MessageContextMenuCommandInteraction.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"MessageContextMenuCommandInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":18,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"undefined command :"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":77,"ro":false,"op":true,"r":"Public","n":"command","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"undefined commandGuildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":46,"ro":false,"op":true,"r":"Public","n":"commandGuildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"undefined commandId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":28,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"undefined commandName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":34,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!MessageContextMenuCommandInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.Message","c":"discord-api-types!ApplicationCommandType.Message:member"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":52,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":64,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageContextMenuCommandInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!MessageContextMenuCommandInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!MessageContextMenuCommandInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!MessageContextMenuCommandInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!MessageContextMenuCommandInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!MessageContextMenuCommandInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"MessageContextMenuCommandInteraction","c":"discord.js!MessageContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#options:member","d":"/**\n * The target of the interaction, parsed into options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!MessageContextMenuCommandInteraction#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">,  | 'getFocused'  | 'getMentionable'  | 'getRole'  | 'getUser'  | 'getNumber'  | 'getAttachment'  | 'getInteger'  | 'getString'  | 'getChannel'  | 'getBoolean'  | 'getSubcommandGroup'  | 'getSubcommand' >"},{"k":"Content","t":";"}],"pat":"src/structures/ContextMenuCommandInteraction.js","l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":58,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#targetId:member","d":"/**\n * The id of the target of this interaction\n */\n","ex":[{"k":"Content","t":"undefined targetId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/ContextMenuCommandInteraction.js","l":32,"ro":false,"op":false,"r":"Public","n":"targetId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#targetMessage:member","d":"/**\n * The message this interaction was sent from\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"targetMessage","c":"discord.js!MessageContextMenuCommandInteraction#targetMessage"},{"k":"Content","t":"(): "},{"k":"Reference","t":"NonNullable","c":"!NonNullable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"CommandInteractionOption","c":"discord.js!CommandInteractionOption:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">['message']>"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"targetMessage","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageContextMenuCommandInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":70,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!MessageCreateOptions:interface","d":"/**\n * The options for sending a message.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseMessageOptions","c":"discord.js!BaseMessageOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":86,"co":1,"r":"Public","n":"MessageCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageCreateOptions#flags:member","d":"","ex":[{"k":"Reference","t":"flags","c":"discord.js!MessageCreateOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":", 'SuppressEmbeds' | 'SuppressNotifications'>,  "},{"k":"Reference","t":"MessageFlags.SuppressEmbeds","c":"discord-api-types!MessageFlags.SuppressEmbeds:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageFlags.SuppressNotifications","c":"discord-api-types!MessageFlags.SuppressNotifications:member"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6231,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":12}},{"k":"PropertySignature","c":"discord.js!MessageCreateOptions#nonce:member","d":"","ex":[{"k":"Reference","t":"nonce","c":"discord.js!MessageCreateOptions#nonce"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6228,"co":3,"ro":false,"op":true,"r":"Public","n":"nonce","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!MessageCreateOptions#reply:member","d":"/**\n * The options for replying to a message\n */\n","ex":[{"k":"Reference","t":"reply","c":"discord.js!MessageCreateOptions#reply"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ReplyOptions","c":"discord.js!ReplyOptions:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6229,"co":3,"ro":false,"op":true,"r":"Public","n":"reply","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageCreateOptions#stickers:member","d":"","ex":[{"k":"Reference","t":"stickers","c":"discord.js!MessageCreateOptions#stickers"},{"k":"Content","t":"?: "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6230,"co":3,"ro":false,"op":true,"r":"Public","n":"stickers","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!MessageCreateOptions#tts:member","d":"","ex":[{"k":"Reference","t":"tts","c":"discord.js!MessageCreateOptions#tts"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6227,"co":3,"ro":false,"op":true,"r":"Public","n":"tts","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!MessageEditAttachmentData:interface","d":"/**\n * Data used to reference an attachment.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageEditAttachmentData","c":"discord.js!MessageEditAttachmentData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/MessageManager.js","l":156,"co":1,"r":"Public","n":"MessageEditAttachmentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageEditAttachmentData#id:member","d":"/**\n * The id of the attachment\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!MessageEditAttachmentData#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6242,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!MessageEditOptions:interface","d":"/**\n * Options that can be passed to edit a message.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseMessageOptions","c":"discord.js!BaseMessageOptions:interface"},{"k":"Content","t":", 'content'>"},{"k":"Content","t":" "}],"pat":"src/managers/MessageManager.js","l":162,"co":1,"r":"Public","n":"MessageEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageEditOptions#attachments:member","d":"/**\n * An array of attachments to keep. All attachments will be kept if omitted\n */\n","ex":[{"k":"Reference","t":"attachments","c":"discord.js!MessageEditOptions#attachments"},{"k":"Content","t":"?: "},{"k":"Content","t":"("},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageEditAttachmentData","c":"discord.js!MessageEditAttachmentData:interface"},{"k":"Content","t":")[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6247,"co":3,"ro":false,"op":true,"r":"Public","n":"attachments","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!MessageEditOptions#content:member","d":"","ex":[{"k":"Reference","t":"content","c":"discord.js!MessageEditOptions#content"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6246,"co":3,"ro":false,"op":true,"r":"Public","n":"content","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!MessageEditOptions#flags:member","d":"/**\n * Which flags to set for the message <info>Only the {@link discord-api-types#(MessageFlags:enum).SuppressEmbeds} flag can be modified.</info>\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!MessageEditOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":", 'SuppressEmbeds'>, "},{"k":"Reference","t":"MessageFlags.SuppressEmbeds","c":"discord-api-types!MessageFlags.SuppressEmbeds:member"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6248,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":10}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!MessageEvent:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageEvent","c":"discord.js!MessageEvent:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6178,"co":1,"r":"Public","n":"MessageEvent","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageEvent#data:member","d":"","ex":[{"k":"Reference","t":"data","c":"discord.js!MessageEvent#data"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocketData","c":"@types/ws!WebSocket.Data:type"},{"k":"Content","t":";"}],"l":6179,"co":3,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageEvent#target:member","d":"","ex":[{"k":"Reference","t":"target","c":"discord.js!MessageEvent#target"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocket","c":"@types/ws!WebSocket.WebSocket:interface"},{"k":"Content","t":";"}],"l":6181,"co":3,"ro":false,"op":false,"r":"Public","n":"target","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageEvent#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!MessageEvent#type"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6180,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!MessageFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link Message.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageFlagsBitField","c":"discord.js!MessageFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/MessageFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"MessageFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!MessageFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageFlagsBitField.Flags:member","d":"/**\n * Numeric message flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!MessageFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"MessageFlags","c":"discord-api-types!MessageFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!MessageFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2257,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!MessageFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageFlagsString","c":"discord.js!MessageFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"MessageFlags","c":"discord-api-types!MessageFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2253,"co":1,"r":"Public","n":"MessageFlagsString","ttr":{"st":3,"en":7}},{"k":"Interface","c":"discord.js!MessageInteraction:interface","d":"/**\n * Partial data of the interaction that a message is a reply to\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageInteraction","c":"discord.js!MessageInteraction:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":385,"co":1,"r":"Public","n":"MessageInteraction","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageInteraction#commandName:member","d":"/**\n * The name of the interaction's application command, as well as the subcommand and subcommand group, where applicable\n */\n","ex":[{"k":"Reference","t":"commandName","c":"discord.js!MessageInteraction#commandName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6187,"co":3,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!MessageInteraction#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6185,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageInteraction#type:member","d":"/**\n * The type of the interaction\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!MessageInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6186,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageInteraction#user:member","d":"/**\n * The user that invoked the interaction\n */\n","ex":[{"k":"Reference","t":"user","c":"discord.js!MessageInteraction#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6188,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!MessageManager:class","d":"/**\n * Manages API methods for Messages and holds their cache.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/MessageManager.js","l":18,"co":1,"r":"Public","tps":[{"tp":"InGuild","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":true,"n":"MessageManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MessageManager:constructor(1)","d":"/**\n * Constructs a new instance of the `MessageManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawMessageData","c":"discord.js!~RawMessageData:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":18,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"channel","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"iterable","ptr":{"st":7,"en":11},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!MessageManager#cache:member","d":"/**\n * The cache of Messages\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":31,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageManager#channel:member","d":"/**\n * The channel that the messages belong to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!MessageManager#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"l":28,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageManager#crosspost:member(1)","d":"/**\n * Publishes a message in an announcement channel to all channels following it, even if it's not cached.\n *\n * @param message - The message to publish\n */\n","ex":[{"k":"Content","t":"crosspost(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":203,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"crosspost"},{"k":"Method","c":"discord.js!MessageManager#delete:member(1)","d":"/**\n * Deletes a message, even if it's not cached.\n *\n * @param message - The message to delete\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!MessageManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":262,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!MessageManager#edit:member(1)","d":"/**\n * Edits a message, even if it's not cached.\n *\n * @param message - The message to edit\n *\n * @param options - The options to edit the message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!MessageManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":177,"co":3,"sta":false,"rtr":{"st":15,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!MessageManager#fetch:member(1)","d":"/**\n * Fetches message(s) from a channel. <info>The returned Collection does not contain reaction users of the messages if they were not cached. Those need to be fetched separately in such a case.</info>\n *\n * @param options - Options for fetching message(s)\n *\n * @example\n * ```js\n * // Fetch a message\n * channel.messages.fetch('99539446449315840')\n *   .then(message => console.log(message.content))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 10 messages without caching\n * channel.messages.fetch({ limit: 10, cache: false })\n *   .then(messages => console.log(`Received ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 10 messages without caching around a message id\n * channel.messages.fetch({ limit: 10, cache: false, around: '99539446449315840' })\n *   .then(messages => console.log(`Received ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch messages and filter by a user id\n * channel.messages.fetch()\n *   .then(messages => console.log(`${messages.filter(message =>\n *          message.author.id === '84484653687267328').size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!MessageManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchMessageOptions","c":"discord.js!FetchMessageOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":93,"co":3,"sta":false,"rtr":{"st":9,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!MessageManager#fetch:member(2)","d":"/**\n * Fetches message(s) from a channel. <info>The returned Collection does not contain reaction users of the messages if they were not cached. Those need to be fetched separately in such a case.</info>\n *\n * @param options - Options for fetching message(s)\n *\n * @example\n * ```js\n * // Fetch a message\n * channel.messages.fetch('99539446449315840')\n *   .then(message => console.log(message.content))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 10 messages without caching\n * channel.messages.fetch({ limit: 10, cache: false })\n *   .then(messages => console.log(`Received ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a maximum of 10 messages without caching around a message id\n * channel.messages.fetch({ limit: 10, cache: false, around: '99539446449315840' })\n *   .then(messages => console.log(`Received ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch messages and filter by a user id\n * channel.messages.fetch()\n *   .then(messages => console.log(`${messages.filter(message =>\n *          message.author.id === '84484653687267328').size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!MessageManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchMessagesOptions","c":"discord.js!FetchMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"l":93,"co":3,"sta":false,"rtr":{"st":7,"en":17},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!MessageManager#fetchPinned:member(1)","d":"/**\n * Fetches the pinned messages of this channel and returns a collection of them. <info>The returned Collection does not contain any reaction data of the messages. Those need to be fetched separately.</info>\n *\n * @param cache - Whether to cache the message(s)\n *\n * @example\n * ```js\n * // Get pinned messages\n * channel.messages.fetchPinned()\n *   .then(messages => console.log(`Received ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchPinned","c":"discord.js!MessageManager#fetchPinned"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"l":131,"co":3,"sta":false,"rtr":{"st":7,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchPinned"},{"k":"Method","c":"discord.js!MessageManager#pin:member(1)","d":"/**\n * Pins a message to the channel's pinned messages, even if it's not cached.\n *\n * @param message - The message to pin\n *\n * @param reason - Reason for pinning\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"pin","c":"discord.js!MessageManager#pin"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":217,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"pin"},{"k":"Method","c":"discord.js!MessageManager#react:member(1)","d":"/**\n * Adds a reaction to a message, even if it's not cached.\n *\n * @param message - The message to react to\n *\n * @param emoji - The emoji to react with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"react","c":"discord.js!MessageManager#react"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":243,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"emoji","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"react"},{"k":"Method","c":"discord.js!MessageManager#resolve:member(1)","d":"/**\n * Resolves a {@link MessageResolvable} to a {@link Message} object.\n *\n * @param message - The message resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"l":138,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!MessageManager#resolveId:member(1)","d":"/**\n * Resolves a {@link MessageResolvable} to a {@link Message} id.\n *\n * @param message - The message resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":147,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!MessageManager#unpin:member(1)","d":"/**\n * Unpins a message from the channel's pinned messages, even if it's not cached.\n *\n * @param message - The message to unpin\n *\n * @param reason - Reason for unpinning\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unpin","c":"discord.js!MessageManager#unpin"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":230,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"unpin"}],"etr":{"st":9,"en":20,"tps":[{"st":11,"en":12},{"st":13,"en":17},{"st":18,"en":18}]},"itrs":[]},{"k":"Interface","c":"discord.js!MessageMentionOptions:interface","d":"/**\n * Options provided to control parsing of mentions by Discord\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageMentionOptions","c":"discord.js!MessageMentionOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":92,"co":1,"r":"Public","n":"MessageMentionOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageMentionOptions#parse:member","d":"/**\n * Types of mentions to be parsed\n */\n","ex":[{"k":"Reference","t":"parse","c":"discord.js!MessageMentionOptions#parse"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageMentionTypes","c":"discord.js!MessageMentionTypes:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6199,"co":3,"ro":false,"op":true,"r":"Public","n":"parse","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!MessageMentionOptions#repliedUser:member","d":"/**\n * Whether the author of the Message being replied to should be pinged\n */\n","ex":[{"k":"Reference","t":"repliedUser","c":"discord.js!MessageMentionOptions#repliedUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6202,"co":3,"ro":false,"op":true,"r":"Public","n":"repliedUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageMentionOptions#roles:member","d":"/**\n * Snowflakes of Roles to be parsed as mentions\n */\n","ex":[{"k":"Reference","t":"roles","c":"discord.js!MessageMentionOptions#roles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6200,"co":3,"ro":false,"op":true,"r":"Public","n":"roles","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!MessageMentionOptions#users:member","d":"/**\n * Snowflakes of Users to be parsed as mentions\n */\n","ex":[{"k":"Reference","t":"users","c":"discord.js!MessageMentionOptions#users"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6201,"co":3,"ro":false,"op":true,"r":"Public","n":"users","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Class","c":"discord.js!MessageMentions:class","d":"/**\n * Keeps track of mentions in a {@link Message}.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageMentions","c":"discord.js!MessageMentions:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> "}],"pat":"src/structures/MessageMentions.js","l":10,"co":1,"r":"Public","tps":[{"tp":"InGuild","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"MessageMentions","pmo":false,"ms":[{"k":"Property","c":"discord.js!MessageMentions#channels:member","d":"/**\n * Any channels that were mentioned <info>Order as they appear first in the message content</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channels","c":"discord.js!MessageMentions#channels"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":213,"co":3,"ro":true,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions.ChannelsPattern:member","d":"/**\n * A regular expression that matches channel mentions like `<#222079895583457280>`. The `id` group property is present on the `exec` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"ChannelsPattern","c":"discord.js!MessageMentions.ChannelsPattern"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"FormattingPatterns.Channel","c":"discord-api-types!__type#Channel:member"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"ChannelsPattern","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#client:member","d":"","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!MessageMentions#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2274,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#crosspostedChannels:member","d":"/**\n * A collection of crossposted channels <info>Order as received from the API, not as they appear in the message content</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"crosspostedChannels","c":"discord.js!MessageMentions#crosspostedChannels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CrosspostedChannel","c":"discord.js!CrosspostedChannel:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":false,"op":false,"r":"Public","n":"crosspostedChannels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#everyone:member","d":"/**\n * Whether `@everyone` or `@here` were mentioned\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"everyone","c":"discord.js!MessageMentions#everyone"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":false,"op":false,"r":"Public","n":"everyone","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions.EveryonePattern:member","d":"/**\n * A regular expression that matches `@everyone` and `@here`. The `mention` group property is present on the `exec` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"EveryonePattern","c":"discord.js!MessageMentions.EveryonePattern"},{"k":"Content","t":": "},{"k":"Reference","t":"RegExp","c":"!RegExp:interface"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"EveryonePattern","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#guild:member","d":"","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"guild","c":"discord.js!MessageMentions#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2276,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageMentions#has:member(1)","d":"/**\n * Checks if a user, guild member, thread member, role, or channel is mentioned. Takes into account user mentions, role mentions, channel mentions, replied user mention, and `@everyone`/`@here` mentions.\n *\n * @param data - The User/Role/Channel to check for\n *\n * @param options - The options for the check\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"has","c":"discord.js!MessageMentions#has"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelResolvable","c":"discord.js!ChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageMentionsHasOptions","c":"discord.js!MessageMentionsHasOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":260,"co":3,"sta":false,"rtr":{"st":15,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":10},"op":false,"rs":false},{"pn":"options","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"has"},{"k":"Property","c":"discord.js!MessageMentions#members:member","d":"/**\n * Any members that were mentioned (only in {@link Guild}s) <info>Order as received from the API, not as they appear in the message content</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"members","c":"discord.js!MessageMentions#members"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":196,"co":3,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":13},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#parsedUsers:member","d":"/**\n * Any user mentions that were included in the message content <info>Order as they appear first in the message content</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"parsedUsers","c":"discord.js!MessageMentions#parsedUsers"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":232,"co":3,"ro":true,"op":false,"r":"Public","n":"parsedUsers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#repliedUser:member","d":"/**\n * The author of the message that this message is a reply to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"repliedUser","c":"discord.js!MessageMentions#repliedUser"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":187,"co":3,"ro":false,"op":false,"r":"Public","n":"repliedUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions#roles:member","d":"/**\n * Any roles that were mentioned <info>Order as received from the API, not as they appear in the message content</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!MessageMentions#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions.RolesPattern:member","d":"/**\n * A regular expression that matches role mentions like `<@&297577916114403338>`. The `id` group property is present on the `exec` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"RolesPattern","c":"discord.js!MessageMentions.RolesPattern"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"FormattingPatterns.Role","c":"discord-api-types!__type#Role:member"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"RolesPattern","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageMentions#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!MessageMentions#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2284,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!MessageMentions#users:member","d":"/**\n * Any users that were mentioned <info>Order as received from the API, not as they appear in the message content</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!MessageMentions#users"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":95,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageMentions.UsersPattern:member","d":"/**\n * A regular expression that matches user mentions like `<@81440962496172032>`. The `id` group property is present on the `exec` result of this expression.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"UsersPattern","c":"discord.js!MessageMentions.UsersPattern"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"FormattingPatterns.User","c":"discord-api-types!__type#User:member"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"UsersPattern","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false}],"itrs":[]},{"k":"Interface","c":"discord.js!MessageMentionsHasOptions:interface","d":"/**\n * Options used to check for a mention.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageMentionsHasOptions","c":"discord.js!MessageMentionsHasOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/MessageMentions.js","l":243,"co":1,"r":"Public","n":"MessageMentionsHasOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageMentionsHasOptions#ignoreDirect:member","d":"/**\n * Whether to ignore direct mentions to the item\n */\n","ex":[{"k":"Reference","t":"ignoreDirect","c":"discord.js!MessageMentionsHasOptions#ignoreDirect"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6192,"co":3,"ro":false,"op":true,"r":"Public","n":"ignoreDirect","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageMentionsHasOptions#ignoreEveryone:member","d":"/**\n * Whether to ignore `@everyone`/`@here` mentions\n */\n","ex":[{"k":"Reference","t":"ignoreEveryone","c":"discord.js!MessageMentionsHasOptions#ignoreEveryone"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6195,"co":3,"ro":false,"op":true,"r":"Public","n":"ignoreEveryone","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageMentionsHasOptions#ignoreRepliedUser:member","d":"/**\n * Whether to ignore replied user mention to an user\n */\n","ex":[{"k":"Reference","t":"ignoreRepliedUser","c":"discord.js!MessageMentionsHasOptions#ignoreRepliedUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6194,"co":3,"ro":false,"op":true,"r":"Public","n":"ignoreRepliedUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageMentionsHasOptions#ignoreRoles:member","d":"/**\n * Whether to ignore role mentions to a guild member\n */\n","ex":[{"k":"Reference","t":"ignoreRoles","c":"discord.js!MessageMentionsHasOptions#ignoreRoles"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6193,"co":3,"ro":false,"op":true,"r":"Public","n":"ignoreRoles","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!MessageMentionTypes:type","d":"/**\n * Types of mentions to enable in MessageMentionOptions. - `roles` - `users` - `everyone`\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageMentionTypes","c":"discord.js!MessageMentionTypes:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'roles' | 'users' | 'everyone'"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":101,"co":1,"r":"Public","n":"MessageMentionTypes","ttr":{"st":3,"en":4}},{"k":"Class","c":"discord.js!MessagePayload:class","d":"/**\n * Represents a message to be sent to the API.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" "}],"pat":"src/structures/MessagePayload.js","l":17,"co":1,"r":"Public","ab":false,"n":"MessagePayload","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!MessagePayload:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"target","c":"discord.js!~target"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageTarget","c":"discord.js!MessageTarget:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"MessagePayloadOption","c":"discord.js!MessagePayloadOption:type"},{"k":"Content","t":");"}],"l":17,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"target","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"options","ptr":{"st":7,"en":8},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!MessagePayload#body:member","d":"/**\n * Body sendable to the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"body","c":"discord.js!MessagePayload#body"},{"k":"Content","t":": "},{"k":"Reference","t":"RawMessagePayloadData","c":"discord.js!~RawMessagePayloadData:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"body","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessagePayload.create:member(1)","d":"/**\n * Creates a {@link MessagePayload} from user-level arguments.\n *\n * @param target - Target to send to\n *\n * @param options - Options or content to use\n *\n * @param extra - Extra options to add onto specified options\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"create","c":"discord.js!MessagePayload.create"},{"k":"Content","t":"(  "},{"k":"Reference","t":"target","c":"discord.js!~target"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageTarget","c":"discord.js!MessageTarget:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayloadOption","c":"discord.js!MessagePayloadOption:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"extra","c":"discord.js!~extra"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessagePayloadOption","c":"discord.js!MessagePayloadOption:type"},{"k":"Content","t":", ): "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":";"}],"l":274,"co":3,"sta":true,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"target","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":12},"op":false,"rs":false},{"pn":"extra","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Property","c":"discord.js!MessagePayload#files:member","d":"/**\n * Files sendable to the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"files","c":"discord.js!MessagePayload#files"},{"k":"Content","t":": "},{"k":"Reference","t":"RawFile","c":"@discordjs/rest!RawFile:interface"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":false,"op":false,"r":"Public","n":"files","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessagePayload#isInteraction:member","d":"/**\n * Whether or not the target is an {@link BaseInteraction} or an {@link InteractionWebhook}\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"isInteraction","c":"discord.js!MessagePayload#isInteraction"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":95,"co":3,"ro":true,"op":false,"r":"Public","n":"isInteraction","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessagePayload#isMessage:member","d":"/**\n * Whether or not the target is a {@link Message}\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"isMessage","c":"discord.js!MessagePayload#isMessage"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":true,"op":false,"r":"Public","n":"isMessage","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessagePayload#isMessageManager:member","d":"/**\n * Whether or not the target is a {@link MessageManager}\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"isMessageManager","c":"discord.js!MessagePayload#isMessageManager"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"isMessageManager","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessagePayload#isUser:member","d":"/**\n * Whether or not the target is a {@link User}\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"isUser","c":"discord.js!MessagePayload#isUser"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":true,"op":false,"r":"Public","n":"isUser","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessagePayload#isWebhook:member","d":"/**\n * Whether or not the target is a {@link Webhook} or a {@link WebhookClient}\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"isWebhook","c":"discord.js!MessagePayload#isWebhook"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":true,"op":false,"r":"Public","n":"isWebhook","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessagePayload#makeContent:member(1)","d":"/**\n * Makes the content of this message.\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"makeContent","c":"discord.js!MessagePayload#makeContent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"makeContent"},{"k":"Property","c":"discord.js!MessagePayload#options:member","d":"/**\n * The payload of this message.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!MessagePayload#options"},{"k":"Content","t":": "},{"k":"Reference","t":"MessagePayloadOption","c":"discord.js!MessagePayloadOption:type"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessagePayload#resolveBody:member(1)","d":"/**\n * Resolves the body.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveBody","c":"discord.js!MessagePayload#resolveBody"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":120,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"resolveBody"},{"k":"Method","c":"discord.js!MessagePayload.resolveFile:member(1)","d":"/**\n * Resolves a single file into an object sendable to the API.\n *\n * @param fileLike - Something that could be resolved to a file\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolveFile","c":"discord.js!MessagePayload.resolveFile"},{"k":"Content","t":"(  "},{"k":"Reference","t":"fileLike","c":"discord.js!~fileLike"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Stream","c":"!\"\\\"stream\\\"\".internal.Stream:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AttachmentPayload","c":"discord.js!AttachmentPayload:interface"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawFile","c":"@discordjs/rest!RawFile:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":237,"co":3,"sta":true,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fileLike","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveFile"},{"k":"Method","c":"discord.js!MessagePayload#resolveFiles:member(1)","d":"/**\n * Resolves files.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"resolveFiles","c":"discord.js!MessagePayload#resolveFiles"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":225,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"resolveFiles"},{"k":"Property","c":"discord.js!MessagePayload#target:member","d":"/**\n * The target for this message to be sent to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"target","c":"discord.js!MessagePayload#target"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageTarget","c":"discord.js!MessageTarget:type"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"target","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!MessagePayloadOption:type","d":"/**\n * A possible payload option.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessagePayloadOption","c":"discord.js!MessagePayloadOption:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageCreateOptions","c":"discord.js!WebhookMessageCreateOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":";"}],"pat":"src/structures/MessagePayload.js","l":290,"co":1,"r":"Public","n":"MessagePayloadOption","ttr":{"st":3,"en":15}},{"k":"Class","c":"discord.js!MessageReaction:class","d":"/**\n * Represents a reaction to a message.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" "}],"pat":"src/structures/MessageReaction.js","l":12,"co":1,"r":"Public","ab":false,"n":"MessageReaction","pmo":false,"ms":[{"k":"Property","c":"discord.js!MessageReaction#client:member","d":"/**\n * The client that instantiated this message reaction\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!MessageReaction#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":";"}],"l":14,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageReaction#count:member","d":"/**\n * The number of people that have given the same reaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"count","c":"discord.js!MessageReaction#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"count","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageReaction#emoji:member","d":"/**\n * The emoji of this reaction. Either a {@link GuildEmoji} object for known custom emojis, or a {@link ReactionEmoji} object which has fewer properties. Whatever the prototype of the emoji, it will still have `name`, `id`, `identifier` and `toString()`\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"emoji","c":"discord.js!MessageReaction#emoji"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ReactionEmoji","c":"discord.js!ReactionEmoji:class"},{"k":"Content","t":";"}],"l":81,"co":3,"ro":true,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageReaction#fetch:member(1)","d":"/**\n * Fetch this reaction.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!MessageReaction#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":108,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!MessageReaction#me:member","d":"/**\n * Whether the client has given this reaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"me","c":"discord.js!MessageReaction#me"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"me","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageReaction#message:member","d":"/**\n * The message that this reaction refers to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"message","c":"discord.js!MessageReaction#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!MessageReaction#partial:member","d":"/**\n * Whether or not this reaction is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!MessageReaction#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageReaction#react:member(1)","d":"/**\n * Makes the client user react with this reaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"react","c":"discord.js!MessageReaction#react"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":59,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"react"},{"k":"Method","c":"discord.js!MessageReaction#remove:member(1)","d":"/**\n * Removes all users from this reaction.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!MessageReaction#remove"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":67,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!MessageReaction#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!MessageReaction#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2342,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!MessageReaction#users:member","d":"/**\n * A manager of the users that have given this reaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!MessageReaction#users"},{"k":"Content","t":": "},{"k":"Reference","t":"ReactionUserManager","c":"discord.js!ReactionUserManager:class"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!MessageReaction#valueOf:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"valueOf","c":"discord.js!MessageReaction#valueOf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2343,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"valueOf"}],"itrs":[]},{"k":"TypeAlias","c":"discord.js!MessageReactionResolvable:type","d":"/**\n * Data that can be resolved to a MessageReaction object. This can be:\n *\n * * A MessageReaction\n *\n * * A Snowflake\n *\n * * The Unicode representation of an emoji\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageReactionResolvable","c":"discord.js!MessageReactionResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/managers/ReactionManager.js","l":32,"co":1,"r":"Public","n":"MessageReactionResolvable","ttr":{"st":3,"en":8}},{"k":"Interface","c":"discord.js!MessageReference:interface","d":"/**\n * Reference data sent in a message that contains ids identifying the referenced message. This can be present in the following types of message:\n *\n * * Crossposted messages (`MessageFlags.Crossposted`)\n *\n * * {@link discord-api-types#(MessageType:enum).ChannelFollowAdd}\n *\n * * {@link discord-api-types#(MessageType:enum).ChannelPinnedMessage}\n *\n * * {@link discord-api-types#(MessageType:enum).Reply}\n *\n * * {@link discord-api-types#(MessageType:enum).ThreadStarterMessage}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#message-types}\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageReference","c":"discord.js!MessageReference:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":352,"co":1,"r":"Public","n":"MessageReference","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageReference#channelId:member","d":"/**\n * The channel's id the message was referenced\n */\n","ex":[{"k":"Reference","t":"channelId","c":"discord.js!MessageReference#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6254,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageReference#guildId:member","d":"/**\n * The guild's id the message was referenced\n */\n","ex":[{"k":"Reference","t":"guildId","c":"discord.js!MessageReference#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6255,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!MessageReference#messageId:member","d":"/**\n * The message's id that was referenced\n */\n","ex":[{"k":"Reference","t":"messageId","c":"discord.js!MessageReference#messageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6256,"co":3,"ro":false,"op":false,"r":"Public","n":"messageId","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!MessageReplyOptions:interface","d":"/**\n * Options provided when sending a message as an inline reply.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageReplyOptions","c":"discord.js!MessageReplyOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":", 'reply'>"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":833,"co":1,"r":"Public","n":"MessageReplyOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageReplyOptions#failIfNotExists:member","d":"/**\n * Whether to error if the referenced message does not exist (creates a standard message in this case when false)\n */\n","ex":[{"k":"Reference","t":"failIfNotExists","c":"discord.js!MessageReplyOptions#failIfNotExists"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6469,"co":3,"ro":false,"op":true,"r":"Public","n":"failIfNotExists","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!MessageResolvable:type","d":"/**\n * Data that can be resolved to a Message object. This can be:\n *\n * * A Message\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/MessageManager.js","l":41,"co":1,"r":"Public","n":"MessageResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!MessageSelectOption:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MessageSelectOption","c":"discord.js!MessageSelectOption:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6291,"co":1,"r":"Public","n":"MessageSelectOption","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MessageSelectOption#default:member","d":"","ex":[{"k":"Reference","t":"default","c":"discord.js!MessageSelectOption#default"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":6292,"co":3,"ro":false,"op":false,"r":"Public","n":"default","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageSelectOption#description:member","d":"","ex":[{"k":"Reference","t":"description","c":"discord.js!MessageSelectOption#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":6293,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!MessageSelectOption#emoji:member","d":"","ex":[{"k":"Reference","t":"emoji","c":"discord.js!MessageSelectOption#emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"APIPartialEmoji","c":"discord-api-types!APIPartialEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":6294,"co":3,"ro":false,"op":false,"r":"Public","n":"emoji","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!MessageSelectOption#label:member","d":"","ex":[{"k":"Reference","t":"label","c":"discord.js!MessageSelectOption#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6295,"co":3,"ro":false,"op":false,"r":"Public","n":"label","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MessageSelectOption#value:member","d":"","ex":[{"k":"Reference","t":"value","c":"discord.js!MessageSelectOption#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":6296,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!MessageTarget:type","d":"/**\n * A target for a message.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"MessageTarget","c":"discord.js!MessageTarget:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"Interaction","c":"discord.js!Interaction:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookClient","c":"discord.js!WebhookClient:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageManager","c":"discord.js!MessageManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessagePayload.js","l":284,"co":1,"r":"Public","n":"MessageTarget","ttr":{"st":3,"en":21}},{"k":"TypeAlias","c":"discord.js!ModalActionRowComponent:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ModalActionRowComponent","c":"discord.js!ModalActionRowComponent:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextInputComponent","c":"discord.js!TextInputComponent:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":334,"co":1,"r":"Public","n":"ModalActionRowComponent","ttr":{"st":3,"en":4}},{"k":"TypeAlias","c":"discord.js!ModalActionRowComponentData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ModalActionRowComponentData","c":"discord.js!ModalActionRowComponentData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalActionRowComponent","c":"discord-api-types!APIModalActionRowComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"TextInputComponentData","c":"discord.js!TextInputComponentData:interface"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":300,"co":1,"r":"Public","n":"ModalActionRowComponentData","ttr":{"st":3,"en":8}},{"k":"Class","c":"discord.js!ModalBuilder:class","d":"/**\n * Represents a modal builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ModalBuilder","c":"discord.js!ModalBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuildersModal","c":"@discordjs/builders!ModalBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/ModalBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"ModalBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ModalBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `ModalBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalComponentData","c":"discord.js!ModalComponentData:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalInteractionResponseCallbackData","c":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":11},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!ModalBuilder.from:member(1)","d":"/**\n * Creates a new modal builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!ModalBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalComponent","c":"discord-api-types!APIModalComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APIModalComponent","c":"discord-api-types!APIModalComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"ModalBuilder","c":"discord.js!ModalBuilder:class"},{"k":"Content","t":";"}],"l":26,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!ModalComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ModalComponentData","c":"discord.js!ModalComponentData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/InteractionResponses.js","l":11,"co":1,"r":"Public","n":"ModalComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ModalComponentData#components:member","d":"/**\n * The components within this modal\n */\n","ex":[{"k":"Reference","t":"components","c":"discord.js!ModalComponentData#components"},{"k":"Content","t":": "},{"k":"Content","t":"(  | "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIActionRowComponent","c":"discord-api-types!APIActionRowComponent:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIModalActionRowComponent","c":"discord-api-types!APIModalActionRowComponent:type"},{"k":"Content","t":">>  | "},{"k":"Reference","t":"ActionRowData","c":"discord.js!ActionRowData:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalActionRowComponentData","c":"discord.js!ModalActionRowComponentData:type"},{"k":"Content","t":"> )[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2349,"co":3,"ro":false,"op":false,"r":"Public","n":"components","prtr":{"st":2,"en":13}},{"k":"PropertySignature","c":"discord.js!ModalComponentData#customId:member","d":"/**\n * The custom id of the modal\n */\n","ex":[{"k":"Reference","t":"customId","c":"discord.js!ModalComponentData#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2347,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ModalComponentData#title:member","d":"/**\n * The title of the modal\n */\n","ex":[{"k":"Reference","t":"title","c":"discord.js!ModalComponentData#title"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2348,"co":3,"ro":false,"op":false,"r":"Public","n":"title","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!ModalMessageModalSubmitInteraction:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ModalMessageModalSubmitInteraction","c":"discord.js!ModalMessageModalSubmitInteraction:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2379,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"ModalMessageModalSubmitInteraction","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ModalMessageModalSubmitInteraction#channelId:member","d":"","ex":[{"k":"Reference","t":"channelId","c":"discord.js!ModalMessageModalSubmitInteraction#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":2382,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":2,"en":3}},{"k":"MethodSignature","c":"discord.js!ModalMessageModalSubmitInteraction#inCachedGuild:member(1)","d":"","ex":[{"k":"Reference","t":"inCachedGuild","c":"discord.js!ModalMessageModalSubmitInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalMessageModalSubmitInteraction","c":"discord.js!ModalMessageModalSubmitInteraction:interface"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"l":2388,"co":3,"op":false,"rtr":{"st":2,"en":5},"r":"Public","oi":1,"ps":[],"n":"inCachedGuild"},{"k":"MethodSignature","c":"discord.js!ModalMessageModalSubmitInteraction#inGuild:member(1)","d":"","ex":[{"k":"Reference","t":"inGuild","c":"discord.js!ModalMessageModalSubmitInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalMessageModalSubmitInteraction","c":"discord.js!ModalMessageModalSubmitInteraction:interface"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"l":2387,"co":3,"op":false,"rtr":{"st":2,"en":5},"r":"Public","oi":1,"ps":[],"n":"inGuild"},{"k":"MethodSignature","c":"discord.js!ModalMessageModalSubmitInteraction#inRawGuild:member(1)","d":"","ex":[{"k":"Reference","t":"inRawGuild","c":"discord.js!ModalMessageModalSubmitInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalMessageModalSubmitInteraction","c":"discord.js!ModalMessageModalSubmitInteraction:interface"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"l":2389,"co":3,"op":false,"rtr":{"st":2,"en":5},"r":"Public","oi":1,"ps":[],"n":"inRawGuild"},{"k":"PropertySignature","c":"discord.js!ModalMessageModalSubmitInteraction#message:member","d":"","ex":[{"k":"Reference","t":"message","c":"discord.js!ModalMessageModalSubmitInteraction#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":2381,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":8}},{"k":"MethodSignature","c":"discord.js!ModalMessageModalSubmitInteraction#update:member(1)","d":"","ex":[{"k":"Reference","t":"update","c":"discord.js!ModalMessageModalSubmitInteraction#update"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2383,"co":3,"op":false,"rtr":{"st":9,"en":13},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":8},"op":false,"rs":false}],"n":"update"},{"k":"MethodSignature","c":"discord.js!ModalMessageModalSubmitInteraction#update:member(2)","d":"","ex":[{"k":"Reference","t":"update","c":"discord.js!ModalMessageModalSubmitInteraction#update"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"l":2384,"co":3,"op":false,"rtr":{"st":10,"en":18},"r":"Public","oi":2,"ps":[{"pn":"options","ptr":{"st":4,"en":9},"op":false,"rs":false}],"n":"update"}],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"Class","c":"discord.js!ModalSubmitFields:class","d":"/**\n * Represents the serialized fields from a modal submit interaction\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ModalSubmitFields","c":"discord.js!ModalSubmitFields:class"},{"k":"Content","t":" "}],"pat":"src/structures/ModalSubmitFields.js","l":10,"co":1,"r":"Public","ab":false,"n":"ModalSubmitFields","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ModalSubmitFields:constructor(1)","d":"/**\n * Constructs a new instance of the `ModalSubmitFields` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"components","c":"discord.js!~components"},{"k":"Content","t":": "},{"k":"Reference","t":"ModalActionRowComponent","c":"discord.js!ModalActionRowComponent:type"},{"k":"Content","t":"[][]"},{"k":"Content","t":");"}],"l":10,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"components","ptr":{"st":3,"en":5},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!ModalSubmitFields#components:member","d":"/**\n * The components within the modal\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"components","c":"discord.js!ModalSubmitFields#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ActionRowModalData","c":"discord.js!ActionRowModalData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitFields#fields:member","d":"/**\n * The extracted fields from the modal\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fields","c":"discord.js!ModalSubmitFields#fields"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"ModalActionRowComponent","c":"discord.js!ModalActionRowComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"fields","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitFields#getField:member(1)","d":"/**\n * Gets a field given a custom id from a component\n *\n * @param customId - The custom id of the component\n *\n * @param type - The type of the component\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getField","c":"discord.js!ModalSubmitFields#getField"},{"k":"Content","t":"<"},{"k":"Reference","t":"Type"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":">("},{"k":"Reference","t":"customId","c":"discord.js!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"type","c":"discord.js!~type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":"): "},{"k":"Content","t":"{ "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"Type"},{"k":"Content","t":" } & "},{"k":"Reference","t":"TextInputModalData","c":"discord.js!TextInputModalData:interface"},{"k":"Content","t":";"}],"l":34,"co":3,"tps":[{"tp":"Type","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":15,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":9,"en":10},"op":false,"rs":false},{"pn":"type","ptr":{"st":13,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"getField"},{"k":"Method","c":"discord.js!ModalSubmitFields#getField:member(2)","d":"/**\n * Gets a field given a custom id from a component\n *\n * @param customId - The custom id of the component\n *\n * @param type - The type of the component\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getField","c":"discord.js!ModalSubmitFields#getField"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"discord.js!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"type","c":"discord.js!~type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"TextInputModalData","c":"discord.js!TextInputModalData:interface"},{"k":"Content","t":";"}],"l":34,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"customId","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"type","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"getField"},{"k":"Method","c":"discord.js!ModalSubmitFields#getTextInputValue:member(1)","d":"/**\n * Gets the value of a text input component given a custom id\n *\n * @param customId - The custom id of the text input component\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"getTextInputValue","c":"discord.js!ModalSubmitFields#getTextInputValue"},{"k":"Content","t":"("},{"k":"Reference","t":"customId","c":"discord.js!~customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":50,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"customId","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"getTextInputValue"}],"itrs":[]},{"k":"Class","c":"discord.js!ModalSubmitInteraction:class","d":"/**\n * Represents a modal interaction\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"BaseInteraction","c":"discord.js!BaseInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ModalSubmitInteraction.js","l":29,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ModalSubmitInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!ModalSubmitInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":50,"ro":false,"op":true,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#components:member","d":"/**\n * The components within the modal\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"components","c":"discord.js!ModalSubmitInteraction#components"},{"k":"Content","t":": "},{"k":"Reference","t":"ActionRowModalData","c":"discord.js!ActionRowModalData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":true,"op":false,"r":"Public","n":"components","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#customId:member","d":"/**\n * The custom id of the modal.\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"customId","c":"discord.js!ModalSubmitInteraction#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferred","c":"discord.js!ModalSubmitInteraction#deferred"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#deferReply:member(1)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!ModalSubmitInteraction#deferReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#deferReply:member(2)","d":"/**\n * Defers the reply to this interaction.\n *\n * @param options - Options for deferring the reply to this interaction\n *\n * @example\n * ```js\n * // Defer the reply to this interaction\n * interaction.deferReply()\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n * @example\n * ```js\n * // Defer to send an ephemeral reply later\n * interaction.deferReply({ ephemeral: true })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferReply","c":"discord.js!ModalSubmitInteraction#deferReply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionDeferReplyOptions","c":"discord.js!InteractionDeferReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":67,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deferReply"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#deferUpdate:member(1)","d":"/**\n * Defers an update to the message to which the component was attached.\n *\n * @param options - Options for deferring the update to this interaction\n *\n * @example\n * ```js\n * // Defer updating and reset the component's loading state\n * interaction.deferUpdate()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferUpdate","c":"discord.js!ModalSubmitInteraction#deferUpdate"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionDeferUpdateOptions","c":"discord.js!InteractionDeferUpdateOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":200,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"deferUpdate"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#deferUpdate:member(2)","d":"/**\n * Defers an update to the message to which the component was attached.\n *\n * @param options - Options for deferring the update to this interaction\n *\n * @example\n * ```js\n * // Defer updating and reset the component's loading state\n * interaction.deferUpdate()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deferUpdate","c":"discord.js!ModalSubmitInteraction#deferUpdate"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InteractionDeferUpdateOptions","c":"discord.js!InteractionDeferUpdateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":200,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deferUpdate"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#deleteReply:member(1)","d":"/**\n * Deletes a reply to this interaction.\n *\n * @param message - The response to delete\n *\n * @example\n * ```js\n * // Delete the initial reply to this interaction\n * interaction.deleteReply()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteReply","c":"discord.js!ModalSubmitInteraction#deleteReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":176,"co":3,"sta":false,"rtr":{"st":8,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteReply"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#editReply:member(1)","d":"/**\n * Edits a reply to this interaction.\n *\n * @param options - The new options for the message\n *\n * @example\n * ```js\n * // Edit the initial reply to this interaction\n * interaction.editReply('New content')\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editReply","c":"discord.js!ModalSubmitInteraction#editReply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionEditReplyOptions","c":"discord.js!InteractionEditReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":158,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"editReply"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ephemeral","c":"discord.js!ModalSubmitInteraction#ephemeral"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":76,"co":3,"ro":false,"op":false,"r":"Public","n":"ephemeral","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#fetchReply:member(1)","d":"/**\n * Fetches a reply to this interaction.\n *\n * @param message - The response to fetch\n *\n * @example\n * ```js\n * // Fetch the initial reply to this interaction\n * interaction.fetchReply()\n *   .then(reply => console.log(`Replied with ${reply.content}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchReply","c":"discord.js!ModalSubmitInteraction#fetchReply"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | '@original'"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":137,"co":3,"sta":false,"rtr":{"st":8,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":7},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchReply"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#fields:member","d":"/**\n * The fields within the modal\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"fields","c":"discord.js!ModalSubmitInteraction#fields"},{"k":"Content","t":": "},{"k":"Reference","t":"ModalSubmitFields","c":"discord.js!ModalSubmitFields:class"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":true,"op":false,"r":"Public","n":"fields","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#followUp:member(1)","d":"/**\n * Send a follow-up message to this interaction.\n *\n * @param options - The options for the reply\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"followUp","c":"discord.js!ModalSubmitInteraction#followUp"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":185,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"followUp"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!ModalSubmitInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!ModalSubmitInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!ModalSubmitInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#isFromMessage:member(1)","d":"/**\n * Whether this is from a {@link MessageComponentInteraction}.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isFromMessage","c":"discord.js!ModalSubmitInteraction#isFromMessage"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"ModalMessageModalSubmitInteraction","c":"discord.js!ModalMessageModalSubmitInteraction:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":107,"co":3,"sta":false,"rtr":{"st":3,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isFromMessage"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#message:member","d":"/**\n * The message associated with this interaction\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"message","c":"discord.js!ModalSubmitInteraction#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"replied","c":"discord.js!ModalSubmitInteraction#replied"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#reply:member(1)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!ModalSubmitInteraction#reply"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"fetchReply","c":"discord.js!~__type#fetchReply"},{"k":"Content","t":": true }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":10,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":9},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#reply:member(2)","d":"/**\n * Creates a reply to this interaction. <info>Use the `fetchReply` option to get the bot's reply message.</info>\n *\n * @param options - The options for the reply\n *\n * @example\n * ```js\n * // Reply to the interaction and fetch the response\n * interaction.reply({ content: 'Pong!', fetchReply: true })\n *   .then((message) => console.log(`Reply sent with content ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create an ephemeral reply with an embed\n * const embed = new EmbedBuilder().setDescription('Pong!');\n *\n * interaction.reply({ embeds: [embed], ephemeral: true })\n *   .then(() => console.log('Reply sent.'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reply","c":"discord.js!ModalSubmitInteraction#reply"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionReplyOptions","c":"discord.js!InteractionReplyOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionResponse","c":"discord.js!InteractionResponse:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"BooleanCache","c":"discord.js!BooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":102,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"reply"},{"k":"Method","c":"discord.js!ModalSubmitInteraction#sendPremiumRequired:member(1)","d":"/**\n * Responds to the interaction with an upgrade button. <info>Only available for applications with monetization enabled.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sendPremiumRequired","c":"discord.js!ModalSubmitInteraction#sendPremiumRequired"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":270,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendPremiumRequired"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction.transformComponent:member(1)","d":"/**\n * Transforms component data to discord.js-compatible data\n *\n * @param rawComponent - The data to transform\n */\n","ex":[{"k":"Content","t":"static transformComponent(rawComponent"},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ModalData","c":"discord.js!ModalData:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":90,"sta":true,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rawComponent","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"transformComponent"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ModalSubmitInteraction#type"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionType.ModalSubmit","c":"discord-api-types!InteractionType.ModalSubmit:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ModalSubmitInteraction#update:member(1)","d":"/**\n * Updates the original message of the component on which the interaction was received on.\n *\n * @param options - The options for the updated message\n *\n * @example\n * ```js\n * // Remove the components from the message\n * interaction.update({\n *   content: \"A component interaction was received\",\n *   components: []\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"update(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InteractionUpdateOptions","c":"discord.js!InteractionUpdateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<("},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":")>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/InteractionResponses.js","l":226,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"update"},{"k":"Property","c":"discord.js!ModalSubmitInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ModalSubmitInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"webhook","c":"discord.js!ModalSubmitInteraction#webhook"},{"k":"Content","t":": "},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":true,"op":false,"r":"Public","n":"webhook","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!ModalSubmitInteractionCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ModalSubmitInteractionCollectorOptions","c":"discord.js!ModalSubmitInteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ModalSubmitInteraction","c":"discord.js!ModalSubmitInteraction:class"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InteractionCollectorOptions","c":"discord.js!InteractionCollectorOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Interaction"},{"k":"Content","t":">"},{"k":"Content","t":", 'channel' | 'message' | 'guild' | 'interactionType'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4925,"co":1,"r":"Public","tps":[{"tp":"Interaction","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"ModalSubmitInteractionCollectorOptions","pmo":false,"ms":[],"etrs":[{"st":7,"en":14,"tps":[{"st":9,"en":13},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!MultipleShardRespawnOptions:interface","d":"/**\n * Options used to respawn all shards.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MultipleShardRespawnOptions","c":"discord.js!MultipleShardRespawnOptions:interface"},{"k":"Content","t":" "}],"pat":"src/sharding/ShardingManager.js","l":307,"co":1,"r":"Public","n":"MultipleShardRespawnOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MultipleShardRespawnOptions#respawnDelay:member","d":"/**\n * How long to wait between killing a shard's process and restarting it (in milliseconds)\n */\n","ex":[{"k":"Reference","t":"respawnDelay","c":"discord.js!MultipleShardRespawnOptions#respawnDelay"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6332,"co":3,"ro":false,"op":true,"r":"Public","n":"respawnDelay","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MultipleShardRespawnOptions#shardDelay:member","d":"/**\n * How long to wait between shards (in milliseconds)\n */\n","ex":[{"k":"Reference","t":"shardDelay","c":"discord.js!MultipleShardRespawnOptions#shardDelay"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6331,"co":3,"ro":false,"op":true,"r":"Public","n":"shardDelay","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MultipleShardRespawnOptions#timeout:member","d":"/**\n * The amount in milliseconds to wait for a shard to become ready before continuing to another (`-1` or `Infinity` for no wait)\n */\n","ex":[{"k":"Reference","t":"timeout","c":"discord.js!MultipleShardRespawnOptions#timeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6333,"co":3,"ro":false,"op":true,"r":"Public","n":"timeout","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!MultipleShardSpawnOptions:interface","d":"/**\n * Options used to spawn multiple shards.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MultipleShardSpawnOptions","c":"discord.js!MultipleShardSpawnOptions:interface"},{"k":"Content","t":" "}],"pat":"src/sharding/ShardingManager.js","l":181,"co":1,"r":"Public","n":"MultipleShardSpawnOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!MultipleShardSpawnOptions#amount:member","d":"/**\n * Number of shards to spawn\n */\n","ex":[{"k":"Reference","t":"amount","c":"discord.js!MultipleShardSpawnOptions#amount"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | 'auto'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6337,"co":3,"ro":false,"op":true,"r":"Public","n":"amount","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!MultipleShardSpawnOptions#delay:member","d":"/**\n * How long to wait in between spawning each shard (in milliseconds)\n */\n","ex":[{"k":"Reference","t":"delay","c":"discord.js!MultipleShardSpawnOptions#delay"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6338,"co":3,"ro":false,"op":true,"r":"Public","n":"delay","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!MultipleShardSpawnOptions#timeout:member","d":"/**\n * The amount in milliseconds to wait until the {@link Client} has become ready\n */\n","ex":[{"k":"Reference","t":"timeout","c":"discord.js!MultipleShardSpawnOptions#timeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6339,"co":3,"ro":false,"op":true,"r":"Public","n":"timeout","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!NewsChannel:class","d":"/**\n * Represents a guild news channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildTextChannel","c":"discord.js!BaseGuildTextChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/NewsChannel.js","l":11,"co":1,"r":"Public","ab":false,"n":"NewsChannel","pmo":false,"ms":[{"k":"Method","c":"discord.js!NewsChannel#addFollower:member(1)","d":"/**\n * Adds the target to this channel's followers.\n *\n * @param channel - The channel where the webhook should be created\n *\n * @param reason - Reason for creating the webhook\n *\n * @example\n * ```js\n * if (channel.type === ChannelType.GuildAnnouncement) {\n *   channel.addFollower('222197033908436994', 'Important announcements')\n *     .then(() => console.log('Added follower'))\n *     .catch(console.error);\n * }\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"addFollower","c":"discord.js!NewsChannel#addFollower"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":24,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"addFollower"},{"k":"Property","c":"discord.js!NewsChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel\n */\n","ex":[{"k":"Content","t":"undefined defaultAutoArchiveDuration :"},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultThreadRateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":82,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":58,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#lastPinAt:member","d":"/**\n * The date when the last pinned message was pinned, if there was one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastPinAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":51,"ro":true,"op":true,"r":"Public","n":"lastPinAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#lastPinTimestamp:member","d":"/**\n * The timestamp when the last pinned message was pinned, if there was one\n */\n","ex":[{"k":"Content","t":"undefined lastPinTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":66,"ro":false,"op":true,"r":"Public","n":"lastPinTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":33,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"threads","c":"discord.js!NewsChannel#threads"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!GuildTextThreadManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadTypeForNewsChannel","c":"discord.js!AllowedThreadTypeForNewsChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#topic:member","d":"/**\n * The topic of the text channel\n */\n","ex":[{"k":"Content","t":"undefined topic :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":46,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!NewsChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildAnnouncement","c":"discord-api-types!ChannelType.GuildAnnouncement:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!NewsChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!NonSystemMessageType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"NonSystemMessageType","c":"discord.js!NonSystemMessageType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"MessageType.Default","c":"discord-api-types!MessageType.Default:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.Reply","c":"discord-api-types!MessageType.Reply:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChatInputCommand","c":"discord-api-types!MessageType.ChatInputCommand:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ContextMenuCommand","c":"discord-api-types!MessageType.ContextMenuCommand:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3669,"co":1,"r":"Public","n":"NonSystemMessageType","ttr":{"st":3,"en":11}},{"k":"TypeAlias","c":"discord.js!NonThreadGuildBasedChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildBasedChannel","c":"discord.js!GuildBasedChannel:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6645,"co":1,"r":"Public","n":"NonThreadGuildBasedChannel","ttr":{"st":3,"en":9}},{"k":"Class","c":"discord.js!OAuth2Guild:class","d":"/**\n * A partial guild received when using {@link GuildManager.fetch} to fetch multiple guilds.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"OAuth2Guild","c":"discord.js!OAuth2Guild:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuild","c":"discord.js!BaseGuild:class"},{"k":"Content","t":" "}],"pat":"src/structures/OAuth2Guild.js","l":10,"co":1,"r":"Public","ab":false,"n":"OAuth2Guild","pmo":false,"ms":[{"k":"Property","c":"discord.js!OAuth2Guild#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#createdAt:member","d":"/**\n * The time this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":56,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#createdTimestamp:member","d":"/**\n * The timestamp this guild was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":47,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#features:member","d":"/**\n * An array of features available to this guild\n */\n","ex":[{"k":"Content","t":"undefined features :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildFeature","c":"discord-api-types!GuildFeature:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":39,"ro":false,"op":false,"r":"Public","n":"features","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#icon:member","d":"/**\n * The icon hash of this guild\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":33,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#id:member","d":"/**\n * The guild's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":21,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#name:member","d":"/**\n * The name of this guild\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":27,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#nameAcronym:member","d":"/**\n * The acronym that shows up in place of a guild icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly nameAcronym :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":65,"ro":true,"op":false,"r":"Public","n":"nameAcronym","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#owner:member","d":"/**\n * Whether the client user is the owner of the guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"owner","c":"discord.js!OAuth2Guild#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"owner","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#partnered:member","d":"/**\n * Whether this guild is partnered\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partnered :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":77,"ro":true,"op":false,"r":"Public","n":"partnered","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#permissions:member","d":"/**\n * The permissions that the client user has in this guild\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissions","c":"discord.js!OAuth2Guild#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!OAuth2Guild#verified:member","d":"/**\n * Whether this guild is verified\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly verified :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuild.js","l":86,"ro":true,"op":false,"r":"Public","n":"verified","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!Options:class","d":"/**\n * Contains various utilities for client options.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Options","c":"discord.js!Options:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"null"},{"k":"Content","t":" "}],"pat":"src/util/Options.js","l":99,"co":1,"r":"Public","ab":false,"n":"Options","pmo":false,"ms":[{"k":"Method","c":"discord.js!Options.cacheEverything:member(1)","d":"/**\n * Create a cache factory that always caches everything.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"cacheEverything","c":"discord.js!Options.cacheEverything"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheFactory","c":"discord.js!CacheFactory:type"},{"k":"Content","t":";"}],"l":180,"co":3,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"cacheEverything"},{"k":"Method","c":"discord.js!Options.cacheWithLimits:member(1)","d":"/**\n * Create a cache factory using predefined settings to sweep or limit.\n *\n * @param settings - Settings passed to the relevant constructor. If no setting is provided for a manager, it uses Collection. If a number is provided for a manager, it uses that number as the max size for a LimitedCollection. If LimitedCollectionOptions are provided for a manager, it uses those settings to form a LimitedCollection.\n *\n * @example\n * ```js\n * // Store up to 200 messages per channel and 200 members per guild, always keeping the client member.\n * Options.cacheWithLimits({\n *    MessageManager: 200,\n *    GuildMemberManager: {\n *      maxSize: 200,\n *      keepOverLimit: (member) => member.id === client.user.id,\n *    },\n *  });\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"cacheWithLimits","c":"discord.js!Options.cacheWithLimits"},{"k":"Content","t":"("},{"k":"Reference","t":"settings","c":"discord.js!~settings"},{"k":"Content","t":"?: "},{"k":"Reference","t":"CacheWithLimitsOptions","c":"discord.js!CacheWithLimitsOptions:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"CacheFactory","c":"discord.js!CacheFactory:type"},{"k":"Content","t":";"}],"l":151,"co":3,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"settings","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"cacheWithLimits"},{"k":"Method","c":"discord.js!Options.createDefault:member(1)","d":"/**\n * The default client options.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"createDefault","c":"discord.js!Options.createDefault"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":";"}],"l":112,"co":3,"sta":true,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"createDefault"},{"k":"Property","c":"discord.js!Options.DefaultMakeCacheSettings:member","d":"/**\n * The default settings passed to {@link ClientOptions.makeCache}. The caches that this changes are:\n *\n * * `MessageManager` - Limit to 200 messages <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g. `makeCache: Options.cacheWithLimits({ ...Options.DefaultMakeCacheSettings, ReactionManager: 0 })`</info>\n */\n","ex":[{"k":"Content","t":"public static get "},{"k":"Reference","t":"DefaultMakeCacheSettings","c":"discord.js!Options.DefaultMakeCacheSettings"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheWithLimitsOptions","c":"discord.js!CacheWithLimitsOptions:type"},{"k":"Content","t":";"}],"l":193,"co":3,"ro":true,"op":false,"r":"Public","n":"DefaultMakeCacheSettings","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Options.DefaultSweeperSettings:member","d":"/**\n * The default settings passed to {@link ClientOptions.sweepers}. The sweepers that this changes are:\n *\n * * `threads` - Sweep archived threads every hour, removing those archived more than 4 hours ago <info>If you want to keep default behavior and add on top of it you can use this object and add on to it, e.g. `sweepers: { ...Options.DefaultSweeperSettings, messages: { interval: 300, lifetime: 600 } }`</info>\n */\n","ex":[{"k":"Content","t":"public static get "},{"k":"Reference","t":"DefaultSweeperSettings","c":"discord.js!Options.DefaultSweeperSettings"},{"k":"Content","t":"(): "},{"k":"Reference","t":"SweeperOptions","c":"discord.js!SweeperOptions:type"},{"k":"Content","t":";"}],"l":207,"co":3,"ro":true,"op":false,"r":"Public","n":"DefaultSweeperSettings","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!OverwriteData:interface","d":"/**\n * Data that can be used for a permission overwrite\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"OverwriteData","c":"discord.js!OverwriteData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/PermissionOverwrites.js","l":157,"co":1,"r":"Public","n":"OverwriteData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!OverwriteData#allow:member","d":"/**\n * The permissions to allow\n */\n","ex":[{"k":"Reference","t":"allow","c":"discord.js!OverwriteData#allow"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6343,"co":3,"ro":false,"op":true,"r":"Public","n":"allow","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!OverwriteData#deny:member","d":"/**\n * The permissions to deny\n */\n","ex":[{"k":"Reference","t":"deny","c":"discord.js!OverwriteData#deny"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6344,"co":3,"ro":false,"op":true,"r":"Public","n":"deny","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!OverwriteData#id:member","d":"/**\n * Member or role this overwrite is for\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!OverwriteData#id"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6345,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!OverwriteData#type:member","d":"/**\n * The type of this OverwriteData\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!OverwriteData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"OverwriteType","c":"discord-api-types!OverwriteType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6346,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!OverwriteResolvable:type","d":"/**\n * Data that can be resolved into {@link RawOverwriteData}. This can be:\n *\n * * PermissionOverwrites\n *\n * * OverwriteData\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"OverwriteData","c":"discord.js!OverwriteData:interface"},{"k":"Content","t":";"}],"pat":"src/structures/PermissionOverwrites.js","l":150,"co":1,"r":"Public","n":"OverwriteResolvable","ttr":{"st":3,"en":6}},{"k":"Function","c":"discord.js!parseEmoji:function(1)","d":"/**\n * Parses emoji info out of a string. The string must be one of:\n *\n * * A UTF-8 emoji (no id)\n *\n * * A URL-encoded UTF-8 emoji (no id)\n *\n * * A Discord custom emoji (`<:name:id>` or `<a:name:id>`)\n *\n * @param text - Emoji string to parse\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"parseEmoji","c":"discord.js!parseEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"text","c":"discord.js!~text"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"PartialEmoji","c":"discord.js!PartialEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":98,"co":1,"rtr":{"st":7,"en":10},"r":"Public","oi":1,"ps":[{"pn":"text","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"parseEmoji"},{"k":"Function","c":"discord.js!parseWebhookURL:function(1)","d":"/**\n * Parses a webhook URL for the id and token.\n *\n * @param url - The URL to parse\n *\n * @returns `null` if the URL is invalid, otherwise the id and the token\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"parseWebhookURL","c":"discord.js!parseWebhookURL"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"discord.js!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"WebhookClientDataIdWithToken","c":"discord.js!WebhookClientDataIdWithToken:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":406,"co":1,"rtr":{"st":7,"en":10},"r":"Public","oi":1,"ps":[{"pn":"url","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"parseWebhookURL"},{"k":"Interface","c":"discord.js!PartialChannelData:interface","d":"/**\n * Partial data for a Channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialChannelData","c":"discord.js!PartialChannelData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":80,"co":1,"r":"Public","n":"PartialChannelData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialChannelData#bitrate:member","d":"/**\n * The bitrate of the voice channel\n */\n","ex":[{"k":"Reference","t":"bitrate","c":"discord.js!PartialChannelData#bitrate"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6381,"co":3,"ro":false,"op":true,"r":"Public","n":"bitrate","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#id:member","d":"/**\n * The channel's id, used to set its parent. This is a placeholder and will be replaced by the API after consumption\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!PartialChannelData#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6375,"co":3,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#name:member","d":"/**\n * The name of the channel\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!PartialChannelData#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6378,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#nsfw:member","d":"/**\n * Whether the channel is NSFW\n */\n","ex":[{"k":"Reference","t":"nsfw","c":"discord.js!PartialChannelData#nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6380,"co":3,"ro":false,"op":true,"r":"Public","n":"nsfw","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#parentId:member","d":"/**\n * The parent id for this channel\n */\n","ex":[{"k":"Reference","t":"parentId","c":"discord.js!PartialChannelData#parentId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6376,"co":3,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#permissionOverwrites:member","d":"/**\n * Overwrites of the channel\n */\n","ex":[{"k":"Reference","t":"permissionOverwrites","c":"discord.js!PartialChannelData#permissionOverwrites"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PartialOverwriteData","c":"discord.js!PartialOverwriteData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6385,"co":3,"ro":false,"op":true,"r":"Public","n":"permissionOverwrites","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) of the channel in seconds\n */\n","ex":[{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!PartialChannelData#rateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6386,"co":3,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#rtcRegion:member","d":"/**\n * The RTC region of the channel\n */\n","ex":[{"k":"Reference","t":"rtcRegion","c":"discord.js!PartialChannelData#rtcRegion"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6383,"co":3,"ro":false,"op":true,"r":"Public","n":"rtcRegion","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#topic:member","d":"/**\n * The topic of the text channel\n */\n","ex":[{"k":"Reference","t":"topic","c":"discord.js!PartialChannelData#topic"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6379,"co":3,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!PartialChannelData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types!ChannelType.GuildText:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types!ChannelType.GuildVoice:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildCategory","c":"discord-api-types!ChannelType.GuildCategory:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6377,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#userLimit:member","d":"/**\n * The user limit of the channel\n */\n","ex":[{"k":"Reference","t":"userLimit","c":"discord.js!PartialChannelData#userLimit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6382,"co":3,"ro":false,"op":true,"r":"Public","n":"userLimit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialChannelData#videoQualityMode:member","d":"/**\n * The camera video quality mode of the channel\n */\n","ex":[{"k":"Reference","t":"videoQualityMode","c":"discord.js!PartialChannelData#videoQualityMode"},{"k":"Content","t":"?: "},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6384,"co":3,"ro":false,"op":true,"r":"Public","n":"videoQualityMode","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!PartialDMChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialDMChannel","c":"discord.js!PartialDMChannel:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":", "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"null"},{"k":"Content","t":", 'lastMessageId'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6414,"co":1,"r":"Public","n":"PartialDMChannel","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialDMChannel#lastMessageId:member","d":"","ex":[{"k":"Reference","t":"lastMessageId","c":"discord.js!PartialDMChannel#lastMessageId"},{"k":"Content","t":": "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":6415,"co":3,"ro":false,"op":false,"r":"Public","n":"lastMessageId","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":0,"en":0},{"st":0,"en":0},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PartialEmoji:interface","d":"/**\n * A partial emoji object.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialEmoji","c":"discord.js!PartialEmoji:interface"},{"k":"Content","t":" "}],"pat":"src/util/Util.js","l":82,"co":1,"r":"Public","n":"PartialEmoji","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialEmoji#animated:member","d":"/**\n * Whether the emoji is animated\n */\n","ex":[{"k":"Reference","t":"animated","c":"discord.js!PartialEmoji#animated"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6390,"co":3,"ro":false,"op":false,"r":"Public","n":"animated","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialEmoji#id:member","d":"/**\n * The id of the emoji\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!PartialEmoji#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6391,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialEmoji#name:member","d":"/**\n * The name of the emoji\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!PartialEmoji#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6392,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!PartialEmojiOnlyId:interface","d":"/**\n * A partial emoji object with only an id.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialEmojiOnlyId","c":"discord.js!PartialEmojiOnlyId:interface"},{"k":"Content","t":" "}],"pat":"src/util/Util.js","l":105,"co":1,"r":"Public","n":"PartialEmojiOnlyId","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialEmojiOnlyId#id:member","d":"/**\n * The id of the emoji\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!PartialEmojiOnlyId#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6396,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!PartialGroupDMChannel:class","d":"/**\n * Represents a Partial Group DM Channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"PartialGroupDMChannel","c":"discord.js!PartialGroupDMChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/PartialGroupDMChannel.js","l":10,"co":1,"r":"Public","ab":false,"n":"PartialGroupDMChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!PartialGroupDMChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!PartialGroupDMChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#icon:member","d":"/**\n * The hash of the channel icon\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!PartialGroupDMChannel#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PartialGroupDMChannel#iconURL:member(1)","d":"/**\n * The URL to this channel's icon.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!PartialGroupDMChannel#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":47,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!PartialGroupDMChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#name:member","d":"/**\n * The name of this Group DM Channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!PartialGroupDMChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":21,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#recipients:member","d":"/**\n * The recipients of this Group DM Channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"recipients","c":"discord.js!PartialGroupDMChannel#recipients"},{"k":"Content","t":": "},{"k":"Reference","t":"PartialRecipient","c":"discord.js!PartialRecipient:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":39,"co":3,"ro":false,"op":false,"r":"Public","n":"recipients","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PartialGroupDMChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <#123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!PartialGroupDMChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":91,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!PartialGroupDMChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!PartialGroupDMChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GroupDM","c":"discord-api-types!ChannelType.GroupDM:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PartialGroupDMChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!PartialGuildMember:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialGuildMember","c":"discord.js!PartialGuildMember:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", 'joinedAt' | 'joinedTimestamp' | 'pending'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6418,"co":1,"r":"Public","n":"PartialGuildMember","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PartialGuildScheduledEvent:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialGuildScheduledEvent","c":"discord.js!PartialGuildScheduledEvent:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":", 'userCount', 'status' | 'privacyLevel' | 'name' | 'entityType'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6425,"co":1,"r":"Public","n":"PartialGuildScheduledEvent","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!Partialize:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AllowedPartial","c":"discord.js!AllowedPartial:type"},{"k":"Content","t":", "},{"k":"Reference","t":"NulledKeys"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" = "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"NullableKeys"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" = "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"OverridableKeys"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":" | ''"},{"k":"Content","t":" = "},{"k":"Content","t":"''"},{"k":"Content","t":",> = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"K"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PartialType"},{"k":"Content","t":", "},{"k":"Reference","t":"OverridableKeys"},{"k":"Content","t":">]: "},{"k":"Reference","t":"K"},{"k":"Content","t":" extends 'partial'  ? true  : "},{"k":"Reference","t":"K"},{"k":"Content","t":" extends "},{"k":"Reference","t":"NulledKeys"},{"k":"Content","t":"   ? "},{"k":"Reference","t":"null"},{"k":"Content","t":"   : "},{"k":"Reference","t":"K"},{"k":"Content","t":" extends "},{"k":"Reference","t":"NullableKeys"},{"k":"Content","t":"    ? "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":"["},{"k":"Reference","t":"K"},{"k":"Content","t":"] | "},{"k":"Reference","t":"null"},{"k":"Content","t":"    : "},{"k":"Reference","t":"PartialType"},{"k":"Content","t":"["},{"k":"Reference","t":"K"},{"k":"Content","t":"];}"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6399,"co":1,"r":"Public","n":"Partialize","tps":[{"tp":"PartialType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}},{"tp":"NulledKeys","ctr":{"st":9,"en":13},"dtr":{"st":14,"en":15}},{"tp":"NullableKeys","ctr":{"st":18,"en":22},"dtr":{"st":23,"en":24}},{"tp":"OverridableKeys","ctr":{"st":27,"en":30},"dtr":{"st":31,"en":32}}],"ttr":{"st":33,"en":64}},{"k":"Interface","c":"discord.js!PartialMessage:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", 'type' | 'system' | 'pinned' | 'tts', 'content' | 'cleanContent' | 'author'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6420,"co":1,"r":"Public","n":"PartialMessage","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PartialMessageReaction:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialMessageReaction","c":"discord.js!PartialMessageReaction:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", 'count'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6423,"co":1,"r":"Public","n":"PartialMessageReaction","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PartialOverwriteData:interface","d":"/**\n * Partial overwrite data.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialOverwriteData","c":"discord.js!PartialOverwriteData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":71,"co":1,"r":"Public","n":"PartialOverwriteData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialOverwriteData#allow:member","d":"/**\n * The permissions to allow\n */\n","ex":[{"k":"Reference","t":"allow","c":"discord.js!PartialOverwriteData#allow"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6433,"co":3,"ro":false,"op":true,"r":"Public","n":"allow","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialOverwriteData#deny:member","d":"/**\n * The permissions to deny\n */\n","ex":[{"k":"Reference","t":"deny","c":"discord.js!PartialOverwriteData#deny"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6434,"co":3,"ro":false,"op":true,"r":"Public","n":"deny","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PartialOverwriteData#id:member","d":"/**\n * The id of the {@link Role} or {@link User} this overwrite belongs to\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!PartialOverwriteData#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6431,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialOverwriteData#type:member","d":"/**\n * The type of this overwrite\n */\n","ex":[{"k":"Reference","t":"type","c":"discord.js!PartialOverwriteData#type"},{"k":"Content","t":"?: "},{"k":"Reference","t":"OverwriteType","c":"discord-api-types!OverwriteType:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6432,"co":3,"ro":false,"op":true,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!PartialRecipient:interface","d":"/**\n * Recipient data received in a {@link PartialGroupDMChannel}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialRecipient","c":"discord.js!PartialRecipient:interface"},{"k":"Content","t":" "}],"pat":"src/structures/PartialGroupDMChannel.js","l":29,"co":1,"r":"Public","n":"PartialRecipient","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialRecipient#username:member","d":"/**\n * The username of the recipient\n */\n","ex":[{"k":"Reference","t":"username","c":"discord.js!PartialRecipient#username"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6362,"co":3,"ro":false,"op":false,"r":"Public","n":"username","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!PartialRoleData:interface","d":"/**\n * Partial data for a Role.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialRoleData","c":"discord.js!PartialRoleData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"RoleData","c":"discord.js!RoleData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildManager.js","l":58,"co":1,"r":"Public","n":"PartialRoleData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PartialRoleData#color:member","d":"/**\n * The color of the role, either a hex string or a base 10 number\n */\n","ex":[{"k":"Content","t":"undefined color :"},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"color","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#hoist:member","d":"/**\n * Whether the role should be hoisted\n */\n","ex":[{"k":"Content","t":"undefined hoist :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"hoist","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#id:member","d":"/**\n * The role's id, used to set channel overrides. This is a placeholder and will be replaced by the API after consumption\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!PartialRoleData#id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6438,"co":3,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#mentionable:member","d":"/**\n * Whether the role should be mentionable\n */\n","ex":[{"k":"Content","t":"undefined mentionable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"mentionable","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#name:member","d":"/**\n * The name of the role\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#permissions:member","d":"/**\n * The permissions of the role\n */\n","ex":[{"k":"Content","t":"undefined permissions :"},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!PartialRoleData#position:member","d":"/**\n * The position of the role\n */\n","ex":[{"k":"Content","t":"undefined position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Enum","c":"discord.js!Partials:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"Partials","c":"discord.js!Partials:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6441,"co":1,"r":"Public","n":"Partials","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!Partials.Channel:member","d":"","ex":[{"k":"Reference","t":"Channel","c":"discord.js!Partials.Channel:member"}],"l":6443,"co":3,"r":"Public","n":"Channel"},{"k":"EnumMember","c":"discord.js!Partials.GuildMember:member","d":"","ex":[{"k":"Reference","t":"GuildMember","c":"discord.js!Partials.GuildMember:member"}],"l":6444,"co":3,"r":"Public","n":"GuildMember"},{"k":"EnumMember","c":"discord.js!Partials.GuildScheduledEvent:member","d":"","ex":[{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!Partials.GuildScheduledEvent:member"}],"l":6447,"co":3,"r":"Public","n":"GuildScheduledEvent"},{"k":"EnumMember","c":"discord.js!Partials.Message:member","d":"","ex":[{"k":"Reference","t":"Message","c":"discord.js!Partials.Message:member"}],"l":6445,"co":3,"r":"Public","n":"Message"},{"k":"EnumMember","c":"discord.js!Partials.Reaction:member","d":"","ex":[{"k":"Reference","t":"Reaction","c":"discord.js!Partials.Reaction:member"}],"l":6446,"co":3,"r":"Public","n":"Reaction"},{"k":"EnumMember","c":"discord.js!Partials.ThreadMember:member","d":"","ex":[{"k":"Reference","t":"ThreadMember","c":"discord.js!Partials.ThreadMember:member"}],"l":6448,"co":3,"r":"Public","n":"ThreadMember"},{"k":"EnumMember","c":"discord.js!Partials.User:member","d":"","ex":[{"k":"Reference","t":"User","c":"discord.js!Partials.User:member"}],"l":6442,"co":3,"r":"Public","n":"User"}]},{"k":"Interface","c":"discord.js!PartialTextBasedChannelFields:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialTextBasedChannelFields","c":"discord.js!PartialTextBasedChannelFields:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> "}],"pat":"typings/index.d.ts","l":4504,"co":1,"r":"Public","tps":[{"tp":"InGuild","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"PartialTextBasedChannelFields","pmo":false,"ms":[{"k":"MethodSignature","c":"discord.js!PartialTextBasedChannelFields#send:member(1)","d":"","ex":[{"k":"Reference","t":"send","c":"discord.js!PartialTextBasedChannelFields#send"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":4505,"co":3,"op":false,"rtr":{"st":10,"en":16},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":9},"op":false,"rs":false}],"n":"send"}],"etrs":[]},{"k":"Interface","c":"discord.js!PartialThreadMember:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialThreadMember","c":"discord.js!PartialThreadMember:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":", 'flags' | 'joinedAt' | 'joinedTimestamp'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6428,"co":1,"r":"Public","n":"PartialThreadMember","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PartialUser:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PartialUser","c":"discord.js!PartialUser:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Partialize","c":"discord.js!Partialize:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":", 'username' | 'tag' | 'discriminator'>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6451,"co":1,"r":"Public","n":"PartialUser","pmo":false,"ms":[],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!PermissionFlags:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PermissionFlags","c":"discord.js!PermissionFlags:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types!PermissionFlagsBits:var"},{"k":"Content","t":", "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6351,"co":1,"r":"Public","n":"PermissionFlags","ttr":{"st":3,"en":11}},{"k":"Class","c":"discord.js!PermissionOverwriteManager:class","d":"/**\n * Manages API methods for guild channel permission overwrites and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":", "},{"k":"Reference","t":"PermissionOverwriteResolvable","c":"discord.js!PermissionOverwriteResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/PermissionOverwriteManager.js","l":17,"co":1,"r":"Public","ab":false,"n":"PermissionOverwriteManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!PermissionOverwriteManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":41,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionOverwriteManager#channel:member","d":"/**\n * The channel of the permission overwrite this manager belongs to\n */\n","ex":[{"k":"Content","t":"undefined channel :"},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":";"}],"l":32,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionOverwriteManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionOverwriteManager#create:member(1)","d":"/**\n * Creates permission overwrites for a user or role in this channel, or replaces them if already present.\n *\n * @param userOrRole - The user or role to update\n *\n * @param options - The options for the update\n *\n * @param overwriteOptions - The extra information for the update\n *\n * @example\n * ```js\n * // Create or Replace permission overwrites for a message author\n * message.channel.permissionOverwrites.create(message.author, {\n *   SendMessages: false\n * })\n *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!PermissionOverwriteManager#create"},{"k":"Content","t":"(  "},{"k":"Reference","t":"userOrRole","c":"discord.js!~userOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionOverwriteOptions","c":"discord.js!PermissionOverwriteOptions:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"overwriteOptions","c":"discord.js!~overwriteOptions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildChannelOverwriteOptions","c":"discord.js!GuildChannelOverwriteOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":128,"co":3,"sta":false,"rtr":{"st":17,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"options","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"overwriteOptions","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!PermissionOverwriteManager#delete:member(1)","d":"/**\n * Deletes permission overwrites for a user or role in this channel.\n *\n * @param userOrRole - The user or role to delete\n *\n * @param reason - The reason for deleting the overwrite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!PermissionOverwriteManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"userOrRole","c":"discord.js!~userOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":159,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!PermissionOverwriteManager#edit:member(1)","d":"/**\n * Edits permission overwrites for a user or role in this channel, or creates an entry if not already present.\n *\n * @param userOrRole - The user or role to update\n *\n * @param options - The options for the update\n *\n * @param overwriteOptions - The extra information for the update\n *\n * @example\n * ```js\n * // Edit or Create permission overwrites for a message author\n * message.channel.permissionOverwrites.edit(message.author, {\n *   SendMessages: false\n * })\n *   .then(channel => console.log(channel.permissionOverwrites.cache.get(message.author.id)))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!PermissionOverwriteManager#edit"},{"k":"Content","t":"(  "},{"k":"Reference","t":"userOrRole","c":"discord.js!~userOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionOverwriteOptions","c":"discord.js!PermissionOverwriteOptions:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"overwriteOptions","c":"discord.js!~overwriteOptions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildChannelOverwriteOptions","c":"discord.js!GuildChannelOverwriteOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":146,"co":3,"sta":false,"rtr":{"st":17,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"options","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"overwriteOptions","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!PermissionOverwriteManager#set:member(1)","d":"/**\n * Replaces the permission overwrites in this channel.\n *\n * @param overwrites - Permission overwrites the channel gets updated with\n *\n * @param reason - Reason for updating the channel overwrites\n *\n * @example\n * ```js\n * message.channel.permissionOverwrites.set([\n *   {\n *      id: message.author.id,\n *      deny: [PermissionFlagsBits.ViewChannel],\n *   },\n * ], 'Needed to change permissions');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"set","c":"discord.js!PermissionOverwriteManager#set"},{"k":"Content","t":"(  "},{"k":"Reference","t":"overwrites","c":"discord.js!~overwrites"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":65,"co":3,"sta":false,"rtr":{"st":19,"en":23},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"overwrites","ptr":{"st":5,"en":14},"op":false,"rs":false},{"pn":"reason","ptr":{"st":17,"en":18},"op":true,"rs":false}],"op":false,"ab":false,"n":"set"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":9}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!PermissionOverwriteOptions:type","d":"/**\n * An object mapping permission flags to `true` (enabled), `null` (unset) or `false` (disabled).\n * ```js\n * {\n *  'SendMessages': true,\n *  'EmbedLinks': null,\n *  'AttachFiles': false,\n * }\n * ```\n *\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PermissionOverwriteOptions","c":"discord.js!PermissionOverwriteOptions:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types!PermissionFlagsBits:var"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/PermissionOverwrites.js","l":97,"co":1,"r":"Public","n":"PermissionOverwriteOptions","ttr":{"st":3,"en":15}},{"k":"TypeAlias","c":"discord.js!PermissionOverwriteResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PermissionOverwriteResolvable","c":"discord.js!PermissionOverwriteResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6357,"co":1,"r":"Public","n":"PermissionOverwriteResolvable","ttr":{"st":3,"en":8}},{"k":"Class","c":"discord.js!PermissionOverwrites:class","d":"/**\n * Represents a permission overwrite for a role or member in a guild channel.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/PermissionOverwrites.js","l":13,"co":1,"r":"Public","ab":false,"n":"PermissionOverwrites","pmo":false,"ms":[{"k":"Property","c":"discord.js!PermissionOverwrites#allow:member","d":"/**\n * The permissions that are allowed for the user or role.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"allow","c":"discord.js!PermissionOverwrites#allow"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"allow","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionOverwrites#channel:member","d":"/**\n * The GuildChannel this overwrite is for\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"channel","c":"discord.js!PermissionOverwrites#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionOverwrites#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionOverwrites#delete:member(1)","d":"/**\n * Deletes this Permission Overwrite.\n *\n * @param reason - Reason for deleting this overwrite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!PermissionOverwrites#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":83,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!PermissionOverwrites#deny:member","d":"/**\n * The permissions that are denied for the user or role.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deny","c":"discord.js!PermissionOverwrites#deny"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"deny","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionOverwrites#edit:member(1)","d":"/**\n * Edits this Permission Overwrite.\n *\n * @param options - The options for the update\n *\n * @param reason - Reason for creating/editing this overwrite\n *\n * @example\n * ```js\n * // Update permission overwrites\n * permissionOverwrites.edit({\n *   SendMessages: false\n * })\n *   .then(channel => console.log(channel.permissionOverwrites.get(message.author.id)))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!PermissionOverwrites#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionOverwriteOptions","c":"discord.js!PermissionOverwriteOptions:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionOverwrites","c":"discord.js!PermissionOverwrites:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":73,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!PermissionOverwrites#id:member","d":"/**\n * The overwrite's id, either a {@link User} or a {@link Role} id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!PermissionOverwrites#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionOverwrites.resolve:member(1)","d":"/**\n * Resolves an overwrite into {@link RawOverwriteData}.\n *\n * @param overwrite - The overwrite-like data to resolve\n *\n * @param guild - The guild to resolve from\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!PermissionOverwrites.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"overwrite","c":"discord.js!~overwrite"},{"k":"Content","t":": "},{"k":"Reference","t":"OverwriteResolvable","c":"discord.js!OverwriteResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"guild","c":"discord.js!~guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"APIOverwrite","c":"discord-api-types!APIOverwrite:interface"},{"k":"Content","t":";"}],"l":172,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"overwrite","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"guild","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!PermissionOverwrites.resolveOverwriteOptions:member(1)","d":"/**\n * Resolves bitfield permissions overwrites from an object.\n *\n * @param options - The options for the update\n *\n * @param initialPermissions - The initial permissions\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolveOverwriteOptions","c":"discord.js!PermissionOverwrites.resolveOverwriteOptions"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionOverwriteOptions","c":"discord.js!PermissionOverwriteOptions:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"initialPermissions","c":"discord.js!~initialPermissions"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"allow","c":"discord.js!~__type#allow"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":"; "},{"k":"Reference","t":"deny","c":"discord.js!~__type#deny"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"ResolvedOverwriteOptions","c":"discord.js!ResolvedOverwriteOptions:interface"},{"k":"Content","t":";"}],"l":121,"co":3,"sta":true,"rtr":{"st":19,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"initialPermissions","ptr":{"st":9,"en":18},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveOverwriteOptions"},{"k":"Method","c":"discord.js!PermissionOverwrites#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!PermissionOverwrites#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2525,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!PermissionOverwrites#type:member","d":"/**\n * The type of this overwrite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!PermissionOverwrites#type"},{"k":"Content","t":": "},{"k":"Reference","t":"OverwriteType","c":"discord-api-types!OverwriteType:enum"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!PermissionResolvable:type","d":"/**\n * Data that can be resolved to give a permission number. This can be:\n *\n * * A string (see {@link PermissionsBitField.Flags})\n *\n * * A permission number\n *\n * * An instance of {@link PermissionsBitField}\n *\n * * An Array of PermissionResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types!PermissionFlagsBits:var"},{"k":"Content","t":", "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/PermissionsBitField.js","l":56,"co":1,"r":"Public","n":"PermissionResolvable","ttr":{"st":3,"en":11}},{"k":"Class","c":"discord.js!PermissionsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a permission bitfield. All {@link GuildMember}s have a set of permissions in their guild, and each channel in the guild may also have {@link PermissionOverwrites} for the member that override their default permissions.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/PermissionsBitField.js","l":12,"co":1,"r":"Public","ab":false,"n":"PermissionsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!PermissionsBitField.All:member","d":"/**\n * Bitfield representing every permission combined\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"All","c":"discord.js!PermissionsBitField.All"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"All","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionsBitField#any:member(1)","d":"/**\n * Checks whether the bitfield has a permission, or any of multiple permissions.\n *\n * @param permission - Permission(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"any","c":"discord.js!PermissionsBitField#any"},{"k":"Content","t":"("},{"k":"Reference","t":"permission","c":"discord.js!~permission"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":81,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permission","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"any"},{"k":"Property","c":"discord.js!PermissionsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"l":50,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionsBitField.Default:member","d":"/**\n * Bitfield representing the default permissions for users\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Default","c":"discord.js!PermissionsBitField.Default"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"Default","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PermissionsBitField.Flags:member","d":"/**\n * Numeric permission flags.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/permissions#permissions-bitwise-permission-flags}\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!PermissionsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types!PermissionFlagsBits:var"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionsBitField#has:member(1)","d":"/**\n * Checks whether the bitfield has a permission, or multiple permissions.\n *\n * @param permission - Permission(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"has","c":"discord.js!PermissionsBitField#has"},{"k":"Content","t":"("},{"k":"Reference","t":"permission","c":"discord.js!~permission"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":91,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permission","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"has"},{"k":"Method","c":"discord.js!PermissionsBitField#missing:member(1)","d":"/**\n * Gets all given bits that are missing from the bitfield.\n *\n * @param bits - Bit(s) to check for\n *\n * @param checkAdmin - Whether to allow the administrator permission to override\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"missing","c":"discord.js!PermissionsBitField#missing"},{"k":"Content","t":"("},{"k":"Reference","t":"bits","c":"discord.js!~bits"},{"k":"Content","t":": "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"bigint"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":71,"co":3,"sta":false,"rtr":{"st":16,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bits","ptr":{"st":5,"en":11},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":14,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"missing"},{"k":"Method","c":"discord.js!PermissionsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!PermissionsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"permission","c":"discord.js!~permission"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2546,"co":3,"sta":true,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permission","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!PermissionsBitField#serialize:member(1)","d":"/**\n * Gets an object mapping field names to a {@link boolean} indicating whether the bit is available.\n *\n * @param hasParams - Additional parameters for the has method, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"serialize","c":"discord.js!PermissionsBitField#serialize"},{"k":"Content","t":"("},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":118,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"checkAdmin","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"serialize"},{"k":"Property","c":"discord.js!PermissionsBitField.StageModerator:member","d":"/**\n * Bitfield representing the permissions required for moderators of stage channels\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"StageModerator","c":"discord.js!PermissionsBitField.StageModerator"},{"k":"Content","t":": "},{"k":"Reference","t":"bigint"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"StageModerator","prtr":{"st":3,"en":4},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PermissionsBitField#toArray:member(1)","d":"/**\n * Gets an {@link Array} of bitfield names based on the permissions available.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toArray","c":"discord.js!PermissionsBitField#toArray"},{"k":"Content","t":"(): "},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":99,"co":3,"sta":false,"rtr":{"st":3,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toArray"}],"etr":{"st":3,"en":9,"tps":[{"st":5,"en":6},{"st":7,"en":8}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!PermissionsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PermissionsString","c":"discord.js!PermissionsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"PermissionFlagsBits","c":"discord-api-types!PermissionFlagsBits:var"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2533,"co":1,"r":"Public","n":"PermissionsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!Presence:class","d":"/**\n * Represents a user's presence.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Presence.js","l":36,"co":1,"r":"Public","ab":false,"n":"Presence","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Presence:constructor(1)","d":"/**\n * Constructs a new instance of the `Presence` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawPresenceData","c":"discord.js!~RawPresenceData:type"},{"k":"Content","t":");"}],"l":36,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!Presence#activities:member","d":"/**\n * The activities of this presence\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"activities","c":"discord.js!Presence#activities"},{"k":"Content","t":": "},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":89,"co":3,"ro":false,"op":false,"r":"Public","n":"activities","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#clientStatus:member","d":"/**\n * The devices this presence is on\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"clientStatus","c":"discord.js!Presence#clientStatus"},{"k":"Content","t":": "},{"k":"Reference","t":"ClientPresenceStatusData","c":"discord.js!ClientPresenceStatusData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":102,"co":3,"ro":false,"op":false,"r":"Public","n":"clientStatus","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Presence#equals:member(1)","d":"/**\n * Whether this presence is equal to another.\n *\n * @param presence - The presence to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Presence#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"presence","c":"discord.js!~presence"},{"k":"Content","t":": "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":121,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"presence","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!Presence#guild:member","d":"/**\n * The guild this presence is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!Presence#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":50,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#member:member","d":"/**\n * The member of this presence\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"member","c":"discord.js!Presence#member"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":true,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#status:member","d":"/**\n * The status of this presence\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"status","c":"discord.js!Presence#status"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceStatus","c":"discord.js!PresenceStatus:type"},{"k":"Content","t":";"}],"l":79,"co":3,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#user:member","d":"/**\n * The user of this presence\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"user","c":"discord.js!Presence#user"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Presence#userId:member","d":"/**\n * The presence's user id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"userId","c":"discord.js!Presence#userId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"userId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!PresenceData:interface","d":"/**\n * Data resembling a raw Discord presence.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PresenceData","c":"discord.js!PresenceData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ClientUser.js","l":107,"co":1,"r":"Public","n":"PresenceData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PresenceData#activities:member","d":"/**\n * Activity the user is playing\n */\n","ex":[{"k":"Reference","t":"activities","c":"discord.js!PresenceData#activities"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ActivitiesOptions","c":"discord.js!ActivitiesOptions:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6368,"co":3,"ro":false,"op":true,"r":"Public","n":"activities","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!PresenceData#afk:member","d":"/**\n * Whether the user is AFK\n */\n","ex":[{"k":"Reference","t":"afk","c":"discord.js!PresenceData#afk"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6367,"co":3,"ro":false,"op":true,"r":"Public","n":"afk","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!PresenceData#shardId:member","d":"/**\n * Shard id(s) to have the activity set on\n */\n","ex":[{"k":"Reference","t":"shardId","c":"discord.js!PresenceData#shardId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6369,"co":3,"ro":false,"op":true,"r":"Public","n":"shardId","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!PresenceData#status:member","d":"/**\n * Status of the user\n */\n","ex":[{"k":"Reference","t":"status","c":"discord.js!PresenceData#status"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PresenceStatusData","c":"discord.js!PresenceStatusData:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6366,"co":3,"ro":false,"op":true,"r":"Public","n":"status","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!PresenceManager:class","d":"/**\n * Manages API methods for Presences and holds their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"PresenceManager","c":"discord.js!PresenceManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":", "},{"k":"Reference","t":"PresenceResolvable","c":"discord.js!PresenceResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/PresenceManager.js","l":10,"co":1,"r":"Public","ab":false,"n":"PresenceManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!PresenceManager#cache:member","d":"/**\n * The cache of Presences\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":15,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PresenceManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!PresenceManager#resolve:member(1)","d":"/**\n * Resolves a {@link PresenceResolvable} to a {@link Presence} object.\n *\n * @param presence - The presence resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(presence"},{"k":"Reference","t":"PresenceResolvable","c":"discord.js!PresenceResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":";"}],"l":38,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"presence","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!PresenceManager#resolveId:member(1)","d":"/**\n * Resolves a {@link PresenceResolvable} to a {@link Presence} id.\n *\n * @param presence - The presence resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(presence"},{"k":"Reference","t":"PresenceResolvable","c":"discord.js!PresenceResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":50,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"presence","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!PresenceResolvable:type","d":"/**\n * Data that can be resolved to a Presence object. This can be:\n *\n * * A Presence\n *\n * * A UserResolvable\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PresenceResolvable","c":"discord.js!PresenceResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/PresenceManager.js","l":25,"co":1,"r":"Public","n":"PresenceResolvable","ttr":{"st":3,"en":8}},{"k":"TypeAlias","c":"discord.js!PresenceStatus:type","d":"/**\n * The status of this presence:\n *\n * * **`online`* * - user is online\n *\n * * **`idle`* * - user is AFK\n *\n * * **`offline`* * - user is offline or invisible\n *\n * * **`dnd`* * - user is in Do Not Disturb\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PresenceStatus","c":"discord.js!PresenceStatus:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"PresenceStatusData","c":"discord.js!PresenceStatusData:type"},{"k":"Content","t":" | 'offline'"},{"k":"Content","t":";"}],"pat":"src/structures/Presence.js","l":15,"co":1,"r":"Public","n":"PresenceStatus","ttr":{"st":3,"en":5}},{"k":"TypeAlias","c":"discord.js!PresenceStatusData:type","d":"/**\n * A user's status. Must be one of:\n *\n * * `online`\n *\n * * `idle`\n *\n * * `invisible`\n *\n * * `dnd` (do not disturb)\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"PresenceStatusData","c":"discord.js!PresenceStatusData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ClientPresenceStatus","c":"discord.js!ClientPresenceStatus:type"},{"k":"Content","t":" | 'invisible'"},{"k":"Content","t":";"}],"pat":"src/structures/ClientUser.js","l":128,"co":1,"r":"Public","n":"PresenceStatusData","ttr":{"st":3,"en":5}},{"k":"Interface","c":"discord.js!PrivateThreadChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PrivateThreadChannel","c":"discord.js!PrivateThreadChannel:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<false>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3136,"co":1,"r":"Public","n":"PrivateThreadChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!PrivateThreadChannel#createdAt:member","d":"","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdAt","c":"discord.js!PrivateThreadChannel#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":3138,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!PrivateThreadChannel#createdTimestamp:member","d":"","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!PrivateThreadChannel#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":3137,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"PropertySignature","c":"discord.js!PrivateThreadChannel#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!PrivateThreadChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":";"}],"l":3139,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":5,"tps":[{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!PublicThreadChannel:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"PublicThreadChannel","c":"discord.js!PublicThreadChannel:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Forum"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Forum"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3132,"co":1,"r":"Public","tps":[{"tp":"Forum","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"PublicThreadChannel","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!PublicThreadChannel#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!PublicThreadChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":";"}],"l":3133,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":5}}],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"Class","c":"discord.js!ReactionCollector:class","d":"/**\n * Collects reactions on messages. Will automatically stop if the message ({@link Client.messageDelete | messageDelete} or {@link Client.messageDeleteBulk | messageDeleteBulk}), channel ({@link Client.channelDelete | channelDelete}), thread ({@link Client.threadDelete | threadDelete}), or guild ({@link Client.guildDelete | guildDelete}) is deleted.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ReactionCollector","c":"discord.js!ReactionCollector:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Collector","c":"discord.js!Collector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Content","t":"["},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/ReactionCollector.js","l":23,"co":1,"r":"Public","ab":false,"n":"ReactionCollector","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ReactionCollector:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ReactionCollectorOptions","c":"discord.js!ReactionCollectorOptions:interface"},{"k":"Content","t":");"}],"l":23,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"options","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!ReactionCollector#client:member","d":"/**\n * The client that instantiated this Collector\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":35,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!ReactionCollector#collect:member(0)","d":"/**\n * Emitted whenever a reaction is collected.\n *\n * @param reaction - The reaction that was collected\n *\n * @param user - The user that added the reaction\n */\n","ex":[{"k":"Content","t":"on('collect', (reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"l":111,"r":"Public","oi":0,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"collect"},{"k":"Method","c":"discord.js!ReactionCollector#collect:member(1)","d":"/**\n * Handles an incoming reaction for possible collection.\n *\n * @param reaction - The reaction to possibly collect\n *\n * @param user - The user that added the reaction\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"collect","c":"discord.js!ReactionCollector#collect"},{"k":"Content","t":"("},{"k":"Reference","t":"reaction","c":"discord.js!~reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":110,"co":3,"sta":false,"rtr":{"st":11,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reaction","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"user","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"collect"},{"k":"Property","c":"discord.js!ReactionCollector#collected:member","d":"/**\n * The items collected by this collector\n */\n","ex":[{"k":"Content","t":"undefined collected :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":60,"ro":false,"op":false,"r":"Public","n":"collected","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!ReactionCollector#create:member(0)","d":"/**\n * Emitted whenever a reaction is newly created on a message. Will emit only when a new reaction is added to the message, as opposed to {@link Collector.collect} which will be emitted even when a reaction has already been added to the message.\n *\n * @param reaction - The reaction that was added\n *\n * @param user - The user that added the reaction\n */\n","ex":[{"k":"Content","t":"on('create', (reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"l":82,"r":"Public","oi":0,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"create"},{"k":"Event","c":"discord.js!ReactionCollector#dispose:member(0)","d":"/**\n * Emitted when the reaction had all the users removed and the `dispose` option is set to true.\n *\n * @param reaction - The reaction that was disposed of\n *\n * @param user - The user that removed the reaction\n */\n","ex":[{"k":"Content","t":"on('dispose', (reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"l":129,"r":"Public","oi":0,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"dispose"},{"k":"Method","c":"discord.js!ReactionCollector#dispose:member(1)","d":"/**\n * Handles a reaction deletion for possible disposal.\n *\n * @param reaction - The reaction to possibly dispose of\n *\n * @param user - The user that removed the reaction\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"dispose","c":"discord.js!ReactionCollector#dispose"},{"k":"Content","t":"("},{"k":"Reference","t":"reaction","c":"discord.js!~reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":128,"co":3,"sta":false,"rtr":{"st":11,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reaction","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"user","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"dispose"},{"k":"Method","c":"discord.js!ReactionCollector#empty:member(1)","d":"/**\n * Empties this reaction collector.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"empty","c":"discord.js!ReactionCollector#empty"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":152,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"empty"},{"k":"Event","c":"discord.js!ReactionCollector#end:member(0)","d":"/**\n * Emitted when the collector is finished collecting.\n *\n * @param collected - The elements collected by the collector\n *\n * @param reason - The reason the collector ended\n */\n","ex":[{"k":"Content","t":"on('end', (collected: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":", reason: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":227,"r":"Public","oi":0,"ps":[{"pn":"collected","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"end"},{"k":"Property","c":"discord.js!ReactionCollector#ended:member","d":"/**\n * Whether this collector has finished collecting\n */\n","ex":[{"k":"Content","t":"undefined ended :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":66,"ro":false,"op":false,"r":"Public","n":"ended","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#endReason:member","d":"/**\n * The reason this collector has ended with, or null if it hasn't ended yet\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly endReason :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":164,"ro":true,"op":true,"r":"Public","n":"endReason","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#filter:member","d":"/**\n * The filter applied to this collector\n */\n","ex":[{"k":"Content","t":"undefined filter :"},{"k":"Reference","t":"CollectorFilter","c":"discord.js!CollectorFilter:type"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":48,"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!ReactionCollector#ignore:member(0)","d":"/**\n * Emitted whenever an element is not collected by the collector.\n *\n * @param args - The arguments emitted by the listener\n */\n","ex":[{"k":"Content","t":"on('ignore', (args: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"pat":"src/structures/interfaces/Collector.js","l":141,"r":"Public","oi":0,"ps":[{"pn":"args","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"ignore"},{"k":"Method","c":"discord.js!ReactionCollector.key:member(1)","d":"/**\n * Gets the collector key for a reaction.\n *\n * @param reaction - The message reaction to get the key for\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"key","c":"discord.js!ReactionCollector.key"},{"k":"Content","t":"("},{"k":"Reference","t":"reaction","c":"discord.js!~reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":224,"co":3,"sta":true,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reaction","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"key"},{"k":"Property","c":"discord.js!ReactionCollector#lastCollectedAt:member","d":"/**\n * The Date at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":110,"ro":false,"op":true,"r":"Public","n":"lastCollectedAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#lastCollectedTimestamp:member","d":"/**\n * The timestamp at which this collector last collected an item\n */\n","ex":[{"k":"Content","t":"undefined lastCollectedTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":103,"ro":false,"op":true,"r":"Public","n":"lastCollectedTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#message:member","d":"/**\n * The message upon which to collect reactions\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"message","c":"discord.js!ReactionCollector#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#next:member","d":"/**\n * Returns a promise that resolves with the next collected element; rejects with collected elements if the collector finishes without receiving a next element\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly next :"},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":180,"ro":true,"op":false,"r":"Public","n":"next","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ReactionCollector#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!ReactionCollector#on"},{"k":"Content","t":"(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'collect' | 'dispose' | 'remove' | 'ignore'"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"reaction","c":"discord.js!~reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2578,"co":3,"sta":false,"rtr":{"st":20,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":19},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!ReactionCollector#on:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!ReactionCollector#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'end'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"collected","c":"discord.js!~collected"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">, "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2582,"co":3,"sta":false,"rtr":{"st":24,"en":25},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":23},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!ReactionCollector#on:member(3)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!ReactionCollector#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2583,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!ReactionCollector#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!ReactionCollector#once"},{"k":"Content","t":"(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'collect' | 'dispose' | 'remove' | 'ignore'"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"reaction","c":"discord.js!~reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2585,"co":3,"sta":false,"rtr":{"st":20,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":19},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Method","c":"discord.js!ReactionCollector#once:member(2)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!ReactionCollector#once"},{"k":"Content","t":"(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'end'"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"collected","c":"discord.js!~collected"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">, "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2589,"co":3,"sta":false,"rtr":{"st":24,"en":25},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":23},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Method","c":"discord.js!ReactionCollector#once:member(3)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!ReactionCollector#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":"[]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2593,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!ReactionCollector#options:member","d":"/**\n * The options of this collector\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!ReactionCollector#options"},{"k":"Content","t":": "},{"k":"Reference","t":"ReactionCollectorOptions","c":"discord.js!ReactionCollectorOptions:interface"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/Collector.js","l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!ReactionCollector#remove:member(0)","d":"/**\n * Emitted when the reaction had one user removed and the `dispose` option is set to true.\n *\n * @param reaction - The reaction that was removed\n *\n * @param user - The user that removed the reaction\n */\n","ex":[{"k":"Content","t":"on('remove', (reaction: "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", user: "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":") => {})"}],"l":137,"r":"Public","oi":0,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"user","ptr":{"st":3,"en":4},"op":false,"rs":false}],"n":"remove"},{"k":"Property","c":"discord.js!ReactionCollector#total:member","d":"/**\n * The total number of reactions collected\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"total","c":"discord.js!ReactionCollector#total"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"total","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionCollector#users:member","d":"/**\n * The users that have reacted to this message\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!ReactionCollector#users"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":15,"tps":[{"st":5,"en":8},{"st":9,"en":10},{"st":11,"en":14}]},"itrs":[]},{"k":"Interface","c":"discord.js!ReactionCollectorOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ReactionCollectorOptions","c":"discord.js!ReactionCollectorOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CollectorOptions","c":"discord.js!CollectorOptions:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]>"},{"k":"Content","t":" "}],"pat":"src/structures/ReactionCollector.js","l":7,"co":1,"r":"Public","n":"ReactionCollectorOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ReactionCollectorOptions#max:member","d":"/**\n * The maximum total amount of reactions to collect\n */\n","ex":[{"k":"Reference","t":"max","c":"discord.js!ReactionCollectorOptions#max"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6458,"co":3,"ro":false,"op":true,"r":"Public","n":"max","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ReactionCollectorOptions#maxEmojis:member","d":"/**\n * The maximum number of emojis to collect\n */\n","ex":[{"k":"Reference","t":"maxEmojis","c":"discord.js!ReactionCollectorOptions#maxEmojis"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6459,"co":3,"ro":false,"op":true,"r":"Public","n":"maxEmojis","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ReactionCollectorOptions#maxUsers:member","d":"/**\n * The maximum number of users to react\n */\n","ex":[{"k":"Reference","t":"maxUsers","c":"discord.js!ReactionCollectorOptions#maxUsers"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6460,"co":3,"ro":false,"op":true,"r":"Public","n":"maxUsers","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":9,"tps":[{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!ReactionEmoji:class","d":"/**\n * Represents a limited emoji set used for both custom and unicode emojis. Custom emojis will use this class opposed to the Emoji class when the client doesn't know enough information about them.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ReactionEmoji","c":"discord.js!ReactionEmoji:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":" "}],"pat":"src/structures/ReactionEmoji.js","l":12,"co":1,"r":"Public","ab":false,"n":"ReactionEmoji","pmo":false,"ms":[{"k":"Property","c":"discord.js!ReactionEmoji#animated:member","d":"/**\n * Whether or not the emoji is animated\n */\n","ex":[{"k":"Content","t":"undefined animated :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":21,"ro":false,"op":true,"r":"Public","n":"animated","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#createdAt:member","d":"/**\n * The time the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":84,"ro":true,"op":true,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#createdTimestamp:member","d":"/**\n * The timestamp the emoji was created at, or null if unicode\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":75,"ro":true,"op":true,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#id:member","d":"/**\n * The emoji's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":33,"ro":false,"op":true,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#identifier:member","d":"/**\n * The identifier of this emoji, used for message reactions\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly identifier :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":41,"ro":true,"op":false,"r":"Public","n":"identifier","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#name:member","d":"/**\n * The emoji's name\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":27,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionEmoji#reaction:member","d":"/**\n * The message reaction this emoji refers to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reaction","c":"discord.js!ReactionEmoji#reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"reaction","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ReactionEmoji#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!ReactionEmoji#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2599,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Property","c":"discord.js!ReactionEmoji#url:member","d":"/**\n * Returns a URL for the emoji or `null` if this is not a custom emoji.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Emoji.js","l":61,"ro":true,"op":true,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ReactionManager:class","d":"/**\n * Manages API methods for reactions and holds their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ReactionManager","c":"discord.js!ReactionManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReactionResolvable","c":"discord.js!MessageReactionResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ReactionManager.js","l":11,"co":1,"r":"Public","ab":false,"n":"ReactionManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!ReactionManager#cache:member","d":"/**\n * The reaction cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<("},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"), "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionManager#message:member","d":"/**\n * The message that this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"message","c":"discord.js!ReactionManager#message"},{"k":"Content","t":": "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ReactionManager#removeAll:member(1)","d":"/**\n * Removes all reactions from a message.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"removeAll","c":"discord.js!ReactionManager#removeAll"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":62,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"removeAll"},{"k":"Method","c":"discord.js!ReactionManager#resolve:member(1)","d":"/**\n * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} object.\n *\n * @param reaction - The MessageReaction to resolve\n */\n","ex":[{"k":"Content","t":"resolve(reaction"},{"k":"Reference","t":"MessageReactionResolvable","c":"discord.js!MessageReactionResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":";"}],"l":40,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!ReactionManager#resolveId:member(1)","d":"/**\n * Resolves a {@link MessageReactionResolvable} to a {@link MessageReaction} id.\n *\n * @param reaction - The MessageReaction to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(reaction"},{"k":"Reference","t":"MessageReactionResolvable","c":"discord.js!MessageReactionResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":49,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reaction","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":3,"en":13,"tps":[{"st":5,"en":8},{"st":9,"en":10},{"st":11,"en":12}]},"itrs":[]},{"k":"Class","c":"discord.js!ReactionUserManager:class","d":"/**\n * Manages API methods for users who reacted to a reaction and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ReactionUserManager","c":"discord.js!ReactionUserManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":", "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ReactionUserManager.js","l":14,"co":1,"r":"Public","ab":false,"n":"ReactionUserManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!ReactionUserManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ReactionUserManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ReactionUserManager#fetch:member(1)","d":"/**\n * Fetches all the users that gave this reaction. Resolves with a collection of users, mapped by their ids.\n *\n * @param options - Options for fetching the users\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ReactionUserManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchReactionUsersOptions","c":"discord.js!FetchReactionUsersOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":43,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!ReactionUserManager#reaction:member","d":"/**\n * The reaction that this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"reaction","c":"discord.js!ReactionUserManager#reaction"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"reaction","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ReactionUserManager#remove:member(1)","d":"/**\n * Removes a user from this reaction.\n *\n * @param user - The user to remove the reaction of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!ReactionUserManager#remove"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":"?: "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":64,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"remove"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"Interface","c":"discord.js!RecursiveReadonlyArray:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"discord.js!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"ReadonlyArray","c":"!ReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":" | "},{"k":"Reference","t":"RecursiveReadonlyArray","c":"discord.js!RecursiveReadonlyArray:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">>"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6359,"co":1,"r":"Public","tps":[{"tp":"ItemType","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"RecursiveReadonlyArray","pmo":false,"ms":[],"etrs":[{"st":5,"en":13,"tps":[{"st":0,"en":0}]}]},{"k":"TypeAlias","c":"discord.js!RepliableInteraction:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RepliableInteraction","c":"discord.js!RepliableInteraction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"Interaction","c":"discord.js!Interaction:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">, "},{"k":"Reference","t":"AutocompleteInteraction","c":"discord.js!AutocompleteInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":1840,"co":1,"r":"Public","n":"RepliableInteraction","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ttr":{"st":9,"en":19}},{"k":"Interface","c":"discord.js!ReplyOptions:interface","d":"/**\n * Options for sending a message with a reply.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ReplyOptions","c":"discord.js!ReplyOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":68,"co":1,"r":"Public","n":"ReplyOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ReplyOptions#failIfNotExists:member","d":"/**\n * Whether to error if the referenced message does not exist (creates a standard message in this case when false)\n */\n","ex":[{"k":"Reference","t":"failIfNotExists","c":"discord.js!ReplyOptions#failIfNotExists"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6465,"co":3,"ro":false,"op":true,"r":"Public","n":"failIfNotExists","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ReplyOptions#messageReference:member","d":"/**\n * The message to reply to (must be in the same channel and not system)\n */\n","ex":[{"k":"Reference","t":"messageReference","c":"discord.js!ReplyOptions#messageReference"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6464,"co":3,"ro":false,"op":false,"r":"Public","n":"messageReference","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"discord.js!resolveColor:function(1)","d":"/**\n * Resolves a ColorResolvable into a color number.\n *\n * @param color - Color to resolve\n *\n * @returns A color\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"resolveColor","c":"discord.js!resolveColor"},{"k":"Content","t":"("},{"k":"Reference","t":"color","c":"discord.js!~color"},{"k":"Content","t":": "},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":280,"co":1,"rtr":{"st":7,"en":8},"r":"Public","oi":1,"ps":[{"pn":"color","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"resolveColor"},{"k":"Interface","c":"discord.js!ResolvedOverwriteOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ResolvedOverwriteOptions","c":"discord.js!ResolvedOverwriteOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/PermissionOverwrites.js","l":109,"co":1,"r":"Public","n":"ResolvedOverwriteOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ResolvedOverwriteOptions#allow:member","d":"/**\n * The allowed permissions\n */\n","ex":[{"k":"Reference","t":"allow","c":"discord.js!ResolvedOverwriteOptions#allow"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6473,"co":3,"ro":false,"op":false,"r":"Public","n":"allow","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ResolvedOverwriteOptions#deny:member","d":"/**\n * The denied permissions\n */\n","ex":[{"k":"Reference","t":"deny","c":"discord.js!ResolvedOverwriteOptions#deny"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6474,"co":3,"ro":false,"op":false,"r":"Public","n":"deny","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"discord.js!resolveSKUId:function(1)","d":"/**\n * Resolves a SKU id from a SKU resolvable.\n *\n * @param resolvable - The SKU resolvable to resolve\n *\n * @returns The resolved SKU id, or `null` if the resolvable was invalid\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"resolveSKUId","c":"discord.js!resolveSKUId"},{"k":"Content","t":"("},{"k":"Reference","t":"resolvable","c":"discord.js!~resolvable"},{"k":"Content","t":": "},{"k":"Reference","t":"SKUResolvable","c":"discord.js!SKUResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":494,"co":1,"rtr":{"st":7,"en":10},"r":"Public","oi":1,"ps":[{"pn":"resolvable","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"resolveSKUId"},{"k":"Class","c":"discord.js!RichPresenceAssets:class","d":"/**\n * Assets for a rich presence\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RichPresenceAssets","c":"discord.js!RichPresenceAssets:class"},{"k":"Content","t":" "}],"pat":"src/structures/Presence.js","l":301,"co":1,"r":"Public","ab":false,"n":"RichPresenceAssets","pmo":false,"ms":[{"k":"Property","c":"discord.js!RichPresenceAssets#activity:member","d":"/**\n * The activity of the RichPresenceAssets\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"activity","c":"discord.js!RichPresenceAssets#activity"},{"k":"Content","t":": "},{"k":"Reference","t":"Activity","c":"discord.js!Activity:class"},{"k":"Content","t":";"}],"l":303,"co":3,"ro":true,"op":false,"r":"Public","n":"activity","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RichPresenceAssets#largeImage:member","d":"/**\n * The large image asset's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"largeImage","c":"discord.js!RichPresenceAssets#largeImage"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":327,"co":3,"ro":false,"op":false,"r":"Public","n":"largeImage","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RichPresenceAssets#largeImageURL:member(1)","d":"/**\n * Gets the URL of the large image asset\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"largeImageURL","c":"discord.js!RichPresenceAssets#largeImageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":361,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"largeImageURL"},{"k":"Property","c":"discord.js!RichPresenceAssets#largeText:member","d":"/**\n * Hover text for the large image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"largeText","c":"discord.js!RichPresenceAssets#largeText"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":315,"co":3,"ro":false,"op":false,"r":"Public","n":"largeText","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RichPresenceAssets#smallImage:member","d":"/**\n * The small image asset's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"smallImage","c":"discord.js!RichPresenceAssets#smallImage"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":333,"co":3,"ro":false,"op":false,"r":"Public","n":"smallImage","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RichPresenceAssets#smallImageURL:member(1)","d":"/**\n * Gets the URL of the small image asset\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"smallImageURL","c":"discord.js!RichPresenceAssets#smallImageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":341,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"smallImageURL"},{"k":"Property","c":"discord.js!RichPresenceAssets#smallText:member","d":"/**\n * Hover text for the small image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"smallText","c":"discord.js!RichPresenceAssets#smallText"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":321,"co":3,"ro":false,"op":false,"r":"Public","n":"smallText","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"itrs":[]},{"k":"Class","c":"discord.js!Role:class","d":"/**\n * Represents a role on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Role.js","l":15,"co":1,"r":"Public","ab":false,"n":"Role","pmo":false,"ms":[{"k":"Property","c":"discord.js!Role#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#color:member","d":"/**\n * The base 10 color of the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"color","c":"discord.js!Role#color"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"color","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#comparePositionTo:member(1)","d":"/**\n * Compares this role's position to another role's.\n *\n * @param role - Role to compare to this one\n *\n * @returns Negative number if this role's position is lower (other role's is higher), positive number if this one is higher (other's is lower), 0 if equal\n *\n * @example\n * ```js\n * // Compare the position of a role to another\n * const roleCompare = role.comparePositionTo(otherRole);\n * if (roleCompare >= 1) console.log(`${role.name} is higher than ${otherRole.name}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"comparePositionTo","c":"discord.js!Role#comparePositionTo"},{"k":"Content","t":"("},{"k":"Reference","t":"role","c":"discord.js!~role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":225,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"comparePositionTo"},{"k":"Property","c":"discord.js!Role#createdAt:member","d":"/**\n * The time the role was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Role#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":163,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#createdTimestamp:member","d":"/**\n * The timestamp the role was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Role#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":154,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#delete:member(1)","d":"/**\n * Deletes the role.\n *\n * @param reason - Reason for deleting this role\n *\n * @example\n * ```js\n * // Delete a role\n * role.delete('The role needed to go')\n *   .then(deleted => console.log(`Deleted role ${deleted.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Role#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":411,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!Role#edit:member(1)","d":"/**\n * Edits the role.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Edit a role\n * role.edit({ name: 'new role' })\n *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!Role#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleEditOptions","c":"discord.js!RoleEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":254,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!Role#editable:member","d":"/**\n * Whether the role is editable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"editable","c":"discord.js!Role#editable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":192,"co":3,"ro":true,"op":false,"r":"Public","n":"editable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#equals:member(1)","d":"/**\n * Whether this role equals another role. It compares all properties, so for most operations it is advisable to just compare `role.id === role2.id` as it is much faster and is often what most users need.\n *\n * @param role - Role to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Role#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"role","c":"discord.js!~role"},{"k":"Content","t":": "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":432,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Property","c":"discord.js!Role#flags:member","d":"/**\n * The flags of this role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!Role#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleFlagsBitField","c":"discord.js!RoleFlagsBitField:class"},{"k":"Content","t":";"}],"l":111,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#guild:member","d":"/**\n * The guild that the role belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!Role#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#hexColor:member","d":"/**\n * The hexadecimal version of the role color, with a leading hashtag\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"hexColor","c":"discord.js!Role#hexColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"HexColorString","c":"discord.js!HexColorString:type"},{"k":"Content","t":";"}],"l":172,"co":3,"ro":true,"op":false,"r":"Public","n":"hexColor","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#hoist:member","d":"/**\n * If true, users that are part of this role will appear in a separate category in the users list\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"hoist","c":"discord.js!Role#hoist"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":false,"op":false,"r":"Public","n":"hoist","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#icon:member","d":"/**\n * The icon hash of the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!Role#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#iconURL:member(1)","d":"/**\n * A link to the role's icon\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!Role#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":421,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!Role#id:member","d":"/**\n * The role's id (unique to the guild it is part of)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Role#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#managed:member","d":"/**\n * Whether or not the role is managed by an external service\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"managed","c":"discord.js!Role#managed"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":91,"co":3,"ro":false,"op":false,"r":"Public","n":"managed","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#members:member","d":"/**\n * The cached guild members that have this role\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"members","c":"discord.js!Role#members"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":181,"co":3,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#mentionable:member","d":"/**\n * Whether or not the role can be mentioned by anyone\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mentionable","c":"discord.js!Role#mentionable"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":99,"co":3,"ro":false,"op":false,"r":"Public","n":"mentionable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#name:member","d":"/**\n * The name of the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Role#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#permissions:member","d":"/**\n * The permissions of the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissions","c":"discord.js!Role#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#permissionsIn:member(1)","d":"/**\n * Returns `channel.permissionsFor(role)`. Returns permissions for a role in a guild channel, taking into account permission overwrites.\n *\n * @param channel - The guild channel to use as context\n *\n * @param checkAdmin - Whether having the {@link discord-api-types#(PermissionFlagsBits:type).Administrator} permission will return all permissions\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsIn","c":"discord.js!Role#permissionsIn"},{"k":"Content","t":"(  "},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"NonThreadGuildBasedChannel","c":"discord.js!NonThreadGuildBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":266,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"permissionsIn"},{"k":"Property","c":"discord.js!Role#position:member","d":"/**\n * The position of the role in the role manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"position","c":"discord.js!Role#position"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":204,"co":3,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Role#rawPosition:member","d":"/**\n * The raw position of the role from the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rawPosition","c":"discord.js!Role#rawPosition"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#setColor:member(1)","d":"/**\n * Sets a new color for the role.\n *\n * @param color - The color of the role\n *\n * @param reason - Reason for changing the role's color\n *\n * @example\n * ```js\n * // Set the color of a role\n * role.setColor('#FF0000')\n *   .then(updated => console.log(`Set color of role to ${updated.color}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setColor","c":"discord.js!Role#setColor"},{"k":"Content","t":"("},{"k":"Reference","t":"color","c":"discord.js!~color"},{"k":"Content","t":": "},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":298,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"color","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setColor"},{"k":"Method","c":"discord.js!Role#setHoist:member(1)","d":"/**\n * Sets whether or not the role should be hoisted.\n *\n * @param hoist - Whether or not to hoist the role\n *\n * @param reason - Reason for setting whether or not the role should be hoisted\n *\n * @example\n * ```js\n * // Set the hoist of the role\n * role.setHoist(true)\n *   .then(updated => console.log(`Role hoisted: ${updated.hoist}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setHoist","c":"discord.js!Role#setHoist"},{"k":"Content","t":"("},{"k":"Reference","t":"hoist","c":"discord.js!~hoist"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":313,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"hoist","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setHoist"},{"k":"Method","c":"discord.js!Role#setIcon:member(1)","d":"/**\n * Sets a new icon for the role.\n *\n * @param icon - The icon for the role <warn>The `EmojiResolvable` should belong to the same guild as the role. If not, pass the emoji's URL directly</warn>\n *\n * @param reason - Reason for changing the role's icon\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setIcon","c":"discord.js!Role#setIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"icon","c":"discord.js!~icon"},{"k":"Content","t":": "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":360,"co":3,"sta":false,"rtr":{"st":17,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"icon","ptr":{"st":5,"en":12},"op":false,"rs":false},{"pn":"reason","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"setIcon"},{"k":"Method","c":"discord.js!Role#setMentionable:member(1)","d":"/**\n * Sets whether this role is mentionable.\n *\n * @param mentionable - Whether this role should be mentionable\n *\n * @param reason - Reason for setting whether or not this role should be mentionable\n *\n * @example\n * ```js\n * // Make the role mentionable\n * role.setMentionable(true)\n *   .then(updated => console.log(`Role updated ${updated.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setMentionable","c":"discord.js!Role#setMentionable"},{"k":"Content","t":"("},{"k":"Reference","t":"mentionable","c":"discord.js!~mentionable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":348,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"mentionable","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setMentionable"},{"k":"Method","c":"discord.js!Role#setName:member(1)","d":"/**\n * Sets a new name for the role.\n *\n * @param name - The new name of the role\n *\n * @param reason - Reason for changing the role's name\n *\n * @example\n * ```js\n * // Set the name of the role\n * role.setName('new role')\n *   .then(updated => console.log(`Updated role name to ${updated.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!Role#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":283,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!Role#setPermissions:member(1)","d":"/**\n * Sets the permissions of the role.\n *\n * @param permissions - The permissions of the role\n *\n * @param reason - Reason for changing the role's permissions\n *\n * @example\n * ```js\n * // Set the permissions of the role\n * role.setPermissions([PermissionFlagsBits.KickMembers, PermissionFlagsBits.BanMembers])\n *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Remove all permissions from a role\n * role.setPermissions(0n)\n *   .then(updated => console.log(`Updated permissions to ${updated.permissions.bitfield}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPermissions","c":"discord.js!Role#setPermissions"},{"k":"Content","t":"("},{"k":"Reference","t":"permissions","c":"discord.js!~permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":333,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"permissions","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPermissions"},{"k":"Method","c":"discord.js!Role#setPosition:member(1)","d":"/**\n * Sets the new position of the role.\n *\n * @param position - The new position for the role\n *\n * @param options - Options for setting the position\n *\n * @example\n * ```js\n * // Set the position of the role\n * role.setPosition(1)\n *   .then(updated => console.log(`Role position: ${updated.position}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPosition","c":"discord.js!Role#setPosition"},{"k":"Content","t":"("},{"k":"Reference","t":"position","c":"discord.js!~position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SetRolePositionOptions","c":"discord.js!SetRolePositionOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":397,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"position","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPosition"},{"k":"Method","c":"discord.js!Role#setUnicodeEmoji:member(1)","d":"/**\n * Sets a new unicode emoji for the role.\n *\n * @param unicodeEmoji - The new unicode emoji for the role\n *\n * @param reason - Reason for changing the role's unicode emoji\n *\n * @example\n * ```js\n * // Set a new unicode emoji for the role\n * role.setUnicodeEmoji('🤖')\n *   .then(updated => console.log(`Set unicode emoji for the role to ${updated.unicodeEmoji}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setUnicodeEmoji","c":"discord.js!Role#setUnicodeEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"unicodeEmoji","c":"discord.js!~unicodeEmoji"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":375,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"unicodeEmoji","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setUnicodeEmoji"},{"k":"Property","c":"discord.js!Role#tags:member","d":"/**\n * The tags this role has\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"tags","c":"discord.js!Role#tags"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleTagData","c":"discord.js!RoleTagData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":126,"co":3,"ro":false,"op":false,"r":"Public","n":"tags","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Role#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Role#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2651,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Role#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the role's mention instead of the Role object.\n *\n * @example\n * ```js\n * // Logs: Role: <@&123456789012345678>\n * console.log(`Role: ${role}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Role#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"RoleMention","c":"discord.js!RoleMention:type"},{"k":"Content","t":";"}],"l":454,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!Role#unicodeEmoji:member","d":"/**\n * The unicode emoji for the role\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unicodeEmoji","c":"discord.js!Role#unicodeEmoji"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"unicodeEmoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!RoleCreateOptions:interface","d":"/**\n * Options used to create a new role.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleCreateOptions","c":"discord.js!RoleCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"RoleData","c":"discord.js!RoleData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/RoleManager.js","l":101,"co":1,"r":"Public","n":"RoleCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#color:member","d":"/**\n * The data to create the role with\n */\n","ex":[{"k":"Content","t":"undefined color :"},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"color","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#hoist:member","d":"/**\n * Whether or not the new role should be hoisted\n */\n","ex":[{"k":"Content","t":"undefined hoist :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"hoist","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#icon:member","d":"/**\n * The icon for the role <warn>The `EmojiResolvable` should belong to the same guild as the role. If not, pass the emoji's URL directly</warn>\n */\n","ex":[{"k":"Content","t":"undefined icon :"},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":1,"en":6}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#mentionable:member","d":"/**\n * Whether or not the new role should be mentionable\n */\n","ex":[{"k":"Content","t":"undefined mentionable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"mentionable","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#name:member","d":"/**\n * The name of the new role\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#permissions:member","d":"/**\n * The permissions for the new role\n */\n","ex":[{"k":"Content","t":"undefined permissions :"},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#position:member","d":"/**\n * The position of the new role\n */\n","ex":[{"k":"Content","t":"undefined position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#reason:member","d":"/**\n * The reason for creating this role\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!RoleCreateOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5417,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleCreateOptions#unicodeEmoji:member","d":"/**\n * The unicode emoji for the role\n */\n","ex":[{"k":"Content","t":"undefined unicodeEmoji :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"ro":false,"op":true,"r":"Public","n":"unicodeEmoji","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!RoleData:interface","d":"/**\n * The data for a role.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleData","c":"discord.js!RoleData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Role.js","l":229,"co":1,"r":"Public","n":"RoleData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleData#color:member","d":"/**\n * The color of the role, either a hex string or a base 10 number\n */\n","ex":[{"k":"Reference","t":"color","c":"discord.js!RoleData#color"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ColorResolvable","c":"discord.js!ColorResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6479,"co":3,"ro":false,"op":true,"r":"Public","n":"color","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#hoist:member","d":"/**\n * Whether or not the role should be hoisted\n */\n","ex":[{"k":"Reference","t":"hoist","c":"discord.js!RoleData#hoist"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6480,"co":3,"ro":false,"op":true,"r":"Public","n":"hoist","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#icon:member","d":"/**\n * The icon for the role <warn>The `EmojiResolvable` should belong to the same guild as the role. If not, pass the emoji's URL directly</warn>\n */\n","ex":[{"k":"Reference","t":"icon","c":"discord.js!RoleData#icon"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Base64Resolvable","c":"discord.js!Base64Resolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"EmojiResolvable","c":"discord.js!EmojiResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6484,"co":3,"ro":false,"op":true,"r":"Public","n":"icon","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!RoleData#mentionable:member","d":"/**\n * Whether or not the role should be mentionable\n */\n","ex":[{"k":"Reference","t":"mentionable","c":"discord.js!RoleData#mentionable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6483,"co":3,"ro":false,"op":true,"r":"Public","n":"mentionable","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#name:member","d":"/**\n * The name of the role\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!RoleData#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6478,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#permissions:member","d":"/**\n * The permissions of the role\n */\n","ex":[{"k":"Reference","t":"permissions","c":"discord.js!RoleData#permissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"PermissionResolvable","c":"discord.js!PermissionResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6482,"co":3,"ro":false,"op":true,"r":"Public","n":"permissions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#position:member","d":"/**\n * The position of the role\n */\n","ex":[{"k":"Reference","t":"position","c":"discord.js!RoleData#position"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6481,"co":3,"ro":false,"op":true,"r":"Public","n":"position","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleData#unicodeEmoji:member","d":"/**\n * The unicode emoji for the role\n */\n","ex":[{"k":"Reference","t":"unicodeEmoji","c":"discord.js!RoleData#unicodeEmoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6485,"co":3,"ro":false,"op":true,"r":"Public","n":"unicodeEmoji","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"discord.js!RoleEditOptions:interface","d":"/**\n * Options for editing a role\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleEditOptions","c":"discord.js!RoleEditOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"RoleData","c":"discord.js!RoleData:interface"},{"k":"Content","t":" "}],"pat":"src/managers/RoleManager.js","l":167,"co":1,"r":"Public","n":"RoleEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleEditOptions#reason:member","d":"/**\n * The reason for editing this role\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!RoleEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5421,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!RoleFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link Role.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RoleFlagsBitField","c":"discord.js!RoleFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"RoleFlagsString","c":"discord.js!RoleFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/RoleFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"RoleFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!RoleFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":33,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleFlagsBitField.Flags:member","d":"/**\n * Numeric role flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!RoleFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"RoleFlags","c":"discord-api-types!RoleFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RoleFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!RoleFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"RoleFlagsString","c":"discord.js!RoleFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2659,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!RoleFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RoleFlagsString","c":"discord.js!RoleFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"RoleFlags","c":"discord-api-types!RoleFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2655,"co":1,"r":"Public","n":"RoleFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!RoleManager:class","d":"/**\n * Manages API methods for roles and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RoleManager","c":"discord.js!RoleManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/RoleManager.js","l":19,"co":1,"r":"Public","ab":false,"n":"RoleManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!RoleManager#botRoleFor:member(1)","d":"/**\n * Gets the managed role a user created when joining the guild, if any <info>Only ever available for bots</info>\n *\n * @param user - The user to access the bot role for\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"botRoleFor","c":"discord.js!RoleManager#botRoleFor"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":326,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"botRoleFor"},{"k":"Property","c":"discord.js!RoleManager#cache:member","d":"/**\n * The role cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":37,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RoleManager#comparePositions:member(1)","d":"/**\n * Compares the positions of two roles.\n *\n * @param role1 - First role to compare\n *\n * @param role2 - Second role to compare\n *\n * @returns Negative number if the first role's position is lower (second role's is higher), positive number if the first's is higher (second's is lower), 0 if equal\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"comparePositions","c":"discord.js!RoleManager#comparePositions"},{"k":"Content","t":"("},{"k":"Reference","t":"role1","c":"discord.js!~role1"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"role2","c":"discord.js!~role2"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":303,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role1","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"role2","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"comparePositions"},{"k":"Method","c":"discord.js!RoleManager#create:member(1)","d":"/**\n * Creates a new role in the guild with given information. <warn>The position will silently reset to 1 if an invalid one is provided, or none.</warn>\n *\n * @param options - Options for creating the new role\n *\n * @example\n * ```js\n * // Create a new role\n * guild.roles.create()\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Create a new role with data and a reason\n * guild.roles.create({\n *   name: 'Super Cool Blue People',\n *   color: Colors.Blue,\n *   reason: 'we needed a role for Super Cool People',\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!RoleManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RoleCreateOptions","c":"discord.js!RoleCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":137,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!RoleManager#delete:member(1)","d":"/**\n * Deletes a role.\n *\n * @param role - The role to delete\n *\n * @param reason - Reason for deleting the role\n *\n * @example\n * ```js\n * // Delete a role\n * guild.roles.delete('222079219327434752', 'The role needed to go')\n *   .then(() => console.log('Deleted the role'))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!RoleManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"role","c":"discord.js!~role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":227,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!RoleManager#edit:member(1)","d":"/**\n * Edits a role of the guild.\n *\n * @param role - The role to edit\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Edit a role\n * guild.roles.edit('222079219327434752', { name: 'buddies' })\n *   .then(updated => console.log(`Edited role name to ${updated.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!RoleManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"role","c":"discord.js!~role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleEditOptions","c":"discord.js!RoleEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":184,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!RoleManager#everyone:member","d":"/**\n * The `@everyone` role of the guild\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"everyone","c":"discord.js!RoleManager#everyone"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":";"}],"l":337,"co":3,"ro":true,"op":false,"r":"Public","n":"everyone","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RoleManager#fetch:member(1)","d":"/**\n * Obtains a role from Discord, or the role cache if they're already available.\n *\n * @param id - The role's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all roles from the guild\n * message.guild.roles.fetch()\n *   .then(roles => console.log(`There are ${roles.size} roles.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single role\n * message.guild.roles.fetch('222078108977594368')\n *   .then(role => console.log(`The role color is: ${role.color}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!RoleManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":63,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!RoleManager#fetch:member(2)","d":"/**\n * Obtains a role from Discord, or the role cache if they're already available.\n *\n * @param id - The role's id\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch all roles from the guild\n * message.guild.roles.fetch()\n *   .then(roles => console.log(`There are ${roles.size} roles.`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Fetch a single role\n * message.guild.roles.fetch('222078108977594368')\n *   .then(role => console.log(`The role color is: ${role.color}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!RoleManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":"?: "},{"k":"Reference","t":"undefined"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":63,"co":3,"sta":false,"rtr":{"st":11,"en":19},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!RoleManager#guild:member","d":"/**\n * The guild belonging to this manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!RoleManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleManager#highest:member","d":"/**\n * The role with the highest position in the cache\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"highest","c":"discord.js!RoleManager#highest"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":";"}],"l":355,"co":3,"ro":true,"op":false,"r":"Public","n":"highest","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleManager#premiumSubscriberRole:member","d":"/**\n * The premium subscriber role of the guild, if any\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"premiumSubscriberRole","c":"discord.js!RoleManager#premiumSubscriberRole"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":346,"co":3,"ro":true,"op":false,"r":"Public","n":"premiumSubscriberRole","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RoleManager#resolve:member(1)","d":"/**\n * Resolves a {@link RoleResolvable} to a {@link Role} object.\n *\n * @param role - The role resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(role"},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":";"}],"l":83,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!RoleManager#resolveId:member(1)","d":"/**\n * Resolves a {@link RoleResolvable} to a {@link Role} id.\n *\n * @param role - The role resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(role"},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":92,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!RoleManager#setPosition:member(1)","d":"/**\n * Sets the new position of the role.\n *\n * @param role - The role to change the position of\n *\n * @param position - The new position for the role\n *\n * @param options - Options for setting the position\n *\n * @example\n * ```js\n * // Set the position of the role\n * guild.roles.setPosition('222197033908436994', 1)\n *   .then(updated => console.log(`Role position: ${updated.position}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPosition","c":"discord.js!RoleManager#setPosition"},{"k":"Content","t":"("},{"k":"Reference","t":"role","c":"discord.js!~role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"position","c":"discord.js!~position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SetRolePositionOptions","c":"discord.js!SetRolePositionOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":245,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"role","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"position","ptr":{"st":9,"en":10},"op":false,"rs":false},{"pn":"options","ptr":{"st":13,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"setPosition"},{"k":"Method","c":"discord.js!RoleManager#setPositions:member(1)","d":"/**\n * Batch-updates the guild's role positions\n *\n * @param rolePositions - Role positions to update\n *\n * @example\n * ```js\n * guild.roles.setPositions([{ role: roleId, position: updatedRoleIndex }])\n *  .then(guild => console.log(`Role positions updated for ${guild}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setPositions","c":"discord.js!RoleManager#setPositions"},{"k":"Content","t":"("},{"k":"Reference","t":"rolePositions","c":"discord.js!~rolePositions"},{"k":"Content","t":": "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"RolePosition","c":"discord.js!RolePosition:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":281,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rolePositions","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"setPositions"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!RoleMention:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RoleMention","c":"discord.js!RoleMention:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'@everyone' | `<@&${"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"}>`"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6488,"co":1,"r":"Public","n":"RoleMention","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!RolePermissionConstant:type","d":"/**\n * A static snowflake that identifies the everyone role for application command permissions. It is the same as the guild id\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RolePermissionConstant","c":"discord.js!RolePermissionConstant:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/ApplicationCommandPermissionsManager.js","l":230,"co":1,"r":"Public","n":"RolePermissionConstant","ttr":{"st":3,"en":4}},{"k":"Interface","c":"discord.js!RolePosition:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RolePosition","c":"discord.js!RolePosition:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6490,"co":1,"r":"Public","n":"RolePosition","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RolePosition#position:member","d":"","ex":[{"k":"Reference","t":"position","c":"discord.js!RolePosition#position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6492,"co":3,"ro":false,"op":false,"r":"Public","n":"position","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RolePosition#role:member","d":"","ex":[{"k":"Reference","t":"role","c":"discord.js!RolePosition#role"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":";"}],"l":6491,"co":3,"ro":false,"op":false,"r":"Public","n":"role","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!RoleResolvable:type","d":"/**\n * Data that can be resolved to a Role object. This can be:\n *\n * * A Role\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/RoleManager.js","l":76,"co":1,"r":"Public","n":"RoleResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!RoleSelectMenuBuilder:class","d":"/**\n * Class used to build select menu components to be sent through the API\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"discord.js!RoleSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderRoleSelectMenuComponent","c":"@discordjs/builders!RoleSelectMenuBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/RoleSelectMenuBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"RoleSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!RoleSelectMenuBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `RoleSelectMenuBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"RoleSelectMenuComponentData","c":"discord.js!RoleSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!RoleSelectMenuBuilder.from:member(1)","d":"/**\n * Creates a new select menu builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!RoleSelectMenuBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"RoleSelectMenuBuilder","c":"discord.js!RoleSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":21,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!RoleSelectMenuComponent:class","d":"/**\n * Represents a role select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/RoleSelectMenuComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"RoleSelectMenuComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!RoleSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":42,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly disabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":51,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly maxValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":24,"ro":true,"op":true,"r":"Public","n":"maxValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly minValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":33,"ro":true,"op":true,"r":"Public","n":"minValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly placeholder :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":15,"ro":true,"op":true,"r":"Public","n":"placeholder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!RoleSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleSelectMenuComponentData","c":"discord.js!RoleSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6278,"co":1,"r":"Public","n":"RoleSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleSelectMenuComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!RoleSelectMenuComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":";"}],"l":6279,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!RoleSelectMenuInteraction:class","d":"/**\n * Represents a {@link discord-api-types#(ComponentType:enum).RoleSelect} select menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/RoleSelectMenuInteraction.js","l":10,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"RoleSelectMenuInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!RoleSelectMenuInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `RoleSelectMenuInteraction` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageRoleSelectInteractionData","c":"discord-api-types!APIMessageRoleSelectInteractionData:interface"},{"k":"Content","t":");"}],"l":10,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!RoleSelectMenuInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"RoleSelectMenuComponent","c":"discord.js!RoleSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRoleSelectComponent","c":"discord-api-types!APIRoleSelectComponent:type"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!RoleSelectMenuInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.RoleSelect","c":"discord-api-types!ComponentType.RoleSelect:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!RoleSelectMenuInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!RoleSelectMenuInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!RoleSelectMenuInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!RoleSelectMenuInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!RoleSelectMenuInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!RoleSelectMenuInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#roles:member","d":"/**\n * Collection of the selected roles\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"roles","c":"discord.js!RoleSelectMenuInteraction#roles"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIRole","c":"discord-api-types!APIRole:interface"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"roles","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#values:member","d":"/**\n * An array of the selected role ids\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"values","c":"discord.js!RoleSelectMenuInteraction#values"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"values","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!RoleSelectMenuInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!RoleSubscriptionData:interface","d":"/**\n * Role subscription data found on {@link discord-api-types#(MessageType:enum).RoleSubscriptionPurchase} messages.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleSubscriptionData","c":"discord.js!RoleSubscriptionData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":202,"co":1,"r":"Public","n":"RoleSubscriptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleSubscriptionData#isRenewal:member","d":"/**\n * Whether this notification is a renewal\n */\n","ex":[{"k":"Reference","t":"isRenewal","c":"discord.js!RoleSubscriptionData#isRenewal"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6501,"co":3,"ro":false,"op":false,"r":"Public","n":"isRenewal","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleSubscriptionData#roleSubscriptionListingId:member","d":"/**\n * The id of the SKU and listing the user is subscribed to\n */\n","ex":[{"k":"Reference","t":"roleSubscriptionListingId","c":"discord.js!RoleSubscriptionData#roleSubscriptionListingId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6498,"co":3,"ro":false,"op":false,"r":"Public","n":"roleSubscriptionListingId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleSubscriptionData#tierName:member","d":"/**\n * The name of the tier the user is subscribed to\n */\n","ex":[{"k":"Reference","t":"tierName","c":"discord.js!RoleSubscriptionData#tierName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6499,"co":3,"ro":false,"op":false,"r":"Public","n":"tierName","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleSubscriptionData#totalMonthsSubscribed:member","d":"/**\n * The total number of months the user has been subscribed for\n */\n","ex":[{"k":"Reference","t":"totalMonthsSubscribed","c":"discord.js!RoleSubscriptionData#totalMonthsSubscribed"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6500,"co":3,"ro":false,"op":false,"r":"Public","n":"totalMonthsSubscribed","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!RoleTagData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RoleTagData","c":"discord.js!RoleTagData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6504,"co":1,"r":"Public","n":"RoleTagData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!RoleTagData#availableForPurchase:member","d":"","ex":[{"k":"Reference","t":"availableForPurchase","c":"discord.js!RoleTagData#availableForPurchase"},{"k":"Content","t":"?: "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":6509,"co":3,"ro":false,"op":true,"r":"Public","n":"availableForPurchase","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleTagData#botId:member","d":"","ex":[{"k":"Reference","t":"botId","c":"discord.js!RoleTagData#botId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":6505,"co":3,"ro":false,"op":true,"r":"Public","n":"botId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleTagData#guildConnections:member","d":"","ex":[{"k":"Reference","t":"guildConnections","c":"discord.js!RoleTagData#guildConnections"},{"k":"Content","t":"?: "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":6510,"co":3,"ro":false,"op":true,"r":"Public","n":"guildConnections","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleTagData#integrationId:member","d":"","ex":[{"k":"Reference","t":"integrationId","c":"discord.js!RoleTagData#integrationId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":6506,"co":3,"ro":false,"op":true,"r":"Public","n":"integrationId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleTagData#premiumSubscriberRole:member","d":"","ex":[{"k":"Reference","t":"premiumSubscriberRole","c":"discord.js!RoleTagData#premiumSubscriberRole"},{"k":"Content","t":"?: "},{"k":"Content","t":"true"},{"k":"Content","t":";"}],"l":6507,"co":3,"ro":false,"op":true,"r":"Public","n":"premiumSubscriberRole","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!RoleTagData#subscriptionListingId:member","d":"","ex":[{"k":"Reference","t":"subscriptionListingId","c":"discord.js!RoleTagData#subscriptionListingId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":6508,"co":3,"ro":false,"op":true,"r":"Public","n":"subscriptionListingId","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!SelectMenuComponentOptionData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SelectMenuComponentOptionData","c":"discord.js!SelectMenuComponentOptionData:interface"},{"k":"Content","t":" "}],"pat":"src/util/Components.js","l":26,"co":1,"r":"Public","n":"SelectMenuComponentOptionData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SelectMenuComponentOptionData#default:member","d":"/**\n * Whether this option is selected by default\n */\n","ex":[{"k":"Reference","t":"default","c":"discord.js!SelectMenuComponentOptionData#default"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6300,"co":3,"ro":false,"op":true,"r":"Public","n":"default","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SelectMenuComponentOptionData#description:member","d":"/**\n * The description of the option\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!SelectMenuComponentOptionData#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6301,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SelectMenuComponentOptionData#emoji:member","d":"/**\n * The emoji on the option\n */\n","ex":[{"k":"Reference","t":"emoji","c":"discord.js!SelectMenuComponentOptionData#emoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ComponentEmojiResolvable","c":"discord.js!ComponentEmojiResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6302,"co":3,"ro":false,"op":true,"r":"Public","n":"emoji","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SelectMenuComponentOptionData#label:member","d":"/**\n * The label of the option\n */\n","ex":[{"k":"Reference","t":"label","c":"discord.js!SelectMenuComponentOptionData#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6303,"co":3,"ro":false,"op":false,"r":"Public","n":"label","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SelectMenuComponentOptionData#value:member","d":"/**\n * The value of the option\n */\n","ex":[{"k":"Reference","t":"value","c":"discord.js!SelectMenuComponentOptionData#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6304,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!SelectMenuType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SelectMenuType","c":"discord.js!SelectMenuType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"['type']"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2783,"co":1,"r":"Public","n":"SelectMenuType","ttr":{"st":3,"en":5}},{"k":"TypeAlias","c":"discord.js!Serialized:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"symbol"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint"},{"k":"Content","t":" | (() => "},{"k":"Reference","t":"any"},{"k":"Content","t":") ? "},{"k":"Reference","t":"never"},{"k":"Content","t":" : "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":"  ? "},{"k":"Reference","t":"Value"},{"k":"Content","t":"  : "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"JSONResult"},{"k":"Content","t":">   ? "},{"k":"Reference","t":"JSONResult"},{"k":"Content","t":"   : "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ReadonlyArray","c":"!ReadonlyArray:interface"},{"k":"Content","t":"<infer "},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">    ? "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ItemType"},{"k":"Content","t":">[]    : "},{"k":"Reference","t":"Value"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ReadonlyMap","c":"!ReadonlyMap:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"> | "},{"k":"Reference","t":"ReadonlySet","c":"!ReadonlySet:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">     ? {}     : { ["},{"k":"Reference","t":"K"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"Value"},{"k":"Content","t":"]: "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":"["},{"k":"Reference","t":"K"},{"k":"Content","t":"]> }"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6791,"co":1,"r":"Public","n":"Serialized","tps":[{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":5,"en":67}},{"k":"Interface","c":"discord.js!SetChannelPositionOptions:interface","d":"/**\n * Options used to set the position of a channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SetChannelPositionOptions","c":"discord.js!SetChannelPositionOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildChannel.js","l":342,"co":1,"r":"Public","n":"SetChannelPositionOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SetChannelPositionOptions#reason:member","d":"/**\n * The reason for changing the position\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!SetChannelPositionOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6515,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SetChannelPositionOptions#relative:member","d":"/**\n * Whether or not to change the position relative to its current value\n */\n","ex":[{"k":"Reference","t":"relative","c":"discord.js!SetChannelPositionOptions#relative"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6514,"co":3,"ro":false,"op":true,"r":"Public","n":"relative","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!SetParentOptions:interface","d":"/**\n * Options used to set the parent of a channel.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SetParentOptions","c":"discord.js!SetParentOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/GuildChannel.js","l":316,"co":1,"r":"Public","n":"SetParentOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SetParentOptions#lockPermissions:member","d":"/**\n * Whether to lock the permissions to what the parent's permissions are\n */\n","ex":[{"k":"Reference","t":"lockPermissions","c":"discord.js!SetParentOptions#lockPermissions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6519,"co":3,"ro":false,"op":true,"r":"Public","n":"lockPermissions","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SetParentOptions#reason:member","d":"/**\n * The reason for modifying the parent of the channel\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!SetParentOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6520,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!SetRolePositionOptions:interface","d":"/**\n * Options used to set the position of a role.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SetRolePositionOptions","c":"discord.js!SetRolePositionOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Role.js","l":379,"co":1,"r":"Public","n":"SetRolePositionOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SetRolePositionOptions#reason:member","d":"/**\n * The reason for changing the position\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!SetRolePositionOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6525,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SetRolePositionOptions#relative:member","d":"/**\n * Whether to change the position relative to its current value or not\n */\n","ex":[{"k":"Reference","t":"relative","c":"discord.js!SetRolePositionOptions#relative"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6524,"co":3,"ro":false,"op":true,"r":"Public","n":"relative","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!Shard:class","d":"/**\n * A self-contained shard created by the {@link ShardingManager}. Each one has a {@link ChildProcess} that contains an instance of the bot and its {@link Client}. When its child process/worker exits for any reason, the shard will spawn a new one to replace it as necessary.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/sharding/Shard.js","l":20,"co":1,"r":"Public","ab":false,"n":"Shard","pmo":false,"ms":[{"k":"Property","c":"discord.js!Shard#args:member","d":"/**\n * Arguments for the shard's process (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"args","c":"discord.js!Shard#args"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"args","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Shard#death:member(0)","d":"/**\n * Emitted upon the shard's child process/worker exiting.\n *\n * @param process - Child process/worker that exited\n */\n","ex":[{"k":"Content","t":"on('death', (process: "},{"k":"Reference","t":"ChildProcess","c":"discord.js!ChildProcess:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Worker","c":"discord.js!Worker:class"},{"k":"Content","t":") => {})"}],"l":434,"r":"Public","oi":0,"ps":[{"pn":"process","ptr":{"st":1,"en":4},"op":false,"rs":false}],"n":"death"},{"k":"Event","c":"discord.js!Shard#disconnect:member(0)","d":"/**\n * Emitted upon the shard's {@link Client.shardDisconnect} event.\n */\n","ex":[{"k":"Content","t":"on('disconnect', () => {})"}],"l":358,"r":"Public","oi":0,"ps":[],"n":"disconnect"},{"k":"Property","c":"discord.js!Shard#env:member","d":"/**\n * Environment variables for the shard's process, or workerData for the shard's worker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"env","c":"discord.js!Shard#env"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":false,"op":false,"r":"Public","n":"env","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Shard#eval:member(1)","d":"/**\n * Evaluates a script or function on the shard, in the context of the {@link Client}.\n *\n * @param script - JavaScript to run on the shard\n *\n * @param context - The context for the eval\n *\n * @returns Result of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"eval","c":"discord.js!Shard#eval"},{"k":"Content","t":"("},{"k":"Reference","t":"script","c":"discord.js!~script"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":298,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"script","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"eval"},{"k":"Method","c":"discord.js!Shard#eval:member(2)","d":"/**\n * Evaluates a script or function on the shard, in the context of the {@link Client}.\n *\n * @param script - JavaScript to run on the shard\n *\n * @param context - The context for the eval\n *\n * @returns Result of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"eval","c":"discord.js!Shard#eval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"Result"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":298,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":14,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":7,"en":13},"op":false,"rs":false}],"op":false,"ab":false,"n":"eval"},{"k":"Method","c":"discord.js!Shard#eval:member(3)","d":"/**\n * Evaluates a script or function on the shard, in the context of the {@link Client}.\n *\n * @param script - JavaScript to run on the shard\n *\n * @param context - The context for the eval\n *\n * @returns Result of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"eval","c":"discord.js!Shard#eval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":", "},{"k":"Reference","t":"Context"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Context"},{"k":"Content","t":">) => "},{"k":"Reference","t":"Result"},{"k":"Content","t":",  "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Context"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":298,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Context","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":26,"en":30},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":9,"en":21},"op":false,"rs":false},{"pn":"context","ptr":{"st":24,"en":25},"op":false,"rs":false}],"op":false,"ab":false,"n":"eval"},{"k":"Property","c":"discord.js!Shard#execArgv:member","d":"/**\n * Arguments for the shard's process executable (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"execArgv","c":"discord.js!Shard#execArgv"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":61,"co":3,"ro":false,"op":false,"r":"Public","n":"execArgv","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Shard#fetchClientValue:member(1)","d":"/**\n * Fetches a client property value of the shard.\n *\n * @param prop - Name of the client property to get, using periods for nesting\n *\n * @example\n * ```js\n * shard.fetchClientValue('guilds.cache.size')\n *   .then(count => console.log(`${count} guilds in shard ${shard.id}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchClientValue","c":"discord.js!Shard#fetchClientValue"},{"k":"Content","t":"("},{"k":"Reference","t":"prop","c":"discord.js!~prop"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":256,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"prop","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchClientValue"},{"k":"Property","c":"discord.js!Shard#id:member","d":"/**\n * The shard's id in the manager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Shard#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Shard#kill:member(1)","d":"/**\n * Immediately kills the shard's process/worker and does not restart it.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"kill","c":"discord.js!Shard#kill"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":196,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"kill"},{"k":"Property","c":"discord.js!Shard#manager:member","d":"/**\n * Manager that created the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"manager","c":"discord.js!Shard#manager"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardingManager","c":"discord.js!ShardingManager:class"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"manager","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Shard#message:member(0)","d":"/**\n * Emitted upon receiving a message from the child process/worker.\n *\n * @param message - Message that was received\n */\n","ex":[{"k":"Content","t":"on('message', (message: "},{"k":"Reference","t":"any","c":"discord.js!*:class"},{"k":"Content","t":") => {})"}],"l":418,"r":"Public","oi":0,"ps":[{"pn":"message","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"message"},{"k":"Method","c":"discord.js!Shard#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!Shard#on"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ShardEventTypes","c":"discord.js!ShardEventTypes:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardEventTypes","c":"discord.js!ShardEventTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2827,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!Shard#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!Shard#once"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"ShardEventTypes","c":"discord.js!ShardEventTypes:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardEventTypes","c":"discord.js!ShardEventTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2832,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!Shard#process:member","d":"/**\n * Process of the shard (if {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"process","c":"discord.js!Shard#process"},{"k":"Content","t":": "},{"k":"Reference","t":"ChildProcess","c":"!\"\\\"child_process\\\"\".ChildProcess:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":84,"co":3,"ro":false,"op":false,"r":"Public","n":"process","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Shard#ready:member","d":"/**\n * Whether the shard's {@link Client} is ready\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ready","c":"discord.js!Shard#ready"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"ready","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Shard#reconnecting:member(0)","d":"/**\n * Emitted upon the shard's {@link Client.shardReconnecting} event.\n */\n","ex":[{"k":"Content","t":"on('reconnecting', () => {})"}],"l":369,"r":"Public","oi":0,"ps":[],"n":"reconnecting"},{"k":"Method","c":"discord.js!Shard#respawn:member(1)","d":"/**\n * Kills and restarts the shard's process/worker.\n *\n * @param options - Options for respawning the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"respawn","c":"discord.js!Shard#respawn"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"delay","c":"discord.js!~__type#delay"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":"; "},{"k":"Reference","t":"timeout","c":"discord.js!~__type#timeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChildProcess","c":"!\"\\\"child_process\\\"\".ChildProcess:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":222,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"respawn"},{"k":"Event","c":"discord.js!Shard#resume:member(0)","d":"/**\n * Emitted upon the shard's {@link Client.shardResume} event.\n */\n","ex":[{"k":"Content","t":"on('resume', () => {})"}],"l":380,"r":"Public","oi":0,"ps":[],"n":"resume"},{"k":"Method","c":"discord.js!Shard#send:member(1)","d":"/**\n * Sends a message to the shard's process/worker.\n *\n * @param message - Message to send to the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!Shard#send"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":233,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Property","c":"discord.js!Shard#silent:member","d":"/**\n * Whether to pass silent flag to the shard's process (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"silent","c":"discord.js!Shard#silent"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"silent","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!Shard#spawn:member(0)","d":"/**\n * Emitted upon the creation of the shard's child process/worker.\n *\n * @param process - Child process/worker that was created\n */\n","ex":[{"k":"Content","t":"on('spawn', (process: "},{"k":"Reference","t":"ChildProcess","c":"discord.js!ChildProcess:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Worker","c":"discord.js!Worker:class"},{"k":"Content","t":") => {})"}],"l":150,"r":"Public","oi":0,"ps":[{"pn":"process","ptr":{"st":1,"en":4},"op":false,"rs":false}],"n":"spawn"},{"k":"Method","c":"discord.js!Shard#spawn:member(1)","d":"/**\n * Forks a child process or creates a worker thread for the shard. <warn>You should not need to call this manually.</warn>\n *\n * @param timeout - The amount in milliseconds to wait until the {@link Client} has become ready before resolving (`-1` or `Infinity` for no wait)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"spawn","c":"discord.js!Shard#spawn"},{"k":"Content","t":"("},{"k":"Reference","t":"timeout","c":"discord.js!~timeout"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChildProcess","c":"!\"\\\"child_process\\\"\".ChildProcess:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":121,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"timeout","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"spawn"},{"k":"Property","c":"discord.js!Shard#worker:member","d":"/**\n * Worker of the shard (if {@link ShardingManager.mode} is `worker`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"worker","c":"discord.js!Shard#worker"},{"k":"Content","t":": "},{"k":"Reference","t":"Worker","c":"!\"\\\"worker_threads\\\"\".Worker:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":90,"co":3,"ro":false,"op":false,"r":"Public","n":"worker","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ShardClientUtil:class","d":"/**\n * Helper class for sharded clients spawned as a child process/worker, such as from a {@link ShardingManager}. Utilises IPC to send and receive data to/from the master process and other shards.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ShardClientUtil","c":"discord.js!ShardClientUtil:class"},{"k":"Content","t":" "}],"pat":"src/sharding/ShardClientUtil.js","l":13,"co":1,"r":"Public","ab":false,"n":"ShardClientUtil","pmo":false,"ms":[{"k":"Method","c":"discord.js!ShardClientUtil#broadcastEval:member(1)","d":"/**\n * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n *\n * @example\n * ```js\n * client.shard.broadcastEval(client => client.guilds.cache.size)\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardClientUtil#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">[]>"},{"k":"Content","t":";"}],"l":153,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":17,"en":23},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":7,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardClientUtil#broadcastEval:member(2)","d":"/**\n * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n *\n * @example\n * ```js\n * client.shard.broadcastEval(client => client.guilds.cache.size)\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardClientUtil#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"shard","c":"discord.js!~__type#shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":153,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":25,"en":31},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":7,"en":16},"op":false,"rs":false},{"pn":"options","ptr":{"st":19,"en":24},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardClientUtil#broadcastEval:member(3)","d":"/**\n * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n *\n * @example\n * ```js\n * client.shard.broadcastEval(client => client.guilds.cache.size)\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardClientUtil#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":", "},{"k":"Reference","t":"Context"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Context"},{"k":"Content","t":">) => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"context","c":"discord.js!~__type#context"},{"k":"Content","t":": "},{"k":"Reference","t":"Context"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">[]>"},{"k":"Content","t":";"}],"l":153,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Context","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":39},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":9,"en":24},"op":false,"rs":false},{"pn":"options","ptr":{"st":27,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardClientUtil#broadcastEval:member(4)","d":"/**\n * Evaluates a script or function on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n *\n * @example\n * ```js\n * client.shard.broadcastEval(client => client.guilds.cache.size)\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardClientUtil#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":", "},{"k":"Reference","t":"Context"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Context"},{"k":"Content","t":">) => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"context","c":"discord.js!~__type#context"},{"k":"Content","t":": "},{"k":"Reference","t":"Context"},{"k":"Content","t":"; "},{"k":"Reference","t":"shard","c":"discord.js!~__type#shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":153,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Context","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":37,"en":43},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":9,"en":24},"op":false,"rs":false},{"pn":"options","ptr":{"st":27,"en":36},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Property","c":"discord.js!ShardClientUtil#client:member","d":"/**\n * Client for the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"client","c":"discord.js!ShardClientUtil#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardClientUtil#count:member","d":"/**\n * Total number of shards\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"count","c":"discord.js!ShardClientUtil#count"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":82,"co":3,"ro":true,"op":false,"r":"Public","n":"count","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardClientUtil#fetchClientValues:member(1)","d":"/**\n * Fetches a client property value of each shard, or a given shard.\n *\n * @param prop - Name of the client property to get, using periods for nesting\n *\n * @param shard - Shard to fetch property from, all if undefined\n *\n * @example\n * ```js\n * client.shard.fetchClientValues('guilds.cache.size')\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchClientValues","c":"discord.js!ShardClientUtil#fetchClientValues"},{"k":"Content","t":"("},{"k":"Reference","t":"prop","c":"discord.js!~prop"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":120,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"prop","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchClientValues"},{"k":"Method","c":"discord.js!ShardClientUtil#fetchClientValues:member(2)","d":"/**\n * Fetches a client property value of each shard, or a given shard.\n *\n * @param prop - Name of the client property to get, using periods for nesting\n *\n * @param shard - Shard to fetch property from, all if undefined\n *\n * @example\n * ```js\n * client.shard.fetchClientValues('guilds.cache.size')\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchClientValues","c":"discord.js!ShardClientUtil#fetchClientValues"},{"k":"Content","t":"("},{"k":"Reference","t":"prop","c":"discord.js!~prop"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"shard","c":"discord.js!~shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":120,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"prop","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"shard","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchClientValues"},{"k":"Property","c":"discord.js!ShardClientUtil#ids:member","d":"/**\n * Array of shard ids of this client\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"ids","c":"discord.js!ShardClientUtil#ids"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":true,"op":false,"r":"Public","n":"ids","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardClientUtil#mode:member","d":"/**\n * Mode the shard was spawned with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mode","c":"discord.js!ShardClientUtil#mode"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardingManagerMode","c":"discord.js!ShardingManagerMode:type"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"mode","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardClientUtil#parentPort:member","d":"/**\n * Message port for the master process (only when {@link ShardClientUtil.mode} is `worker`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"parentPort","c":"discord.js!ShardClientUtil#parentPort"},{"k":"Content","t":": "},{"k":"Reference","t":"MessagePort","c":"!\"\\\"worker_threads\\\"\".MessagePort:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"parentPort","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardClientUtil#respawnAll:member(1)","d":"/**\n * Requests a respawn of all shards.\n *\n * @param options - Options for respawning shards\n *\n * @returns Resolves upon the message being sent\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"respawnAll","c":"discord.js!ShardClientUtil#respawnAll"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MultipleShardRespawnOptions","c":"discord.js!MultipleShardRespawnOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":185,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"respawnAll"},{"k":"Method","c":"discord.js!ShardClientUtil#send:member(1)","d":"/**\n * Sends a message to the master process.\n *\n * @param message - Message to send\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!ShardClientUtil#send"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":92,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!ShardClientUtil.shardIdForGuildId:member(1)","d":"/**\n * Get the shard id for a given guild id.\n *\n * @param guildId - Snowflake guild id to get shard id for\n *\n * @param shardCount - Number of shards\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"shardIdForGuildId","c":"discord.js!ShardClientUtil.shardIdForGuildId"},{"k":"Content","t":"("},{"k":"Reference","t":"guildId","c":"discord.js!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"shardCount","c":"discord.js!~shardCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":260,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildId","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"shardCount","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"shardIdForGuildId"},{"k":"Method","c":"discord.js!ShardClientUtil.singleton:member(1)","d":"/**\n * Creates/gets the singleton of this class.\n *\n * @param client - The client to use\n *\n * @param mode - Mode the shard was spawned with\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"singleton","c":"discord.js!ShardClientUtil.singleton"},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"mode","c":"discord.js!~mode"},{"k":"Content","t":": "},{"k":"Reference","t":"ShardingManagerMode","c":"discord.js!ShardingManagerMode:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"ShardClientUtil","c":"discord.js!ShardClientUtil:class"},{"k":"Content","t":";"}],"l":242,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"mode","ptr":{"st":10,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"singleton"}],"itrs":[]},{"k":"Enum","c":"discord.js!ShardEvents:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"ShardEvents","c":"discord.js!ShardEvents:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5380,"co":1,"r":"Public","n":"ShardEvents","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!ShardEvents.Death:member","d":"","ex":[{"k":"Reference","t":"Death","c":"discord.js!ShardEvents.Death:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'death'"}],"l":5381,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Death"},{"k":"EnumMember","c":"discord.js!ShardEvents.Disconnect:member","d":"","ex":[{"k":"Reference","t":"Disconnect","c":"discord.js!ShardEvents.Disconnect:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'disconnect'"}],"l":5382,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Disconnect"},{"k":"EnumMember","c":"discord.js!ShardEvents.Error:member","d":"","ex":[{"k":"Reference","t":"Error","c":"discord.js!ShardEvents.Error:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'error'"}],"l":5383,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Error"},{"k":"EnumMember","c":"discord.js!ShardEvents.Message:member","d":"","ex":[{"k":"Reference","t":"Message","c":"discord.js!ShardEvents.Message:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'message'"}],"l":5384,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Message"},{"k":"EnumMember","c":"discord.js!ShardEvents.Ready:member","d":"","ex":[{"k":"Reference","t":"Ready","c":"discord.js!ShardEvents.Ready:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ready'"}],"l":5385,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Ready"},{"k":"EnumMember","c":"discord.js!ShardEvents.Reconnecting:member","d":"","ex":[{"k":"Reference","t":"Reconnecting","c":"discord.js!ShardEvents.Reconnecting:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'reconnecting'"}],"l":5386,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Reconnecting"},{"k":"EnumMember","c":"discord.js!ShardEvents.Resume:member","d":"","ex":[{"k":"Reference","t":"Resume","c":"discord.js!ShardEvents.Resume:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'resume'"}],"l":5387,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Resume"},{"k":"EnumMember","c":"discord.js!ShardEvents.Spawn:member","d":"","ex":[{"k":"Reference","t":"Spawn","c":"discord.js!ShardEvents.Spawn:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'spawn'"}],"l":5388,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Spawn"}]},{"k":"Interface","c":"discord.js!ShardEventTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ShardEventTypes","c":"discord.js!ShardEventTypes:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2785,"co":1,"r":"Public","n":"ShardEventTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ShardEventTypes#death:member","d":"","ex":[{"k":"Reference","t":"death","c":"discord.js!ShardEventTypes#death"},{"k":"Content","t":": "},{"k":"Content","t":"[process: "},{"k":"Reference","t":"ChildProcess","c":"!\"\\\"child_process\\\"\".ChildProcess:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Worker","c":"!\"\\\"worker_threads\\\"\".Worker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":2786,"co":3,"ro":false,"op":false,"r":"Public","n":"death","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#disconnect:member","d":"","ex":[{"k":"Reference","t":"disconnect","c":"discord.js!ShardEventTypes#disconnect"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":2787,"co":3,"ro":false,"op":false,"r":"Public","n":"disconnect","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#error:member","d":"","ex":[{"k":"Reference","t":"error","c":"discord.js!ShardEventTypes#error"},{"k":"Content","t":": "},{"k":"Content","t":"[error: "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":2788,"co":3,"ro":false,"op":false,"r":"Public","n":"error","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#message:member","d":"","ex":[{"k":"Reference","t":"message","c":"discord.js!ShardEventTypes#message"},{"k":"Content","t":": "},{"k":"Content","t":"[message: "},{"k":"Reference","t":"any"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":2789,"co":3,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#ready:member","d":"","ex":[{"k":"Reference","t":"ready","c":"discord.js!ShardEventTypes#ready"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":2790,"co":3,"ro":false,"op":false,"r":"Public","n":"ready","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#reconnecting:member","d":"","ex":[{"k":"Reference","t":"reconnecting","c":"discord.js!ShardEventTypes#reconnecting"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":2791,"co":3,"ro":false,"op":false,"r":"Public","n":"reconnecting","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#resume:member","d":"","ex":[{"k":"Reference","t":"resume","c":"discord.js!ShardEventTypes#resume"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":2792,"co":3,"ro":false,"op":false,"r":"Public","n":"resume","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardEventTypes#spawn:member","d":"","ex":[{"k":"Reference","t":"spawn","c":"discord.js!ShardEventTypes#spawn"},{"k":"Content","t":": "},{"k":"Content","t":"[process: "},{"k":"Reference","t":"ChildProcess","c":"!\"\\\"child_process\\\"\".ChildProcess:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Worker","c":"!\"\\\"worker_threads\\\"\".Worker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":2793,"co":3,"ro":false,"op":false,"r":"Public","n":"spawn","prtr":{"st":2,"en":7}}],"etrs":[]},{"k":"Class","c":"discord.js!ShardingManager:class","d":"/**\n * This is a utility class that makes multi-process sharding of a bot an easy and painless experience. It works by spawning a self-contained {@link ChildProcess} or {@link Worker} for each individual shard, each containing its own instance of your bot's {@link Client}. They all have a line of communication with the master process, and there are several useful methods that utilise it in order to simplify tasks that are normally difficult with sharding. It can spawn a specific number of shards or the amount that Discord suggests for the bot, and takes a path to your main bot script to launch for each one.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ShardingManager","c":"discord.js!ShardingManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/sharding/ShardingManager.js","l":22,"co":1,"r":"Public","ab":false,"n":"ShardingManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ShardingManager:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"file","c":"discord.js!~file"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ShardingManagerOptions","c":"discord.js!ShardingManagerOptions:interface"},{"k":"Content","t":");"}],"l":22,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"file","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"options","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!ShardingManager#broadcast:member(1)","d":"/**\n * Sends a message to all shards.\n *\n * @param message - Message to be sent to the shards\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcast","c":"discord.js!ShardingManager#broadcast"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":242,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcast"},{"k":"Method","c":"discord.js!ShardingManager#broadcastEval:member(1)","d":"/**\n * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardingManager#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">[]>"},{"k":"Content","t":";"}],"l":261,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":17,"en":23},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":7,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardingManager#broadcastEval:member(2)","d":"/**\n * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardingManager#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"shard","c":"discord.js!~__type#shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":261,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":25,"en":31},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":7,"en":16},"op":false,"rs":false},{"pn":"options","ptr":{"st":19,"en":24},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardingManager#broadcastEval:member(3)","d":"/**\n * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardingManager#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":", "},{"k":"Reference","t":"Context"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Context"},{"k":"Content","t":">) => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"context","c":"discord.js!~__type#context"},{"k":"Content","t":": "},{"k":"Reference","t":"Context"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">[]>"},{"k":"Content","t":";"}],"l":261,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Context","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":39},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":9,"en":24},"op":false,"rs":false},{"pn":"options","ptr":{"st":27,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardingManager#broadcastEval:member(4)","d":"/**\n * Evaluates a script on all shards, or a given shard, in the context of the {@link Client}s.\n *\n * @param script - JavaScript to run on each shard\n *\n * @param options - The options for the broadcast\n *\n * @returns Results of the script execution\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"broadcastEval","c":"discord.js!ShardingManager#broadcastEval"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":", "},{"k":"Reference","t":"Context"},{"k":"Content","t":">(  "},{"k":"Reference","t":"fn","c":"discord.js!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>, "},{"k":"Reference","t":"context","c":"discord.js!~context"},{"k":"Content","t":": "},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Context"},{"k":"Content","t":">) => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Content","t":"{ "},{"k":"Reference","t":"context","c":"discord.js!~__type#context"},{"k":"Content","t":": "},{"k":"Reference","t":"Context"},{"k":"Content","t":"; "},{"k":"Reference","t":"shard","c":"discord.js!~__type#shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Serialized","c":"discord.js!Serialized:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Result"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":261,"co":3,"tps":[{"tp":"Result","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Context","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":37,"en":43},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":9,"en":24},"op":false,"rs":false},{"pn":"options","ptr":{"st":27,"en":36},"op":false,"rs":false}],"op":false,"ab":false,"n":"broadcastEval"},{"k":"Method","c":"discord.js!ShardingManager#createShard:member(1)","d":"/**\n * Creates a single shard. <warn>Using this method is usually not necessary if you use the spawn method.</warn>\n *\n * @param id - Id of the shard to create <info>This is usually not necessary to manually specify.</info>\n *\n * @returns Note that the created shard needs to be explicitly spawned using its spawn method.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createShard","c":"discord.js!ShardingManager#createShard"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"discord.js!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":";"}],"l":169,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"createShard"},{"k":"Property","c":"discord.js!ShardingManager#execArgv:member","d":"/**\n * An array of arguments to pass to the executable (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"undefined execArgv :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":143,"ro":false,"op":false,"r":"Public","n":"execArgv","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardingManager#fetchClientValues:member(1)","d":"/**\n * Fetches a client property value of each shard, or a given shard.\n *\n * @param prop - Name of the client property to get, using periods for nesting\n *\n * @param shard - Shard to fetch property from, all if undefined\n *\n * @example\n * ```js\n * manager.fetchClientValues('guilds.cache.size')\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchClientValues","c":"discord.js!ShardingManager#fetchClientValues"},{"k":"Content","t":"("},{"k":"Reference","t":"prop","c":"discord.js!~prop"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":"[]>"},{"k":"Content","t":";"}],"l":278,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"prop","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchClientValues"},{"k":"Method","c":"discord.js!ShardingManager#fetchClientValues:member(2)","d":"/**\n * Fetches a client property value of each shard, or a given shard.\n *\n * @param prop - Name of the client property to get, using periods for nesting\n *\n * @param shard - Shard to fetch property from, all if undefined\n *\n * @example\n * ```js\n * manager.fetchClientValues('guilds.cache.size')\n *   .then(results => console.log(`${results.reduce((prev, val) => prev + val, 0)} total guilds`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchClientValues","c":"discord.js!ShardingManager#fetchClientValues"},{"k":"Content","t":"("},{"k":"Reference","t":"prop","c":"discord.js!~prop"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"shard","c":"discord.js!~shard"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":278,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"prop","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"shard","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetchClientValues"},{"k":"Property","c":"discord.js!ShardingManager#file:member","d":"/**\n * Path to the shard script file\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"file","c":"discord.js!ShardingManager#file"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":false,"op":false,"r":"Public","n":"file","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardingManager#mode:member","d":"/**\n * Mode for shards to spawn with\n */\n","ex":[{"k":"Content","t":"undefined mode :"},{"k":"Reference","t":"ShardingManagerMode","c":"discord.js!ShardingManagerMode:type"},{"k":"Content","t":";"}],"l":116,"ro":false,"op":false,"r":"Public","n":"mode","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardingManager#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!ShardingManager#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'shardCreate'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"shard","c":"discord.js!~shard"},{"k":"Content","t":": "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2905,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!ShardingManager#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!ShardingManager#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Content","t":"'shardCreate'"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"shard","c":"discord.js!~shard"},{"k":"Content","t":": "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2907,"co":3,"sta":false,"rtr":{"st":16,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!ShardingManager#respawn:member","d":"/**\n * Whether shards should automatically respawn upon exiting\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"respawn","c":"discord.js!ShardingManager#respawn"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":125,"co":3,"ro":false,"op":false,"r":"Public","n":"respawn","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardingManager#respawnAll:member(1)","d":"/**\n * Kills all running shards and respawns them.\n *\n * @param options - Options for respawning shards\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"respawnAll","c":"discord.js!ShardingManager#respawnAll"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MultipleShardRespawnOptions","c":"discord.js!MultipleShardRespawnOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":322,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"respawnAll"},{"k":"Property","c":"discord.js!ShardingManager#shardArgs:member","d":"/**\n * An array of arguments to pass to shards (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shardArgs","c":"discord.js!ShardingManager#shardArgs"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":137,"co":3,"ro":false,"op":false,"r":"Public","n":"shardArgs","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!ShardingManager#shardCreate:member(0)","d":"/**\n * Emitted upon creating a shard.\n *\n * @param shard - Shard that was created\n */\n","ex":[{"k":"Content","t":"on('shardCreate', (shard: "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":") => {})"}],"l":172,"r":"Public","oi":0,"ps":[{"pn":"shard","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"shardCreate"},{"k":"Property","c":"discord.js!ShardingManager#shardList:member","d":"/**\n * List of shards this sharding manager spawns\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shardList","c":"discord.js!ShardingManager#shardList"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"[] | 'auto'"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":false,"op":false,"r":"Public","n":"shardList","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardingManager#shards:member","d":"/**\n * A collection of shards that this manager has spawned\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shards","c":"discord.js!ShardingManager#shards"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":155,"co":3,"ro":false,"op":false,"r":"Public","n":"shards","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardingManager#silent:member","d":"/**\n * Whether to pass the silent flag to child process (only when {@link ShardingManager.mode} is `process`)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"silent","c":"discord.js!ShardingManager#silent"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":131,"co":3,"ro":false,"op":false,"r":"Public","n":"silent","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ShardingManager#spawn:member(1)","d":"/**\n * Spawns multiple shards.\n *\n * @param options - Options for spawning shards\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"spawn","c":"discord.js!ShardingManager#spawn"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MultipleShardSpawnOptions","c":"discord.js!MultipleShardSpawnOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"Shard","c":"discord.js!Shard:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":194,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"spawn"},{"k":"Property","c":"discord.js!ShardingManager#token:member","d":"/**\n * Token to use for obtaining the automatic shard count, and passing to shards\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"token","c":"discord.js!ShardingManager#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":149,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ShardingManager#totalShards:member","d":"/**\n * Amount of shards that all sharding managers spawn in total\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"totalShards","c":"discord.js!ShardingManager#totalShards"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | 'auto'"},{"k":"Content","t":";"}],"l":99,"co":3,"ro":false,"op":false,"r":"Public","n":"totalShards","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ShardingManagerMode:type","d":"/**\n * The mode to spawn shards with for a {@link ShardingManager}. Can be either one of:\n *\n * * 'process' to use child processes\n *\n * * 'worker' to use [Worker threads](https://nodejs.org/api/worker_threads.html)\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ShardingManagerMode","c":"discord.js!ShardingManagerMode:type"},{"k":"Content","t":" = "},{"k":"Content","t":"'process' | 'worker'"},{"k":"Content","t":";"}],"pat":"src/sharding/ShardingManager.js","l":23,"co":1,"r":"Public","n":"ShardingManagerMode","ttr":{"st":3,"en":4}},{"k":"Interface","c":"discord.js!ShardingManagerOptions:interface","d":"/**\n * The options to spawn shards with for a {@link ShardingManager}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ShardingManagerOptions","c":"discord.js!ShardingManagerOptions:interface"},{"k":"Content","t":" "}],"pat":"src/sharding/ShardingManager.js","l":30,"co":1,"r":"Public","n":"ShardingManagerOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#execArgv:member","d":"/**\n * Arguments to pass to the shard script executable when spawning (only available when mode is set to 'process')\n */\n","ex":[{"k":"Reference","t":"execArgv","c":"discord.js!ShardingManagerOptions#execArgv"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6538,"co":3,"ro":false,"op":true,"r":"Public","n":"execArgv","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#mode:member","d":"/**\n * Which mode to use for shards\n */\n","ex":[{"k":"Reference","t":"mode","c":"discord.js!ShardingManagerOptions#mode"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ShardingManagerMode","c":"discord.js!ShardingManagerMode:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6533,"co":3,"ro":false,"op":true,"r":"Public","n":"mode","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#respawn:member","d":"/**\n * Whether shards should automatically respawn upon exiting\n */\n","ex":[{"k":"Reference","t":"respawn","c":"discord.js!ShardingManagerOptions#respawn"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6534,"co":3,"ro":false,"op":true,"r":"Public","n":"respawn","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#shardArgs:member","d":"/**\n * Arguments to pass to the shard script when spawning (only available when mode is set to 'process')\n */\n","ex":[{"k":"Reference","t":"shardArgs","c":"discord.js!ShardingManagerOptions#shardArgs"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6536,"co":3,"ro":false,"op":true,"r":"Public","n":"shardArgs","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#shardList:member","d":"/**\n * List of shards to spawn or \"auto\"\n */\n","ex":[{"k":"Reference","t":"shardList","c":"discord.js!ShardingManagerOptions#shardList"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":"[] | 'auto'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6532,"co":3,"ro":false,"op":true,"r":"Public","n":"shardList","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#silent:member","d":"/**\n * Whether to pass the silent flag to child process (only available when mode is set to 'process')\n */\n","ex":[{"k":"Reference","t":"silent","c":"discord.js!ShardingManagerOptions#silent"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6535,"co":3,"ro":false,"op":true,"r":"Public","n":"silent","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#token:member","d":"/**\n * Token to use for automatic shard count and passing to shards\n */\n","ex":[{"k":"Reference","t":"token","c":"discord.js!ShardingManagerOptions#token"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6537,"co":3,"ro":false,"op":true,"r":"Public","n":"token","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ShardingManagerOptions#totalShards:member","d":"/**\n * Number of total shards of all shard managers or \"auto\"\n */\n","ex":[{"k":"Reference","t":"totalShards","c":"discord.js!ShardingManagerOptions#totalShards"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":" | 'auto'"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6531,"co":3,"ro":false,"op":true,"r":"Public","n":"totalShards","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Class","c":"discord.js!SKU:class","d":"/**\n * Represents a premium application SKU.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"SKU","c":"discord.js!SKU:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/SKU.js","l":10,"co":1,"r":"Public","ab":false,"n":"SKU","pmo":false,"ms":[{"k":"Property","c":"discord.js!SKU#applicationId:member","d":"/**\n * The id of the parent application\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!SKU#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#flags:member","d":"/**\n * Flags that describe the SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!SKU#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SKUFlagsBitField","c":"discord.js!SKUFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#id:member","d":"/**\n * The id of the SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!SKU#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#name:member","d":"/**\n * The customer-facing name of the premium offering\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!SKU#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#slug:member","d":"/**\n * The system-generated URL slug based on this SKU's name\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"slug","c":"discord.js!SKU#slug"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"slug","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKU#type:member","d":"/**\n * The type of the SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!SKU#type"},{"k":"Content","t":": "},{"k":"Reference","t":"SKUType","c":"discord-api-types!SKUType:enum"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!SKUFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with an {@link SKU.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"SKUFlagsBitField","c":"discord.js!SKUFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SKUFlagsString","c":"discord.js!SKUFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/SKUFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"SKUFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!SKUFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"bigint","c":"discord.js!bigint:class"},{"k":"Content","t":";"}],"pat":"src/util/BitField.js","l":33,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKUFlagsBitField.Flags:member","d":"/**\n * Numeric SKU flags.\n */\n","ex":[{"k":"Content","t":"undefined static Flags :"},{"k":"Reference","t":"SKUFlags","c":"discord-api-types!SKUFlags:class"},{"k":"Content","t":";"}],"l":16,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":1,"en":2},"sta":true,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SKUFlagsBitField.FLAGS:member","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"FLAGS","c":"discord.js!SKUFlagsBitField.FLAGS"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"SKUFlags","c":"discord-api-types!SKUFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2934,"co":3,"ro":false,"op":false,"r":"Public","n":"FLAGS","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!SKUFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!SKUFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SKUFlagsString","c":"discord.js!SKUFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2935,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!SKUFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SKUFlagsString","c":"discord.js!SKUFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"SKUFlags","c":"discord-api-types!SKUFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2931,"co":1,"r":"Public","n":"SKUFlagsString","ttr":{"st":3,"en":7}},{"k":"TypeAlias","c":"discord.js!SKUResolvable:type","d":"/**\n * Data that resolves to give a SKU object. This can be:\n *\n * * A SKU object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SKUResolvable","c":"discord.js!SKUResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"SKU","c":"discord.js!SKU:class"},{"k":"Content","t":";"}],"pat":"src/managers/EntitlementManager.js","l":33,"co":1,"r":"Public","n":"SKUResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!StageChannel:class","d":"/**\n * Represents a guild stage channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildVoiceChannel","c":"discord.js!BaseGuildVoiceChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/StageChannel.js","l":9,"co":1,"r":"Public","ab":false,"n":"StageChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!StageChannel#bitrate:member","d":"/**\n * The bitrate of this voice-based channel\n */\n","ex":[{"k":"Content","t":"undefined bitrate :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":48,"ro":false,"op":false,"r":"Public","n":"bitrate","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageChannel#createStageInstance:member(1)","d":"/**\n * Creates a stage instance associated with this stage channel.\n *\n * @param options - The options to create the stage instance\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createStageInstance","c":"discord.js!StageChannel#createStageInstance"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstanceCreateOptions","c":"discord.js!StageInstanceCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":36,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"createStageInstance"},{"k":"Property","c":"discord.js!StageChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#full:member","d":"/**\n * Checks if the voice-based channel is full\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly full :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":114,"ro":true,"op":false,"r":"Public","n":"full","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#joinable:member","d":"/**\n * Whether the channel is joinable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly joinable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":123,"ro":true,"op":false,"r":"Public","n":"joinable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#members:member","d":"/**\n * The members in this voice-based channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":99,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":27,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel in seconds\n */\n","ex":[{"k":"Content","t":"undefined rateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":86,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#rtcRegion:member","d":"/**\n * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n */\n","ex":[{"k":"Content","t":"undefined rtcRegion :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":40,"ro":false,"op":true,"r":"Public","n":"rtcRegion","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageChannel#setBitrate:member(1)","d":"/**\n * Sets the bitrate of the channel.\n *\n * @param bitrate - The new bitrate\n *\n * @param reason - Reason for changing the channel's bitrate\n *\n * @example\n * ```js\n * // Set the bitrate of a voice channel\n * stageChannel.setBitrate(48_000)\n *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setBitrate(bitrate"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":56,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bitrate","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setBitrate"},{"k":"Method","c":"discord.js!StageChannel#setRTCRegion:member(1)","d":"/**\n * Sets the RTC region of the channel.\n *\n * @param rtcRegion - The new region of the channel. Set to `null` to remove a specific region for the channel\n *\n * @param reason - The reason for modifying this region.\n *\n * @example\n * ```js\n * // Set the RTC region to sydney\n * stageChannel.setRTCRegion('sydney');\n * ```\n *\n * @example\n * ```js\n * // Remove a fixed region for this channel - let Discord decide automatically\n * stageChannel.setRTCRegion(null, 'We want to let Discord decide.');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setRTCRegion(rtcRegion?"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":71,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rtcRegion","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRTCRegion"},{"k":"Method","c":"discord.js!StageChannel#setTopic:member(1)","d":"/**\n * Sets a new topic for the guild channel.\n *\n * @param topic - The new topic for the guild channel\n *\n * @param reason - Reason for changing the guild channel's topic\n *\n * @example\n * ```js\n * // Set a new channel topic\n * stageChannel.setTopic('needs more rate limiting')\n *   .then(channel => console.log(`Channel's new topic is ${channel.topic}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setTopic","c":"discord.js!StageChannel#setTopic"},{"k":"Content","t":"("},{"k":"Reference","t":"topic","c":"discord.js!~topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":51,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"topic","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setTopic"},{"k":"Method","c":"discord.js!StageChannel#setUserLimit:member(1)","d":"/**\n * Sets the user limit of the channel.\n *\n * @param userLimit - The new user limit\n *\n * @param reason - Reason for changing the user limit\n *\n * @example\n * ```js\n * // Set the user limit of a voice channel\n * stageChannel.setUserLimit(42)\n *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setUserLimit(userLimit"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":87,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userLimit","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setUserLimit"},{"k":"Method","c":"discord.js!StageChannel#setVideoQualityMode:member(1)","d":"/**\n * Sets the camera video quality mode of the channel.\n *\n * @param videoQualityMode - The new camera video quality mode.\n *\n * @param reason - Reason for changing the camera video quality mode.\n */\n","ex":[{"k":"Content","t":"setVideoQualityMode(videoQualityMode"},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":102,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"videoQualityMode","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setVideoQualityMode"},{"k":"Property","c":"discord.js!StageChannel#stageInstance:member","d":"/**\n * The stage instance of this stage channel, if it exists\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"stageInstance","c":"discord.js!StageChannel#stageInstance"},{"k":"Content","t":"(): "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":true,"op":false,"r":"Public","n":"stageInstance","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#topic:member","d":"/**\n * The topic of the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"topic","c":"discord.js!StageChannel#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!StageChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildStageVoice","c":"discord-api-types!ChannelType.GuildStageVoice:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#userLimit:member","d":"/**\n * The maximum amount of users allowed in this channel.\n */\n","ex":[{"k":"Content","t":"undefined userLimit :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"userLimit","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#videoQualityMode:member","d":"/**\n * The camera video quality mode of the channel.\n */\n","ex":[{"k":"Content","t":"undefined videoQualityMode :"},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":64,"ro":false,"op":true,"r":"Public","n":"videoQualityMode","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!StageChannelResolvable:type","d":"/**\n * Data that can be resolved to a Stage Channel object. This can be:\n *\n * * A StageChannel\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"StageChannelResolvable","c":"discord.js!StageChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/StageInstanceManager.js","l":39,"co":1,"r":"Public","n":"StageChannelResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!StageInstance:class","d":"/**\n * Represents a stage instance.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/StageInstance.js","l":10,"co":1,"r":"Public","ab":false,"n":"StageInstance","pmo":false,"ms":[{"k":"Property","c":"discord.js!StageInstance#channel:member","d":"/**\n * The stage channel associated with this stage instance\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!StageInstance#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#channelId:member","d":"/**\n * The id of the channel associated with the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!StageInstance#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#createdAt:member","d":"/**\n * The time this stage instance was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!StageInstance#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":162,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#createdTimestamp:member","d":"/**\n * The timestamp this stage instances was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!StageInstance#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":153,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageInstance#delete:member(1)","d":"/**\n * Deletes this stage instance.\n *\n * @example\n * ```js\n * // Delete a stage instance\n * stageInstance.delete()\n *  .then(stageInstance => console.log(stageInstance))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!StageInstance#delete"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":128,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!StageInstance#discoverableDisabled:member","d":"/**\n * Whether or not stage discovery is disabled\n *\n * @deprecated\n *\n * See https://github.com/discord/discord-api-docs/pull/4296 for more information\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discoverableDisabled","c":"discord.js!StageInstance#discoverableDisabled"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":62,"co":3,"ro":false,"op":false,"r":"Public","n":"discoverableDisabled","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageInstance#edit:member(1)","d":"/**\n * Edits this stage instance.\n *\n * @param options - The options to edit the stage instance\n *\n * @example\n * ```js\n * // Edit a stage instance\n * stageInstance.edit({ topic: 'new topic' })\n *  .then(stageInstance => console.log(stageInstance))\n *  .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!StageInstance#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstanceEditOptions","c":"discord.js!StageInstanceEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":115,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!StageInstance#guild:member","d":"/**\n * The guild this stage instance belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!StageInstance#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":92,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#guildId:member","d":"/**\n * The id of the guild associated with the stage channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!StageInstance#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#guildScheduledEvent:member","d":"/**\n * The associated guild scheduled event of this stage instance\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!StageInstance#guildScheduledEvent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildScheduledEvent","c":"discord.js!GuildScheduledEvent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":101,"co":3,"ro":true,"op":false,"r":"Public","n":"guildScheduledEvent","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#guildScheduledEventId:member","d":"/**\n * The associated guild scheduled event id of this stage instance\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildScheduledEventId","c":"discord.js!StageInstance#guildScheduledEventId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":72,"co":3,"ro":false,"op":true,"r":"Public","n":"guildScheduledEventId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#id:member","d":"/**\n * The stage instance's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!StageInstance#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstance#privacyLevel:member","d":"/**\n * The privacy level of the stage instance\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"privacyLevel","c":"discord.js!StageInstance#privacyLevel"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstancePrivacyLevel","c":"discord-api-types!StageInstancePrivacyLevel:enum"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"privacyLevel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageInstance#setTopic:member(1)","d":"/**\n * Sets the topic of this stage instance.\n *\n * @param topic - The topic for the stage instance\n *\n * @example\n * ```js\n * // Set topic of a stage instance\n * stageInstance.setTopic('new topic')\n *  .then(stageInstance => console.log(`Set the topic to: ${stageInstance.topic}`))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setTopic","c":"discord.js!StageInstance#setTopic"},{"k":"Content","t":"("},{"k":"Reference","t":"topic","c":"discord.js!~topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":144,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"topic","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setTopic"},{"k":"Property","c":"discord.js!StageInstance#topic:member","d":"/**\n * The topic of the stage instance\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"topic","c":"discord.js!StageInstance#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!StageInstanceCreateOptions:interface","d":"/**\n * Options used to create a stage instance.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StageInstanceCreateOptions","c":"discord.js!StageInstanceCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/StageInstanceManager.js","l":29,"co":1,"r":"Public","n":"StageInstanceCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!StageInstanceCreateOptions#guildScheduledEvent:member","d":"/**\n * The guild scheduled event associated with the stage instance\n */\n","ex":[{"k":"Reference","t":"guildScheduledEvent","c":"discord.js!StageInstanceCreateOptions#guildScheduledEvent"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildScheduledEventResolvable","c":"discord.js!GuildScheduledEventResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5428,"co":3,"ro":false,"op":true,"r":"Public","n":"guildScheduledEvent","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StageInstanceCreateOptions#privacyLevel:member","d":"/**\n * The privacy level of the stage instance\n */\n","ex":[{"k":"Reference","t":"privacyLevel","c":"discord.js!StageInstanceCreateOptions#privacyLevel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"StageInstancePrivacyLevel","c":"discord-api-types!StageInstancePrivacyLevel:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5426,"co":3,"ro":false,"op":true,"r":"Public","n":"privacyLevel","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StageInstanceCreateOptions#sendStartNotification:member","d":"/**\n * Whether to notify `@everyone` that the stage instance has started\n */\n","ex":[{"k":"Reference","t":"sendStartNotification","c":"discord.js!StageInstanceCreateOptions#sendStartNotification"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5427,"co":3,"ro":false,"op":true,"r":"Public","n":"sendStartNotification","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StageInstanceCreateOptions#topic:member","d":"/**\n * The topic of the stage instance\n */\n","ex":[{"k":"Reference","t":"topic","c":"discord.js!StageInstanceCreateOptions#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5425,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!StageInstanceEditOptions:interface","d":"/**\n * Options used to edit an existing stage instance.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StageInstanceEditOptions","c":"discord.js!StageInstanceEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/StageInstanceManager.js","l":105,"co":1,"r":"Public","n":"StageInstanceEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!StageInstanceEditOptions#privacyLevel:member","d":"/**\n * The new privacy level of the stage instance\n */\n","ex":[{"k":"Reference","t":"privacyLevel","c":"discord.js!StageInstanceEditOptions#privacyLevel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"StageInstancePrivacyLevel","c":"discord-api-types!StageInstancePrivacyLevel:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6562,"co":3,"ro":false,"op":true,"r":"Public","n":"privacyLevel","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StageInstanceEditOptions#topic:member","d":"/**\n * The new topic of the stage instance\n */\n","ex":[{"k":"Reference","t":"topic","c":"discord.js!StageInstanceEditOptions#topic"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6561,"co":3,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!StageInstanceManager:class","d":"/**\n * Manages API methods for {@link StageInstance} objects and holds their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StageInstanceManager","c":"discord.js!StageInstanceManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":", "},{"k":"Reference","t":"StageInstanceResolvable","c":"discord.js!StageInstanceResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/StageInstanceManager.js","l":12,"co":1,"r":"Public","ab":false,"n":"StageInstanceManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!StageInstanceManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":23,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StageInstanceManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StageInstanceManager#create:member(1)","d":"/**\n * Creates a new stage instance.\n *\n * @param channel - The stage channel to associate the created stage instance to\n *\n * @param options - The options to create the stage instance\n *\n * @example\n * ```js\n * // Create a stage instance\n * guild.stageInstances.create('1234567890123456789', {\n *  topic: 'A very creative topic',\n *  privacyLevel: GuildPrivacyLevel.GuildOnly\n * })\n *  .then(stageInstance => console.log(stageInstance))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"create","c":"discord.js!StageInstanceManager#create"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"StageChannelResolvable","c":"discord.js!StageChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstanceCreateOptions","c":"discord.js!StageInstanceCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":60,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"create"},{"k":"Method","c":"discord.js!StageInstanceManager#delete:member(1)","d":"/**\n * Deletes an existing stage instance.\n *\n * @param channel - The stage channel whose associated stage instance is to be deleted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!StageInstanceManager#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"StageChannelResolvable","c":"discord.js!StageChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":151,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!StageInstanceManager#edit:member(1)","d":"/**\n * Edits an existing stage instance.\n *\n * @param channel - The stage channel whose associated stage instance is to be edited\n *\n * @param options - The options to edit the stage instance\n *\n * @example\n * ```js\n * // Edit a stage instance\n * guild.stageInstances.edit('1234567890123456789', { topic: 'new topic' })\n *  .then(stageInstance => console.log(stageInstance))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!StageInstanceManager#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"StageChannelResolvable","c":"discord.js!StageChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"StageInstanceEditOptions","c":"discord.js!StageInstanceEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":123,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!StageInstanceManager#fetch:member(1)","d":"/**\n * Fetches the stage instance associated with a stage channel, if it exists.\n *\n * @param channel - The stage channel whose associated stage instance is to be fetched\n *\n * @param options - Additional options for this fetch\n *\n * @example\n * ```js\n * // Fetch a stage instance\n * guild.stageInstances.fetch('1234567890123456789')\n *  .then(stageInstance => console.log(stageInstance))\n *  .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!StageInstanceManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"StageChannelResolvable","c":"discord.js!StageChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":92,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!StageInstanceManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!StageInstanceManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!StageInstanceResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"StageInstanceResolvable","c":"discord.js!StageInstanceResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6543,"co":1,"r":"Public","n":"StageInstanceResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!StartThreadOptions:interface","d":"/**\n * Options for starting a thread on a message.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StartThreadOptions","c":"discord.js!StartThreadOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Message.js","l":867,"co":1,"r":"Public","n":"StartThreadOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!StartThreadOptions#autoArchiveDuration:member","d":"/**\n * The amount of time after which the thread should automatically archive in case of no recent activity\n */\n","ex":[{"k":"Reference","t":"autoArchiveDuration","c":"discord.js!StartThreadOptions#autoArchiveDuration"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6547,"co":3,"ro":false,"op":true,"r":"Public","n":"autoArchiveDuration","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StartThreadOptions#name:member","d":"/**\n * The name of the new thread\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!StartThreadOptions#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6546,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StartThreadOptions#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for the thread in seconds\n */\n","ex":[{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!StartThreadOptions#rateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6549,"co":3,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!StartThreadOptions#reason:member","d":"/**\n * Reason for creating the thread\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!StartThreadOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6548,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Enum","c":"discord.js!Status:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"Status","c":"discord.js!Status:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5400,"co":1,"r":"Public","n":"Status","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!Status.Connecting:member","d":"","ex":[{"k":"Reference","t":"Connecting","c":"discord.js!Status.Connecting:member"},{"k":"Content","t":" = "},{"k":"Content","t":"1"}],"l":5402,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Connecting"},{"k":"EnumMember","c":"discord.js!Status.Disconnected:member","d":"","ex":[{"k":"Reference","t":"Disconnected","c":"discord.js!Status.Disconnected:member"},{"k":"Content","t":" = "},{"k":"Content","t":"5"}],"l":5406,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Disconnected"},{"k":"EnumMember","c":"discord.js!Status.Identifying:member","d":"","ex":[{"k":"Reference","t":"Identifying","c":"discord.js!Status.Identifying:member"},{"k":"Content","t":" = "},{"k":"Content","t":"7"}],"l":5408,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Identifying"},{"k":"EnumMember","c":"discord.js!Status.Idle:member","d":"","ex":[{"k":"Reference","t":"Idle","c":"discord.js!Status.Idle:member"},{"k":"Content","t":" = "},{"k":"Content","t":"3"}],"l":5404,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Idle"},{"k":"EnumMember","c":"discord.js!Status.Nearly:member","d":"","ex":[{"k":"Reference","t":"Nearly","c":"discord.js!Status.Nearly:member"},{"k":"Content","t":" = "},{"k":"Content","t":"4"}],"l":5405,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Nearly"},{"k":"EnumMember","c":"discord.js!Status.Ready:member","d":"","ex":[{"k":"Reference","t":"Ready","c":"discord.js!Status.Ready:member"},{"k":"Content","t":" = "},{"k":"Content","t":"0"}],"l":5401,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Ready"},{"k":"EnumMember","c":"discord.js!Status.Reconnecting:member","d":"","ex":[{"k":"Reference","t":"Reconnecting","c":"discord.js!Status.Reconnecting:member"},{"k":"Content","t":" = "},{"k":"Content","t":"2"}],"l":5403,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Reconnecting"},{"k":"EnumMember","c":"discord.js!Status.Resuming:member","d":"","ex":[{"k":"Reference","t":"Resuming","c":"discord.js!Status.Resuming:member"},{"k":"Content","t":" = "},{"k":"Content","t":"8"}],"l":5409,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Resuming"},{"k":"EnumMember","c":"discord.js!Status.WaitingForGuilds:member","d":"","ex":[{"k":"Reference","t":"WaitingForGuilds","c":"discord.js!Status.WaitingForGuilds:member"},{"k":"Content","t":" = "},{"k":"Content","t":"6"}],"l":5407,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"WaitingForGuilds"}]},{"k":"Class","c":"discord.js!Sticker:class","d":"/**\n * Represents a Sticker.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Sticker.js","l":13,"co":1,"r":"Public","ab":false,"n":"Sticker","pmo":false,"ms":[{"k":"Property","c":"discord.js!Sticker#available:member","d":"/**\n * Whether or not the guild sticker is available\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"available","c":"discord.js!Sticker#available"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":88,"co":3,"ro":false,"op":false,"r":"Public","n":"available","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#createdAt:member","d":"/**\n * The time the sticker was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Sticker#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":138,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#createdTimestamp:member","d":"/**\n * The timestamp the sticker was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Sticker#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":129,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Sticker#delete:member(1)","d":"/**\n * Deletes the sticker.\n *\n * @param reason - Reason for deleting this sticker\n *\n * @example\n * ```js\n * // Delete a message\n * sticker.delete()\n *   .then(sticker => console.log(`Deleted sticker ${sticker.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!Sticker#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":232,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Property","c":"discord.js!Sticker#description:member","d":"/**\n * The description of the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!Sticker#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Sticker#edit:member(1)","d":"/**\n * Edits the sticker.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Update the name of a sticker\n * sticker.edit({ name: 'new name' })\n *   .then(sticker => console.log(`Updated the name of the sticker to ${sticker.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!Sticker#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildStickerEditOptions","c":"discord.js!GuildStickerEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":218,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!Sticker#equals:member(1)","d":"/**\n * Whether this sticker is the same as another one.\n *\n * @param other - The sticker to compare it to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!Sticker#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":242,"co":3,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!Sticker#fetch:member(1)","d":"/**\n * Fetches this sticker.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!Sticker#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":175,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!Sticker#fetchPack:member(1)","d":"/**\n * Fetches the pack that contains this sticker.\n *\n * @returns The sticker pack or `null` if this sticker does not belong to one.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchPack","c":"discord.js!Sticker#fetchPack"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"StickerPack","c":"discord.js!StickerPack:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":185,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchPack"},{"k":"Method","c":"discord.js!Sticker#fetchUser:member(1)","d":"/**\n * Fetches the user who uploaded this sticker, if this is a guild sticker.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchUser","c":"discord.js!Sticker#fetchUser"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":193,"co":3,"sta":false,"rtr":{"st":3,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchUser"},{"k":"Property","c":"discord.js!Sticker#format:member","d":"/**\n * The format of the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"format","c":"discord.js!Sticker#format"},{"k":"Content","t":": "},{"k":"Reference","t":"StickerFormatType","c":"discord-api-types!StickerFormatType:enum"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":false,"op":false,"r":"Public","n":"format","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#guild:member","d":"/**\n * The guild that owns this sticker\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!Sticker#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":156,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#guildId:member","d":"/**\n * The id of the guild that owns this sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!Sticker#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":98,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#id:member","d":"/**\n * The sticker's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Sticker#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#name:member","d":"/**\n * The name of the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Sticker#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#packId:member","d":"/**\n * The id of the pack the sticker is from, for standard stickers\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"packId","c":"discord.js!Sticker#packId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":68,"co":3,"ro":false,"op":false,"r":"Public","n":"packId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#partial:member","d":"/**\n * Whether this sticker is partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!Sticker#partial"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":147,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#sortValue:member","d":"/**\n * The standard sticker's sort order within its pack\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sortValue","c":"discord.js!Sticker#sortValue"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":118,"co":3,"ro":false,"op":false,"r":"Public","n":"sortValue","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#tags:member","d":"/**\n * Autocomplete/suggestions for the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"tags","c":"discord.js!Sticker#tags"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":false,"op":false,"r":"Public","n":"tags","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#type:member","d":"/**\n * The type of the sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Sticker#type"},{"k":"Content","t":": "},{"k":"Reference","t":"StickerType","c":"discord-api-types!StickerType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":42,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#url:member","d":"/**\n * A link to the sticker <info>If the sticker's format is {@link discord-api-types#(StickerFormatType:enum).Lottie}, it returns the URL of the Lottie JSON file.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"url","c":"discord.js!Sticker#url"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":167,"co":3,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sticker#user:member","d":"/**\n * The user that uploaded the guild sticker\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!Sticker#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":108,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!StickerPack:class","d":"/**\n * Represents a pack of standard stickers.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StickerPack","c":"discord.js!StickerPack:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/StickerPack.js","l":12,"co":1,"r":"Public","ab":false,"n":"StickerPack","pmo":false,"ms":[{"k":"Property","c":"discord.js!StickerPack#bannerId:member","d":"/**\n * The id of the sticker pack's banner image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bannerId","c":"discord.js!StickerPack#bannerId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":false,"op":false,"r":"Public","n":"bannerId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StickerPack#bannerURL:member(1)","d":"/**\n * The URL to this sticker pack's banner.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bannerURL","c":"discord.js!StickerPack#bannerURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":90,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"bannerURL"},{"k":"Property","c":"discord.js!StickerPack#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#coverSticker:member","d":"/**\n * The sticker which is shown as the pack's icon\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"coverSticker","c":"discord.js!StickerPack#coverSticker"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":81,"co":3,"ro":true,"op":false,"r":"Public","n":"coverSticker","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#coverStickerId:member","d":"/**\n * The id of a sticker in the pack which is shown as the pack's icon\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"coverStickerId","c":"discord.js!StickerPack#coverStickerId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"coverStickerId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#createdAt:member","d":"/**\n * The time the sticker was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!StickerPack#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":72,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#createdTimestamp:member","d":"/**\n * The timestamp the sticker was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!StickerPack#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":63,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#description:member","d":"/**\n * The description of the sticker pack\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!StickerPack#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":49,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#id:member","d":"/**\n * The Sticker pack's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!StickerPack#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":19,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#name:member","d":"/**\n * The name of the sticker pack\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!StickerPack#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#skuId:member","d":"/**\n * The id of the pack's SKU\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"skuId","c":"discord.js!StickerPack#skuId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"skuId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StickerPack#stickers:member","d":"/**\n * The stickers in the pack\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"stickers","c":"discord.js!StickerPack#stickers"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!StickerResolvable:type","d":"/**\n * Data that resolves to give a Sticker object. This can be:\n *\n * * A Sticker object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"StickerResolvable","c":"discord.js!StickerResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/GuildStickerManager.js","l":76,"co":1,"r":"Public","n":"StickerResolvable","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!StringMappedInteractionTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StringMappedInteractionTypes","c":"discord.js!StringMappedInteractionTypes:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":"> "}],"pat":"typings/index.d.ts","l":2022,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"StringMappedInteractionTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#ActionRow:member","d":"","ex":[{"k":"Reference","t":"ActionRow","c":"discord.js!StringMappedInteractionTypes#ActionRow"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2029,"co":3,"ro":false,"op":false,"r":"Public","n":"ActionRow","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#Button:member","d":"","ex":[{"k":"Reference","t":"Button","c":"discord.js!StringMappedInteractionTypes#Button"},{"k":"Content","t":": "},{"k":"Reference","t":"ButtonInteraction","c":"discord.js!ButtonInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2023,"co":3,"ro":false,"op":false,"r":"Public","n":"Button","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#ChannelSelectMenu:member","d":"","ex":[{"k":"Reference","t":"ChannelSelectMenu","c":"discord.js!StringMappedInteractionTypes#ChannelSelectMenu"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelSelectMenuInteraction","c":"discord.js!ChannelSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2028,"co":3,"ro":false,"op":false,"r":"Public","n":"ChannelSelectMenu","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#MentionableSelectMenu:member","d":"","ex":[{"k":"Reference","t":"MentionableSelectMenu","c":"discord.js!StringMappedInteractionTypes#MentionableSelectMenu"},{"k":"Content","t":": "},{"k":"Reference","t":"MentionableSelectMenuInteraction","c":"discord.js!MentionableSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2027,"co":3,"ro":false,"op":false,"r":"Public","n":"MentionableSelectMenu","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#RoleSelectMenu:member","d":"","ex":[{"k":"Reference","t":"RoleSelectMenu","c":"discord.js!StringMappedInteractionTypes#RoleSelectMenu"},{"k":"Content","t":": "},{"k":"Reference","t":"RoleSelectMenuInteraction","c":"discord.js!RoleSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2026,"co":3,"ro":false,"op":false,"r":"Public","n":"RoleSelectMenu","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#StringSelectMenu:member","d":"","ex":[{"k":"Reference","t":"StringSelectMenu","c":"discord.js!StringMappedInteractionTypes#StringSelectMenu"},{"k":"Content","t":": "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2024,"co":3,"ro":false,"op":false,"r":"Public","n":"StringSelectMenu","prtr":{"st":2,"en":6}},{"k":"PropertySignature","c":"discord.js!StringMappedInteractionTypes#UserSelectMenu:member","d":"","ex":[{"k":"Reference","t":"UserSelectMenu","c":"discord.js!StringMappedInteractionTypes#UserSelectMenu"},{"k":"Content","t":": "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":2025,"co":3,"ro":false,"op":false,"r":"Public","n":"UserSelectMenu","prtr":{"st":2,"en":6}}],"etrs":[]},{"k":"Class","c":"discord.js!StringSelectMenuBuilder:class","d":"/**\n * Class used to build select menu components to be sent through the API\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"discord.js!StringSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderStringSelectMenuComponent","c":"@discordjs/builders!StringSelectMenuBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/StringSelectMenuBuilder.js","l":12,"co":1,"r":"Public","ab":false,"n":"StringSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!StringSelectMenuBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `StringSelectMenuBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"StringSelectMenuComponentData","c":"discord.js!StringSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":12,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!StringSelectMenuBuilder#addOptions:member(1)","d":"/**\n * Adds options to this select menu\n *\n * @param options - The options to add to this select menu\n */\n","ex":[{"k":"Content","t":"public override "},{"k":"Reference","t":"addOptions","c":"discord.js!StringSelectMenuBuilder#addOptions"},{"k":"Content","t":"(  ..."},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BuildersSelectMenuOption","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SelectMenuComponentOptionData","c":"discord.js!SelectMenuComponentOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":">"},{"k":"Content","t":" ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":48,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":13},"op":false,"rs":true}],"op":false,"ab":false,"n":"addOptions"},{"k":"Method","c":"discord.js!StringSelectMenuBuilder.from:member(1)","d":"/**\n * Creates a new select menu builder from json data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!StringSelectMenuBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"StringSelectMenuBuilder","c":"discord.js!StringSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":66,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Method","c":"discord.js!StringSelectMenuBuilder#setOptions:member(1)","d":"/**\n * Sets the options on this select menu\n *\n * @param options - The options to set on this select menu\n */\n","ex":[{"k":"Content","t":"public override "},{"k":"Reference","t":"setOptions","c":"discord.js!StringSelectMenuBuilder#setOptions"},{"k":"Content","t":"(  ..."},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"RestOrArray","c":"@discordjs/builders!RestOrArray:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BuildersSelectMenuOption","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"SelectMenuComponentOptionData","c":"discord.js!SelectMenuComponentOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":">"},{"k":"Content","t":" ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":57,"co":3,"sta":false,"rtr":{"st":14,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":13},"op":false,"rs":true}],"op":false,"ab":false,"n":"setOptions"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!StringSelectMenuComponent:class","d":"/**\n * Represents a string select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/StringSelectMenuComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"StringSelectMenuComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!StringSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":42,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly disabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":51,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly maxValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":24,"ro":true,"op":true,"r":"Public","n":"maxValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly minValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":33,"ro":true,"op":true,"r":"Public","n":"minValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#options:member","d":"/**\n * The options in this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"options","c":"discord.js!StringSelectMenuComponent#options"},{"k":"Content","t":"(): "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly placeholder :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":15,"ro":true,"op":true,"r":"Public","n":"placeholder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!StringSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"StringSelectMenuComponentData","c":"discord.js!StringSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6269,"co":1,"r":"Public","n":"StringSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!StringSelectMenuComponentData#options:member","d":"","ex":[{"k":"Reference","t":"options","c":"discord.js!StringSelectMenuComponentData#options"},{"k":"Content","t":": "},{"k":"Reference","t":"SelectMenuComponentOptionData","c":"discord.js!SelectMenuComponentOptionData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":6271,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!StringSelectMenuComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!StringSelectMenuComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":";"}],"l":6270,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!StringSelectMenuInteraction:class","d":"/**\n * Represents a {@link discord-api-types#(ComponentType:enum).StringSelect} select menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/StringSelectMenuInteraction.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"StringSelectMenuInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!StringSelectMenuInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `StringSelectMenuInteraction` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageStringSelectInteractionData","c":"discord-api-types!APIMessageStringSelectInteractionData:interface"},{"k":"Content","t":");"}],"l":9,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!StringSelectMenuInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":",  "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":",  "},{"k":"Reference","t":"StringSelectMenuComponent","c":"discord.js!StringSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIStringSelectComponent","c":"discord-api-types!APIStringSelectComponent:interface"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!StringSelectMenuInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.StringSelect","c":"discord-api-types!ComponentType.StringSelect:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!StringSelectMenuInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!StringSelectMenuInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!StringSelectMenuInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!StringSelectMenuInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!StringSelectMenuInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!StringSelectMenuInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"StringSelectMenuInteraction","c":"discord.js!StringSelectMenuInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#values:member","d":"/**\n * The values selected\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"values","c":"discord.js!StringSelectMenuInteraction#values"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"values","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!StringSelectMenuInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Class","c":"discord.js!StringSelectMenuOptionBuilder:class","d":"/**\n * Represents a select menu option builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"discord.js!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuildersSelectMenuOption","c":"@discordjs/builders!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/StringSelectMenuOptionBuilder.js","l":12,"co":1,"r":"Public","ab":false,"n":"StringSelectMenuOptionBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!StringSelectMenuOptionBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `StringSelectMenuOptionBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"SelectMenuComponentOptionData","c":"discord.js!SelectMenuComponentOptionData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":");"}],"l":12,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":6},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!StringSelectMenuOptionBuilder.from:member(1)","d":"/**\n * Creates a new select menu option builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!StringSelectMenuOptionBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuOption","c":"discord-api-types!APISelectMenuOption:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"StringSelectMenuOptionBuilder","c":"discord.js!StringSelectMenuOptionBuilder:class"},{"k":"Content","t":";"}],"l":39,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"},{"k":"Method","c":"discord.js!StringSelectMenuOptionBuilder#setEmoji:member(1)","d":"/**\n * Sets the emoji to display on this option\n *\n * @param emoji - The emoji to display on this option\n */\n","ex":[{"k":"Content","t":"public override "},{"k":"Reference","t":"setEmoji","c":"discord.js!StringSelectMenuOptionBuilder#setEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emoji","c":"discord.js!~emoji"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentEmojiResolvable","c":"discord.js!ComponentEmojiResolvable:type"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":27,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emoji","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"setEmoji"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!SweeperDefinitions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6587,"co":1,"r":"Public","n":"SweeperDefinitions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#applicationCommands:member","d":"","ex":[{"k":"Reference","t":"applicationCommands","c":"discord.js!SweeperDefinitions#applicationCommands"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6588,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationCommands","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#autoModerationRules:member","d":"","ex":[{"k":"Reference","t":"autoModerationRules","c":"discord.js!SweeperDefinitions#autoModerationRules"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AutoModerationRule","c":"discord.js!AutoModerationRule:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6589,"co":3,"ro":false,"op":false,"r":"Public","n":"autoModerationRules","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#bans:member","d":"","ex":[{"k":"Reference","t":"bans","c":"discord.js!SweeperDefinitions#bans"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildBan","c":"discord.js!GuildBan:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6590,"co":3,"ro":false,"op":false,"r":"Public","n":"bans","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#emojis:member","d":"","ex":[{"k":"Reference","t":"emojis","c":"discord.js!SweeperDefinitions#emojis"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6591,"co":3,"ro":false,"op":false,"r":"Public","n":"emojis","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#entitlements:member","d":"","ex":[{"k":"Reference","t":"entitlements","c":"discord.js!SweeperDefinitions#entitlements"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6592,"co":3,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#guildMembers:member","d":"","ex":[{"k":"Reference","t":"guildMembers","c":"discord.js!SweeperDefinitions#guildMembers"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6594,"co":3,"ro":false,"op":false,"r":"Public","n":"guildMembers","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#invites:member","d":"","ex":[{"k":"Reference","t":"invites","c":"discord.js!SweeperDefinitions#invites"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":", true]"},{"k":"Content","t":";"}],"l":6593,"co":3,"ro":false,"op":false,"r":"Public","n":"invites","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#messages:member","d":"","ex":[{"k":"Reference","t":"messages","c":"discord.js!SweeperDefinitions#messages"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":", true]"},{"k":"Content","t":";"}],"l":6595,"co":3,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#presences:member","d":"","ex":[{"k":"Reference","t":"presences","c":"discord.js!SweeperDefinitions#presences"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Presence","c":"discord.js!Presence:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6596,"co":3,"ro":false,"op":false,"r":"Public","n":"presences","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#reactions:member","d":"","ex":[{"k":"Reference","t":"reactions","c":"discord.js!SweeperDefinitions#reactions"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"MessageReaction","c":"discord.js!MessageReaction:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6597,"co":3,"ro":false,"op":false,"r":"Public","n":"reactions","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#stageInstances:member","d":"","ex":[{"k":"Reference","t":"stageInstances","c":"discord.js!SweeperDefinitions#stageInstances"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"StageInstance","c":"discord.js!StageInstance:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6598,"co":3,"ro":false,"op":false,"r":"Public","n":"stageInstances","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#stickers:member","d":"","ex":[{"k":"Reference","t":"stickers","c":"discord.js!SweeperDefinitions#stickers"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Sticker","c":"discord.js!Sticker:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6599,"co":3,"ro":false,"op":false,"r":"Public","n":"stickers","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#threadMembers:member","d":"","ex":[{"k":"Reference","t":"threadMembers","c":"discord.js!SweeperDefinitions#threadMembers"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6600,"co":3,"ro":false,"op":false,"r":"Public","n":"threadMembers","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#threads:member","d":"","ex":[{"k":"Reference","t":"threads","c":"discord.js!SweeperDefinitions#threads"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":", true]"},{"k":"Content","t":";"}],"l":6601,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#users:member","d":"","ex":[{"k":"Reference","t":"users","c":"discord.js!SweeperDefinitions#users"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6602,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!SweeperDefinitions#voiceStates:member","d":"","ex":[{"k":"Reference","t":"voiceStates","c":"discord.js!SweeperDefinitions#voiceStates"},{"k":"Content","t":": "},{"k":"Content","t":"["},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":6603,"co":3,"ro":false,"op":false,"r":"Public","n":"voiceStates","prtr":{"st":2,"en":7}}],"etrs":[]},{"k":"TypeAlias","c":"discord.js!SweeperKey:type","d":"/**\n * The name of an item to be swept in Sweepers\n *\n * * `autoModerationRules`\n *\n * * `applicationCommands` - both global and guild commands\n *\n * * `bans`\n *\n * * `emojis`\n *\n * * `entitlements`\n *\n * * `invites` - accepts the `lifetime` property, using it will sweep based on expires timestamp\n *\n * * `guildMembers`\n *\n * * `messages` - accepts the `lifetime` property, using it will sweep based on edited or created timestamp\n *\n * * `presences`\n *\n * * `reactions`\n *\n * * `stageInstances`\n *\n * * `stickers`\n *\n * * `threadMembers`\n *\n * * `threads` - accepts the `lifetime` property, using it will sweep archived threads based on archived timestamp\n *\n * * `users`\n *\n * * `voiceStates`\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SweeperKey","c":"discord.js!SweeperKey:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":";"}],"pat":"src/util/Constants.js","l":11,"co":1,"r":"Public","n":"SweeperKey","ttr":{"st":3,"en":5}},{"k":"TypeAlias","c":"discord.js!SweeperOptions:type","d":"/**\n * Options for {@link Sweepers} defining the behavior of cache sweeping\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SweeperOptions","c":"discord.js!SweeperOptions:type"},{"k":"Content","t":" = "},{"k":"Content","t":"{ ["},{"k":"Reference","t":"Key"},{"k":"Content","t":" in keyof "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"]?: "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"][2] extends true  ? "},{"k":"Reference","t":"SweepOptions","c":"discord.js!SweepOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"][1]> | "},{"k":"Reference","t":"LifetimeSweepOptions","c":"discord.js!LifetimeSweepOptions:interface"},{"k":"Content","t":"  : "},{"k":"Reference","t":"SweepOptions","c":"discord.js!SweepOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":"][1]>;}"},{"k":"Content","t":";"}],"pat":"src/util/Options.js","l":46,"co":1,"r":"Public","n":"SweeperOptions","ttr":{"st":3,"en":34}},{"k":"Class","c":"discord.js!Sweepers:class","d":"/**\n * A container for all cache sweeping intervals and their associated sweep methods.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Sweepers","c":"discord.js!Sweepers:class"},{"k":"Content","t":" "}],"pat":"src/util/Sweepers.js","l":18,"co":1,"r":"Public","ab":false,"n":"Sweepers","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!Sweepers:constructor(1)","d":"/**\n * Constructs a new instance of the `Sweepers` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"SweeperOptions","c":"discord.js!SweeperOptions:type"},{"k":"Content","t":");"}],"l":18,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Method","c":"discord.js!Sweepers.archivedThreadSweepFilter:member(1)","d":"/**\n * Creates a sweep filter that sweeps archived threads\n *\n * @param lifetime - How long a thread has to be archived to be valid for sweeping\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"archivedThreadSweepFilter","c":"discord.js!Sweepers.archivedThreadSweepFilter"},{"k":"Content","t":"(  "},{"k":"Reference","t":"lifetime","c":"discord.js!~lifetime"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":", ): "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threads'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threads'][1]>"},{"k":"Content","t":";"}],"l":371,"co":3,"sta":true,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"lifetime","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"archivedThreadSweepFilter"},{"k":"Property","c":"discord.js!Sweepers#client:member","d":"","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!Sweepers#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3017,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Sweepers#destroy:member(1)","d":"/**\n * Cancels all sweeping intervals\n */\n","ex":[{"k":"Content","t":"destroy(): "},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":";"}],"l":315,"sta":false,"rtr":{"st":1,"en":2},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"destroy"},{"k":"Method","c":"discord.js!Sweepers.expiredInviteSweepFilter:member(1)","d":"/**\n * Creates a sweep filter that sweeps expired invites\n *\n * @param lifetime - How long ago an invite has to have expired to be valid for sweeping\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"expiredInviteSweepFilter","c":"discord.js!Sweepers.expiredInviteSweepFilter"},{"k":"Content","t":"(  "},{"k":"Reference","t":"lifetime","c":"discord.js!~lifetime"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":", ): "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['invites'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['invites'][1]>"},{"k":"Content","t":";"}],"l":384,"co":3,"sta":true,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"lifetime","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"expiredInviteSweepFilter"},{"k":"Method","c":"discord.js!Sweepers.filterByLifetime:member(1)","d":"/**\n * Create a sweepFilter function that uses a lifetime to determine sweepability.\n *\n * @param options - The options used to generate the filter function\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"filterByLifetime","c":"discord.js!Sweepers.filterByLifetime"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"LifetimeFilterOptions","c":"discord.js!LifetimeFilterOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":", ): "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":337,"co":3,"tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":true,"rtr":{"st":16,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":15},"op":true,"rs":false}],"op":false,"ab":false,"n":"filterByLifetime"},{"k":"Property","c":"discord.js!Sweepers#intervals:member","d":"/**\n * A record of interval timeout that is used to sweep the indicated items, or null if not being swept\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"intervals","c":"discord.js!Sweepers#intervals"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperKey","c":"discord.js!SweeperKey:type"},{"k":"Content","t":", "},{"k":"Reference","t":"NodeJS.Timeout","c":"!\"\\\"timers\\\"\".__global.NodeJS.Timeout:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"intervals","prtr":{"st":3,"en":11},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Sweepers#options:member","d":"/**\n * The options the sweepers were instantiated with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!Sweepers#options"},{"k":"Content","t":": "},{"k":"Reference","t":"SweeperOptions","c":"discord.js!SweeperOptions:type"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Sweepers.outdatedMessageSweepFilter:member(1)","d":"/**\n * Creates a sweep filter that sweeps outdated messages (edits taken into account)\n *\n * @param lifetime - How long ago a message has to have been sent or edited to be valid for sweeping\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"outdatedMessageSweepFilter","c":"discord.js!Sweepers.outdatedMessageSweepFilter"},{"k":"Content","t":"(  "},{"k":"Reference","t":"lifetime","c":"discord.js!~lifetime"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":", ): "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['messages'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['messages'][1]>"},{"k":"Content","t":";"}],"l":396,"co":3,"sta":true,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"lifetime","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"outdatedMessageSweepFilter"},{"k":"Method","c":"discord.js!Sweepers#sweepApplicationCommands:member(1)","d":"/**\n * Sweeps all guild and global application commands and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which commands will be removed from the caches.\n *\n * @returns Amount of commands that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepApplicationCommands","c":"discord.js!Sweepers#sweepApplicationCommands"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<   "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['applicationCommands'][0],   "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['applicationCommands'][1]  >"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":69,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepApplicationCommands"},{"k":"Method","c":"discord.js!Sweepers#sweepAutoModerationRules:member(1)","d":"/**\n * Sweeps all auto moderation rules and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which auto moderation rules will be removed from the caches\n *\n * @returns Amount of auto moderation rules that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepAutoModerationRules","c":"discord.js!Sweepers#sweepAutoModerationRules"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<   "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['autoModerationRules'][0],   "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['autoModerationRules'][1]  >"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":87,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepAutoModerationRules"},{"k":"Method","c":"discord.js!Sweepers#sweepBans:member(1)","d":"/**\n * Sweeps all guild bans and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which bans will be removed from the caches.\n *\n * @returns Amount of bans that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepBans","c":"discord.js!Sweepers#sweepBans"},{"k":"Content","t":"("},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['bans'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['bans'][1]>"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":96,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepBans"},{"k":"Method","c":"discord.js!Sweepers#sweepEmojis:member(1)","d":"/**\n * Sweeps all guild emojis and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which emojis will be removed from the caches.\n *\n * @returns Amount of emojis that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepEmojis","c":"discord.js!Sweepers#sweepEmojis"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['emojis'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['emojis'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":105,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepEmojis"},{"k":"Method","c":"discord.js!Sweepers#sweepEntitlements:member(1)","d":"/**\n * Sweeps all client application entitlements and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which entitlements will be removed from the caches.\n *\n * @returns Amount of entitlements that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepEntitlements","c":"discord.js!Sweepers#sweepEntitlements"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['entitlements'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['entitlements'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":114,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepEntitlements"},{"k":"Method","c":"discord.js!Sweepers#sweepGuildMembers:member(1)","d":"/**\n * Sweeps all guild members and removes the ones which are indicated by the filter. <info>It is highly recommended to keep the client guild member cached</info>\n *\n * @param filter - The function used to determine which guild members will be removed from the caches.\n *\n * @returns Amount of guild members that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepGuildMembers","c":"discord.js!Sweepers#sweepGuildMembers"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['guildMembers'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['guildMembers'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":141,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepGuildMembers"},{"k":"Method","c":"discord.js!Sweepers#sweepInvites:member(1)","d":"/**\n * Sweeps all guild invites and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which invites will be removed from the caches.\n *\n * @returns Amount of invites that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepInvites","c":"discord.js!Sweepers#sweepInvites"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['invites'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['invites'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":131,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepInvites"},{"k":"Method","c":"discord.js!Sweepers#sweepMessages:member(1)","d":"/**\n * Sweeps all text-based channels' messages and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which messages will be removed from the caches.\n *\n * @returns Amount of messages that were removed from the caches\n *\n * @example\n * ```js\n * // Remove all messages older than 1800 seconds from the messages cache\n * const amount = sweepers.sweepMessages(\n *   Sweepers.filterByLifetime({\n *     lifetime: 1800,\n *     getComparisonTimestamp: m => m.editedTimestamp ?? m.createdTimestamp,\n *   })(),\n * );\n * console.log(`Successfully removed ${amount} messages from the cache.`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepMessages","c":"discord.js!Sweepers#sweepMessages"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['messages'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['messages'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":159,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepMessages"},{"k":"Method","c":"discord.js!Sweepers#sweepPresences:member(1)","d":"/**\n * Sweeps all presences and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which presences will be removed from the caches.\n *\n * @returns Amount of presences that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepPresences","c":"discord.js!Sweepers#sweepPresences"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['presences'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['presences'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":181,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepPresences"},{"k":"Method","c":"discord.js!Sweepers#sweepReactions:member(1)","d":"/**\n * Sweeps all message reactions and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which reactions will be removed from the caches.\n *\n * @returns Amount of reactions that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepReactions","c":"discord.js!Sweepers#sweepReactions"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['reactions'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['reactions'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":190,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepReactions"},{"k":"Method","c":"discord.js!Sweepers#sweepStageInstances:member(1)","d":"/**\n * Sweeps all guild stage instances and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which stage instances will be removed from the caches.\n *\n * @returns Amount of stage instances that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepStageInstances","c":"discord.js!Sweepers#sweepStageInstances"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['stageInstances'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['stageInstances'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":219,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepStageInstances"},{"k":"Method","c":"discord.js!Sweepers#sweepStickers:member(1)","d":"/**\n * Sweeps all guild stickers and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which stickers will be removed from the caches.\n *\n * @returns Amount of stickers that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepStickers","c":"discord.js!Sweepers#sweepStickers"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['stickers'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['stickers'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":228,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepStickers"},{"k":"Method","c":"discord.js!Sweepers#sweepThreadMembers:member(1)","d":"/**\n * Sweeps all thread members and removes the ones which are indicated by the filter. <info>It is highly recommended to keep the client thread member cached</info>\n *\n * @param filter - The function used to determine which thread members will be removed from the caches.\n *\n * @returns Amount of thread members that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepThreadMembers","c":"discord.js!Sweepers#sweepThreadMembers"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threadMembers'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threadMembers'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":238,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepThreadMembers"},{"k":"Method","c":"discord.js!Sweepers#sweepThreads:member(1)","d":"/**\n * Sweeps all threads and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which threads will be removed from the caches.\n *\n * @returns filter Amount of threads that were removed from the caches\n *\n * @example\n * ```js\n * // Remove all threads archived greater than 1 day ago from all the channel caches\n * const amount = sweepers.sweepThreads(\n *   Sweepers.filterByLifetime({\n *     getComparisonTimestamp: t => t.archivedTimestamp,\n *     excludeFromSweep: t => !t.archived,\n *   })(),\n * );\n * console.log(`Successfully removed ${amount} threads from the cache.`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepThreads","c":"discord.js!Sweepers#sweepThreads"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threads'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['threads'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":268,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepThreads"},{"k":"Method","c":"discord.js!Sweepers#sweepUsers:member(1)","d":"/**\n * Sweeps all users and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which users will be removed from the caches.\n *\n * @returns Amount of users that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepUsers","c":"discord.js!Sweepers#sweepUsers"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['users'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['users'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":290,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepUsers"},{"k":"Method","c":"discord.js!Sweepers#sweepVoiceStates:member(1)","d":"/**\n * Sweeps all guild voice states and removes the ones which are indicated by the filter.\n *\n * @param filter - The function used to determine which voice states will be removed from the caches.\n *\n * @returns Amount of voice states that were removed from the caches\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sweepVoiceStates","c":"discord.js!Sweepers#sweepVoiceStates"},{"k":"Content","t":"(  "},{"k":"Reference","t":"filter","c":"discord.js!~filter"},{"k":"Content","t":": "},{"k":"Reference","t":"CollectionSweepFilter","c":"discord.js!CollectionSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['voiceStates'][0], "},{"k":"Reference","t":"SweeperDefinitions","c":"discord.js!SweeperDefinitions:interface"},{"k":"Content","t":"['voiceStates'][1]>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":307,"co":3,"sta":false,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"filter","ptr":{"st":5,"en":11},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweepVoiceStates"}],"itrs":[]},{"k":"Interface","c":"discord.js!SweepOptions:interface","d":"/**\n * Options for sweeping a single type of item from cache\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"SweepOptions","c":"discord.js!SweepOptions:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> "}],"pat":"src/util/Options.js","l":51,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"SweepOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!SweepOptions#filter:member","d":"/**\n * The function used to determine the function passed to the sweep method <info>This property is optional when the key is `invites`, `messages`, or `threads` and `lifetime` is set</info>\n */\n","ex":[{"k":"Reference","t":"filter","c":"discord.js!SweepOptions#filter"},{"k":"Content","t":": "},{"k":"Reference","t":"GlobalSweepFilter","c":"discord.js!GlobalSweepFilter:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6578,"co":3,"ro":false,"op":false,"r":"Public","n":"filter","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"discord.js!SweepOptions#interval:member","d":"/**\n * The interval (in seconds) at which to perform sweeping of the item\n */\n","ex":[{"k":"Reference","t":"interval","c":"discord.js!SweepOptions#interval"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6577,"co":3,"ro":false,"op":false,"r":"Public","n":"interval","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!SweepOptions#lifetime:member","d":"/**\n * How long an item should stay in cache until it is considered sweepable. <warn>This property is only valid for the `invites`, `messages`, and `threads` keys. The `filter` property is mutually exclusive to this property and takes priority</warn>\n */\n","ex":[{"k":"Content","t":"undefined lifetime :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"lifetime","prtr":{"st":1,"en":2}}],"etrs":[]},{"k":"Class","c":"discord.js!SystemChannelFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link Guild.systemChannelFlags} bitfield. <info>Note that all event message types are enabled by default, and by setting their corresponding flags you are disabling them</info>\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"SystemChannelFlagsBitField","c":"discord.js!SystemChannelFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"SystemChannelFlagsString","c":"discord.js!SystemChannelFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/SystemChannelFlagsBitField.js","l":12,"co":1,"r":"Public","ab":false,"n":"SystemChannelFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!SystemChannelFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":28,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!SystemChannelFlagsBitField.Flags:member","d":"/**\n * Numeric system channel flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!SystemChannelFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildSystemChannelFlags","c":"discord-api-types!GuildSystemChannelFlags:enum"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!SystemChannelFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!SystemChannelFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SystemChannelFlagsString","c":"discord.js!SystemChannelFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3092,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!SystemChannelFlagsResolvable:type","d":"/**\n * Data that can be resolved to give a system channel flag bitfield. This can be:\n *\n * * A string (see {@link SystemChannelFlagsBitField.Flags})\n *\n * * A system channel flag\n *\n * * An instance of SystemChannelFlagsBitField\n *\n * * An Array of SystemChannelFlagsResolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SystemChannelFlagsResolvable","c":"discord.js!SystemChannelFlagsResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"SystemChannelFlagsString","c":"discord.js!SystemChannelFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/util/SystemChannelFlagsBitField.js","l":34,"co":1,"r":"Public","n":"SystemChannelFlagsResolvable","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"discord.js!SystemChannelFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"SystemChannelFlagsString","c":"discord.js!SystemChannelFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"GuildSystemChannelFlags","c":"discord-api-types!GuildSystemChannelFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3088,"co":1,"r":"Public","n":"SystemChannelFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!Team:class","d":"/**\n * Represents a Client OAuth2 Application Team.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Team","c":"discord.js!Team:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Team.js","l":12,"co":1,"r":"Public","ab":false,"n":"Team","pmo":false,"ms":[{"k":"Property","c":"discord.js!Team#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#createdAt:member","d":"/**\n * The time the team was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!Team#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":87,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#createdTimestamp:member","d":"/**\n * The timestamp the team was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!Team#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":78,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#icon:member","d":"/**\n * The Team's icon hash\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"icon","c":"discord.js!Team#icon"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"icon","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Team#iconURL:member(1)","d":"/**\n * A link to the team's icon.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"iconURL","c":"discord.js!Team#iconURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":96,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"iconURL"},{"k":"Property","c":"discord.js!Team#id:member","d":"/**\n * The Team's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Team#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#members:member","d":"/**\n * The Team's members\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!Team#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"TeamMember","c":"discord.js!TeamMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":56,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#name:member","d":"/**\n * The name of the Team\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Team#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#owner:member","d":"/**\n * The owner of this team\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"owner","c":"discord.js!Team#owner"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TeamMember","c":"discord.js!TeamMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":true,"op":false,"r":"Public","n":"owner","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Team#ownerId:member","d":"/**\n * The Team's owner id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ownerId","c":"discord.js!Team#ownerId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"ownerId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Team#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!Team#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3107,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"discord.js!Team#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the Team's name instead of the Team object.\n *\n * @example\n * ```js\n * // Logs: Team name: My Team\n * console.log(`Team name: ${team}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!Team#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":108,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!TeamMember:class","d":"/**\n * Represents a Client OAuth2 Application Team Member.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"TeamMember","c":"discord.js!TeamMember:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/TeamMember.js","l":9,"co":1,"r":"Public","ab":false,"n":"TeamMember","pmo":false,"ms":[{"k":"Property","c":"discord.js!TeamMember#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TeamMember#id:member","d":"/**\n * The Team Member's id\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"id","c":"discord.js!TeamMember#id"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":62,"co":3,"ro":true,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TeamMember#membershipState:member","d":"/**\n * The permissions this Team Member has with regard to the team\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"membershipState","c":"discord.js!TeamMember#membershipState"},{"k":"Content","t":": "},{"k":"Reference","t":"TeamMemberMembershipState","c":"discord-api-types!TeamMemberMembershipState:enum"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"membershipState","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TeamMember#permissions:member","d":"/**\n * The permissions this Team Member has with regard to the team\n *\n * @deprecated\n *\n * Use {@link TeamMember.role} instead.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissions","c":"discord.js!TeamMember#permissions"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"permissions","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TeamMember#role:member","d":"/**\n * The role of this Team Member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"role","c":"discord.js!TeamMember#role"},{"k":"Content","t":": "},{"k":"Reference","t":"TeamMemberRole","c":"discord-api-types!TeamMemberRole:enum"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"role","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TeamMember#team:member","d":"/**\n * The Team this member is part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"team","c":"discord.js!TeamMember#team"},{"k":"Content","t":": "},{"k":"Reference","t":"Team","c":"discord.js!Team:class"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"team","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!TeamMember#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the team member's mention instead of the TeamMember object.\n *\n * @example\n * ```js\n * // Logs: Team Member's mention: <@123456789012345678>\n * console.log(`Team Member's mention: ${teamMember}`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!TeamMember#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":";"}],"l":74,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!TeamMember#user:member","d":"/**\n * The user for this Team Member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!TeamMember#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":45,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!TextBasedChannel:type","d":"/**\n * Interface for classes that have text-channel-like features.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"< "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", { "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannelType","c":"discord-api-types!TextChannelType:type"},{"k":"Content","t":" }>, "},{"k":"Reference","t":"PartialGroupDMChannel","c":"discord.js!PartialGroupDMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":16,"co":1,"r":"Public","n":"TextBasedChannel","ttr":{"st":3,"en":19}},{"k":"Interface","c":"discord.js!TextBasedChannelFields:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"TextBasedChannelFields","c":"discord.js!TextBasedChannelFields:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"PartialTextBasedChannelFields","c":"discord.js!PartialTextBasedChannelFields:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4508,"co":1,"r":"Public","tps":[{"tp":"InGuild","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"n":"TextBasedChannelFields","pmo":false,"ms":[{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#awaitMessageComponent:member(1)","d":"","ex":[{"k":"Reference","t":"awaitMessageComponent","c":"discord.js!TextBasedChannelFields#awaitMessageComponent"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AwaitMessageCollectorOptionsParams","c":"discord.js!AwaitMessageCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", true>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":4515,"co":3,"op":false,"rtr":{"st":13,"en":19},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":8,"en":12},"op":true,"rs":false}],"tps":[{"tp":"ComponentType","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"n":"awaitMessageComponent"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#awaitMessages:member(1)","d":"","ex":[{"k":"Reference","t":"awaitMessages","c":"discord.js!TextBasedChannelFields#awaitMessages"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":4518,"co":3,"op":false,"rtr":{"st":6,"en":14},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":5},"op":true,"rs":false}],"n":"awaitMessages"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#bulkDelete:member(1)","d":"","ex":[{"k":"Reference","t":"bulkDelete","c":"discord.js!TextBasedChannelFields#bulkDelete"},{"k":"Content","t":"(  "},{"k":"Reference","t":"messages","c":"discord.js!~messages"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"> | readonly "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"number"},{"k":"Content","t":",  "},{"k":"Reference","t":"filterOld","c":"discord.js!~filterOld"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialMessage","c":"discord.js!PartialMessage:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":4519,"co":3,"op":false,"rtr":{"st":18,"en":30},"r":"Public","oi":1,"ps":[{"pn":"messages","ptr":{"st":4,"en":13},"op":false,"rs":false},{"pn":"filterOld","ptr":{"st":16,"en":17},"op":true,"rs":false}],"n":"bulkDelete"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#createMessageCollector:member(1)","d":"","ex":[{"k":"Reference","t":"createMessageCollector","c":"discord.js!TextBasedChannelFields#createMessageCollector"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":";"}],"l":4526,"co":3,"op":false,"rtr":{"st":6,"en":7},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":5},"op":true,"rs":false}],"n":"createMessageCollector"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#createMessageComponentCollector:member(1)","d":"","ex":[{"k":"Reference","t":"createMessageComponentCollector","c":"discord.js!TextBasedChannelFields#createMessageComponentCollector"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"MessageComponentType","c":"discord.js!MessageComponentType:type"},{"k":"Content","t":">(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"MessageChannelCollectorOptionsParams","c":"discord.js!MessageChannelCollectorOptionsParams:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":", true>"},{"k":"Content","t":", ): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MappedInteractionTypes","c":"discord.js!MappedInteractionTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"ComponentType"},{"k":"Content","t":"]>"},{"k":"Content","t":";"}],"l":4523,"co":3,"op":false,"rtr":{"st":13,"en":19},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":8,"en":12},"op":true,"rs":false}],"tps":[{"tp":"ComponentType","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"n":"createMessageComponentCollector"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#createWebhook:member(1)","d":"","ex":[{"k":"Reference","t":"createWebhook","c":"discord.js!TextBasedChannelFields#createWebhook"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":4527,"co":3,"op":false,"rtr":{"st":6,"en":10},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":5},"op":false,"rs":false}],"n":"createWebhook"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#fetchWebhooks:member(1)","d":"","ex":[{"k":"Reference","t":"fetchWebhooks","c":"discord.js!TextBasedChannelFields#fetchWebhooks"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":4528,"co":3,"op":false,"rtr":{"st":2,"en":10},"r":"Public","oi":1,"ps":[],"n":"fetchWebhooks"},{"k":"Property","c":"discord.js!TextBasedChannelFields#lastMessage:member","d":"","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"lastMessage","c":"discord.js!TextBasedChannelFields#lastMessage"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":4511,"co":3,"ro":true,"op":false,"r":"Public","n":"lastMessage","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"PropertySignature","c":"discord.js!TextBasedChannelFields#lastMessageId:member","d":"","ex":[{"k":"Reference","t":"lastMessageId","c":"discord.js!TextBasedChannelFields#lastMessageId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":4510,"co":3,"ro":false,"op":false,"r":"Public","n":"lastMessageId","prtr":{"st":2,"en":5}},{"k":"Property","c":"discord.js!TextBasedChannelFields#lastPinAt:member","d":"","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"lastPinAt","c":"discord.js!TextBasedChannelFields#lastPinAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":4513,"co":3,"ro":true,"op":false,"r":"Public","n":"lastPinAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"PropertySignature","c":"discord.js!TextBasedChannelFields#lastPinTimestamp:member","d":"","ex":[{"k":"Reference","t":"lastPinTimestamp","c":"discord.js!TextBasedChannelFields#lastPinTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":4512,"co":3,"ro":false,"op":false,"r":"Public","n":"lastPinTimestamp","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!TextBasedChannelFields#messages:member","d":"","ex":[{"k":"Reference","t":"messages","c":"discord.js!TextBasedChannelFields#messages"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InGuild"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":", "},{"k":"Reference","t":"DMMessageManager","c":"discord.js!DMMessageManager:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":4514,"co":3,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":2,"en":10}},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#sendTyping:member(1)","d":"","ex":[{"k":"Reference","t":"sendTyping","c":"discord.js!TextBasedChannelFields#sendTyping"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":4529,"co":3,"op":false,"rtr":{"st":2,"en":6},"r":"Public","oi":1,"ps":[],"n":"sendTyping"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#setNSFW:member(1)","d":"","ex":[{"k":"Reference","t":"setNSFW","c":"discord.js!TextBasedChannelFields#setNSFW"},{"k":"Content","t":"("},{"k":"Reference","t":"nsfw","c":"discord.js!~nsfw"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":4531,"co":3,"op":false,"rtr":{"st":10,"en":12},"r":"Public","oi":1,"ps":[{"pn":"nsfw","ptr":{"st":4,"en":5},"op":true,"rs":false},{"pn":"reason","ptr":{"st":8,"en":9},"op":true,"rs":false}],"n":"setNSFW"},{"k":"MethodSignature","c":"discord.js!TextBasedChannelFields#setRateLimitPerUser:member(1)","d":"","ex":[{"k":"Reference","t":"setRateLimitPerUser","c":"discord.js!TextBasedChannelFields#setRateLimitPerUser"},{"k":"Content","t":"("},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!~rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":4530,"co":3,"op":false,"rtr":{"st":10,"en":12},"r":"Public","oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"reason","ptr":{"st":8,"en":9},"op":true,"rs":false}],"n":"setRateLimitPerUser"}],"etrs":[{"st":9,"en":13,"tps":[{"st":11,"en":12}]}]},{"k":"TypeAlias","c":"discord.js!TextBasedChannelResolvable:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"TextBasedChannelResolvable","c":"discord.js!TextBasedChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6651,"co":1,"r":"Public","n":"TextBasedChannelResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!TextBasedChannelTypes:type","d":"/**\n * The types of channels that are text-based. The available types are:\n *\n * * {@link discord-api-types#(ChannelType:enum).DM}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildText}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildAnnouncement}\n *\n * * {@link discord-api-types#(ChannelType:enum).AnnouncementThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).PublicThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).PrivateThread}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildVoice}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildStageVoice}\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"TextBasedChannelTypes","c":"discord.js!TextBasedChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":"['type']"},{"k":"Content","t":";"}],"pat":"src/util/Constants.js","l":110,"co":1,"r":"Public","n":"TextBasedChannelTypes","ttr":{"st":3,"en":5}},{"k":"Class","c":"discord.js!TextChannel:class","d":"/**\n * Represents a guild text channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildTextChannel","c":"discord.js!BaseGuildTextChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/TextChannel.js","l":9,"co":1,"r":"Public","ab":false,"n":"TextChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!TextChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel\n */\n","ex":[{"k":"Content","t":"undefined defaultAutoArchiveDuration :"},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"undefined defaultThreadRateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":82,"ro":false,"op":true,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":58,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#lastPinAt:member","d":"/**\n * The date when the last pinned message was pinned, if there was one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastPinAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":51,"ro":true,"op":true,"r":"Public","n":"lastPinAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#lastPinTimestamp:member","d":"/**\n * The timestamp when the last pinned message was pinned, if there was one\n */\n","ex":[{"k":"Content","t":"undefined lastPinTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":66,"ro":false,"op":true,"r":"Public","n":"lastPinTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":33,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel in seconds\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!TextChannel#rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!TextChannel#setRateLimitPerUser:member(1)","d":"/**\n * Sets the rate limit per user (slowmode) for this channel.\n *\n * @param rateLimitPerUser - The new rate limit in seconds\n *\n * @param reason - Reason for changing the channel's rate limit\n */\n","ex":[{"k":"Content","t":"setRateLimitPerUser(rateLimitPerUser"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":28,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRateLimitPerUser"},{"k":"Property","c":"discord.js!TextChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"threads","c":"discord.js!TextChannel#threads"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildTextThreadManager","c":"discord.js!GuildTextThreadManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"AllowedThreadTypeForTextChannel","c":"discord.js!AllowedThreadTypeForTextChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":27,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#topic:member","d":"/**\n * The topic of the text channel\n */\n","ex":[{"k":"Content","t":"undefined topic :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildTextChannel.js","l":46,"ro":false,"op":true,"r":"Public","n":"topic","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!TextChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildText","c":"discord-api-types!ChannelType.GuildText:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!TextChannelResolvable:type","d":"/**\n * Data that can be resolved to a Text Channel object. This can be:\n *\n * * A TextChannel\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"TextChannelResolvable","c":"discord.js!TextChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/Guild.js","l":811,"co":1,"r":"Public","n":"TextChannelResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!TextInputBuilder:class","d":"/**\n * Represents a text input builder.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"TextInputBuilder","c":"discord.js!TextInputBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderTextInputComponent","c":"@discordjs/builders!TextInputBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/TextInputBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"TextInputBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!TextInputBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `TextInputBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"TextInputComponentData","c":"discord.js!TextInputComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!TextInputBuilder.from:member(1)","d":"/**\n * Creates a new text input builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!TextInputBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"TextInputBuilder","c":"discord.js!TextInputBuilder:class"},{"k":"Content","t":";"}],"l":21,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!TextInputComponent:class","d":"/**\n * Represents a text input component.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"TextInputComponent","c":"discord.js!TextInputComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Component","c":"discord.js!Component:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APITextInputComponent","c":"discord-api-types!APITextInputComponent:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/TextInputComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"TextInputComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!TextInputComponent#customId:member","d":"/**\n * The custom id of this text input\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"customId","c":"discord.js!TextInputComponent#customId"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextInputComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextInputComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!TextInputComponent#value:member","d":"/**\n * The value for this text input\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"value","c":"discord.js!TextInputComponent#value"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":true,"op":false,"r":"Public","n":"value","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!TextInputComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"TextInputComponentData","c":"discord.js!TextInputComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseComponentData","c":"discord.js!BaseComponentData:interface"},{"k":"Content","t":" "}],"pat":"src/util/Components.js","l":49,"co":1,"r":"Public","n":"TextInputComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!TextInputComponentData#customId:member","d":"/**\n * The custom id of the text input\n */\n","ex":[{"k":"Reference","t":"customId","c":"discord.js!TextInputComponentData#customId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6309,"co":3,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#label:member","d":"/**\n * The text that appears on top of the text input field\n */\n","ex":[{"k":"Reference","t":"label","c":"discord.js!TextInputComponentData#label"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6311,"co":3,"ro":false,"op":false,"r":"Public","n":"label","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#maxLength:member","d":"/**\n * The maximum number of characters that can be entered in the text input\n */\n","ex":[{"k":"Reference","t":"maxLength","c":"discord.js!TextInputComponentData#maxLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6313,"co":3,"ro":false,"op":true,"r":"Public","n":"maxLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#minLength:member","d":"/**\n * The minimum number of characters that can be entered in the text input\n */\n","ex":[{"k":"Reference","t":"minLength","c":"discord.js!TextInputComponentData#minLength"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6312,"co":3,"ro":false,"op":true,"r":"Public","n":"minLength","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#placeholder:member","d":"/**\n * Placeholder for the text input\n */\n","ex":[{"k":"Reference","t":"placeholder","c":"discord.js!TextInputComponentData#placeholder"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6316,"co":3,"ro":false,"op":true,"r":"Public","n":"placeholder","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#required:member","d":"/**\n * Whether or not the text input is required or not\n */\n","ex":[{"k":"Reference","t":"required","c":"discord.js!TextInputComponentData#required"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6314,"co":3,"ro":false,"op":true,"r":"Public","n":"required","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#style:member","d":"/**\n * The style of the text input\n */\n","ex":[{"k":"Reference","t":"style","c":"discord.js!TextInputComponentData#style"},{"k":"Content","t":": "},{"k":"Reference","t":"TextInputStyle","c":"discord-api-types!TextInputStyle:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6310,"co":3,"ro":false,"op":false,"r":"Public","n":"style","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!TextInputComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6308,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputComponentData#value:member","d":"/**\n * The pre-filled text in the text input\n */\n","ex":[{"k":"Reference","t":"value","c":"discord.js!TextInputComponentData#value"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6315,"co":3,"ro":false,"op":true,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!TextInputModalData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"TextInputModalData","c":"discord.js!TextInputModalData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseModalData","c":"discord.js!BaseModalData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":2360,"co":1,"r":"Public","n":"TextInputModalData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!TextInputModalData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!TextInputModalData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.TextInput","c":"discord-api-types!ComponentType.TextInput:member"},{"k":"Content","t":";"}],"l":2361,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!TextInputModalData#value:member","d":"","ex":[{"k":"Reference","t":"value","c":"discord.js!TextInputModalData#value"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":2362,"co":3,"ro":false,"op":false,"r":"Public","n":"value","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!ThreadChannel:class","d":"/**\n * Represents a thread channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadOnly"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"TextBasedChannelMixin","c":"discord.js!TextBasedChannelMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"BaseChannel","c":"discord.js!BaseChannel:class"},{"k":"Content","t":", true, [ 'fetchWebhooks', 'createWebhook', 'setNSFW',])"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadChannel.js","l":18,"co":1,"r":"Public","tps":[{"tp":"ThreadOnly","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ThreadChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!ThreadChannel#appliedTags:member","d":"/**\n * The tags applied to this thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"appliedTags","c":"discord.js!ThreadChannel#appliedTags"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":207,"co":3,"ro":false,"op":false,"r":"Public","n":"appliedTags","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#archived:member","d":"/**\n * Whether the thread is archived\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"archived","c":"discord.js!ThreadChannel#archived"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":94,"co":3,"ro":false,"op":false,"r":"Public","n":"archived","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#archivedAt:member","d":"/**\n * The time at which this thread's archive status was last changed <info>If the thread was never archived or unarchived, this is the time at which the thread was created</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"archivedAt","c":"discord.js!ThreadChannel#archivedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":238,"co":3,"ro":true,"op":false,"r":"Public","n":"archivedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#archiveTimestamp:member","d":"/**\n * The timestamp when the thread's archive status was last changed <info>If the thread was never archived or unarchived, this is the timestamp at which the thread was created</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"archiveTimestamp","c":"discord.js!ThreadChannel#archiveTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":108,"co":3,"ro":false,"op":false,"r":"Public","n":"archiveTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#autoArchiveDuration:member","d":"/**\n * The amount of time (in minutes) after which the thread will automatically archive in case of no recent activity\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"autoArchiveDuration","c":"discord.js!ThreadChannel#autoArchiveDuration"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":100,"co":3,"ro":false,"op":false,"r":"Public","n":"autoArchiveDuration","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#awaitMessageComponent:member(1)","d":"/**\n * Collects a single component interaction that passes the filter. The Promise will reject if the time expires.\n *\n * @param options - Options to pass to the internal collector\n *\n * @example\n * ```js\n * // Collect a message component interaction\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * channel.awaitMessageComponent({ filter, time: 15_000 })\n *   .then(interaction => console.log(`${interaction.customId} was clicked!`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessageComponent(options?"},{"k":"Reference","t":"AwaitMessageComponentOptions","c":"discord.js!AwaitMessageComponentOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":249,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessageComponent"},{"k":"Method","c":"discord.js!ThreadChannel#awaitMessages:member(1)","d":"/**\n * Similar to createMessageCollector but in promise form. Resolves with a collection of messages that pass the specified filter.\n *\n * @param options - Optional options to pass to the internal collector\n *\n * @example\n * ```js\n * // Await !vote messages\n * const filter = m => m.content.startsWith('!vote');\n * // Errors: ['time'] treats ending because of the time limit as an error\n * channel.awaitMessages({ filter, max: 4, time: 60_000, errors: ['time'] })\n *   .then(collected => console.log(collected.size))\n *   .catch(collected => console.log(`After a minute, only ${collected.size} out of 4 voted.`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"awaitMessages(options?"},{"k":"Reference","t":"AwaitMessagesOptions","c":"discord.js!AwaitMessagesOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":205,"sta":false,"rtr":{"st":3,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"awaitMessages"},{"k":"Method","c":"discord.js!ThreadChannel#bulkDelete:member(1)","d":"/**\n * Bulk deletes given messages that are newer than two weeks.\n *\n * @param messages - Messages or number of messages to delete\n *\n * @param filterOld - Filter messages to remove those which are older than two weeks automatically\n *\n * @returns Returns the deleted messages *\n *\n * @example\n * ```js\n * // Bulk delete messages\n * channel.bulkDelete(5)\n *   .then(messages => console.log(`Bulk deleted ${messages.size} messages`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"bulkDelete(messages"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" | "},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", filterOld?: "},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", ("},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"|"},{"k":"Reference","t":"undefined","c":"discord.js!undefined:class"},{"k":"Content","t":")>>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":273,"sta":false,"rtr":{"st":17,"en":27},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"messages","ptr":{"st":1,"en":14},"op":false,"rs":false},{"pn":"filterOld","ptr":{"st":15,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"bulkDelete"},{"k":"Property","c":"discord.js!ThreadChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#createdAt:member","d":"/**\n * The time the thread was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!ThreadChannel#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":247,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#createdTimestamp:member","d":"/**\n * The timestamp when this thread was created. This isn't available for threads created before 2022-01-09\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!ThreadChannel#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":219,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#createMessageCollector:member(1)","d":"/**\n * Creates a Message Collector.\n *\n * @param options - The options to pass to the collector\n *\n * @example\n * ```js\n * // Create a message collector\n * const filter = message => message.content.includes('discord');\n * const collector = channel.createMessageCollector({ filter, time: 15_000 });\n * collector.on('collect', message => console.log(`Collected ${message.content}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageCollector(options?"},{"k":"Reference","t":"MessageCollectorOptions","c":"discord.js!MessageCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"MessageCollector","c":"discord.js!MessageCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":182,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageCollector"},{"k":"Method","c":"discord.js!ThreadChannel#createMessageComponentCollector:member(1)","d":"/**\n * Creates a component interaction collector.\n *\n * @param options - Options to send to the collector\n *\n * @example\n * ```js\n * // Create a button interaction collector\n * const filter = (interaction) => interaction.customId === 'button' && interaction.user.id === 'someId';\n * const collector = channel.createMessageComponentCollector({ filter, time: 15_000 });\n * collector.on('collect', interaction => console.log(`Collected ${interaction.customId}`));\n * collector.on('end', collected => console.log(`Collected ${collected.size} items`));\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createMessageComponentCollector(options?"},{"k":"Reference","t":"MessageComponentCollectorOptions","c":"discord.js!MessageComponentCollectorOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"InteractionCollector","c":"discord.js!InteractionCollector:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":229,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createMessageComponentCollector"},{"k":"Method","c":"discord.js!ThreadChannel#delete:member(1)","d":"/**\n * Deletes this thread.\n *\n * @param reason - Reason for deleting this thread\n *\n * @example\n * ```js\n * // Delete the thread\n * thread.delete('cleaning out old threads')\n *   .then(deletedThread => console.log(deletedThread))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"delete","c":"discord.js!ThreadChannel#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":586,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!ThreadChannel#edit:member(1)","d":"/**\n * Edits this thread.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Edit a thread\n * thread.edit({ name: 'new-thread' })\n *   .then(editedThread => console.log(editedThread))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!ThreadChannel#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadEditOptions","c":"discord.js!ThreadEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":347,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!ThreadChannel#editable:member","d":"/**\n * Whether the thread is editable by the client user (name, archived, autoArchiveDuration)\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"editable","c":"discord.js!ThreadChannel#editable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":496,"co":3,"ro":true,"op":false,"r":"Public","n":"editable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#fetchOwner:member(1)","d":"/**\n * Fetches the owner of this thread. If the thread member object isn't needed, use {@link ThreadChannel.ownerId} instead.\n *\n * @param options - The options for fetching the member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchOwner","c":"discord.js!ThreadChannel#fetchOwner"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":296,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchOwner"},{"k":"Method","c":"discord.js!ThreadChannel#fetchStarterMessage:member(1)","d":"/**\n * Fetches the message that started this thread, if any. <info>The `Promise` will reject if the original message in a forum post is deleted or when the original message in the parent channel is deleted. If you just need the id of that message, use {@link ThreadChannel.id} instead.</info>\n *\n * @param options - Additional options for this fetch\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchStarterMessage","c":"discord.js!ThreadChannel#fetchStarterMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":"<true> | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":316,"co":3,"sta":false,"rtr":{"st":7,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchStarterMessage"},{"k":"Property","c":"discord.js!ThreadChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!ThreadChannel#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#guild:member","d":"/**\n * The guild the thread is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!ThreadChannel#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!ThreadChannel#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#guildMembers:member","d":"/**\n * A collection of associated guild member objects of this thread's members\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guildMembers","c":"discord.js!ThreadChannel#guildMembers"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":228,"co":3,"ro":true,"op":false,"r":"Public","n":"guildMembers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#invitable:member","d":"/**\n * Whether members without the {@link discord-api-types#(PermissionFlagsBits:type).ManageThreads} permission can invite other members to this thread. <info>This property is always `null` in public threads.</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"invitable","c":"discord.js!ThreadChannel#invitable"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":88,"co":3,"ro":false,"op":false,"r":"Public","n":"invitable","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#join:member(1)","d":"/**\n * Makes the client user join the thread.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"join","c":"discord.js!ThreadChannel#join"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":264,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"join"},{"k":"Property","c":"discord.js!ThreadChannel#joinable:member","d":"/**\n * Whether the thread is joinable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joinable","c":"discord.js!ThreadChannel#joinable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":508,"co":3,"ro":true,"op":false,"r":"Public","n":"joinable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#joined:member","d":"/**\n * Whether the client user is a member of the thread.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joined","c":"discord.js!ThreadChannel#joined"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":487,"co":3,"ro":true,"op":false,"r":"Public","n":"joined","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#lastMessageId:member","d":"/**\n * The last message id sent in this thread, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":139,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#lastPinAt:member","d":"/**\n * The date when the last pinned message was pinned, if there was one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastPinAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":51,"ro":true,"op":true,"r":"Public","n":"lastPinAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#lastPinTimestamp:member","d":"/**\n * The timestamp when the last pinned message was pinned, if there was one\n */\n","ex":[{"k":"Content","t":"undefined lastPinTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":149,"ro":false,"op":true,"r":"Public","n":"lastPinTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#leave:member(1)","d":"/**\n * Makes the client user leave the thread.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"leave","c":"discord.js!ThreadChannel#leave"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":273,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"leave"},{"k":"Property","c":"discord.js!ThreadChannel#locked:member","d":"/**\n * Whether the thread is locked\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"locked","c":"discord.js!ThreadChannel#locked"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":80,"co":3,"ro":false,"op":false,"r":"Public","n":"locked","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#manageable:member","d":"/**\n * Whether the thread is manageable by the client user, for deleting or editing rateLimitPerUser or locked.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"manageable","c":"discord.js!ThreadChannel#manageable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":524,"co":3,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#memberCount:member","d":"/**\n * The approximate count of users in this thread <info>This stops counting at 50. If you need an approximate value higher than that, use `ThreadChannel#members.cache.size`</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"memberCount","c":"discord.js!ThreadChannel#memberCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":183,"co":3,"ro":false,"op":false,"r":"Public","n":"memberCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#members:member","d":"/**\n * A manager of the members that are part of this thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!ThreadChannel#members"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMemberManager","c":"discord.js!ThreadMemberManager:class"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#messageCount:member","d":"/**\n * The approximate count of messages in this thread <info>Threads created before July 1, 2022 may have an inaccurate count. If you need an approximate value higher than that, use `ThreadChannel#messages.cache.size`</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"messageCount","c":"discord.js!ThreadChannel#messageCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":171,"co":3,"ro":false,"op":false,"r":"Public","n":"messageCount","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#messages:member","d":"/**\n * A manager of the messages sent to this thread\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"l":38,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#name:member","d":"/**\n * The name of the thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!ThreadChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":58,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#ownerId:member","d":"/**\n * The id of the member who created this thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ownerId","c":"discord.js!ThreadChannel#ownerId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":129,"co":3,"ro":false,"op":false,"r":"Public","n":"ownerId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#parent:member","d":"/**\n * The parent channel of this thread\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"parent","c":"discord.js!ThreadChannel#parent"},{"k":"Content","t":"(): "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadOnly"},{"k":"Content","t":", "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":", "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":256,"co":3,"ro":true,"op":false,"r":"Public","n":"parent","prtr":{"st":3,"en":16},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#parentId:member","d":"/**\n * The id of the parent channel of this thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"parentId","c":"discord.js!ThreadChannel#parentId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":70,"co":3,"ro":false,"op":false,"r":"Public","n":"parentId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#permissionsFor:member(1)","d":"/**\n * Gets the overall set of permissions for a member or role in this thread's parent channel, taking overwrites into account.\n *\n * @param memberOrRole - The member or role to obtain the overall permissions for\n *\n * @param checkAdmin - Whether having the {@link discord-api-types#(PermissionFlagsBits:type).Administrator} permission will return all permissions\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsFor","c":"discord.js!ThreadChannel#permissionsFor"},{"k":"Content","t":"("},{"k":"Reference","t":"memberOrRole","c":"discord.js!~memberOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Role","c":"discord.js!Role:class"},{"k":"Content","t":", "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":286,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"memberOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"permissionsFor"},{"k":"Method","c":"discord.js!ThreadChannel#permissionsFor:member(2)","d":"/**\n * Gets the overall set of permissions for a member or role in this thread's parent channel, taking overwrites into account.\n *\n * @param memberOrRole - The member or role to obtain the overall permissions for\n *\n * @param checkAdmin - Whether having the {@link discord-api-types#(PermissionFlagsBits:type).Administrator} permission will return all permissions\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"permissionsFor","c":"discord.js!ThreadChannel#permissionsFor"},{"k":"Content","t":"(  "},{"k":"Reference","t":"memberOrRole","c":"discord.js!~memberOrRole"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildMemberResolvable","c":"discord.js!GuildMemberResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"RoleResolvable","c":"discord.js!RoleResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"checkAdmin","c":"discord.js!~checkAdmin"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":286,"co":3,"sta":false,"rtr":{"st":13,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"memberOrRole","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"checkAdmin","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"permissionsFor"},{"k":"Method","c":"discord.js!ThreadChannel#pin:member(1)","d":"/**\n * Pins this thread from the forum channel (only applicable to forum threads).\n *\n * @param reason - Reason for pinning\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"pin","c":"discord.js!ThreadChannel#pin"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<true>>"},{"k":"Content","t":";"}],"l":469,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"pin"},{"k":"Property","c":"discord.js!ThreadChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this thread in seconds\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!ThreadChannel#rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":159,"co":3,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#send:member(1)","d":"/**\n * Sends a message to this channel.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a basic message\n * channel.send('hello!')\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a remote file\n * channel.send({\n *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a local file\n * channel.send({\n *   files: [{\n *     attachment: 'entire/path/to/file.jpg',\n *     name: 'file.jpg',\n *     description: 'A description of the file'\n *   }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":137,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Property","c":"discord.js!ThreadChannel#sendable:member","d":"/**\n * Whether the client user can send messages in this thread\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"sendable","c":"discord.js!ThreadChannel#sendable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":553,"co":3,"ro":true,"op":false,"r":"Public","n":"sendable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#sendTyping:member(1)","d":"/**\n * Sends a typing indicator in the channel.\n *\n * @returns Resolves upon the typing status being sent *\n *\n * @example\n * ```js\n * // Start typing in a channel\n * channel.sendTyping();\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendTyping(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":167,"sta":false,"rtr":{"st":1,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"sendTyping"},{"k":"Method","c":"discord.js!ThreadChannel#setAppliedTags:member(1)","d":"/**\n * Set the applied tags for this channel (only applicable to forum threads)\n *\n * @param appliedTags - The tags to set for this channel\n *\n * @param reason - Reason for changing the thread's applied tags\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAppliedTags","c":"discord.js!ThreadChannel#setAppliedTags"},{"k":"Content","t":"("},{"k":"Reference","t":"appliedTags","c":"discord.js!~appliedTags"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<true>>"},{"k":"Content","t":";"}],"l":460,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"appliedTags","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAppliedTags"},{"k":"Method","c":"discord.js!ThreadChannel#setArchived:member(1)","d":"/**\n * Sets whether the thread is archived.\n *\n * @param archived - Whether the thread is archived\n *\n * @param reason - Reason for archiving or unarchiving\n *\n * @example\n * ```js\n * // Archive the thread\n * thread.setArchived(true)\n *   .then(newThread => console.log(`Thread is now ${newThread.archived ? 'archived' : 'active'}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setArchived","c":"discord.js!ThreadChannel#setArchived"},{"k":"Content","t":"("},{"k":"Reference","t":"archived","c":"discord.js!~archived"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":376,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"archived","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setArchived"},{"k":"Method","c":"discord.js!ThreadChannel#setAutoArchiveDuration:member(1)","d":"/**\n * Sets the duration after which the thread will automatically archive in case of no recent activity.\n *\n * @param autoArchiveDuration - The amount of time after which the thread should automatically archive in case of no recent activity\n *\n * @param reason - Reason for changing the auto archive duration\n *\n * @example\n * ```js\n * // Set the thread's auto archive time to 1 hour\n * thread.setAutoArchiveDuration(ThreadAutoArchiveDuration.OneHour)\n *   .then(newThread => {\n *     console.log(`Thread will now archive after ${newThread.autoArchiveDuration} minutes of inactivity`);\n *    });\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAutoArchiveDuration","c":"discord.js!ThreadChannel#setAutoArchiveDuration"},{"k":"Content","t":"(  "},{"k":"Reference","t":"autoArchiveDuration","c":"discord.js!~autoArchiveDuration"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":394,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"autoArchiveDuration","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAutoArchiveDuration"},{"k":"Method","c":"discord.js!ThreadChannel#setInvitable:member(1)","d":"/**\n * Sets whether members without the {@link discord-api-types#(PermissionFlagsBits:type).ManageThreads} permission can invite other members to this thread.\n *\n * @param invitable - Whether non-moderators can invite non-moderators to this thread\n *\n * @param reason - Reason for changing invite\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setInvitable","c":"discord.js!ThreadChannel#setInvitable"},{"k":"Content","t":"("},{"k":"Reference","t":"invitable","c":"discord.js!~invitable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":405,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"invitable","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setInvitable"},{"k":"Method","c":"discord.js!ThreadChannel#setLocked:member(1)","d":"/**\n * Sets whether the thread can be **unarchived* * by anyone with the {@link discord-api-types#(PermissionFlagsBits:type).SendMessages} permission. When a thread is locked, only members with the {@link discord-api-types#(PermissionFlagsBits:type).ManageThreads} permission can unarchive it.\n *\n * @param locked - Whether the thread is locked\n *\n * @param reason - Reason for locking or unlocking the thread\n *\n * @example\n * ```js\n * // Set the thread to locked\n * thread.setLocked(true)\n *   .then(newThread => console.log(`Thread is now ${newThread.locked ? 'locked' : 'unlocked'}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setLocked","c":"discord.js!ThreadChannel#setLocked"},{"k":"Content","t":"("},{"k":"Reference","t":"locked","c":"discord.js!~locked"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":425,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"locked","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setLocked"},{"k":"Method","c":"discord.js!ThreadChannel#setName:member(1)","d":"/**\n * Sets a new name for this thread.\n *\n * @param name - The new name for the thread\n *\n * @param reason - Reason for changing the thread's name\n *\n * @example\n * ```js\n * // Change the thread's name\n * thread.setName('not_general')\n *   .then(newThread => console.log(`Thread's new name is ${newThread.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setName","c":"discord.js!ThreadChannel#setName"},{"k":"Content","t":"("},{"k":"Reference","t":"name","c":"discord.js!~name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":440,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"name","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setName"},{"k":"Method","c":"discord.js!ThreadChannel#setRateLimitPerUser:member(1)","d":"/**\n * Sets the rate limit per user (slowmode) for this thread.\n *\n * @param rateLimitPerUser - The new rate limit in seconds\n *\n * @param reason - Reason for changing the thread's rate limit\n */\n","ex":[{"k":"Content","t":"setRateLimitPerUser(rateLimitPerUser"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":450,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRateLimitPerUser"},{"k":"Method","c":"discord.js!ThreadChannel#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the channel's mention instead of the Channel object.\n *\n * @example\n * ```js\n * // Logs: Hello from <#123456789012345678>!\n * console.log(`Hello from ${channel}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!ThreadChannel#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ChannelMention","c":"discord.js!ChannelMention:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":91,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!ThreadChannel#totalMessageSent:member","d":"/**\n * The number of messages ever sent in a thread, similar to {@link ThreadChannel.messageCount} except it will not decrement whenever a message is deleted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"totalMessageSent","c":"discord.js!ThreadChannel#totalMessageSent"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":194,"co":3,"ro":false,"op":false,"r":"Public","n":"totalMessageSent","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ThreadChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadChannelType","c":"discord.js!ThreadChannelType:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#unarchivable:member","d":"/**\n * Whether the thread is unarchivable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"unarchivable","c":"discord.js!ThreadChannel#unarchivable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":572,"co":3,"ro":true,"op":false,"r":"Public","n":"unarchivable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadChannel#unpin:member(1)","d":"/**\n * Unpins this thread from the forum channel (only applicable to forum threads).\n *\n * @param reason - Reason for unpinning\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"unpin","c":"discord.js!ThreadChannel#unpin"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<true>>"},{"k":"Content","t":";"}],"l":478,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"unpin"},{"k":"Property","c":"discord.js!ThreadChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadChannel#viewable:member","d":"/**\n * Whether the thread is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"viewable","c":"discord.js!ThreadChannel#viewable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":541,"co":3,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ThreadChannelResolvable:type","d":"/**\n * Data that can be resolved to a Thread Channel object. This can be:\n *\n * * A ThreadChannel object\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadManager.js","l":28,"co":1,"r":"Public","n":"ThreadChannelResolvable","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!ThreadChannelType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ThreadChannelType","c":"discord.js!ThreadChannelType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ChannelType.AnnouncementThread","c":"discord-api-types!ChannelType.AnnouncementThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.PublicThread","c":"discord-api-types!ChannelType.PublicThread:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.PrivateThread","c":"discord-api-types!ChannelType.PrivateThread:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6655,"co":1,"r":"Public","n":"ThreadChannelType","ttr":{"st":3,"en":8}},{"k":"Interface","c":"discord.js!ThreadEditOptions:interface","d":"/**\n * The options used to edit a thread channel\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ThreadEditOptions","c":"discord.js!ThreadEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadChannel.js","l":321,"co":1,"r":"Public","n":"ThreadEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#appliedTags:member","d":"/**\n * The tags to apply to the thread\n */\n","ex":[{"k":"Reference","t":"appliedTags","c":"discord.js!ThreadEditOptions#appliedTags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6675,"co":3,"ro":false,"op":true,"r":"Public","n":"appliedTags","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#archived:member","d":"/**\n * Whether the thread is archived\n */\n","ex":[{"k":"Reference","t":"archived","c":"discord.js!ThreadEditOptions#archived"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6670,"co":3,"ro":false,"op":true,"r":"Public","n":"archived","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#autoArchiveDuration:member","d":"/**\n * The amount of time after which the thread should automatically archive in case of no recent activity\n */\n","ex":[{"k":"Reference","t":"autoArchiveDuration","c":"discord.js!ThreadEditOptions#autoArchiveDuration"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6671,"co":3,"ro":false,"op":true,"r":"Public","n":"autoArchiveDuration","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#flags:member","d":"/**\n * The flags to set on the channel\n */\n","ex":[{"k":"Reference","t":"flags","c":"discord.js!ThreadEditOptions#flags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ChannelFlagsResolvable","c":"discord.js!ChannelFlagsResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6676,"co":3,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#invitable:member","d":"/**\n * Whether non-moderators can add other non-moderators to a thread <info>Can only be edited on {@link discord-api-types#(ChannelType:enum).PrivateThread}</info>\n */\n","ex":[{"k":"Reference","t":"invitable","c":"discord.js!ThreadEditOptions#invitable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6674,"co":3,"ro":false,"op":true,"r":"Public","n":"invitable","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#locked:member","d":"/**\n * Whether the thread is locked\n */\n","ex":[{"k":"Reference","t":"locked","c":"discord.js!ThreadEditOptions#locked"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6673,"co":3,"ro":false,"op":true,"r":"Public","n":"locked","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#name:member","d":"/**\n * The new name for the thread\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!ThreadEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6669,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for the thread in seconds\n */\n","ex":[{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!ThreadEditOptions#rateLimitPerUser"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6672,"co":3,"ro":false,"op":true,"r":"Public","n":"rateLimitPerUser","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!ThreadEditOptions#reason:member","d":"/**\n * Reason for editing the thread\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!ThreadEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6677,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!ThreadManager:class","d":"/**\n * Manages API methods for thread-based channels and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ThreadManager","c":"discord.js!ThreadManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadOnly"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadOnly"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadManager.js","l":15,"co":1,"r":"Public","tps":[{"tp":"ThreadOnly","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ThreadManager","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!ThreadManager:constructor(1)","d":"/**\n * Constructs a new instance of the `ThreadManager` class\n */\n","ex":[{"k":"Content","t":"protected constructor(  "},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"iterable","c":"discord.js!~iterable"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"RawThreadChannelData","c":"discord.js!~RawThreadChannelData:type"},{"k":"Content","t":">"},{"k":"Content","t":", );"}],"l":15,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"channel","ptr":{"st":3,"en":10},"op":false,"rs":false},{"pn":"iterable","ptr":{"st":13,"en":17},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!ThreadManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":35,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadManager#channel:member","d":"/**\n * The channel this Manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!ThreadManager#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadOnly"},{"k":"Content","t":", "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":", "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":15},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadManager#fetch:member(1)","d":"/**\n * Obtains a thread from Discord, or the channel cache if it's already available.\n *\n * @param options - The options to fetch threads. If it is a ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n *\n * @param cacheOptions - Additional options for this fetch. <warn>The `force` field gets ignored if `options` is not a {@link ThreadChannelResolvable}</warn>\n *\n * @returns {@link FetchedThreads} if active & {@link FetchedThreadsMore} if archived.\n *\n * @example\n * ```js\n * // Fetch a thread by its id\n * channel.threads.fetch('831955138126104859')\n *   .then(channel => console.log(channel.name))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"cacheOptions","c":"discord.js!~cacheOptions"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"cacheOptions","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadManager#fetch:member(2)","d":"/**\n * Obtains a thread from Discord, or the channel cache if it's already available.\n *\n * @param options - The options to fetch threads. If it is a ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n *\n * @param cacheOptions - Additional options for this fetch. <warn>The `force` field gets ignored if `options` is not a {@link ThreadChannelResolvable}</warn>\n *\n * @returns {@link FetchedThreads} if active & {@link FetchedThreadsMore} if archived.\n *\n * @example\n * ```js\n * // Fetch a thread by its id\n * channel.threads.fetch('831955138126104859')\n *   .then(channel => console.log(channel.name))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchThreadsOptions","c":"discord.js!FetchThreadsOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"archived","c":"discord.js!~__type#archived"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchArchivedThreadOptions","c":"discord.js!FetchArchivedThreadOptions:interface"},{"k":"Content","t":" }"},{"k":"Content","t":",  "},{"k":"Reference","t":"cacheOptions","c":"discord.js!~cacheOptions"},{"k":"Content","t":"?: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"cache","c":"discord.js!~__type#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" }"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchedThreadsMore","c":"discord.js!FetchedThreadsMore:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":20,"en":24},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":11},"op":false,"rs":false},{"pn":"cacheOptions","ptr":{"st":14,"en":19},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadManager#fetch:member(3)","d":"/**\n * Obtains a thread from Discord, or the channel cache if it's already available.\n *\n * @param options - The options to fetch threads. If it is a ThreadChannelResolvable then the specified thread will be fetched. Fetches all active threads if `undefined`\n *\n * @param cacheOptions - Additional options for this fetch. <warn>The `force` field gets ignored if `options` is not a {@link ThreadChannelResolvable}</warn>\n *\n * @returns {@link FetchedThreads} if active & {@link FetchedThreadsMore} if archived.\n *\n * @example\n * ```js\n * // Fetch a thread by its id\n * channel.threads.fetch('831955138126104859')\n *   .then(channel => console.log(channel.name))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchThreadsOptions","c":"discord.js!FetchThreadsOptions:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"cacheOptions","c":"discord.js!~cacheOptions"},{"k":"Content","t":"?: "},{"k":"Content","t":"{ "},{"k":"Reference","t":"cache","c":"discord.js!~__type#cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" }"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchedThreads","c":"discord.js!FetchedThreads:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":100,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"cacheOptions","ptr":{"st":9,"en":14},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadManager#fetchActive:member(1)","d":"/**\n * Obtains all active threads in the channel.\n *\n * @param cache - Whether to cache the fetched data\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchActive","c":"discord.js!ThreadManager#fetchActive"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchedThreads","c":"discord.js!FetchedThreads:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":181,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchActive"},{"k":"Method","c":"discord.js!ThreadManager#fetchArchived:member(1)","d":"/**\n * Obtains a set of archived threads from Discord. <info>This method requires the {@link discord-api-types#(PermissionFlagsBits:type).ReadMessageHistory} permission in the parent channel.</info>\n *\n * @param options - The options to fetch archived threads\n *\n * @param cache - Whether to cache the new thread objects if they aren't already\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchArchived","c":"discord.js!ThreadManager#fetchArchived"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchArchivedThreadOptions","c":"discord.js!FetchArchivedThreadOptions:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"FetchedThreadsMore","c":"discord.js!FetchedThreadsMore:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":144,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"cache","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchArchived"},{"k":"Method","c":"discord.js!ThreadManager#resolve:member(1)","d":"/**\n * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} object.\n *\n * @param thread - The ThreadChannel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolve(thread"},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":";"}],"l":48,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"thread","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!ThreadManager#resolveId:member(1)","d":"/**\n * Resolves a {@link ThreadChannelResolvable} to a {@link ThreadChannel} id.\n *\n * @param thread - The ThreadChannel resolvable to resolve\n */\n","ex":[{"k":"Content","t":"resolveId(thread"},{"k":"Reference","t":"ThreadChannelResolvable","c":"discord.js!ThreadChannelResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":57,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"thread","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"}],"etr":{"st":9,"en":20,"tps":[{"st":11,"en":12},{"st":13,"en":17},{"st":18,"en":18}]},"itrs":[]},{"k":"Class","c":"discord.js!ThreadMember:class","d":"/**\n * Represents a Member for a Thread.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"HasMemberData"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" = "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadMember.js","l":10,"co":1,"r":"Public","tps":[{"tp":"HasMemberData","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"ThreadMember","pmo":false,"ms":[{"k":"Property","c":"discord.js!ThreadMember#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#flags:member","d":"/**\n * The flags for this thread member. This will be `null` if partial.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!ThreadMember#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMemberFlagsBitField","c":"discord.js!ThreadMemberFlagsBitField:class"},{"k":"Content","t":";"}],"l":30,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#guildMember:member","d":"/**\n * The guild member associated with this thread member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guildMember","c":"discord.js!ThreadMember#guildMember"},{"k":"Content","t":"(): "},{"k":"Reference","t":"HasMemberData"},{"k":"Content","t":" extends true ? "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" : "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":71,"co":3,"ro":true,"op":false,"r":"Public","n":"guildMember","prtr":{"st":3,"en":10},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#id:member","d":"/**\n * The id of the thread member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!ThreadMember#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":36,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#joinedAt:member","d":"/**\n * The last time this member joined the thread\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"joinedAt","c":"discord.js!ThreadMember#joinedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":80,"co":3,"ro":true,"op":false,"r":"Public","n":"joinedAt","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#joinedTimestamp:member","d":"/**\n * The timestamp the member last joined the thread at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"joinedTimestamp","c":"discord.js!ThreadMember#joinedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"joinedTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#manageable:member","d":"/**\n * Whether the client user can manage this thread member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"manageable","c":"discord.js!ThreadMember#manageable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":98,"co":3,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#partial:member","d":"/**\n * Whether this thread member is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!ThreadMember#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":62,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadMember#remove:member(1)","d":"/**\n * Removes this member from the thread.\n *\n * @param reason - Reason for removing the member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!ThreadMember#remove"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":107,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Property","c":"discord.js!ThreadMember#thread:member","d":"/**\n * The thread that this member is a part of\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"thread","c":"discord.js!ThreadMember#thread"},{"k":"Content","t":": "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"thread","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMember#user:member","d":"/**\n * The user associated with this thread member\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"user","c":"discord.js!ThreadMember#user"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":89,"co":3,"ro":true,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":10,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!ThreadMemberFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link ThreadMember.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ThreadMemberFlagsBitField","c":"discord.js!ThreadMemberFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMemberFlagsString","c":"discord.js!ThreadMemberFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/ThreadMemberFlagsBitField.js","l":9,"co":1,"r":"Public","ab":false,"n":"ThreadMemberFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!ThreadMemberFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":25,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMemberFlagsBitField.Flags:member","d":"/**\n * Numeric thread member flags. There are currently no bitflags relevant to bots for this.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!ThreadMemberFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadMemberFlags","c":"discord-api-types!ThreadMemberFlags:enum"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadMemberFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!ThreadMemberFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMemberFlagsString","c":"discord.js!ThreadMemberFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3224,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ThreadMemberFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ThreadMemberFlagsString","c":"discord.js!ThreadMemberFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ThreadMemberFlags","c":"discord-api-types!ThreadMemberFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3220,"co":1,"r":"Public","n":"ThreadMemberFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!ThreadMemberManager:class","d":"/**\n * Manages API methods for GuildMembers and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"ThreadMemberManager","c":"discord.js!ThreadMemberManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/ThreadMemberManager.js","l":14,"co":1,"r":"Public","ab":false,"n":"ThreadMemberManager","pmo":false,"ms":[{"k":"Method","c":"discord.js!ThreadMemberManager#add:member(1)","d":"/**\n * Adds a member to the thread.\n *\n * @param member - The member to add\n *\n * @param reason - The reason for adding this member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"add","c":"discord.js!ThreadMemberManager#add"},{"k":"Content","t":"("},{"k":"Reference","t":"member","c":"discord.js!~member"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | '@me'"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":97,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"add"},{"k":"Property","c":"discord.js!ThreadMemberManager#cache:member","d":"/**\n * The cache of this Manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":25,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadMemberManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadMemberManager#fetch:member(1)","d":"/**\n * Fetches thread member(s) from Discord. <info>This method requires the {@link discord-api-types#(GatewayIntentBits:enum).GuildMembers} privileged gateway intent.</info>\n *\n * @param options - Options for fetching thread member(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadMemberManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"<true> | (("},{"k":"Reference","t":"FetchThreadMemberOptions","c":"discord.js!FetchThreadMemberOptions:interface"},{"k":"Content","t":" & { "},{"k":"Reference","t":"withMember","c":"discord.js!~__type#withMember"},{"k":"Content","t":": true }) | { "},{"k":"Reference","t":"member","c":"discord.js!~__type#member"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"<true> })"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"<true>>"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":16,"en":20},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":15},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadMemberManager#fetch:member(2)","d":"/**\n * Fetches thread member(s) from Discord. <info>This method requires the {@link discord-api-types#(GatewayIntentBits:enum).GuildMembers} privileged gateway intent.</info>\n *\n * @param options - Options for fetching thread member(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadMemberManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"FetchThreadMemberOptions","c":"discord.js!FetchThreadMemberOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":9,"en":13},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"options","ptr":{"st":5,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadMemberManager#fetch:member(3)","d":"/**\n * Fetches thread member(s) from Discord. <info>This method requires the {@link discord-api-types#(GatewayIntentBits:enum).GuildMembers} privileged gateway intent.</info>\n *\n * @param options - Options for fetching thread member(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadMemberManager#fetch"},{"k":"Content","t":"(  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"FetchThreadMembersWithGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithGuildMemberDataOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":"<true>>>"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadMemberManager#fetch:member(4)","d":"/**\n * Fetches thread member(s) from Discord. <info>This method requires the {@link discord-api-types#(GatewayIntentBits:enum).GuildMembers} privileged gateway intent.</info>\n *\n * @param options - Options for fetching thread member(s)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!ThreadMemberManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"FetchThreadMembersWithoutGuildMemberDataOptions","c":"discord.js!FetchThreadMembersWithoutGuildMemberDataOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":154,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!ThreadMemberManager#fetchMe:member(1)","d":"/**\n * Fetches the client user as a ThreadMember of the thread.\n *\n * @param options - The options for fetching the member\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchMe","c":"discord.js!ThreadMemberManager#fetchMe"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":46,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchMe"},{"k":"Property","c":"discord.js!ThreadMemberManager#me:member","d":"/**\n * The client user as a ThreadMember of this ThreadChannel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"me","c":"discord.js!ThreadMemberManager#me"},{"k":"Content","t":"(): "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":true,"op":false,"r":"Public","n":"me","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadMemberManager#remove:member(1)","d":"/**\n * Remove a user from the thread.\n *\n * @param member - The member to remove\n *\n * @param reason - The reason for removing this member from the thread\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"remove","c":"discord.js!ThreadMemberManager#remove"},{"k":"Content","t":"("},{"k":"Reference","t":"member","c":"discord.js!~member"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" | '@me'"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":110,"co":3,"sta":false,"rtr":{"st":12,"en":16},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"remove"},{"k":"Method","c":"discord.js!ThreadMemberManager#resolve:member(1)","d":"/**\n * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} object.\n *\n * @param member - The user that is part of the thread\n */\n","ex":[{"k":"Content","t":"resolve(member"},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":";"}],"l":71,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!ThreadMemberManager#resolveId:member(1)","d":"/**\n * Resolves a {@link ThreadMemberResolvable} to a {@link ThreadMember} id string.\n *\n * @param member - The user that is part of the guild\n */\n","ex":[{"k":"Content","t":"resolveId(member"},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":84,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"member","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Property","c":"discord.js!ThreadMemberManager#thread:member","d":"/**\n * The thread this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"thread","c":"discord.js!ThreadMemberManager#thread"},{"k":"Content","t":": "},{"k":"Reference","t":"AnyThreadChannel","c":"discord.js!AnyThreadChannel:type"},{"k":"Content","t":";"}],"l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"thread","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!ThreadMemberResolvable:type","d":"/**\n * Data that resolves to give a ThreadMember object. This can be:\n *\n * * A ThreadMember object\n *\n * * A User resolvable\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ThreadMemberResolvable","c":"discord.js!ThreadMemberResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"pat":"src/managers/ThreadMemberManager.js","l":59,"co":1,"r":"Public","n":"ThreadMemberResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!ThreadOnlyChannel:class","d":"/**\n * Represents symbols utilised by thread-only channels.\n */\n","ex":[{"k":"Content","t":"export abstract class "},{"k":"Reference","t":"ThreadOnlyChannel","c":"discord.js!ThreadOnlyChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"TextBasedChannelMixin","c":"discord.js!TextBasedChannelMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"GuildChannel","c":"discord.js!GuildChannel:class"},{"k":"Content","t":", true, [ 'send', 'lastMessage', 'lastPinAt', 'bulkDelete', 'sendTyping', 'createMessageCollector', 'awaitMessages', 'createMessageComponentCollector', 'awaitMessageComponent',])"},{"k":"Content","t":" "}],"pat":"src/structures/ThreadOnlyChannel.js","l":44,"co":1,"r":"Public","ab":true,"n":"ThreadOnlyChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!ThreadOnlyChannel#availableTags:member","d":"/**\n * The set of tags that can be used in this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"availableTags","c":"discord.js!ThreadOnlyChannel#availableTags"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumTag","c":"discord.js!GuildForumTag:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":64,"co":3,"ro":false,"op":false,"r":"Public","n":"availableTags","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadOnlyChannel#createInvite:member(1)","d":"/**\n * Creates an invite to this guild channel.\n *\n * @param options - The options for creating the invite\n *\n * @example\n * ```js\n * // Create an invite to a channel\n * channel.createInvite()\n *   .then(invite => console.log(`Created an invite with a code of ${invite.code}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createInvite","c":"discord.js!ThreadOnlyChannel#createInvite"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"InviteCreateOptions","c":"discord.js!InviteCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":180,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createInvite"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#createWebhook:member(1)","d":"/**\n * Creates a webhook for the channel.\n *\n * @param options - Options for creating the webhook\n *\n * @returns Returns the created Webhook *\n *\n * @example\n * ```js\n * // Create a webhook for the current channel\n * channel.createWebhook({\n *   name: 'Snek',\n *   avatar: 'https://i.imgur.com/mI8XcpG.jpg',\n *   reason: 'Needed a cool new Webhook'\n * })\n *   .then(console.log)\n *   .catch(console.error)\n * ```\n *\n */\n","ex":[{"k":"Content","t":"createWebhook(options?"},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":350,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"createWebhook"},{"k":"Property","c":"discord.js!ThreadOnlyChannel#defaultAutoArchiveDuration:member","d":"/**\n * The default auto archive duration for newly created threads in this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!ThreadOnlyChannel#defaultAutoArchiveDuration"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":106,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultAutoArchiveDuration","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#defaultReactionEmoji:member","d":"/**\n * The emoji to show in the add reaction button on a thread in a guild forum channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultReactionEmoji","c":"discord.js!ThreadOnlyChannel#defaultReactionEmoji"},{"k":"Content","t":": "},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":74,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultReactionEmoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#defaultSortOrder:member","d":"/**\n * The default sort order mode used to order posts\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultSortOrder","c":"discord.js!ThreadOnlyChannel#defaultSortOrder"},{"k":"Content","t":": "},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":134,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultSortOrder","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#defaultThreadRateLimitPerUser:member","d":"/**\n * The initial rate limit per user (slowmode) to set on newly created threads in a channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"defaultThreadRateLimitPerUser","c":"discord.js!ThreadOnlyChannel#defaultThreadRateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":86,"co":3,"ro":false,"op":false,"r":"Public","n":"defaultThreadRateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadOnlyChannel#fetchInvites:member(1)","d":"/**\n * Fetches a collection of invites to this guild channel. Resolves with a collection mapping invites by their codes.\n *\n * @param cache - Whether to cache the fetched invites\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchInvites","c":"discord.js!ThreadOnlyChannel#fetchInvites"},{"k":"Content","t":"("},{"k":"Reference","t":"cache","c":"discord.js!~cache"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"Invite","c":"discord.js!Invite:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"l":190,"co":3,"sta":false,"rtr":{"st":7,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cache","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchInvites"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#fetchWebhooks:member(1)","d":"/**\n * Fetches all webhooks for the channel.\n *\n * @example\n * ```js\n * // Fetch webhooks\n * channel.fetchWebhooks()\n *   .then(hooks => console.log(`This channel has ${hooks.size} hooks`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"fetchWebhooks(): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">>"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":324,"sta":false,"rtr":{"st":1,"en":9},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetchWebhooks"},{"k":"Property","c":"discord.js!ThreadOnlyChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#members:member","d":"/**\n * A collection of cached members of this channel, mapped by their ids. Members that can view this channel, if the channel is text-based. Members in the channel, if the channel is voice-based.\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":281,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#nsfw:member","d":"/**\n * If this channel is considered NSFW.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"nsfw","c":"discord.js!ThreadOnlyChannel#nsfw"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":116,"co":3,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"rateLimitPerUser","c":"discord.js!ThreadOnlyChannel#rateLimitPerUser"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":96,"co":3,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setAvailableTags:member(1)","d":"/**\n * Sets the available tags for this forum channel\n *\n * @param availableTags - The tags to set as available in this channel\n *\n * @param reason - Reason for changing the available tags\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setAvailableTags","c":"discord.js!ThreadOnlyChannel#setAvailableTags"},{"k":"Content","t":"("},{"k":"Reference","t":"tags","c":"discord.js!~tags"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumTagData","c":"discord.js!GuildForumTagData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":146,"co":3,"sta":false,"rtr":{"st":12,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"tags","ptr":{"st":5,"en":7},"op":false,"rs":false},{"pn":"reason","ptr":{"st":10,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"setAvailableTags"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setDefaultAutoArchiveDuration:member(1)","d":"/**\n * Sets the default auto archive duration for all newly created threads in this channel.\n *\n * @param defaultAutoArchiveDuration - The new default auto archive duration\n *\n * @param reason - Reason for changing the channel's default auto archive duration\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultAutoArchiveDuration","c":"discord.js!ThreadOnlyChannel#setDefaultAutoArchiveDuration"},{"k":"Content","t":"(  "},{"k":"Reference","t":"defaultAutoArchiveDuration","c":"discord.js!~defaultAutoArchiveDuration"},{"k":"Content","t":": "},{"k":"Reference","t":"ThreadAutoArchiveDuration","c":"discord-api-types!ThreadAutoArchiveDuration:enum"},{"k":"Content","t":",  "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":200,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultAutoArchiveDuration","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultAutoArchiveDuration"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setDefaultReactionEmoji:member(1)","d":"/**\n * Sets the default reaction emoji for this channel\n *\n * @param defaultReactionEmoji - The emoji to set as the default reaction emoji\n *\n * @param reason - Reason for changing the default reaction emoji\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultReactionEmoji","c":"discord.js!ThreadOnlyChannel#setDefaultReactionEmoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emojiId","c":"discord.js!~emojiId"},{"k":"Content","t":": "},{"k":"Reference","t":"DefaultReactionEmoji","c":"discord.js!DefaultReactionEmoji:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":156,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emojiId","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultReactionEmoji"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setDefaultSortOrder:member(1)","d":"/**\n * Sets the default sort order mode used to order posts\n *\n * @param defaultSortOrder - The default sort order mode to set on this channel\n *\n * @param reason - Reason for changing the default sort order\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultSortOrder","c":"discord.js!ThreadOnlyChannel#setDefaultSortOrder"},{"k":"Content","t":"("},{"k":"Reference","t":"defaultSortOrder","c":"discord.js!~defaultSortOrder"},{"k":"Content","t":": "},{"k":"Reference","t":"SortOrderType","c":"discord-api-types!SortOrderType:enum"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":225,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"defaultSortOrder","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultSortOrder"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setDefaultThreadRateLimitPerUser:member(1)","d":"/**\n * Sets the default rate limit per user (slowmode) for new threads in this channel\n *\n * @param defaultThreadRateLimitPerUser - The rate limit to set on newly created threads in this channel\n *\n * @param reason - Reason for changing the default rate limit\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDefaultThreadRateLimitPerUser","c":"discord.js!ThreadOnlyChannel#setDefaultThreadRateLimitPerUser"},{"k":"Content","t":"("},{"k":"Reference","t":"rateLimit","c":"discord.js!~rateLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":166,"co":3,"sta":false,"rtr":{"st":11,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimit","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDefaultThreadRateLimitPerUser"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setNSFW:member(1)","d":"/**\n * Sets whether this channel is flagged as NSFW.\n *\n * @param nsfw - Whether the channel should be considered NSFW\n *\n * @param reason - Reason for changing the channel's NSFW flag\n */\n","ex":[{"k":"Content","t":"setNSFW(nsfw?"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":370,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"nsfw","ptr":{"st":1,"en":2},"op":true,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setNSFW"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setRateLimitPerUser:member(1)","d":"/**\n * Sets the rate limit per user (slowmode) for this channel.\n *\n * @param rateLimitPerUser - The new rate limit in seconds\n *\n * @param reason - Reason for changing the channel's rate limit\n */\n","ex":[{"k":"Content","t":"setRateLimitPerUser(rateLimitPerUser"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"this","c":"discord.js!this:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":360,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rateLimitPerUser","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRateLimitPerUser"},{"k":"Method","c":"discord.js!ThreadOnlyChannel#setTopic:member(1)","d":"/**\n * Sets a new topic for the guild channel.\n *\n * @param topic - The new topic for the guild channel\n *\n * @param reason - Reason for changing the guild channel's topic\n *\n * @example\n * ```js\n * // Set a new channel topic\n * channel.setTopic('needs more rate limiting')\n *   .then(newChannel => console.log(`Channel's new topic is ${newChannel.topic}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setTopic","c":"discord.js!ThreadOnlyChannel#setTopic"},{"k":"Content","t":"("},{"k":"Reference","t":"topic","c":"discord.js!~topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":215,"co":3,"sta":false,"rtr":{"st":13,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"topic","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setTopic"},{"k":"Property","c":"discord.js!ThreadOnlyChannel#threads:member","d":"/**\n * A manager of the threads belonging to this channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"threads","c":"discord.js!ThreadOnlyChannel#threads"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildForumThreadManager","c":"discord.js!GuildForumThreadManager:class"},{"k":"Content","t":";"}],"l":52,"co":3,"ro":false,"op":false,"r":"Public","n":"threads","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#topic:member","d":"/**\n * The topic of this channel.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"topic","c":"discord.js!ThreadOnlyChannel#topic"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":126,"co":3,"ro":false,"op":false,"r":"Public","n":"topic","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!ThreadOnlyChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildForum","c":"discord-api-types!ChannelType.GuildForum:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"ChannelType.GuildMedia","c":"discord-api-types!ChannelType.GuildMedia:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!ThreadOnlyChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!Typing:class","d":"/**\n * Represents a typing state for a user in a channel.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Typing","c":"discord.js!Typing:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Typing.js","l":9,"co":1,"r":"Public","ab":false,"n":"Typing","pmo":false,"ms":[{"k":"Property","c":"discord.js!Typing#channel:member","d":"/**\n * The channel the status is from\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channel","c":"discord.js!Typing#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextBasedChannel","c":"discord.js!TextBasedChannel:type"},{"k":"Content","t":";"}],"l":17,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Typing#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Typing#guild:member","d":"/**\n * The guild the status is from\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"guild","c":"discord.js!Typing#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":true,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Typing#inGuild:member(1)","d":"/**\n * Indicates whether the status is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!Typing#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"channel","c":"discord.js!~__type#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadChannel","c":"discord.js!ThreadChannel:class"},{"k":"Content","t":";  get "},{"k":"Reference","t":"guild","c":"discord.js!~__type#guild"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":42,"co":3,"sta":false,"rtr":{"st":3,"en":16},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Property","c":"discord.js!Typing#member:member","d":"/**\n * The member who is typing\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"member","c":"discord.js!Typing#member"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":69,"co":3,"ro":true,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Typing#startedAt:member","d":"/**\n * The time the user started typing at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"startedAt","c":"discord.js!Typing#startedAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":51,"co":3,"ro":true,"op":false,"r":"Public","n":"startedAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Typing#startedTimestamp:member","d":"/**\n * The UNIX timestamp in milliseconds the user started typing at\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"startedTimestamp","c":"discord.js!Typing#startedTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"startedTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Typing#user:member","d":"/**\n * The user who is typing\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"user","c":"discord.js!Typing#user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"PartialUser","c":"discord.js!PartialUser:interface"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!UndeletableMessageType:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"UndeletableMessageType","c":"discord.js!UndeletableMessageType:type"},{"k":"Content","t":" = "},{"k":"Content","t":"| "},{"k":"Reference","t":"MessageType.RecipientAdd","c":"discord-api-types!MessageType.RecipientAdd:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.RecipientRemove","c":"discord-api-types!MessageType.RecipientRemove:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.Call","c":"discord-api-types!MessageType.Call:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChannelNameChange","c":"discord-api-types!MessageType.ChannelNameChange:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ChannelIconChange","c":"discord-api-types!MessageType.ChannelIconChange:member"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageType.ThreadStarterMessage","c":"discord-api-types!MessageType.ThreadStarterMessage:member"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3675,"co":1,"r":"Public","n":"UndeletableMessageType","ttr":{"st":3,"en":15}},{"k":"Class","c":"discord.js!User:class","d":"/**\n * Represents a user on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"PartialTextBasedChannel","c":"discord.js!PartialTextBasedChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":")"},{"k":"Content","t":" "}],"pat":"src/structures/User.js","l":15,"co":1,"r":"Public","ab":false,"n":"User","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!User:constructor(1)","d":"/**\n * Constructs a new instance of the `User` class\n */\n","ex":[{"k":"Content","t":"protected constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"RawUserData","c":"discord.js!~RawUserData:type"},{"k":"Content","t":");"}],"l":15,"co":3,"r":"Public","pr":true,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!User#accentColor:member","d":"/**\n * The base 10 accent color of the user's banner <info>The user must be force fetched for this property to be present or be updated</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"accentColor","c":"discord.js!User#accentColor"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":103,"co":3,"ro":false,"op":false,"r":"Public","n":"accentColor","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#avatar:member","d":"/**\n * The user avatar's hash\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatar","c":"discord.js!User#avatar"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":81,"co":3,"ro":false,"op":false,"r":"Public","n":"avatar","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#avatarDecoration:member","d":"/**\n * The user avatar decoration's hash\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarDecoration","c":"discord.js!User#avatarDecoration"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":131,"co":3,"ro":false,"op":false,"r":"Public","n":"avatarDecoration","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#avatarDecorationURL:member(1)","d":"/**\n * A link to the user's avatar decoration.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarDecorationURL","c":"discord.js!User#avatarDecorationURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":178,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatarDecorationURL"},{"k":"Method","c":"discord.js!User#avatarURL:member(1)","d":"/**\n * A link to the user's avatar.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarURL","c":"discord.js!User#avatarURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":169,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatarURL"},{"k":"Property","c":"discord.js!User#banner:member","d":"/**\n * The user banner's hash <info>The user must be force fetched for this property to be present or be updated</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"banner","c":"discord.js!User#banner"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":92,"co":3,"ro":false,"op":false,"r":"Public","n":"banner","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#bannerURL:member(1)","d":"/**\n * A link to the user's banner. See {@link User.banner} for more info\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bannerURL","c":"discord.js!User#bannerURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":218,"co":3,"sta":false,"rtr":{"st":7,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"bannerURL"},{"k":"Property","c":"discord.js!User#bot:member","d":"/**\n * Whether or not the user is a bot\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"bot","c":"discord.js!User#bot"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":60,"co":3,"ro":false,"op":false,"r":"Public","n":"bot","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#createdAt:member","d":"/**\n * The time the user was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdAt","c":"discord.js!User#createdAt"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Date","c":"!Date:interface"},{"k":"Content","t":";"}],"l":160,"co":3,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#createDM:member(1)","d":"/**\n * Creates a DM channel between the client and the user.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createDM","c":"discord.js!User#createDM"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":260,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"createDM"},{"k":"Property","c":"discord.js!User#createdTimestamp:member","d":"/**\n * The timestamp the user was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"createdTimestamp","c":"discord.js!User#createdTimestamp"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":151,"co":3,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#defaultAvatarURL:member","d":"/**\n * A link to the user's default avatar\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"defaultAvatarURL","c":"discord.js!User#defaultAvatarURL"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":187,"co":3,"ro":true,"op":false,"r":"Public","n":"defaultAvatarURL","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#deleteDM:member(1)","d":"/**\n * Deletes a DM channel (if one exists) between the client and the user. Resolves with the channel if successful.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteDM","c":"discord.js!User#deleteDM"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":268,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"deleteDM"},{"k":"Property","c":"discord.js!User#discriminator:member","d":"/**\n * The discriminator of this user <info>`'0'`, or a 4-digit stringified number if they're using the legacy username system</info>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discriminator","c":"discord.js!User#discriminator"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":71,"co":3,"ro":false,"op":false,"r":"Public","n":"discriminator","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#displayAvatarURL:member(1)","d":"/**\n * A link to the user's avatar if they have one. Otherwise a link to their default avatar will be returned.\n *\n * @param options - Options for the Image URL\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"displayAvatarURL","c":"discord.js!User#displayAvatarURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":198,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"displayAvatarURL"},{"k":"Property","c":"discord.js!User#displayName:member","d":"/**\n * The global name of this user, or their username if they don't have one\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"displayName","c":"discord.js!User#displayName"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":242,"co":3,"ro":true,"op":false,"r":"Public","n":"displayName","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#dmChannel:member","d":"/**\n * The DM between the client's user and this user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"dmChannel","c":"discord.js!User#dmChannel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":251,"co":3,"ro":true,"op":false,"r":"Public","n":"dmChannel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#equals:member(1)","d":"/**\n * Checks if the user is equal to another. It compares id, username, discriminator, avatar, banner, accent color, and bot flags. It is recommended to compare equality by using `user.id === user2.id` unless you want to compare all properties.\n *\n * @param user - User to compare with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"equals","c":"discord.js!User#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":279,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"discord.js!User#fetch:member(1)","d":"/**\n * Fetches this user.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!User#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":327,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!User#fetchFlags:member(1)","d":"/**\n * Fetches this user's flags.\n *\n * @param force - Whether to skip the cache check and request the API\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchFlags","c":"discord.js!User#fetchFlags"},{"k":"Content","t":"("},{"k":"Reference","t":"force","c":"discord.js!~force"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserFlagsBitField","c":"discord.js!UserFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":318,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"force","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchFlags"},{"k":"Property","c":"discord.js!User#flags:member","d":"/**\n * The flags for this user\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"flags","c":"discord.js!User#flags"},{"k":"Content","t":": "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserFlagsBitField","c":"discord.js!UserFlagsBitField:class"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":123,"co":3,"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#globalName:member","d":"/**\n * The global name of this user\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"globalName","c":"discord.js!User#globalName"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":50,"co":3,"ro":false,"op":false,"r":"Public","n":"globalName","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#hexAccentColor:member","d":"/**\n * The hexadecimal version of the user accent color, with a leading hash <info>The user must be force fetched for this property to be present</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"hexAccentColor","c":"discord.js!User#hexAccentColor"},{"k":"Content","t":"(): "},{"k":"Reference","t":"HexColorString","c":"discord.js!HexColorString:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":208,"co":3,"ro":true,"op":false,"r":"Public","n":"hexAccentColor","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#id:member","d":"/**\n * The user's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!User#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#partial:member","d":"/**\n * Whether this User is a partial\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"partial","c":"discord.js!User#partial"},{"k":"Content","t":"(): "},{"k":"Content","t":"false"},{"k":"Content","t":";"}],"l":142,"co":3,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#send:member(1)","d":"/**\n * Sends a message to this user.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a direct message\n * user.send('Hello!')\n *   .then(message => console.log(`Sent message: ${message.content} to ${user.tag}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"send(options"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":359,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Property","c":"discord.js!User#system:member","d":"/**\n * Whether the user is an Official Discord System user (part of the urgent message system)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"system","c":"discord.js!User#system"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":113,"co":3,"ro":false,"op":false,"r":"Public","n":"system","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!User#tag:member","d":"/**\n * The tag of this user <info>This user's username, or their legacy tag (e.g. `hydrabolt#0001`) if they're using the legacy username system</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"tag","c":"discord.js!User#tag"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":229,"co":3,"ro":true,"op":false,"r":"Public","n":"tag","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!User#toString:member(1)","d":"/**\n * When concatenated with a string, this automatically returns the user's mention instead of the User object.\n *\n * @example\n * ```js\n * // Logs: Hello from <@123456789012345678>!\n * console.log(`Hello from ${user}!`);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toString","c":"discord.js!User#toString"},{"k":"Content","t":"(): "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":";"}],"l":338,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toString"},{"k":"Property","c":"discord.js!User#username:member","d":"/**\n * The username of the user\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"username","c":"discord.js!User#username"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"username","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!UserApplicationCommandData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"UserApplicationCommandData","c":"discord.js!UserApplicationCommandData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseApplicationCommandData","c":"discord.js!BaseApplicationCommandData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4643,"co":1,"r":"Public","n":"UserApplicationCommandData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!UserApplicationCommandData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!UserApplicationCommandData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.User","c":"discord-api-types!ApplicationCommandType.User:member"},{"k":"Content","t":";"}],"l":4644,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!UserContextMenuCommandInteraction:class","d":"/**\n * Represents a user context menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"ContextMenuCommandInteraction","c":"discord.js!ContextMenuCommandInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/UserContextMenuCommandInteraction.js","l":9,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"UserContextMenuCommandInteraction","pmo":false,"ms":[{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":18,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#command:member","d":"/**\n * The invoked application command, if it was fetched before\n */\n","ex":[{"k":"Content","t":"undefined command :"},{"k":"Reference","t":"ApplicationCommand","c":"discord.js!ApplicationCommand:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":77,"ro":false,"op":true,"r":"Public","n":"command","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#commandGuildId:member","d":"/**\n * The id of the guild the invoked application command is registered to\n */\n","ex":[{"k":"Content","t":"undefined commandGuildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":46,"ro":false,"op":true,"r":"Public","n":"commandGuildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#commandId:member","d":"/**\n * The invoked application command's id\n */\n","ex":[{"k":"Content","t":"undefined commandId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":28,"ro":false,"op":false,"r":"Public","n":"commandId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#commandName:member","d":"/**\n * The invoked application command's name\n */\n","ex":[{"k":"Content","t":"undefined commandName :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":34,"ro":false,"op":false,"r":"Public","n":"commandName","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#commandType:member","d":"/**\n * The invoked application command's type\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"commandType","c":"discord.js!UserContextMenuCommandInteraction#commandType"},{"k":"Content","t":": "},{"k":"Reference","t":"ApplicationCommandType.User","c":"discord-api-types!ApplicationCommandType.User:member"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"commandType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":52,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":64,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!UserContextMenuCommandInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!UserContextMenuCommandInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!UserContextMenuCommandInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!UserContextMenuCommandInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!UserContextMenuCommandInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!UserContextMenuCommandInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserContextMenuCommandInteraction","c":"discord.js!UserContextMenuCommandInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#options:member","d":"/**\n * The target of the interaction, parsed into options\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!UserContextMenuCommandInteraction#options"},{"k":"Content","t":": "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"CommandInteractionOptionResolver","c":"discord.js!CommandInteractionOptionResolver:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">,  | 'getMessage'  | 'getFocused'  | 'getMentionable'  | 'getRole'  | 'getNumber'  | 'getAttachment'  | 'getInteger'  | 'getString'  | 'getChannel'  | 'getBoolean'  | 'getSubcommandGroup'  | 'getSubcommand' >"},{"k":"Content","t":";"}],"pat":"src/structures/ContextMenuCommandInteraction.js","l":22,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":58,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#targetId:member","d":"/**\n * The id of the target of this interaction\n */\n","ex":[{"k":"Content","t":"undefined targetId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/ContextMenuCommandInteraction.js","l":32,"ro":false,"op":false,"r":"Public","n":"targetId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#targetMember:member","d":"/**\n * The target member from this interaction\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"targetMember","c":"discord.js!UserContextMenuCommandInteraction#targetMember"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":true,"op":false,"r":"Public","n":"targetMember","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#targetUser:member","d":"/**\n * The target user from this interaction\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"targetUser","c":"discord.js!UserContextMenuCommandInteraction#targetUser"},{"k":"Content","t":"(): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":15,"co":3,"ro":true,"op":false,"r":"Public","n":"targetUser","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserContextMenuCommandInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/CommandInteraction.js","l":70,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!UserEntitlementCreateOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"UserEntitlementCreateOptions","c":"discord.js!UserEntitlementCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":4090,"co":1,"r":"Public","n":"UserEntitlementCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!UserEntitlementCreateOptions#sku:member","d":"","ex":[{"k":"Reference","t":"sku","c":"discord.js!UserEntitlementCreateOptions#sku"},{"k":"Content","t":": "},{"k":"Reference","t":"SKUResolvable","c":"discord.js!SKUResolvable:type"},{"k":"Content","t":";"}],"l":4091,"co":3,"ro":false,"op":false,"r":"Public","n":"sku","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!UserEntitlementCreateOptions#user:member","d":"","ex":[{"k":"Reference","t":"user","c":"discord.js!UserEntitlementCreateOptions#user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":";"}],"l":4092,"co":3,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!UserFlagsBitField:class","d":"/**\n * Data structure that makes it easy to interact with a {@link User.flags} bitfield.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserFlagsBitField","c":"discord.js!UserFlagsBitField:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BitField","c":"discord.js!BitField:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserFlagsString","c":"discord.js!UserFlagsString:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/util/UserFlagsBitField.js","l":10,"co":1,"r":"Public","ab":false,"n":"UserFlagsBitField","pmo":false,"ms":[{"k":"Property","c":"discord.js!UserFlagsBitField#bitfield:member","d":"/**\n * Bitfield of the packed bits\n */\n","ex":[{"k":"Content","t":"undefined bitfield :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":26,"ro":false,"op":false,"r":"Public","n":"bitfield","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserFlagsBitField.Flags:member","d":"/**\n * Numeric user flags.\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"Flags","c":"discord.js!UserFlagsBitField.Flags"},{"k":"Content","t":": "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"UserFlags","c":"discord-api-types!UserFlags:enum"},{"k":"Content","t":";"}],"l":16,"co":3,"ro":false,"op":false,"r":"Public","n":"Flags","prtr":{"st":3,"en":6},"sta":true,"pr":false,"ab":false},{"k":"Method","c":"discord.js!UserFlagsBitField.resolve:member(1)","d":"","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"resolve","c":"discord.js!UserFlagsBitField.resolve"},{"k":"Content","t":"("},{"k":"Reference","t":"bit","c":"discord.js!~bit"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BitFieldResolvable","c":"discord.js!BitFieldResolvable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserFlagsString","c":"discord.js!UserFlagsString:type"},{"k":"Content","t":", "},{"k":"Reference","t":"number"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3306,"co":3,"sta":true,"rtr":{"st":12,"en":13},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bit","ptr":{"st":5,"en":11},"op":true,"rs":false}],"op":false,"ab":false,"n":"resolve"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!UserFlagsString:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"UserFlagsString","c":"discord.js!UserFlagsString:type"},{"k":"Content","t":" = "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"UserFlags","c":"discord-api-types!UserFlags:enum"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3302,"co":1,"r":"Public","n":"UserFlagsString","ttr":{"st":3,"en":7}},{"k":"Class","c":"discord.js!UserManager:class","d":"/**\n * Manages API methods for users and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserManager","c":"discord.js!UserManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":", "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/UserManager.js","l":15,"co":1,"r":"Public","ab":false,"n":"UserManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!UserManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":20,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!UserManager#createDM:member(1)","d":"/**\n * Creates a {@link DMChannel} between the client and a user.\n *\n * @param user - The UserResolvable to identify\n *\n * @param options - Additional options for this fetch\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"createDM","c":"discord.js!UserManager#createDM"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":55,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"createDM"},{"k":"Method","c":"discord.js!UserManager#deleteDM:member(1)","d":"/**\n * Deletes a {@link DMChannel} (if one exists) between the client and a user. Resolves with the channel if successful.\n *\n * @param user - The UserResolvable to identify\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deleteDM","c":"discord.js!UserManager#deleteDM"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"DMChannel","c":"discord.js!DMChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":72,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"deleteDM"},{"k":"Method","c":"discord.js!UserManager#fetch:member(1)","d":"/**\n * Obtains a user from Discord, or the user cache if it's already available.\n *\n * @param user - The user to fetch\n *\n * @param options - Additional options for this fetch\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!UserManager#fetch"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":87,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetch"},{"k":"Method","c":"discord.js!UserManager#fetchFlags:member(1)","d":"/**\n * Fetches a user's flags.\n *\n * @param user - The UserResolvable to identify\n *\n * @param options - Additional options for this fetch\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchFlags","c":"discord.js!UserManager#fetchFlags"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BaseFetchOptions","c":"discord.js!BaseFetchOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserFlagsBitField","c":"discord.js!UserFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":104,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchFlags"},{"k":"Method","c":"discord.js!UserManager#resolve:member(1)","d":"/**\n * Resolves a {@link UserResolvable} to a {@link User} object.\n *\n * @param user - The UserResolvable to identify\n */\n","ex":[{"k":"Content","t":"resolve(user"},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"l":123,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolve"},{"k":"Method","c":"discord.js!UserManager#resolveId:member(1)","d":"/**\n * Resolves a {@link UserResolvable} to a {@link User} id.\n *\n * @param user - The UserResolvable to identify\n */\n","ex":[{"k":"Content","t":"resolveId(user"},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":134,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"resolveId"},{"k":"Method","c":"discord.js!UserManager#send:member(1)","d":"/**\n * Sends a message to a user.\n *\n * @param user - The UserResolvable to identify\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!UserManager#send"},{"k":"Content","t":"("},{"k":"Reference","t":"user","c":"discord.js!~user"},{"k":"Content","t":": "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":114,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"user","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"}],"etr":{"st":3,"en":11,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":10}]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!UserMention:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"UserMention","c":"discord.js!UserMention:type"},{"k":"Content","t":" = "},{"k":"Content","t":"`<@${"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"}>`"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6682,"co":1,"r":"Public","n":"UserMention","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"discord.js!UserResolvable:type","d":"/**\n * Data that resolves to give a User object. This can be:\n *\n * * A User object\n *\n * * A Snowflake\n *\n * * A Message object (resolves to the message author)\n *\n * * A GuildMember object\n *\n * * A ThreadMember object\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"UserResolvable","c":"discord.js!UserResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ThreadMember","c":"discord.js!ThreadMember:class"},{"k":"Content","t":";"}],"pat":"src/managers/UserManager.js","l":26,"co":1,"r":"Public","n":"UserResolvable","ttr":{"st":3,"en":12}},{"k":"Class","c":"discord.js!UserSelectMenuBuilder:class","d":"/**\n * Class used to build select menu components to be sent through the API\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"discord.js!UserSelectMenuBuilder:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BuilderUserSelectMenuComponent","c":"@discordjs/builders!UserSelectMenuBuilder:class"},{"k":"Content","t":" "}],"pat":"src/structures/UserSelectMenuBuilder.js","l":11,"co":1,"r":"Public","ab":false,"n":"UserSelectMenuBuilder","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!UserSelectMenuBuilder:constructor(1)","d":"/**\n * Constructs a new instance of the `UserSelectMenuBuilder` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"UserSelectMenuComponentData","c":"discord.js!UserSelectMenuComponentData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":9},"op":true,"rs":false}]},{"k":"Method","c":"discord.js!UserSelectMenuBuilder.from:member(1)","d":"/**\n * Creates a new select menu builder from JSON data\n *\n * @param other - The other data\n */\n","ex":[{"k":"Content","t":"public static "},{"k":"Reference","t":"from","c":"discord.js!UserSelectMenuBuilder.from"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"discord.js!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"JSONEncodable","c":"@discordjs/util!JSONEncodable:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"> | "},{"k":"Reference","t":"APISelectMenuComponent","c":"discord-api-types!APISelectMenuComponent:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"UserSelectMenuBuilder","c":"discord.js!UserSelectMenuBuilder:class"},{"k":"Content","t":";"}],"l":21,"co":3,"sta":true,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"from"}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!UserSelectMenuComponent:class","d":"/**\n * Represents a user select menu component\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponent","c":"discord.js!BaseSelectMenuComponent:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/UserSelectMenuComponent.js","l":9,"co":1,"r":"Public","ab":false,"n":"UserSelectMenuComponent","pmo":false,"ms":[{"k":"Property","c":"discord.js!UserSelectMenuComponent#customId:member","d":"/**\n * The custom id of this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":42,"ro":true,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#data:member","d":"/**\n * The API data associated with this component\n */\n","ex":[{"k":"Content","t":"undefined data :"},{"k":"Reference","t":"APIMessageComponent","c":"discord-api-types!APIMessageComponent:type"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":14,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#disabled:member","d":"/**\n * Whether this select menu is disabled\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly disabled :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":51,"ro":true,"op":false,"r":"Public","n":"disabled","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#maxValues:member","d":"/**\n * The maximum amount of options that can be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly maxValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":24,"ro":true,"op":true,"r":"Public","n":"maxValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#minValues:member","d":"/**\n * The minimum amount of options that must be selected\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly minValues :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":33,"ro":true,"op":true,"r":"Public","n":"minValues","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#placeholder:member","d":"/**\n * The placeholder for this select menu\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly placeholder :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseSelectMenuComponent.js","l":15,"ro":true,"op":true,"r":"Public","n":"placeholder","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuComponent#type:member","d":"/**\n * The type of the component\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly type :"},{"k":"Reference","t":"ComponentType","c":"discord-api-types!ComponentType:class"},{"k":"Content","t":";"}],"pat":"src/structures/Component.js","l":22,"ro":true,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Interface","c":"discord.js!UserSelectMenuComponentData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"UserSelectMenuComponentData","c":"discord.js!UserSelectMenuComponentData:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseSelectMenuComponentData","c":"discord.js!BaseSelectMenuComponentData:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6274,"co":1,"r":"Public","n":"UserSelectMenuComponentData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!UserSelectMenuComponentData#type:member","d":"","ex":[{"k":"Reference","t":"type","c":"discord.js!UserSelectMenuComponentData#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":";"}],"l":6275,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Class","c":"discord.js!UserSelectMenuInteraction:class","d":"/**\n * Represents a {@link discord-api-types#(ComponentType:enum).UserSelect} select menu interaction.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"< "},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":",> extends "},{"k":"Reference","t":"MessageComponentInteraction","c":"discord.js!MessageComponentInteraction:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/structures/UserSelectMenuInteraction.js","l":11,"co":1,"r":"Public","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":7,"en":8}}],"ab":false,"n":"UserSelectMenuInteraction","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!UserSelectMenuInteraction:constructor(1)","d":"/**\n * Constructs a new instance of the `UserSelectMenuInteraction` class\n */\n","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"client","c":"discord.js!~client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":"<true>"},{"k":"Content","t":", "},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"APIMessageUserSelectInteractionData","c":"discord-api-types!APIMessageUserSelectInteractionData:interface"},{"k":"Content","t":");"}],"l":11,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"client","ptr":{"st":3,"en":5},"op":false,"rs":false},{"pn":"data","ptr":{"st":8,"en":9},"op":false,"rs":false}]},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#applicationId:member","d":"/**\n * The application's id\n */\n","ex":[{"k":"Content","t":"undefined applicationId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":44,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#appPermissions:member","d":"/**\n * Set of permissions the application or bot has within the channel the interaction was sent from\n */\n","ex":[{"k":"Content","t":"undefined appPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":80,"ro":false,"op":true,"r":"Public","n":"appPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#channel:member","d":"/**\n * The channel this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly channel :"},{"k":"Reference","t":"TextBasedChannels","c":"discord.js!TextBasedChannels:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":171,"ro":true,"op":true,"r":"Public","n":"channel","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#channelId:member","d":"/**\n * The id of the channel this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined channelId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":19,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#component:member","d":"/**\n * The component which was interacted with\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"component","c":"discord.js!UserSelectMenuInteraction#component"},{"k":"Content","t":"(): "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Cached"},{"k":"Content","t":",  "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":",  "},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"UserSelectMenuComponent","c":"discord.js!UserSelectMenuComponent:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUserSelectComponent","c":"discord-api-types!APIUserSelectComponent:type"},{"k":"Content","t":" >"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":85,"co":3,"ro":true,"op":false,"r":"Public","n":"component","prtr":{"st":3,"en":19},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#componentType:member","d":"/**\n * The type of component which was interacted with\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"componentType","c":"discord.js!UserSelectMenuInteraction#componentType"},{"k":"Content","t":": "},{"k":"Reference","t":"ComponentType.UserSelect","c":"discord-api-types!ComponentType.UserSelect:member"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"componentType","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#createdAt:member","d":"/**\n * The time the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":162,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#createdTimestamp:member","d":"/**\n * The timestamp the interaction was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":153,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#customId:member","d":"/**\n * The custom id of the component which was interacted with\n */\n","ex":[{"k":"Content","t":"undefined customId :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":35,"ro":false,"op":false,"r":"Public","n":"customId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#deferred:member","d":"/**\n * Whether the reply to this interaction has been deferred\n */\n","ex":[{"k":"Content","t":"undefined deferred :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":47,"ro":false,"op":false,"r":"Public","n":"deferred","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#entitlements:member","d":"/**\n * The entitlements for the invoking user, representing access to premium SKUs\n */\n","ex":[{"k":"Content","t":"undefined entitlements :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"Entitlement","c":"discord.js!Entitlement:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":142,"ro":false,"op":false,"r":"Public","n":"entitlements","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#ephemeral:member","d":"/**\n * Whether the reply to this interaction is ephemeral\n */\n","ex":[{"k":"Content","t":"undefined ephemeral :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":53,"ro":false,"op":true,"r":"Public","n":"ephemeral","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#guild:member","d":"/**\n * The guild this interaction was sent in\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":180,"ro":true,"op":true,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#guildId:member","d":"/**\n * The id of the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":56,"ro":false,"op":true,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#guildLocale:member","d":"/**\n * The preferred locale from the guild this interaction was sent in\n */\n","ex":[{"k":"Content","t":"undefined guildLocale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":136,"ro":false,"op":true,"r":"Public","n":"guildLocale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#id:member","d":"/**\n * The interaction's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":30,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!UserSelectMenuInteraction#inCachedGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is both cached and received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inCachedGuild","c":"discord.js!UserSelectMenuInteraction#inCachedGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":196,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inCachedGuild"},{"k":"Method","c":"discord.js!UserSelectMenuInteraction#inGuild:member(1)","d":"/**\n * Indicates whether this interaction is received from a guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inGuild","c":"discord.js!UserSelectMenuInteraction#inGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<'raw' | 'cached'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":188,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inGuild"},{"k":"Method","c":"discord.js!UserSelectMenuInteraction#inRawGuild:member(1)","d":"/**\n * Indicates whether or not this interaction is received from an uncached guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"inRawGuild","c":"discord.js!UserSelectMenuInteraction#inRawGuild"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"UserSelectMenuInteraction","c":"discord.js!UserSelectMenuInteraction:class"},{"k":"Content","t":"<'raw'>"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":204,"co":3,"sta":false,"rtr":{"st":3,"en":6},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"inRawGuild"},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#locale:member","d":"/**\n * The locale of the user who invoked this interaction\n */\n","ex":[{"k":"Content","t":"undefined locale :"},{"k":"Reference","t":"Locale","c":"discord-api-types!Locale:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":130,"ro":false,"op":false,"r":"Public","n":"locale","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#member:member","d":"/**\n * If this interaction was sent in a guild, the member which sent it\n */\n","ex":[{"k":"Content","t":"undefined member :"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIInteractionGuildMember","c":"discord-api-types!APIInteractionGuildMember:interface"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":68,"ro":false,"op":true,"r":"Public","n":"member","prtr":{"st":1,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#memberPermissions:member","d":"/**\n * The permissions of the member, if one exists, in the channel this interaction was executed in\n */\n","ex":[{"k":"Content","t":"undefined memberPermissions :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"PermissionsBitField","c":"discord.js!PermissionsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":86,"ro":false,"op":true,"r":"Public","n":"memberPermissions","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#members:member","d":"/**\n * Collection of the selected members\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!UserSelectMenuInteraction#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<  "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"CacheTypeReducer","c":"discord.js!CacheTypeReducer:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":", "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIGuildMember","c":"discord-api-types!APIGuildMember:interface"},{"k":"Content","t":"> >"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":23},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#message:member","d":"/**\n * The message to which the component was attached\n */\n","ex":[{"k":"Content","t":"undefined message :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":29,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#replied:member","d":"/**\n * Whether this interaction has already been replied to\n */\n","ex":[{"k":"Content","t":"undefined replied :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":59,"ro":false,"op":false,"r":"Public","n":"replied","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#token:member","d":"/**\n * The interaction's token\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly token :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":32,"ro":true,"op":false,"r":"Public","n":"token","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#type:member","d":"/**\n * The interaction's type\n */\n","ex":[{"k":"Content","t":"undefined type :"},{"k":"Reference","t":"InteractionType","c":"discord-api-types!InteractionType:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":24,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#user:member","d":"/**\n * The user who created this interaction\n */\n","ex":[{"k":"Content","t":"undefined user :"},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":62,"ro":false,"op":false,"r":"Public","n":"user","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#users:member","d":"/**\n * Collection of the selected users\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"users","c":"discord.js!UserSelectMenuInteraction#users"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"users","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#values:member","d":"/**\n * An array of the selected user ids\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"values","c":"discord.js!UserSelectMenuInteraction#values"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"values","prtr":{"st":3,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#version:member","d":"/**\n * The version\n */\n","ex":[{"k":"Content","t":"undefined version :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseInteraction.js","l":74,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!UserSelectMenuInteraction#webhook:member","d":"/**\n * An associated interaction webhook, can be used to further interact with this interaction\n */\n","ex":[{"k":"Content","t":"undefined webhook :"},{"k":"Reference","t":"InteractionWebhook","c":"discord.js!InteractionWebhook:class"},{"k":"Content","t":";"}],"pat":"src/structures/MessageComponentInteraction.js","l":65,"ro":false,"op":false,"r":"Public","n":"webhook","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":9,"en":13,"tps":[{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"discord.js!Vanity:interface","d":"/**\n * An object containing information about a guild's vanity invite.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"Vanity","c":"discord.js!Vanity:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":637,"co":1,"r":"Public","n":"Vanity","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!Vanity#code:member","d":"/**\n * Vanity invite code\n */\n","ex":[{"k":"Reference","t":"code","c":"discord.js!Vanity#code"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6687,"co":3,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!Vanity#uses:member","d":"/**\n * How many times this invite has been used\n */\n","ex":[{"k":"Reference","t":"uses","c":"discord.js!Vanity#uses"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6688,"co":3,"ro":false,"op":false,"r":"Public","n":"uses","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"discord.js!verifyString:function(1)","d":"/**\n * Verifies the provided data is a string, otherwise throws provided error.\n *\n * @param data - The string resolvable to resolve\n *\n * @param error - The Error constructor to instantiate. Defaults to Error\n *\n * @param errorMessage - The error message to throw with. Defaults to \"Expected string, got <data> instead.\"\n *\n * @param allowEmpty - Whether an empty string should be allowed\n */\n","ex":[{"k":"Content","t":"export function "},{"k":"Reference","t":"verifyString","c":"discord.js!verifyString"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"error","c":"discord.js!~error"},{"k":"Content","t":"?: "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"Error","c":"!Error:var"},{"k":"Content","t":", "},{"k":"Reference","t":"errorMessage","c":"discord.js!~errorMessage"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"allowEmpty","c":"discord.js!~allowEmpty"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"src/util/Util.js","l":224,"co":1,"rtr":{"st":21,"en":22},"r":"Public","oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"error","ptr":{"st":9,"en":12},"op":true,"rs":false},{"pn":"errorMessage","ptr":{"st":15,"en":16},"op":true,"rs":false},{"pn":"allowEmpty","ptr":{"st":19,"en":20},"op":true,"rs":false}],"n":"verifyString"},{"k":"Variable","c":"discord.js!version:var","d":"","ex":[{"k":"Reference","t":"version","c":"discord.js!version"},{"k":"Content","t":": "},{"k":"Reference","t":"string"}],"pat":"typings/index.d.ts","l":3722,"co":14,"ro":true,"r":"Public","n":"version","vtr":{"st":2,"en":3}},{"k":"TypeAlias","c":"discord.js!VoiceBasedChannel:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Extract","c":"!Extract:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Channel","c":"discord.js!Channel:type"},{"k":"Content","t":", { "},{"k":"Reference","t":"bitrate","c":"discord.js!~__type#bitrate"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" }>"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6639,"co":1,"r":"Public","n":"VoiceBasedChannel","ttr":{"st":3,"en":11}},{"k":"TypeAlias","c":"discord.js!VoiceBasedChannelTypes:type","d":"/**\n * The types of channels that are voice-based. The available types are:\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildVoice}\n *\n * * {@link discord-api-types#(ChannelType:enum).GuildStageVoice}\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"VoiceBasedChannelTypes","c":"discord.js!VoiceBasedChannelTypes:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":"['type']"},{"k":"Content","t":";"}],"pat":"src/util/Constants.js","l":133,"co":1,"r":"Public","n":"VoiceBasedChannelTypes","ttr":{"st":3,"en":5}},{"k":"Class","c":"discord.js!VoiceChannel:class","d":"/**\n * Represents a guild voice channel on Discord.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseGuildVoiceChannel","c":"discord.js!BaseGuildVoiceChannel:class"},{"k":"Content","t":" "}],"pat":"src/structures/VoiceChannel.js","l":10,"co":1,"r":"Public","ab":false,"n":"VoiceChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!VoiceChannel#bitrate:member","d":"/**\n * The bitrate of this voice-based channel\n */\n","ex":[{"k":"Content","t":"undefined bitrate :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":48,"ro":false,"op":false,"r":"Public","n":"bitrate","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#createdAt:member","d":"/**\n * The time the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":61,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#createdTimestamp:member","d":"/**\n * The timestamp the channel was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":52,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#deletable:member","d":"/**\n * Whether the channel is deletable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly deletable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":423,"ro":true,"op":false,"r":"Public","n":"deletable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#flags:member","d":"/**\n * The flags that are applied to the channel. <info>This is only `null` in a {@link PartialGroupDMChannel}. In all other cases, it is not `null`.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"Readonly","c":"discord.js!Readonly:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"ChannelFlagsBitField","c":"discord.js!ChannelFlagsBitField:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":35,"ro":false,"op":true,"r":"Public","n":"flags","prtr":{"st":1,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#full:member","d":"/**\n * Checks if the voice-based channel is full\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly full :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":114,"ro":true,"op":false,"r":"Public","n":"full","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#guild:member","d":"/**\n * The guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guild :"},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":32,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#guildId:member","d":"/**\n * The id of the guild the channel is in\n */\n","ex":[{"k":"Content","t":"undefined guildId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":38,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#id:member","d":"/**\n * The channel's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":44,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#joinable:member","d":"/**\n * Whether the channel is joinable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly joinable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"l":16,"ro":true,"op":false,"r":"Public","n":"joinable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#lastMessage:member","d":"/**\n * The Message object of the last message in the channel, if one was sent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly lastMessage :"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":";"}],"pat":"src/structures/interfaces/TextBasedChannel.js","l":42,"ro":true,"op":true,"r":"Public","n":"lastMessage","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#lastMessageId:member","d":"/**\n * The last message id sent in the channel, if one was sent\n */\n","ex":[{"k":"Content","t":"undefined lastMessageId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":74,"ro":false,"op":true,"r":"Public","n":"lastMessageId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#manageable:member","d":"/**\n * Whether the channel is manageable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly manageable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":432,"ro":true,"op":false,"r":"Public","n":"manageable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#members:member","d":"/**\n * The members in this voice-based channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly members :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":99,"ro":true,"op":false,"r":"Public","n":"members","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#messages:member","d":"/**\n * A manager of the messages sent to this channel\n */\n","ex":[{"k":"Content","t":"undefined messages :"},{"k":"Reference","t":"GuildMessageManager","c":"discord.js!GuildMessageManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":21,"ro":false,"op":false,"r":"Public","n":"messages","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#name:member","d":"/**\n * The name of the guild channel\n */\n","ex":[{"k":"Content","t":"undefined name :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#nsfw:member","d":"/**\n * If the guild considers this channel NSFW\n */\n","ex":[{"k":"Content","t":"undefined nsfw :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":27,"ro":false,"op":false,"r":"Public","n":"nsfw","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#parent:member","d":"/**\n * The category parent of this channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly parent :"},{"k":"Reference","t":"CategoryChannel","c":"discord.js!CategoryChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":100,"ro":true,"op":true,"r":"Public","n":"parent","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#parentId:member","d":"/**\n * The id of the category parent of this channel\n */\n","ex":[{"k":"Content","t":"undefined parentId :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":76,"ro":false,"op":true,"r":"Public","n":"parentId","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#partial:member","d":"/**\n * Whether this Channel is a partial <info>This is always false outside of DM channels.</info>\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly partial :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":80,"ro":true,"op":false,"r":"Public","n":"partial","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#permissionOverwrites:member","d":"/**\n * A manager of permission overwrites that belong to this channel\n */\n","ex":[{"k":"Content","t":"undefined permissionOverwrites :"},{"k":"Reference","t":"PermissionOverwriteManager","c":"discord.js!PermissionOverwriteManager:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":43,"ro":false,"op":false,"r":"Public","n":"permissionOverwrites","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#permissionsLocked:member","d":"/**\n * If the permissionOverwrites match the parent channel, null if no parent\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly permissionsLocked :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":109,"ro":true,"op":true,"r":"Public","n":"permissionsLocked","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#position:member","d":"/**\n * The position of the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly position :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":150,"ro":true,"op":false,"r":"Public","n":"position","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#rateLimitPerUser:member","d":"/**\n * The rate limit per user (slowmode) for this channel in seconds\n */\n","ex":[{"k":"Content","t":"undefined rateLimitPerUser :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":86,"ro":false,"op":false,"r":"Public","n":"rateLimitPerUser","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#rawPosition:member","d":"/**\n * The raw position of the channel from Discord\n */\n","ex":[{"k":"Content","t":"undefined rawPosition :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":64,"ro":false,"op":false,"r":"Public","n":"rawPosition","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#rtcRegion:member","d":"/**\n * The RTC region for this voice-based channel. This region is automatically selected if `null`.\n */\n","ex":[{"k":"Content","t":"undefined rtcRegion :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":40,"ro":false,"op":true,"r":"Public","n":"rtcRegion","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!VoiceChannel#setBitrate:member(1)","d":"/**\n * Sets the bitrate of the channel.\n *\n * @param bitrate - The new bitrate\n *\n * @param reason - Reason for changing the channel's bitrate\n *\n * @example\n * ```js\n * // Set the bitrate of a voice channel\n * voiceChannel.setBitrate(48_000)\n *   .then(channel => console.log(`Set bitrate to ${channel.bitrate}bps for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setBitrate(bitrate"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":40,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bitrate","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setBitrate"},{"k":"Method","c":"discord.js!VoiceChannel#setRTCRegion:member(1)","d":"/**\n * Sets the RTC region of the channel.\n *\n * @param rtcRegion - The new region of the channel. Set to `null` to remove a specific region for the channel\n *\n * @param reason - The reason for modifying this region.\n *\n * @example\n * ```js\n * // Set the RTC region to sydney\n * voiceChannel.setRTCRegion('sydney');\n * ```\n *\n * @example\n * ```js\n * // Remove a fixed region for this channel - let Discord decide automatically\n * voiceChannel.setRTCRegion(null, 'We want to let Discord decide.');\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setRTCRegion(rtcRegion?"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":55,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rtcRegion","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRTCRegion"},{"k":"Method","c":"discord.js!VoiceChannel#setUserLimit:member(1)","d":"/**\n * Sets the user limit of the channel.\n *\n * @param userLimit - The new user limit\n *\n * @param reason - Reason for changing the user limit\n *\n * @example\n * ```js\n * // Set the user limit of a voice channel\n * voiceChannel.setUserLimit(42)\n *   .then(channel => console.log(`Set user limit to ${channel.userLimit} for ${channel.name}`))\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"setUserLimit(userLimit"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":71,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"userLimit","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setUserLimit"},{"k":"Method","c":"discord.js!VoiceChannel#setVideoQualityMode:member(1)","d":"/**\n * Sets the camera video quality mode of the channel.\n *\n * @param videoQualityMode - The new camera video quality mode.\n *\n * @param reason - Reason for changing the camera video quality mode.\n */\n","ex":[{"k":"Content","t":"setVideoQualityMode(videoQualityMode"},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:class"},{"k":"Content","t":", reason?: "},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":86,"sta":false,"rtr":{"st":5,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"videoQualityMode","ptr":{"st":1,"en":2},"op":false,"rs":false},{"pn":"reason","ptr":{"st":3,"en":4},"op":true,"rs":false}],"op":false,"ab":false,"n":"setVideoQualityMode"},{"k":"Property","c":"discord.js!VoiceChannel#speakable:member","d":"/**\n * Checks if the client has permission to send audio to the voice channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"speakable","c":"discord.js!VoiceChannel#speakable"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":27,"co":3,"ro":true,"op":false,"r":"Public","n":"speakable","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#type:member","d":"/**\n * The type of the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!VoiceChannel#type"},{"k":"Content","t":": "},{"k":"Reference","t":"ChannelType.GuildVoice","c":"discord-api-types!ChannelType.GuildVoice:member"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#url:member","d":"/**\n * The URL to the channel\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseChannel.js","l":70,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#userLimit:member","d":"/**\n * The maximum amount of users allowed in this channel.\n */\n","ex":[{"k":"Content","t":"undefined userLimit :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":56,"ro":false,"op":false,"r":"Public","n":"userLimit","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#videoQualityMode:member","d":"/**\n * The camera video quality mode of the channel.\n */\n","ex":[{"k":"Content","t":"undefined videoQualityMode :"},{"k":"Reference","t":"VideoQualityMode","c":"discord-api-types!VideoQualityMode:class"},{"k":"Content","t":";"}],"pat":"src/structures/BaseGuildVoiceChannel.js","l":64,"ro":false,"op":true,"r":"Public","n":"videoQualityMode","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceChannel#viewable:member","d":"/**\n * Whether the channel is viewable by the client user\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly viewable :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"pat":"src/structures/GuildChannel.js","l":452,"ro":true,"op":false,"r":"Public","n":"viewable","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!VoiceChannelResolvable:type","d":"/**\n * Data that can be resolved to a Voice Channel object. This can be:\n *\n * * A VoiceChannel\n *\n * * A Snowflake\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"VoiceChannelResolvable","c":"discord.js!VoiceChannelResolvable:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":";"}],"pat":"src/structures/Guild.js","l":818,"co":1,"r":"Public","n":"VoiceChannelResolvable","ttr":{"st":3,"en":6}},{"k":"Class","c":"discord.js!VoiceRegion:class","d":"/**\n * Represents a Discord voice region for guilds.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"VoiceRegion","c":"discord.js!VoiceRegion:class"},{"k":"Content","t":" "}],"pat":"src/structures/VoiceRegion.js","l":8,"co":1,"r":"Public","ab":false,"n":"VoiceRegion","pmo":false,"ms":[{"k":"Property","c":"discord.js!VoiceRegion#custom:member","d":"/**\n * Whether the region is custom\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"custom","c":"discord.js!VoiceRegion#custom"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"custom","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceRegion#deprecated:member","d":"/**\n * Whether the region is deprecated\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deprecated","c":"discord.js!VoiceRegion#deprecated"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"deprecated","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceRegion#id:member","d":"/**\n * The region's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!VoiceRegion#id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":14,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceRegion#name:member","d":"/**\n * Name of the region\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!VoiceRegion#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceRegion#optimal:member","d":"/**\n * Whether the region is optimal\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"optimal","c":"discord.js!VoiceRegion#optimal"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"optimal","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!VoiceRegion#toJSON:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"toJSON","c":"discord.js!VoiceRegion#toJSON"},{"k":"Content","t":"(): "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3463,"co":3,"sta":false,"rtr":{"st":3,"en":4},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"}],"itrs":[]},{"k":"Class","c":"discord.js!VoiceState:class","d":"/**\n * Represents the voice state for a Guild Member.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/VoiceState.js","l":11,"co":1,"r":"Public","ab":false,"n":"VoiceState","pmo":false,"ms":[{"k":"Property","c":"discord.js!VoiceState#channel:member","d":"/**\n * The channel that the member is connected to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!VoiceState#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"VoiceBasedChannel","c":"discord.js!VoiceBasedChannel:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":147,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#channelId:member","d":"/**\n * The {@link VoiceChannel} or {@link StageChannel} id the member is in\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!VoiceState#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":105,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#deaf:member","d":"/**\n * Whether this member is either self-deafened or server-deafened\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"deaf","c":"discord.js!VoiceState#deaf"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":156,"co":3,"ro":true,"op":false,"r":"Public","n":"deaf","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!VoiceState#disconnect:member(1)","d":"/**\n * Disconnects the member from the channel.\n *\n * @param reason - Reason for disconnecting the member from the channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"disconnect","c":"discord.js!VoiceState#disconnect"},{"k":"Content","t":"("},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":194,"co":3,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"disconnect"},{"k":"Method","c":"discord.js!VoiceState#edit:member(1)","d":"/**\n * Edits this voice state. Currently only available when in a stage channel\n *\n * @param options - The options to provide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"edit","c":"discord.js!VoiceState#edit"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"VoiceStateEditOptions","c":"discord.js!VoiceStateEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":222,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Property","c":"discord.js!VoiceState#guild:member","d":"/**\n * The guild of this voice state\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!VoiceState#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#id:member","d":"/**\n * The id of the member of this voice state\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!VoiceState#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#member:member","d":"/**\n * The member that this voice state belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"member","c":"discord.js!VoiceState#member"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":138,"co":3,"ro":true,"op":false,"r":"Public","n":"member","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#mute:member","d":"/**\n * Whether this member is either self-muted or server-muted\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"mute","c":"discord.js!VoiceState#mute"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":165,"co":3,"ro":true,"op":false,"r":"Public","n":"mute","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#requestToSpeakTimestamp:member","d":"/**\n * The time at which the member requested to speak. This property is specific to stage channels only.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"requestToSpeakTimestamp","c":"discord.js!VoiceState#requestToSpeakTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":125,"co":3,"ro":false,"op":false,"r":"Public","n":"requestToSpeakTimestamp","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#selfDeaf:member","d":"/**\n * Whether this member is self-deafened\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"selfDeaf","c":"discord.js!VoiceState#selfDeaf"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"selfDeaf","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#selfMute:member","d":"/**\n * Whether this member is self-muted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"selfMute","c":"discord.js!VoiceState#selfMute"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":63,"co":3,"ro":false,"op":false,"r":"Public","n":"selfMute","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#selfVideo:member","d":"/**\n * Whether this member's camera is enabled\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"selfVideo","c":"discord.js!VoiceState#selfVideo"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":false,"op":false,"r":"Public","n":"selfVideo","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#serverDeaf:member","d":"/**\n * Whether this member is deafened server-wide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"serverDeaf","c":"discord.js!VoiceState#serverDeaf"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":33,"co":3,"ro":false,"op":false,"r":"Public","n":"serverDeaf","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#serverMute:member","d":"/**\n * Whether this member is muted server-wide\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"serverMute","c":"discord.js!VoiceState#serverMute"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":43,"co":3,"ro":false,"op":false,"r":"Public","n":"serverMute","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#sessionId:member","d":"/**\n * The session id for this member's connection\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sessionId","c":"discord.js!VoiceState#sessionId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"sessionId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!VoiceState#setChannel:member(1)","d":"/**\n * Moves the member to a different channel, or disconnects them from the one they're in.\n *\n * @param channel - Channel to move the member to, or `null` if you want to disconnect them from voice.\n *\n * @param reason - Reason for moving member to another channel or disconnecting\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setChannel","c":"discord.js!VoiceState#setChannel"},{"k":"Content","t":"("},{"k":"Reference","t":"channel","c":"discord.js!~channel"},{"k":"Content","t":": "},{"k":"Reference","t":"GuildVoiceChannelResolvable","c":"discord.js!GuildVoiceChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":205,"co":3,"sta":false,"rtr":{"st":13,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channel","ptr":{"st":5,"en":8},"op":false,"rs":false},{"pn":"reason","ptr":{"st":11,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"setChannel"},{"k":"Method","c":"discord.js!VoiceState#setDeaf:member(1)","d":"/**\n * Deafens/undeafens the member of this voice state.\n *\n * @param deaf - Whether or not the member should be deafened\n *\n * @param reason - Reason for deafening or undeafening\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setDeaf","c":"discord.js!VoiceState#setDeaf"},{"k":"Content","t":"("},{"k":"Reference","t":"deaf","c":"discord.js!~deaf"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":185,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"deaf","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setDeaf"},{"k":"Method","c":"discord.js!VoiceState#setMute:member(1)","d":"/**\n * Mutes/unmutes the member of this voice state.\n *\n * @param mute - Whether or not the member should be muted\n *\n * @param reason - Reason for muting or unmuting\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setMute","c":"discord.js!VoiceState#setMute"},{"k":"Content","t":"("},{"k":"Reference","t":"mute","c":"discord.js!~mute"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":", "},{"k":"Reference","t":"reason","c":"discord.js!~reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"GuildMember","c":"discord.js!GuildMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":175,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"mute","ptr":{"st":5,"en":6},"op":true,"rs":false},{"pn":"reason","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"setMute"},{"k":"Method","c":"discord.js!VoiceState#setRequestToSpeak:member(1)","d":"/**\n * Toggles the request to speak in the channel. Only applicable for stage channels and for the client's own voice state.\n *\n * @param requestToSpeak - Whether or not the client is requesting to become a speaker.\n *\n * @example\n * ```js\n * // Making the client request to speak in a stage channel (raise its hand)\n * guild.members.me.voice.setRequestToSpeak(true);\n * ```\n *\n * @example\n * ```js\n * // Making the client cancel a request to speak\n * guild.members.me.voice.setRequestToSpeak(false);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setRequestToSpeak","c":"discord.js!VoiceState#setRequestToSpeak"},{"k":"Content","t":"("},{"k":"Reference","t":"request","c":"discord.js!~request"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":265,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"request","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"setRequestToSpeak"},{"k":"Method","c":"discord.js!VoiceState#setSuppressed:member(1)","d":"/**\n * Suppress/unsuppress the user. Only applicable for stage channels.\n *\n * @param suppressed - Whether or not the user should be suppressed.\n *\n * @example\n * ```js\n * // Making the client a speaker\n * guild.members.me.voice.setSuppressed(false);\n * ```\n *\n * @example\n * ```js\n * // Making the client an audience member\n * guild.members.me.voice.setSuppressed(true);\n * ```\n *\n * @example\n * ```js\n * // Inviting another user to speak\n * voiceState.setSuppressed(false);\n * ```\n *\n * @example\n * ```js\n * // Moving another user to the audience, or cancelling their invite to speak\n * voiceState.setSuppressed(true);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"setSuppressed","c":"discord.js!VoiceState#setSuppressed"},{"k":"Content","t":"("},{"k":"Reference","t":"suppressed","c":"discord.js!~suppressed"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<this>"},{"k":"Content","t":";"}],"l":286,"co":3,"sta":false,"rtr":{"st":7,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"suppressed","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"setSuppressed"},{"k":"Property","c":"discord.js!VoiceState#streaming:member","d":"/**\n * Whether this member is streaming using \"Screen Share\"\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"streaming","c":"discord.js!VoiceState#streaming"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":95,"co":3,"ro":false,"op":false,"r":"Public","n":"streaming","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceState#suppress:member","d":"/**\n * Whether this member is suppressed from speaking. This property is specific to stage channels only.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"suppress","c":"discord.js!VoiceState#suppress"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":115,"co":3,"ro":false,"op":false,"r":"Public","n":"suppress","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!VoiceStateEditOptions:interface","d":"/**\n * Data to edit the logged in user's own voice state with, when in a stage channel\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"VoiceStateEditOptions","c":"discord.js!VoiceStateEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/VoiceState.js","l":209,"co":1,"r":"Public","n":"VoiceStateEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!VoiceStateEditOptions#requestToSpeak:member","d":"/**\n * Whether or not the client is requesting to become a speaker. <info>Only available to the logged in user's own voice state.</info>\n */\n","ex":[{"k":"Reference","t":"requestToSpeak","c":"discord.js!VoiceStateEditOptions#requestToSpeak"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6696,"co":3,"ro":false,"op":true,"r":"Public","n":"requestToSpeak","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!VoiceStateEditOptions#suppressed:member","d":"/**\n * Whether or not the user should be suppressed.\n */\n","ex":[{"k":"Reference","t":"suppressed","c":"discord.js!VoiceStateEditOptions#suppressed"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6697,"co":3,"ro":false,"op":true,"r":"Public","n":"suppressed","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!VoiceStateManager:class","d":"/**\n * Manages API methods for VoiceStates and stores their cache.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"VoiceStateManager","c":"discord.js!VoiceStateManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"CachedManager","c":"discord.js!CachedManager:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":", "},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/managers/VoiceStateManager.js","l":10,"co":1,"r":"Public","ab":false,"n":"VoiceStateManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!VoiceStateManager#cache:member","d":"/**\n * The cache of this manager\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"VoiceState","c":"discord.js!VoiceState:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":21,"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceStateManager#client:member","d":"/**\n * The client that instantiated this Manager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/managers/BaseManager.js","l":9,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!VoiceStateManager#guild:member","d":"/**\n * The guild this manager belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!VoiceStateManager#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":13,"tps":[{"st":5,"en":6},{"st":7,"en":8},{"st":9,"en":12}]},"itrs":[]},{"k":"Class","c":"discord.js!Webhook:class","d":"/**\n * Represents a webhook.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"WebhookMixin","c":"discord.js!WebhookMixin"},{"k":"Content","t":"()"},{"k":"Content","t":" "}],"pat":"src/structures/Webhook.js","l":16,"co":1,"r":"Public","ab":false,"n":"Webhook","pmo":false,"ms":[{"k":"Property","c":"discord.js!Webhook#applicationId:member","d":"/**\n * The application that created this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"applicationId","c":"discord.js!Webhook#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":101,"co":3,"ro":false,"op":false,"r":"Public","n":"applicationId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#avatar:member","d":"/**\n * The avatar for the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatar","c":"discord.js!Webhook#avatar"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"avatar","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Webhook#avatarURL:member(1)","d":"/**\n * A link to the webhook's avatar.\n *\n * @param options - Options for the image URL\n *\n * @returns \n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarURL","c":"discord.js!Webhook#avatarURL"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":426,"co":3,"sta":false,"rtr":{"st":7,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatarURL"},{"k":"Property","c":"discord.js!Webhook#channel:member","d":"/**\n * The channel the webhook belongs to\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!Webhook#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":155,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":16},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#channelId:member","d":"/**\n * The id of the channel the webhook belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!Webhook#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#client:member","d":"/**\n * The client that instantiated the webhook\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!Webhook#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#createdAt:member","d":"/**\n * The time the webhook was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"l":408,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#createdTimestamp:member","d":"/**\n * The timestamp the webhook was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"l":399,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Webhook#delete:member(1)","d":"/**\n * Deletes the webhook.\n *\n * @param reason - Reason for deleting this webhook\n */\n","ex":[{"k":"Content","t":"delete(reason?"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":372,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!Webhook#deleteMessage:member(1)","d":"/**\n * Delete a message that was sent by this webhook.\n *\n * @param message - The message to delete\n *\n * @param threadId - The id of the thread this message belongs to\n */\n","ex":[{"k":"Content","t":"deleteMessage(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | "},{"k":"Content","t":"'@original'"},{"k":"Content","t":", threadId?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":382,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":4},"op":false,"rs":false},{"pn":"threadId","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteMessage"},{"k":"Method","c":"discord.js!Webhook#edit:member(1)","d":"/**\n * Edits this webhook.\n *\n * @param options - Options for editing the webhook\n */\n","ex":[{"k":"Content","t":"edit(options"},{"k":"Reference","t":"WebhookEditOptions","c":"discord.js!WebhookEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":279,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!Webhook#editMessage:member(1)","d":"/**\n * Edits a message that was sent by this webhook.\n *\n * @param message - The message to edit\n *\n * @param options - The options to provide\n *\n * @returns Returns the message edited by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editMessage","c":"discord.js!Webhook#editMessage"},{"k":"Content","t":"(  "},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":331,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"editMessage"},{"k":"Method","c":"discord.js!Webhook#fetchMessage:member(1)","d":"/**\n * Gets a message that was sent by this webhook.\n *\n * @param message - The id of the message to fetch\n *\n * @param options - The options to provide to fetch the message.\n *\n * @returns Returns the message sent by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchMessage","c":"discord.js!Webhook#fetchMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WebhookFetchMessageOptions","c":"discord.js!WebhookFetchMessageOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":310,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchMessage"},{"k":"Property","c":"discord.js!Webhook#guildId:member","d":"/**\n * The guild the webhook belongs to\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guildId","c":"discord.js!Webhook#guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":75,"co":3,"ro":false,"op":false,"r":"Public","n":"guildId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#id:member","d":"/**\n * The webhook's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":60,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Webhook#isApplicationCreated:member(1)","d":"/**\n * Whether this webhook is created by an application.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isApplicationCreated","c":"discord.js!Webhook#isApplicationCreated"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookType.Application","c":"discord-api-types!WebhookType.Application:member"},{"k":"Content","t":";  "},{"k":"Reference","t":"applicationId","c":"discord.js!~__type#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";  "},{"k":"Reference","t":"owner","c":"discord.js!~__type#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUser","c":"discord-api-types!APIUser:interface"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":442,"co":3,"sta":false,"rtr":{"st":3,"en":18},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isApplicationCreated"},{"k":"Method","c":"discord.js!Webhook#isChannelFollower:member(1)","d":"/**\n * Whether or not this webhook is a channel follower webhook.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isChannelFollower","c":"discord.js!Webhook#isChannelFollower"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookType.ChannelFollower","c":"discord-api-types!WebhookType.ChannelFollower:member"},{"k":"Content","t":";  "},{"k":"Reference","t":"sourceGuild","c":"discord.js!~__type#sourceGuild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIPartialGuild","c":"discord-api-types!APIPartialGuild:interface"},{"k":"Content","t":";  "},{"k":"Reference","t":"sourceChannel","c":"discord.js!~__type#sourceChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIPartialChannel","c":"discord-api-types!APIPartialChannel:interface"},{"k":"Content","t":";  "},{"k":"Reference","t":"token","c":"discord.js!~__type#token"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"applicationId","c":"discord.js!~__type#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"owner","c":"discord.js!~__type#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUser","c":"discord-api-types!APIUser:interface"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":450,"co":3,"sta":false,"rtr":{"st":3,"en":34},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isChannelFollower"},{"k":"Method","c":"discord.js!Webhook#isIncoming:member(1)","d":"/**\n * Whether or not this webhook is an incoming webhook.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isIncoming","c":"discord.js!Webhook#isIncoming"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookType.Incoming","c":"discord-api-types!WebhookType.Incoming:member"},{"k":"Content","t":";  "},{"k":"Reference","t":"token","c":"discord.js!~__type#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":458,"co":3,"sta":false,"rtr":{"st":3,"en":12},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isIncoming"},{"k":"Method","c":"discord.js!Webhook#isUserCreated:member(1)","d":"/**\n * Whether this webhook is created by a user.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"isUserCreated","c":"discord.js!Webhook#isUserCreated"},{"k":"Content","t":"(): "},{"k":"Content","t":"this is this & {  "},{"k":"Reference","t":"type","c":"discord.js!~__type#type"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookType.Incoming","c":"discord-api-types!WebhookType.Incoming:member"},{"k":"Content","t":";  "},{"k":"Reference","t":"applicationId","c":"discord.js!~__type#applicationId"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  "},{"k":"Reference","t":"owner","c":"discord.js!~__type#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUser","c":"discord-api-types!APIUser:interface"},{"k":"Content","t":"; }"},{"k":"Content","t":";"}],"l":434,"co":3,"sta":false,"rtr":{"st":3,"en":18},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"isUserCreated"},{"k":"Property","c":"discord.js!Webhook#name:member","d":"/**\n * The name of the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Webhook#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":34,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#owner:member","d":"/**\n * The owner of the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"owner","c":"discord.js!Webhook#owner"},{"k":"Content","t":": "},{"k":"Reference","t":"User","c":"discord.js!User:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIUser","c":"discord-api-types!APIUser:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":91,"co":3,"ro":false,"op":false,"r":"Public","n":"owner","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Webhook#send:member(1)","d":"/**\n * Sends a message with this webhook.\n *\n * @param options - The options to provide\n *\n * @example\n * ```js\n * // Send a basic message\n * webhook.send('hello!')\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a basic message in a thread\n * webhook.send({ content: 'hello!', threadId: '836856309672348295' })\n *   .then(message => console.log(`Sent message: ${message.content}`))\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a remote file\n * webhook.send({\n *   files: ['https://cdn.discordapp.com/icons/222078108977594368/6e1019b3179d71046e463a75915e7244.png?size=2048']\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send a local file\n * webhook.send({\n *   files: [{\n *     attachment: 'entire/path/to/file.jpg',\n *     name: 'file.jpg'\n *   }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n * @example\n * ```js\n * // Send an embed with a local image inside\n * webhook.send({\n *   content: 'This is an embed',\n *   embeds: [{\n *     thumbnail: {\n *          url: 'attachment://file.jpg'\n *       }\n *    }],\n *    files: [{\n *       attachment: 'entire/path/to/file.jpg',\n *       name: 'file.jpg'\n *    }]\n * })\n *   .then(console.log)\n *   .catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!Webhook#send"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageCreateOptions","c":"discord.js!WebhookMessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Message","c":"discord.js!Message:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":207,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!Webhook#sendSlackMessage:member(1)","d":"/**\n * Sends a raw slack message with this webhook.\n *\n * @param body - The raw body to send\n *\n * @example\n * ```js\n * // Send a slack message\n * webhook.sendSlackMessage({\n *   'username': 'Wumpus',\n *   'attachments': [{\n *     'pretext': 'this looks pretty cool',\n *     'color': '#F0F',\n *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',\n *     'footer': 'Powered by sneks',\n *     'ts': Date.now() / 1_000\n *   }]\n * }).catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendSlackMessage(body"},{"k":"Reference","t":"object","c":"discord.js!Object:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":253,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"body","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"sendSlackMessage"},{"k":"Property","c":"discord.js!Webhook#sourceChannel:member","d":"/**\n * The source channel of the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sourceChannel","c":"discord.js!Webhook#sourceChannel"},{"k":"Content","t":": "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIPartialChannel","c":"discord-api-types!APIPartialChannel:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":121,"co":3,"ro":false,"op":false,"r":"Public","n":"sourceChannel","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#sourceGuild:member","d":"/**\n * The source guild of the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"sourceGuild","c":"discord.js!Webhook#sourceGuild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"APIPartialGuild","c":"discord-api-types!APIPartialGuild:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":111,"co":3,"ro":false,"op":false,"r":"Public","n":"sourceGuild","prtr":{"st":3,"en":8},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#token:member","d":"/**\n * The token for the webhook, unavailable for follower webhooks and webhooks owned by another application.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"token","c":"discord.js!Webhook#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":37,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#type:member","d":"/**\n * The type of the webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"type","c":"discord.js!Webhook#type"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookType","c":"discord-api-types!WebhookType:enum"},{"k":"Content","t":";"}],"l":67,"co":3,"ro":false,"op":false,"r":"Public","n":"type","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Webhook#url:member","d":"/**\n * The URL of this webhook\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"l":417,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":5,"tps":[]},"itrs":[]},{"k":"Class","c":"discord.js!WebhookClient:class","d":"/**\n * The webhook client.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WebhookClient","c":"discord.js!WebhookClient:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"WebhookMixin","c":"discord.js!WebhookMixin"},{"k":"Content","t":"("},{"k":"Reference","t":"BaseClient","c":"discord.js!BaseClient:class"},{"k":"Content","t":")"},{"k":"Content","t":" "}],"pat":"src/client/WebhookClient.js","l":13,"co":1,"r":"Public","ab":false,"n":"WebhookClient","pmo":false,"ms":[{"k":"Constructor","c":"discord.js!WebhookClient:constructor(1)","d":"","ex":[{"k":"Content","t":"public constructor("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookClientData","c":"discord.js!WebhookClientData:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WebhookClientOptions","c":"discord.js!WebhookClientOptions:interface"},{"k":"Content","t":");"}],"l":13,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"options","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Property","c":"discord.js!WebhookClient#client:member","d":"","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!WebhookClient#client"},{"k":"Content","t":": "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3542,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebhookClient#createdAt:member","d":"/**\n * The time the webhook was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdAt :"},{"k":"Reference","t":"Date","c":"discord.js!Date:class"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":408,"ro":true,"op":false,"r":"Public","n":"createdAt","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebhookClient#createdTimestamp:member","d":"/**\n * The timestamp the webhook was created at\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly createdTimestamp :"},{"k":"Reference","t":"number","c":"discord.js!number:class"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":399,"ro":true,"op":false,"r":"Public","n":"createdTimestamp","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!WebhookClient#delete:member(1)","d":"/**\n * Deletes the webhook.\n *\n * @param reason - Reason for deleting this webhook\n */\n","ex":[{"k":"Content","t":"delete(reason?"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":372,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"reason","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"discord.js!WebhookClient#deleteMessage:member(1)","d":"/**\n * Delete a message that was sent by this webhook.\n *\n * @param message - The message to delete\n *\n * @param threadId - The id of the thread this message belongs to\n */\n","ex":[{"k":"Content","t":"deleteMessage(message"},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":" | "},{"k":"Content","t":"'@original'"},{"k":"Content","t":", threadId?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"void","c":"discord.js!void:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":382,"sta":false,"rtr":{"st":7,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":1,"en":4},"op":false,"rs":false},{"pn":"threadId","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"deleteMessage"},{"k":"Method","c":"discord.js!WebhookClient#edit:member(1)","d":"/**\n * Edits this webhook.\n *\n * @param options - Options for editing the webhook\n */\n","ex":[{"k":"Content","t":"edit(options"},{"k":"Reference","t":"WebhookEditOptions","c":"discord.js!WebhookEditOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Webhook","c":"discord.js!Webhook:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":279,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"edit"},{"k":"Method","c":"discord.js!WebhookClient#editMessage:member(1)","d":"/**\n * Edits a message that was sent by this webhook.\n *\n * @param message - The message to edit\n *\n * @param options - The options to provide\n *\n * @returns Returns the message edited by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"editMessage","c":"discord.js!WebhookClient#editMessage"},{"k":"Content","t":"(  "},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"MessageResolvable","c":"discord.js!MessageResolvable:type"},{"k":"Content","t":",  "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":", ): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":90,"co":3,"sta":false,"rtr":{"st":15,"en":19},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":14},"op":false,"rs":false}],"op":false,"ab":false,"n":"editMessage"},{"k":"Method","c":"discord.js!WebhookClient#fetchMessage:member(1)","d":"/**\n * Gets a message that was sent by this webhook.\n *\n * @param message - The id of the message to fetch\n *\n * @param options - The options to provide to fetch the message.\n *\n * @returns Returns the message sent by this webhook\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetchMessage","c":"discord.js!WebhookClient#fetchMessage"},{"k":"Content","t":"("},{"k":"Reference","t":"message","c":"discord.js!~message"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WebhookFetchMessageOptions","c":"discord.js!WebhookFetchMessageOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":82,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"message","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"options","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"fetchMessage"},{"k":"Property","c":"discord.js!WebhookClient#id:member","d":"/**\n * The webhook's id\n */\n","ex":[{"k":"Content","t":"undefined id :"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":60,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebhookClient#options:member","d":"/**\n * The options the webhook client was instantiated with.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"options","c":"discord.js!WebhookClient#options"},{"k":"Content","t":": "},{"k":"Reference","t":"WebhookClientOptions","c":"discord.js!WebhookClientOptions:interface"},{"k":"Content","t":";"}],"l":61,"co":3,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebhookClient#rest:member","d":"/**\n * The REST manager of the client\n */\n","ex":[{"k":"Content","t":"undefined rest :"},{"k":"Reference","t":"REST","c":"@discordjs/rest!REST:class"},{"k":"Content","t":";"}],"pat":"src/client/BaseClient.js","l":55,"ro":false,"op":false,"r":"Public","n":"rest","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!WebhookClient#send:member(1)","d":"/**\n * Sends a message with this webhook.\n *\n * @param options - The content for the reply\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!WebhookClient#send"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"discord.js!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"MessagePayload","c":"discord.js!MessagePayload:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookMessageCreateOptions","c":"discord.js!WebhookMessageCreateOptions:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"APIMessage","c":"discord-api-types!APIMessage:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":74,"co":3,"sta":false,"rtr":{"st":11,"en":15},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":5,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Method","c":"discord.js!WebhookClient#sendSlackMessage:member(1)","d":"/**\n * Sends a raw slack message with this webhook.\n *\n * @param body - The raw body to send\n *\n * @example\n * ```js\n * // Send a slack message\n * webhook.sendSlackMessage({\n *   'username': 'Wumpus',\n *   'attachments': [{\n *     'pretext': 'this looks pretty cool',\n *     'color': '#F0F',\n *     'footer_icon': 'http://snek.s3.amazonaws.com/topSnek.png',\n *     'footer': 'Powered by sneks',\n *     'ts': Date.now() / 1_000\n *   }]\n * }).catch(console.error);\n * ```\n *\n */\n","ex":[{"k":"Content","t":"sendSlackMessage(body"},{"k":"Reference","t":"object","c":"discord.js!Object:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"discord.js!Promise:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":253,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"body","ptr":{"st":1,"en":2},"op":false,"rs":false}],"op":false,"ab":false,"n":"sendSlackMessage"},{"k":"Property","c":"discord.js!WebhookClient#token:member","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"token","c":"discord.js!WebhookClient#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3544,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebhookClient#url:member","d":"/**\n * The URL of this webhook\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly url :"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":";"}],"pat":"src/structures/Webhook.js","l":417,"ro":true,"op":false,"r":"Public","n":"url","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":7,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!WebhookClientData:type","d":"/**\n * Represents the credentials used for a webhook.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"WebhookClientData","c":"discord.js!WebhookClientData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"WebhookClientDataIdWithToken","c":"discord.js!WebhookClientDataIdWithToken:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"WebhookClientDataURL","c":"discord.js!WebhookClientDataURL:interface"},{"k":"Content","t":";"}],"pat":"src/client/WebhookClient.js","l":27,"co":1,"r":"Public","n":"WebhookClientData","ttr":{"st":3,"en":6}},{"k":"Interface","c":"discord.js!WebhookClientDataIdWithToken:interface","d":"/**\n * Represents the credentials used for a webhook in the form of its id and token.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookClientDataIdWithToken","c":"discord.js!WebhookClientDataIdWithToken:interface"},{"k":"Content","t":" "}],"pat":"src/client/WebhookClient.js","l":14,"co":1,"r":"Public","n":"WebhookClientDataIdWithToken","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookClientDataIdWithToken#id:member","d":"/**\n * The webhook's id\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!WebhookClientDataIdWithToken#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6703,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookClientDataIdWithToken#token:member","d":"/**\n * The webhook's token\n */\n","ex":[{"k":"Reference","t":"token","c":"discord.js!WebhookClientDataIdWithToken#token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6704,"co":3,"ro":false,"op":false,"r":"Public","n":"token","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WebhookClientDataURL:interface","d":"/**\n * Represents the credentials used for a webhook in the form of a URL.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookClientDataURL","c":"discord.js!WebhookClientDataURL:interface"},{"k":"Content","t":" "}],"pat":"src/client/WebhookClient.js","l":21,"co":1,"r":"Public","n":"WebhookClientDataURL","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookClientDataURL#url:member","d":"/**\n * The full URL for the webhook\n */\n","ex":[{"k":"Reference","t":"url","c":"discord.js!WebhookClientDataURL#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6708,"co":3,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WebhookClientOptions:interface","d":"/**\n * Options for a webhook client.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookClientOptions","c":"discord.js!WebhookClientOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ClientOptions","c":"discord.js!ClientOptions:interface"},{"k":"Content","t":", 'allowedMentions' | 'rest'>"},{"k":"Content","t":" "}],"pat":"src/client/WebhookClient.js","l":32,"co":1,"r":"Public","n":"WebhookClientOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookClientOptions#allowedMentions:member","d":"/**\n * Default value for {@link BaseMessageOptions.allowedMentions}\n */\n","ex":[{"k":"Content","t":"undefined allowedMentions :"},{"k":"Reference","t":"MessageMentionOptions","c":"discord.js!MessageMentionOptions:interface"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"allowedMentions","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!WebhookClientOptions#rest:member","d":"/**\n * Options for the REST manager\n */\n","ex":[{"k":"Content","t":"undefined rest :"},{"k":"Reference","t":"RESTOptions","c":"@discordjs/rest!RESTOptions:interface"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"rest","prtr":{"st":1,"en":2}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!WebhookCreateOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookCreateOptions","c":"discord.js!WebhookCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"ChannelWebhookCreateOptions","c":"discord.js!ChannelWebhookCreateOptions:interface"},{"k":"Content","t":" "}],"pat":"src/managers/GuildChannelManager.js","l":197,"co":1,"r":"Public","n":"WebhookCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookCreateOptions#channel:member","d":"/**\n * The channel to create the webhook for\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!WebhookCreateOptions#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":5066,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":2,"en":15}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"discord.js!WebhookDeleteOptions:interface","d":"/**\n * Options used for deleting a webhook.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookDeleteOptions","c":"discord.js!WebhookDeleteOptions:interface"},{"k":"Content","t":" "}],"pat":"src/client/BaseClient.js","l":67,"co":1,"r":"Public","n":"WebhookDeleteOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookDeleteOptions#reason:member","d":"/**\n * The reason for deleting the webhook\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!WebhookDeleteOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6715,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookDeleteOptions#token:member","d":"/**\n * Token of the webhook\n */\n","ex":[{"k":"Reference","t":"token","c":"discord.js!WebhookDeleteOptions#token"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6714,"co":3,"ro":false,"op":true,"r":"Public","n":"token","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WebhookEditOptions:interface","d":"/**\n * Options used to edit a {@link Webhook}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookEditOptions","c":"discord.js!WebhookEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Webhook.js","l":264,"co":1,"r":"Public","n":"WebhookEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookEditOptions#avatar:member","d":"/**\n * The new avatar for the webhook\n */\n","ex":[{"k":"Reference","t":"avatar","c":"discord.js!WebhookEditOptions#avatar"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BufferResolvable","c":"discord.js!BufferResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6720,"co":3,"ro":false,"op":true,"r":"Public","n":"avatar","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!WebhookEditOptions#channel:member","d":"/**\n * The new channel for the webhook\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!WebhookEditOptions#channel"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildTextChannelResolvable","c":"discord.js!GuildTextChannelResolvable:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"VoiceChannel","c":"discord.js!VoiceChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"StageChannel","c":"discord.js!StageChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6721,"co":3,"ro":false,"op":true,"r":"Public","n":"channel","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!WebhookEditOptions#name:member","d":"/**\n * The new name for the webhook\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!WebhookEditOptions#name"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6719,"co":3,"ro":false,"op":true,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookEditOptions#reason:member","d":"/**\n * Reason for editing the webhook\n */\n","ex":[{"k":"Reference","t":"reason","c":"discord.js!WebhookEditOptions#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6722,"co":3,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WebhookFetchMessageOptions:interface","d":"/**\n * Options that can be passed into fetchMessage.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookFetchMessageOptions","c":"discord.js!WebhookFetchMessageOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Webhook.js","l":296,"co":1,"r":"Public","n":"WebhookFetchMessageOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookFetchMessageOptions#cache:member","d":"/**\n * Whether to cache the message.\n */\n","ex":[{"k":"Content","t":"undefined cache :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"cache","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!WebhookFetchMessageOptions#threadId:member","d":"/**\n * The id of the thread this message belongs to. <info>For interaction webhooks, this property is ignored</info>\n */\n","ex":[{"k":"Reference","t":"threadId","c":"discord.js!WebhookFetchMessageOptions#threadId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6734,"co":3,"ro":false,"op":true,"r":"Public","n":"threadId","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WebhookMessageCreateOptions:interface","d":"/**\n * Options that can be passed into send.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookMessageCreateOptions","c":"discord.js!WebhookMessageCreateOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageCreateOptions","c":"discord.js!MessageCreateOptions:interface"},{"k":"Content","t":", 'nonce' | 'reply' | 'stickers'>"},{"k":"Content","t":" "}],"pat":"src/structures/Webhook.js","l":127,"co":1,"r":"Public","n":"WebhookMessageCreateOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#appliedTags:member","d":"/**\n * The tags to apply to the created thread (only available if the webhook is in a forum channel)\n */\n","ex":[{"k":"Reference","t":"appliedTags","c":"discord.js!WebhookMessageCreateOptions#appliedTags"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6742,"co":3,"ro":false,"op":true,"r":"Public","n":"appliedTags","prtr":{"st":2,"en":4}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#avatarURL:member","d":"/**\n * Avatar URL override for the message\n */\n","ex":[{"k":"Reference","t":"avatarURL","c":"discord.js!WebhookMessageCreateOptions#avatarURL"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6739,"co":3,"ro":false,"op":true,"r":"Public","n":"avatarURL","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#flags:member","d":"/**\n * Which flags to set for the message. <info>Only the {@link discord-api-types#(MessageFlags:enum).SuppressEmbeds} flag can be set.</info>\n */\n","ex":[{"k":"Content","t":"undefined flags :"},{"k":"Reference","t":"MessageFlags","c":"discord-api-types!MessageFlags:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"flags","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#threadId:member","d":"/**\n * The id of the thread in the channel to send to. <info>For interaction webhooks, this property is ignored</info>\n */\n","ex":[{"k":"Reference","t":"threadId","c":"discord.js!WebhookMessageCreateOptions#threadId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6740,"co":3,"ro":false,"op":true,"r":"Public","n":"threadId","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#threadName:member","d":"/**\n * Name of the thread to create (only available if the webhook is in a forum channel)\n */\n","ex":[{"k":"Reference","t":"threadName","c":"discord.js!WebhookMessageCreateOptions#threadName"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6741,"co":3,"ro":false,"op":true,"r":"Public","n":"threadName","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#tts:member","d":"/**\n * Whether the message should be spoken aloud\n */\n","ex":[{"k":"Content","t":"undefined tts :"},{"k":"Reference","t":"boolean","c":"discord.js!boolean:class"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"tts","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"discord.js!WebhookMessageCreateOptions#username:member","d":"/**\n * Username override for the message\n */\n","ex":[{"k":"Reference","t":"username","c":"discord.js!WebhookMessageCreateOptions#username"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6738,"co":3,"ro":false,"op":true,"r":"Public","n":"username","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Interface","c":"discord.js!WebhookMessageEditOptions:interface","d":"/**\n * Options that can be passed into editMessage.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebhookMessageEditOptions","c":"discord.js!WebhookMessageEditOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"MessageEditOptions","c":"discord.js!MessageEditOptions:interface"},{"k":"Content","t":", 'flags'>"},{"k":"Content","t":" "}],"pat":"src/structures/Webhook.js","l":142,"co":1,"r":"Public","n":"WebhookMessageEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebhookMessageEditOptions#attachments:member","d":"/**\n * Attachments to send with the message\n */\n","ex":[{"k":"Content","t":"undefined attachments :"},{"k":"Reference","t":"Array","c":"discord.js!Array:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Attachment","c":"discord.js!Attachment:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"ro":false,"op":false,"r":"Public","n":"attachments","prtr":{"st":1,"en":5}},{"k":"PropertySignature","c":"discord.js!WebhookMessageEditOptions#threadId:member","d":"/**\n * The id of the thread this message belongs to <info>For interaction webhooks, this property is ignored</info>\n */\n","ex":[{"k":"Reference","t":"threadId","c":"discord.js!WebhookMessageEditOptions#threadId"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6726,"co":3,"ro":false,"op":true,"r":"Public","n":"threadId","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Class","c":"discord.js!WebSocketManager:class","d":"/**\n * The WebSocket manager for this client. <info>This class forwards raw dispatch events, read more about it here {@link https://discord.com/developers/docs/topics/gateway}</info>\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WebSocketManager","c":"discord.js!WebSocketManager:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/client/websocket/WebSocketManager.js","l":55,"co":1,"r":"Public","ab":false,"n":"WebSocketManager","pmo":false,"ms":[{"k":"Property","c":"discord.js!WebSocketManager#client:member","d":"/**\n * The client that instantiated this WebSocketManager\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public readonly "},{"k":"Reference","t":"client","c":"discord.js!WebSocketManager#client"},{"k":"Content","t":": "},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebSocketManager#gateway:member","d":"/**\n * The gateway this manager uses\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"gateway","c":"discord.js!WebSocketManager#gateway"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":71,"co":3,"ro":false,"op":false,"r":"Public","n":"gateway","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!WebSocketManager#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!WebSocketManager#on"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"GatewayDispatchEvents","c":"discord-api-types!GatewayDispatchEvents:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":", "},{"k":"Reference","t":"shardId","c":"discord.js!~shardId"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3564,"co":3,"sta":false,"rtr":{"st":20,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":19},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!WebSocketManager#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!WebSocketManager#once"},{"k":"Content","t":"("},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"GatewayDispatchEvents","c":"discord-api-types!GatewayDispatchEvents:enum"},{"k":"Content","t":", "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"any"},{"k":"Content","t":", "},{"k":"Reference","t":"shardId","c":"discord.js!~shardId"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":") => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3565,"co":3,"sta":false,"rtr":{"st":20,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"listener","ptr":{"st":9,"en":19},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!WebSocketManager#ping:member","d":"/**\n * The average ping of all WebSocketShards\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"ping","c":"discord.js!WebSocketManager#ping"},{"k":"Content","t":"(): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":113,"co":3,"ro":true,"op":false,"r":"Public","n":"ping","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebSocketManager#shards:member","d":"/**\n * A collection of all shards this manager handles\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"shards","c":"discord.js!WebSocketManager#shards"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"WebSocketShard","c":"discord.js!WebSocketShard:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":false,"op":false,"r":"Public","n":"shards","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebSocketManager#status:member","d":"/**\n * The current status of this WebSocketManager\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"status","c":"discord.js!WebSocketManager#status"},{"k":"Content","t":": "},{"k":"Reference","t":"Status","c":"discord.js!Status:enum"},{"k":"Content","t":";"}],"l":91,"co":3,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!WebSocketOptions:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebSocketOptions","c":"discord.js!WebSocketOptions:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":6745,"co":1,"r":"Public","n":"WebSocketOptions","pmo":false,"ms":[{"k":"MethodSignature","c":"discord.js!WebSocketOptions#buildIdentifyThrottler:member(1)","d":"","ex":[{"k":"Reference","t":"buildIdentifyThrottler","c":"discord.js!WebSocketOptions#buildIdentifyThrottler"},{"k":"Content","t":"?("},{"k":"Reference","t":"manager","c":"discord.js!~manager"},{"k":"Content","t":": "},{"k":"Reference","t":"WSWebSocketManager","c":"@discordjs/ws!WebSocketManager:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"IIdentifyThrottler","c":"@discordjs/ws!IIdentifyThrottler:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":6749,"co":3,"op":true,"rtr":{"st":6,"en":10},"r":"Public","oi":1,"ps":[{"pn":"manager","ptr":{"st":4,"en":5},"op":false,"rs":false}],"n":"buildIdentifyThrottler"},{"k":"MethodSignature","c":"discord.js!WebSocketOptions#buildStrategy:member(1)","d":"","ex":[{"k":"Reference","t":"buildStrategy","c":"discord.js!WebSocketOptions#buildStrategy"},{"k":"Content","t":"?("},{"k":"Reference","t":"manager","c":"discord.js!~manager"},{"k":"Content","t":": "},{"k":"Reference","t":"WSWebSocketManager","c":"@discordjs/ws!WebSocketManager:class"},{"k":"Content","t":"): "},{"k":"Reference","t":"IShardingStrategy","c":"@discordjs/ws!IShardingStrategy:interface"},{"k":"Content","t":";"}],"l":6748,"co":3,"op":true,"rtr":{"st":6,"en":7},"r":"Public","oi":1,"ps":[{"pn":"manager","ptr":{"st":4,"en":5},"op":false,"rs":false}],"n":"buildStrategy"},{"k":"PropertySignature","c":"discord.js!WebSocketOptions#large_threshold:member","d":"","ex":[{"k":"Reference","t":"large_threshold","c":"discord.js!WebSocketOptions#large_threshold"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6746,"co":3,"ro":false,"op":true,"r":"Public","n":"large_threshold","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebSocketOptions#version:member","d":"","ex":[{"k":"Reference","t":"version","c":"discord.js!WebSocketOptions#version"},{"k":"Content","t":"?: "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6747,"co":3,"ro":false,"op":true,"r":"Public","n":"version","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!WebSocketShard:class","d":"/**\n * Represents a Shard's WebSocket connection\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WebSocketShard","c":"discord.js!WebSocketShard:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"EventEmitter","c":"discord.js!~EventEmitter"},{"k":"Content","t":" "}],"pat":"src/client/websocket/WebSocketShard.js","l":15,"co":1,"r":"Public","ab":false,"n":"WebSocketShard","pmo":false,"ms":[{"k":"Event","c":"discord.js!WebSocketShard#allReady:member(0)","d":"/**\n * Emitted when the shard is fully ready. This event is emitted if:\n *\n * * all guilds were received by this shard\n *\n * * the ready timeout expired, and some guilds are unavailable\n *\n * @param unavailableGuilds - Set of unavailable guilds, if any\n */\n","ex":[{"k":"Content","t":"on('allReady', (unavailableGuilds?: "},{"k":"Reference","t":"Set","c":"discord.js!Set:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string","c":"discord.js!string:class"},{"k":"Content","t":">"},{"k":"Content","t":") => {})"}],"l":173,"r":"Public","oi":0,"ps":[{"pn":"unavailableGuilds","ptr":{"st":1,"en":5},"op":false,"rs":false}],"n":"allReady"},{"k":"Event","c":"discord.js!WebSocketShard#close:member(0)","d":"/**\n * Emitted when a shard's WebSocket closes.\n *\n * @param event - The received event\n */\n","ex":[{"k":"Content","t":"on('close', (event: "},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":") => {})"}],"l":117,"r":"Public","oi":0,"ps":[{"pn":"event","ptr":{"st":1,"en":2},"op":false,"rs":false}],"n":"close"},{"k":"Method","c":"discord.js!WebSocketShard#emitClose:member(1)","d":"/**\n * This method is responsible to emit close event for this shard. This method helps the shard reconnect.\n *\n * @deprecated\n *\n * yes\n *\n * @param event - Close event that was received\n */\n","ex":[{"k":"Content","t":"emitClose(event?"},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":"): "},{"k":"Content","t":";"}],"l":106,"sta":false,"rtr":{"st":0,"en":0},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":1,"en":2},"op":true,"rs":false}],"op":false,"ab":false,"n":"emitClose"},{"k":"Property","c":"discord.js!WebSocketShard#id:member","d":"/**\n * The shard's id\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!WebSocketShard#id"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebSocketShard#lastPingTimestamp:member","d":"/**\n * The last time a ping was sent (a timestamp)\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"lastPingTimestamp","c":"discord.js!WebSocketShard#lastPingTimestamp"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":54,"co":3,"ro":false,"op":false,"r":"Public","n":"lastPingTimestamp","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WebSocketShard#manager:member","d":"/**\n * The WebSocketManager of the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"manager","c":"discord.js!WebSocketShard#manager"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocketManager","c":"discord.js!WebSocketManager:class"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"manager","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!WebSocketShard#on:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"on","c":"discord.js!WebSocketShard#on"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"WebSocketShardEventTypes","c":"discord.js!WebSocketShardEventTypes:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocketShardEventTypes","c":"discord.js!WebSocketShardEventTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3606,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"on"},{"k":"Method","c":"discord.js!WebSocketShard#once:member(1)","d":"","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"once","c":"discord.js!WebSocketShard#once"},{"k":"Content","t":"<"},{"k":"Reference","t":"Event"},{"k":"Content","t":" extends "},{"k":"Content","t":"keyof "},{"k":"Reference","t":"WebSocketShardEventTypes","c":"discord.js!WebSocketShardEventTypes:interface"},{"k":"Content","t":">(  "},{"k":"Reference","t":"event","c":"discord.js!~event"},{"k":"Content","t":": "},{"k":"Reference","t":"Event"},{"k":"Content","t":",  "},{"k":"Reference","t":"listener","c":"discord.js!~listener"},{"k":"Content","t":": "},{"k":"Content","t":"(..."},{"k":"Reference","t":"args","c":"discord.js!~args"},{"k":"Content","t":": "},{"k":"Reference","t":"WebSocketShardEventTypes","c":"discord.js!WebSocketShardEventTypes:interface"},{"k":"Content","t":"["},{"k":"Reference","t":"Event"},{"k":"Content","t":"]) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", ): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":3611,"co":3,"tps":[{"tp":"Event","ctr":{"st":5,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":24},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"event","ptr":{"st":10,"en":11},"op":false,"rs":false},{"pn":"listener","ptr":{"st":14,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"once"},{"k":"Property","c":"discord.js!WebSocketShard#ping:member","d":"/**\n * The previous heartbeat ping of the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"ping","c":"discord.js!WebSocketShard#ping"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":48,"co":3,"ro":false,"op":false,"r":"Public","n":"ping","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Event","c":"discord.js!WebSocketShard#ready:member(0)","d":"/**\n * Emitted when the shard receives the READY payload and is now waiting for guilds\n */\n","ex":[{"k":"Content","t":"on('ready', () => {})"}],"l":137,"r":"Public","oi":0,"ps":[],"n":"ready"},{"k":"Event","c":"discord.js!WebSocketShard#resumed:member(0)","d":"/**\n * Emitted when the shard resumes successfully\n */\n","ex":[{"k":"Content","t":"on('resumed', () => {})"}],"pat":"src/client/websocket/WebSocketManager.js","l":286,"r":"Public","oi":0,"ps":[],"n":"resumed"},{"k":"Method","c":"discord.js!WebSocketShard#send:member(1)","d":"/**\n * Adds a packet to the queue to be sent to the gateway. <warn>If you use this method, make sure you understand that you need to provide a full [Payload](https://discord.com/developers/docs/topics/gateway#commands-and-events-gateway-commands). Do not use this method if you don't know what you're doing.</warn>\n *\n * @param data - The full packet to send\n *\n * @param important - If this packet should be added first in queue <warn>This parameter is **deprecated**. Important payloads are determined by their opcode instead.</warn>\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"send","c":"discord.js!WebSocketShard#send"},{"k":"Content","t":"("},{"k":"Reference","t":"data","c":"discord.js!~data"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"important","c":"discord.js!~important"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":219,"co":3,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"data","ptr":{"st":5,"en":6},"op":false,"rs":false},{"pn":"important","ptr":{"st":9,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"send"},{"k":"Property","c":"discord.js!WebSocketShard#status:member","d":"/**\n * The current status of the shard\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"status","c":"discord.js!WebSocketShard#status"},{"k":"Content","t":": "},{"k":"Reference","t":"Status","c":"discord.js!Status:enum"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Enum","c":"discord.js!WebSocketShardEvents:enum","d":"","ex":[{"k":"Content","t":"export enum "},{"k":"Reference","t":"WebSocketShardEvents","c":"discord.js!WebSocketShardEvents:enum"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":5391,"co":1,"r":"Public","n":"WebSocketShardEvents","pmo":false,"ms":[{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.AllReady:member","d":"","ex":[{"k":"Reference","t":"AllReady","c":"discord.js!WebSocketShardEvents.AllReady:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'allReady'"}],"l":5397,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"AllReady"},{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.Close:member","d":"","ex":[{"k":"Reference","t":"Close","c":"discord.js!WebSocketShardEvents.Close:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'close'"}],"l":5392,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Close"},{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.Destroyed:member","d":"","ex":[{"k":"Reference","t":"Destroyed","c":"discord.js!WebSocketShardEvents.Destroyed:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'destroyed'"}],"l":5393,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Destroyed"},{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.InvalidSession:member","d":"","ex":[{"k":"Reference","t":"InvalidSession","c":"discord.js!WebSocketShardEvents.InvalidSession:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'invalidSession'"}],"l":5394,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidSession"},{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.Ready:member","d":"","ex":[{"k":"Reference","t":"Ready","c":"discord.js!WebSocketShardEvents.Ready:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'ready'"}],"l":5395,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Ready"},{"k":"EnumMember","c":"discord.js!WebSocketShardEvents.Resumed:member","d":"","ex":[{"k":"Reference","t":"Resumed","c":"discord.js!WebSocketShardEvents.Resumed:member"},{"k":"Content","t":" = "},{"k":"Content","t":"'resumed'"}],"l":5396,"co":3,"itr":{"st":2,"en":3},"r":"Public","n":"Resumed"}]},{"k":"Interface","c":"discord.js!WebSocketShardEventTypes:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WebSocketShardEventTypes","c":"discord.js!WebSocketShardEventTypes:interface"},{"k":"Content","t":" "}],"pat":"typings/index.d.ts","l":3576,"co":1,"r":"Public","n":"WebSocketShardEventTypes","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#allReady:member","d":"","ex":[{"k":"Reference","t":"allReady","c":"discord.js!WebSocketShardEventTypes#allReady"},{"k":"Content","t":": "},{"k":"Content","t":"[unavailableGuilds?: "},{"k":"Reference","t":"Set","c":"!Set:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":3582,"co":3,"ro":false,"op":false,"r":"Public","n":"allReady","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#close:member","d":"","ex":[{"k":"Reference","t":"close","c":"discord.js!WebSocketShardEventTypes#close"},{"k":"Content","t":": "},{"k":"Content","t":"[event: "},{"k":"Reference","t":"CloseEvent","c":"discord.js!CloseEvent:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":3581,"co":3,"ro":false,"op":false,"r":"Public","n":"close","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#destroyed:member","d":"","ex":[{"k":"Reference","t":"destroyed","c":"discord.js!WebSocketShardEventTypes#destroyed"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":3580,"co":3,"ro":false,"op":false,"r":"Public","n":"destroyed","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#invalidSession:member","d":"","ex":[{"k":"Reference","t":"invalidSession","c":"discord.js!WebSocketShardEventTypes#invalidSession"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":3579,"co":3,"ro":false,"op":false,"r":"Public","n":"invalidSession","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#ready:member","d":"","ex":[{"k":"Reference","t":"ready","c":"discord.js!WebSocketShardEventTypes#ready"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":3577,"co":3,"ro":false,"op":false,"r":"Public","n":"ready","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WebSocketShardEventTypes#resumed:member","d":"","ex":[{"k":"Reference","t":"resumed","c":"discord.js!WebSocketShardEventTypes#resumed"},{"k":"Content","t":": "},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":3578,"co":3,"ro":false,"op":false,"r":"Public","n":"resumed","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!WelcomeChannel:class","d":"/**\n * Represents a channel link in a guild's welcome screen.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WelcomeChannel","c":"discord.js!WelcomeChannel:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/WelcomeChannel.js","l":10,"co":1,"r":"Public","ab":false,"n":"WelcomeChannel","pmo":false,"ms":[{"k":"Property","c":"discord.js!WelcomeChannel#channel:member","d":"/**\n * The channel of this welcome channel\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"channel","c":"discord.js!WelcomeChannel#channel"},{"k":"Content","t":"(): "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":true,"op":false,"r":"Public","n":"channel","prtr":{"st":3,"en":12},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeChannel#channelId:member","d":"/**\n * The id of this welcome channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!WelcomeChannel#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":40,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeChannel#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeChannel#description:member","d":"/**\n * The description of this welcome channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!WelcomeChannel#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":24,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeChannel#emoji:member","d":"/**\n * The emoji of this welcome channel\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"emoji","c":"discord.js!WelcomeChannel#emoji"},{"k":"Content","t":"(): "},{"k":"Reference","t":"GuildEmoji","c":"discord.js!GuildEmoji:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Emoji","c":"discord.js!Emoji:class"},{"k":"Content","t":";"}],"l":55,"co":3,"ro":true,"op":false,"r":"Public","n":"emoji","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeChannel#guild:member","d":"/**\n * The guild for this welcome channel\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!WelcomeChannel#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InviteGuild","c":"discord.js!InviteGuild:class"},{"k":"Content","t":";"}],"l":18,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!WelcomeChannelData:interface","d":"/**\n * Welcome channel data\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WelcomeChannelData","c":"discord.js!WelcomeChannelData:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":964,"co":1,"r":"Public","n":"WelcomeChannelData","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WelcomeChannelData#channel:member","d":"/**\n * The channel to link for this welcome channel\n */\n","ex":[{"k":"Reference","t":"channel","c":"discord.js!WelcomeChannelData#channel"},{"k":"Content","t":": "},{"k":"Reference","t":"TextChannel","c":"discord.js!TextChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"NewsChannel","c":"discord.js!NewsChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ForumChannel","c":"discord.js!ForumChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"MediaChannel","c":"discord.js!MediaChannel:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6764,"co":3,"ro":false,"op":false,"r":"Public","n":"channel","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"discord.js!WelcomeChannelData#description:member","d":"/**\n * The description to show for this welcome channel\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!WelcomeChannelData#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6763,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WelcomeChannelData#emoji:member","d":"/**\n * The emoji to display for this welcome channel\n */\n","ex":[{"k":"Reference","t":"emoji","c":"discord.js!WelcomeChannelData#emoji"},{"k":"Content","t":"?: "},{"k":"Reference","t":"EmojiIdentifierResolvable","c":"discord.js!EmojiIdentifierResolvable:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6765,"co":3,"ro":false,"op":true,"r":"Public","n":"emoji","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!WelcomeScreen:class","d":"/**\n * Represents a welcome screen.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WelcomeScreen","c":"discord.js!WelcomeScreen:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/WelcomeScreen.js","l":12,"co":1,"r":"Public","ab":false,"n":"WelcomeScreen","pmo":false,"ms":[{"k":"Property","c":"discord.js!WelcomeScreen#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeScreen#description:member","d":"/**\n * The description of this welcome screen\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"description","c":"discord.js!WelcomeScreen#description"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":26,"co":3,"ro":false,"op":false,"r":"Public","n":"description","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeScreen#enabled:member","d":"/**\n * Whether the welcome screen is enabled on the guild\n */\n","ex":[{"k":"Content","t":"public get "},{"k":"Reference","t":"enabled","c":"discord.js!WelcomeScreen#enabled"},{"k":"Content","t":"(): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":44,"co":3,"ro":true,"op":false,"r":"Public","n":"enabled","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeScreen#guild:member","d":"/**\n * The guild for this welcome screen\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"guild","c":"discord.js!WelcomeScreen#guild"},{"k":"Content","t":": "},{"k":"Reference","t":"Guild","c":"discord.js!Guild:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"InviteGuild","c":"discord.js!InviteGuild:class"},{"k":"Content","t":";"}],"l":20,"co":3,"ro":false,"op":false,"r":"Public","n":"guild","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WelcomeScreen#welcomeChannels:member","d":"/**\n * Collection of welcome channels belonging to this welcome screen\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"welcomeChannels","c":"discord.js!WelcomeScreen#welcomeChannels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"WelcomeChannel","c":"discord.js!WelcomeChannel:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":32,"co":3,"ro":false,"op":false,"r":"Public","n":"welcomeChannels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!WelcomeScreenEditOptions:interface","d":"/**\n * Welcome screen edit data\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WelcomeScreenEditOptions","c":"discord.js!WelcomeScreenEditOptions:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Guild.js","l":973,"co":1,"r":"Public","n":"WelcomeScreenEditOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WelcomeScreenEditOptions#description:member","d":"/**\n * The description for the welcome screen\n */\n","ex":[{"k":"Reference","t":"description","c":"discord.js!WelcomeScreenEditOptions#description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6770,"co":3,"ro":false,"op":true,"r":"Public","n":"description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WelcomeScreenEditOptions#enabled:member","d":"/**\n * Whether the welcome screen is enabled\n */\n","ex":[{"k":"Reference","t":"enabled","c":"discord.js!WelcomeScreenEditOptions#enabled"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6769,"co":3,"ro":false,"op":true,"r":"Public","n":"enabled","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WelcomeScreenEditOptions#welcomeChannels:member","d":"/**\n * The welcome channel data for the welcome screen\n */\n","ex":[{"k":"Reference","t":"welcomeChannels","c":"discord.js!WelcomeScreenEditOptions#welcomeChannels"},{"k":"Content","t":"?: "},{"k":"Reference","t":"WelcomeChannelData","c":"discord.js!WelcomeChannelData:interface"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6771,"co":3,"ro":false,"op":true,"r":"Public","n":"welcomeChannels","prtr":{"st":2,"en":4}}],"etrs":[]},{"k":"Class","c":"discord.js!Widget:class","d":"/**\n * Represents a Widget.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"Widget","c":"discord.js!Widget:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/Widget.js","l":12,"co":1,"r":"Public","ab":false,"n":"Widget","pmo":false,"ms":[{"k":"Property","c":"discord.js!Widget#channels:member","d":"/**\n * The list of channels in the guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channels","c":"discord.js!Widget#channels"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":", "},{"k":"Reference","t":"WidgetChannel","c":"discord.js!WidgetChannel:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"channels","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Widget#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Widget#fetch:member(1)","d":"/**\n * Update the Widget.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"fetch","c":"discord.js!Widget#fetch"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Widget","c":"discord.js!Widget:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":81,"co":3,"sta":false,"rtr":{"st":3,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"fetch"},{"k":"Property","c":"discord.js!Widget#id:member","d":"/**\n * The id of the guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!Widget#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"l":31,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"discord.js!Widget#imageURL:member(1)","d":"/**\n * Returns a URL for the PNG widget of the guild.\n *\n * @param style - The style for the widget image\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"imageURL","c":"discord.js!Widget#imageURL"},{"k":"Content","t":"("},{"k":"Reference","t":"style","c":"discord.js!~style"},{"k":"Content","t":"?: "},{"k":"Reference","t":"GuildWidgetStyle","c":"discord-api-types!GuildWidgetStyle:enum"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":92,"co":3,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"style","ptr":{"st":5,"en":6},"op":true,"rs":false}],"op":false,"ab":false,"n":"imageURL"},{"k":"Property","c":"discord.js!Widget#instantInvite:member","d":"/**\n * The invite of the guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"instantInvite","c":"discord.js!Widget#instantInvite"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":46,"co":3,"ro":false,"op":true,"r":"Public","n":"instantInvite","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Widget#members:member","d":"/**\n * The list of members in the guild. These strings are just arbitrary numbers, they aren't Snowflakes.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"members","c":"discord.js!Widget#members"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"WidgetMember","c":"discord.js!WidgetMember:class"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":63,"co":3,"ro":false,"op":false,"r":"Public","n":"members","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Widget#name:member","d":"/**\n * The name of the guild.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"name","c":"discord.js!Widget#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":38,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!Widget#presenceCount:member","d":"/**\n * The number of members online.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"presenceCount","c":"discord.js!Widget#presenceCount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":73,"co":3,"ro":false,"op":false,"r":"Public","n":"presenceCount","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"discord.js!WidgetActivity:interface","d":"/**\n * Activity sent in a {@link WidgetMember}.\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WidgetActivity","c":"discord.js!WidgetActivity:interface"},{"k":"Content","t":" "}],"pat":"src/structures/WidgetMember.js","l":10,"co":1,"r":"Public","n":"WidgetActivity","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WidgetActivity#name:member","d":"/**\n * The name of the activity\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!WidgetActivity#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6753,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"discord.js!WidgetChannel:interface","d":"/**\n * Represents a channel in a Widget\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"WidgetChannel","c":"discord.js!WidgetChannel:interface"},{"k":"Content","t":" "}],"pat":"src/structures/Widget.js","l":18,"co":1,"r":"Public","n":"WidgetChannel","pmo":false,"ms":[{"k":"PropertySignature","c":"discord.js!WidgetChannel#id:member","d":"/**\n * Id of the channel\n */\n","ex":[{"k":"Reference","t":"id","c":"discord.js!WidgetChannel#id"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6757,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WidgetChannel#name:member","d":"/**\n * Name of the channel\n */\n","ex":[{"k":"Reference","t":"name","c":"discord.js!WidgetChannel#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6758,"co":3,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"discord.js!WidgetChannel#position:member","d":"/**\n * Position of the channel\n */\n","ex":[{"k":"Reference","t":"position","c":"discord.js!WidgetChannel#position"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":6759,"co":3,"ro":false,"op":false,"r":"Public","n":"position","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"discord.js!WidgetMember:class","d":"/**\n * Represents a WidgetMember.\n */\n","ex":[{"k":"Content","t":"export class "},{"k":"Reference","t":"WidgetMember","c":"discord.js!WidgetMember:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Base","c":"discord.js!Base:class"},{"k":"Content","t":" "}],"pat":"src/structures/WidgetMember.js","l":9,"co":1,"r":"Public","ab":false,"n":"WidgetMember","pmo":false,"ms":[{"k":"Property","c":"discord.js!WidgetMember#activity:member","d":"/**\n * The activity of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"activity","c":"discord.js!WidgetMember#activity"},{"k":"Content","t":": "},{"k":"Reference","t":"WidgetActivity","c":"discord.js!WidgetActivity:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":95,"co":3,"ro":false,"op":false,"r":"Public","n":"activity","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#avatar:member","d":"/**\n * The avatar of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatar","c":"discord.js!WidgetMember#avatar"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":41,"co":3,"ro":false,"op":false,"r":"Public","n":"avatar","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#avatarURL:member","d":"/**\n * The avatar URL of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"avatarURL","c":"discord.js!WidgetMember#avatarURL"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":89,"co":3,"ro":false,"op":false,"r":"Public","n":"avatarURL","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#channelId:member","d":"/**\n * The id of the voice channel the member is in, if any\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"channelId","c":"discord.js!WidgetMember#channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":83,"co":3,"ro":false,"op":false,"r":"Public","n":"channelId","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#client:member","d":"/**\n * The client that instantiated this\n *\n * @readonly\n */\n","ex":[{"k":"Content","t":"undefined readonly client :"},{"k":"Reference","t":"Client","c":"discord.js!Client:class"},{"k":"Content","t":";"}],"pat":"src/structures/Base.js","l":11,"ro":true,"op":false,"r":"Public","n":"client","prtr":{"st":1,"en":2},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#deaf:member","d":"/**\n * If the member is server deafened\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"deaf","c":"discord.js!WidgetMember#deaf"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":53,"co":3,"ro":false,"op":false,"r":"Public","n":"deaf","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#discriminator:member","d":"/**\n * The discriminator of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"discriminator","c":"discord.js!WidgetMember#discriminator"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":35,"co":3,"ro":false,"op":false,"r":"Public","n":"discriminator","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#id:member","d":"/**\n * The id of the user. It's an arbitrary number.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"id","c":"discord.js!WidgetMember#id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":23,"co":3,"ro":false,"op":false,"r":"Public","n":"id","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#mute:member","d":"/**\n * If the member is server muted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"mute","c":"discord.js!WidgetMember#mute"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":59,"co":3,"ro":false,"op":false,"r":"Public","n":"mute","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#selfDeaf:member","d":"/**\n * If the member is self deafened\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"selfDeaf","c":"discord.js!WidgetMember#selfDeaf"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":65,"co":3,"ro":false,"op":false,"r":"Public","n":"selfDeaf","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#selfMute:member","d":"/**\n * If the member is self muted\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"selfMute","c":"discord.js!WidgetMember#selfMute"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":71,"co":3,"ro":false,"op":false,"r":"Public","n":"selfMute","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#status:member","d":"/**\n * The status of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"status","c":"discord.js!WidgetMember#status"},{"k":"Content","t":": "},{"k":"Reference","t":"PresenceStatus","c":"discord.js!PresenceStatus:type"},{"k":"Content","t":";"}],"l":47,"co":3,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#suppress:member","d":"/**\n * If the member is suppressed\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"suppress","c":"discord.js!WidgetMember#suppress"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":77,"co":3,"ro":false,"op":false,"r":"Public","n":"suppress","prtr":{"st":3,"en":6},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"discord.js!WidgetMember#username:member","d":"/**\n * The username of the member.\n */\n","ex":[{"k":"Content","t":"public "},{"k":"Reference","t":"username","c":"discord.js!WidgetMember#username"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":29,"co":3,"ro":false,"op":false,"r":"Public","n":"username","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"discord.js!WrapBooleanCache:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"WrapBooleanCache","c":"discord.js!WrapBooleanCache:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":" extends "},{"k":"Reference","t":"boolean"},{"k":"Content","t":"> = "},{"k":"Reference","t":"If","c":"discord.js!If:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Cached"},{"k":"Content","t":", 'cached', "},{"k":"Reference","t":"CacheType","c":"discord.js!CacheType:type"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"typings/index.d.ts","l":2032,"co":1,"r":"Public","n":"WrapBooleanCache","tps":[{"tp":"Cached","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":13}}]}]}