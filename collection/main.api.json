{"metadata":{"toolPackage":"@discordjs/api-extractor","toolVersion":"7.38.1","schemaVersion":1012,"oldestForwardsCompatibleVersion":1001,"tsdocConfig":{"$schema":"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json","noStandardTags":true,"tagDefinitions":[{"tagName":"@alpha","syntaxKind":"modifier"},{"tagName":"@beta","syntaxKind":"modifier"},{"tagName":"@defaultValue","syntaxKind":"block"},{"tagName":"@decorator","syntaxKind":"block","allowMultiple":true},{"tagName":"@deprecated","syntaxKind":"block"},{"tagName":"@eventProperty","syntaxKind":"modifier"},{"tagName":"@example","syntaxKind":"block","allowMultiple":true},{"tagName":"@experimental","syntaxKind":"modifier"},{"tagName":"@inheritDoc","syntaxKind":"inline"},{"tagName":"@internal","syntaxKind":"modifier"},{"tagName":"@label","syntaxKind":"inline"},{"tagName":"@link","syntaxKind":"inline","allowMultiple":true},{"tagName":"@override","syntaxKind":"modifier"},{"tagName":"@packageDocumentation","syntaxKind":"modifier"},{"tagName":"@param","syntaxKind":"block","allowMultiple":true},{"tagName":"@privateRemarks","syntaxKind":"block"},{"tagName":"@public","syntaxKind":"modifier"},{"tagName":"@readonly","syntaxKind":"modifier"},{"tagName":"@remarks","syntaxKind":"block"},{"tagName":"@returns","syntaxKind":"block"},{"tagName":"@sealed","syntaxKind":"modifier"},{"tagName":"@see","syntaxKind":"block"},{"tagName":"@throws","syntaxKind":"block","allowMultiple":true},{"tagName":"@typeParam","syntaxKind":"block","allowMultiple":true},{"tagName":"@virtual","syntaxKind":"modifier"},{"tagName":"@betaDocumentation","syntaxKind":"modifier"},{"tagName":"@internalRemarks","syntaxKind":"block"},{"tagName":"@preapproved","syntaxKind":"modifier"}],"supportForTags":{"@alpha":true,"@beta":true,"@defaultValue":true,"@decorator":true,"@deprecated":true,"@eventProperty":true,"@example":true,"@experimental":true,"@inheritDoc":true,"@internal":true,"@label":true,"@link":true,"@override":true,"@packageDocumentation":true,"@param":true,"@privateRemarks":true,"@public":true,"@readonly":true,"@remarks":true,"@returns":true,"@sealed":true,"@see":true,"@throws":true,"@typeParam":true,"@virtual":true,"@betaDocumentation":true,"@internalRemarks":true,"@preapproved":true},"reportUnsupportedHtmlElements":false}},"projectFolderUrl":"https://github.com/discordjs/discord.js/tree/main/packages/collection","kind":"Package","canonicalReference":"@discordjs/collection!","docComment":"","name":"@discordjs/collection","preserveMemberOrder":false,"members":[{"kind":"EntryPoint","canonicalReference":"@discordjs/collection!","name":"","preserveMemberOrder":false,"members":[{"kind":"Class","canonicalReference":"@discordjs/collection!Collection:class","docComment":"/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has an ID, for significantly improved performance and ease-of-use.\n *\n * @typeParam Key - The key type this collection holds\n *\n * @typeParam Value - The value type this collection holds\n */\n","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"> extends "},{"kind":"Reference","text":"Map","canonicalReference":"!Map:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":" "}],"fileUrlPath":"src/collection.ts","fileLine":38,"fileColumn":1,"releaseTag":"Public","typeParameters":[{"typeParameterName":"Key","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"Value","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isAbstract":false,"name":"Collection","preserveMemberOrder":false,"members":[{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#at:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}. Returns the item at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the element to obtain\n */\n","excerptTokens":[{"kind":"Reference","text":"at","canonicalReference":"@discordjs/collection!Collection#at"},{"kind":"Content","text":"("},{"kind":"Reference","text":"index","canonicalReference":"@discordjs/collection!~index"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":151,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":9},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"index","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"at"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#clone:member(1)","docComment":"/**\n * Creates an identical shallow copy of this collection.\n *\n * @example\n * ```ts\n * const newColl = someColl.clone();\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"clone","canonicalReference":"@discordjs/collection!Collection#clone"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":733,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"clone"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection.combineEntries:member(1)","docComment":"/**\n * Creates a Collection from a list of entries.\n *\n * @param entries - The list of entries\n *\n * @param combine - Function to combine an existing entry with a new one\n *\n * @example\n * ```ts\n * Collection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n * // returns Collection { \"a\" => 3, \"b\" => 2 }\n * ```\n *\n */\n","excerptTokens":[{"kind":"Content","text":"static "},{"kind":"Reference","text":"combineEntries","canonicalReference":"@discordjs/collection!Collection.combineEntries"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"entries","canonicalReference":"@discordjs/collection!~entries"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Iterable","canonicalReference":"!Iterable:interface"},{"kind":"Content","text":"<["},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"]>"},{"kind":"Content","text":", "},{"kind":"Reference","text":"combine","canonicalReference":"@discordjs/collection!~combine"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"firstValue","canonicalReference":"@discordjs/collection!~firstValue"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"secondValue","canonicalReference":"@discordjs/collection!~secondValue"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":") => "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1006,"fileColumn":2,"typeParameters":[{"typeParameterName":"Key","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"Value","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":true,"returnTypeTokenRange":{"startIndex":33,"endIndex":39},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"entries","parameterTypeTokenRange":{"startIndex":9,"endIndex":15},"isOptional":false,"isRest":false},{"parameterName":"combine","parameterTypeTokenRange":{"startIndex":18,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"combineEntries"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#concat:member(1)","docComment":"/**\n * Combines this collection with others into a new collection. None of the source collections are modified.\n *\n * @param collections - Collections to merge\n *\n * @example\n * ```ts\n * const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"concat","canonicalReference":"@discordjs/collection!Collection#concat"},{"kind":"Content","text":"(..."},{"kind":"Reference","text":"collections","canonicalReference":"@discordjs/collection!~collections"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">[]"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":746,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"collections","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":false,"isRest":true}],"isOptional":false,"isAbstract":false,"name":"concat"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#difference:member(1)","docComment":"/**\n * Returns a new collection containing the items where the key is present in this collection but not the other.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * console.log(col1.difference(col2));\n * // => Collection { 'b' => 2 }\n * console.log(col2.difference(col1));\n * // => Collection { 'c' => 3 }\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"difference","canonicalReference":"@discordjs/collection!Collection#difference"},{"kind":"Content","text":"("},{"kind":"Reference","text":"other","canonicalReference":"@discordjs/collection!~other"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"any"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":866,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"other","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"difference"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#each:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach | Map.forEach()}, but returns the collection instead of undefined.\n *\n * @param fn - Function to execute for each element\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection\n *  .each(user => console.log(user.username))\n *  .filter(user => user.bot)\n *  .each(user => console.log(user.username));\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"each","canonicalReference":"@discordjs/collection!Collection#each"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"void"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":690,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":18},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"each"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#each:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"each","canonicalReference":"@discordjs/collection!Collection#each"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"void"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":691,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"each"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#ensure:member(1)","docComment":"/**\n * Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.\n *\n * @param key - The key to get if it exists, or set otherwise\n *\n * @param defaultValueGenerator - A function that generates the default value\n *\n * @example\n * ```ts\n * collection.ensure(guildId, () => defaultGuildConfig);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"ensure","canonicalReference":"@discordjs/collection!Collection#ensure"},{"kind":"Content","text":"("},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"defaultValueGenerator","canonicalReference":"@discordjs/collection!~defaultValueGenerator"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":";"}],"fileLine":49,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":18},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"key","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"defaultValueGenerator","parameterTypeTokenRange":{"startIndex":8,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"ensure"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#equals:member(1)","docComment":"/**\n * Checks if this collection shares identical items with another. This is different to checking for equality using equal-signs, because the collections may be different objects, but contain the same data.\n *\n * @param collection - Collection to compare with\n *\n * @returns Whether the collections have identical contents\n */\n","excerptTokens":[{"kind":"Reference","text":"equals","canonicalReference":"@discordjs/collection!Collection#equals"},{"kind":"Content","text":"("},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":763,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":12},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"collection","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"equals"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(1)","docComment":"/**\n * Checks if all items passes a test. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.every()}.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.every(user => !user.bot);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this is "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":581,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this is "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":584,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":587,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":18},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this is "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":588,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(5)","docComment":"","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this is "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":592,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":5,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#every:member(6)","docComment":"","excerptTokens":[{"kind":"Reference","text":"every","canonicalReference":"@discordjs/collection!Collection#every"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":596,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":6,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"every"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.filter()}, but returns a Collection instead of an Array.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.filter(user => user.username === 'Bob');\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":384,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":387,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":390,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":391,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":39},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(5)","docComment":"","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":395,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":39},"releaseTag":"Public","isProtected":false,"overloadIndex":5,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#filter:member(6)","docComment":"","excerptTokens":[{"kind":"Reference","text":"filter","canonicalReference":"@discordjs/collection!Collection#filter"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":399,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":33},"releaseTag":"Public","isProtected":false,"overloadIndex":6,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"filter"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#find:member(1)","docComment":"/**\n * Searches for a single item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.find()}. All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you should use the `get` method. See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get | MDN} for details.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.find(user => user.username === 'Bob');\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"find","canonicalReference":"@discordjs/collection!Collection#find"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":231,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"find"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#find:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"find","canonicalReference":"@discordjs/collection!Collection#find"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":234,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":20},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"find"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#find:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"find","canonicalReference":"@discordjs/collection!Collection#find"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":235,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":36},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"find"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#find:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"find","canonicalReference":"@discordjs/collection!Collection#find"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":239,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"find"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findKey:member(1)","docComment":"/**\n * Searches for the key of a single item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex | Array.findIndex()}, but returns the key rather than the positional index.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.findKey(user => user.username === 'Bob');\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"findKey","canonicalReference":"@discordjs/collection!Collection#findKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":265,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findKey:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findKey","canonicalReference":"@discordjs/collection!Collection#findKey"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":268,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":20},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findKey:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findKey","canonicalReference":"@discordjs/collection!Collection#findKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":269,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":36},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findKey:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findKey","canonicalReference":"@discordjs/collection!Collection#findKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":273,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLast:member(1)","docComment":"/**\n * Searches for a last item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast | Array.findLast()}.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n */\n","excerptTokens":[{"kind":"Reference","text":"findLast","canonicalReference":"@discordjs/collection!Collection#findLast"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":294,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLast"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLast:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLast","canonicalReference":"@discordjs/collection!Collection#findLast"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":297,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":20},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLast"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLast:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLast","canonicalReference":"@discordjs/collection!Collection#findLast"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":298,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":36},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLast"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLast:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLast","canonicalReference":"@discordjs/collection!Collection#findLast"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":302,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLast"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLastKey:member(1)","docComment":"/**\n * Searches for the key of a last item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex | Array.findLastIndex()}, but returns the key rather than the positional index.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n */\n","excerptTokens":[{"kind":"Reference","text":"findLastKey","canonicalReference":"@discordjs/collection!Collection#findLastKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":327,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLastKey:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLastKey","canonicalReference":"@discordjs/collection!Collection#findLastKey"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":330,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":20},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLastKey:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLastKey","canonicalReference":"@discordjs/collection!Collection#findLastKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":331,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":36},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#findLastKey:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"findLastKey","canonicalReference":"@discordjs/collection!Collection#findLastKey"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":335,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"findLastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#first:member(1)","docComment":"/**\n * Obtains the first value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the beginning\n *\n * @returns A single value if no amount is provided or an array of values, starting from the end if amount is negative\n */\n","excerptTokens":[{"kind":"Reference","text":"first","canonicalReference":"@discordjs/collection!Collection#first"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":83,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"first"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#first:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"first","canonicalReference":"@discordjs/collection!Collection#first"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":84,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"first"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#firstKey:member(1)","docComment":"/**\n * Obtains the first key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the beginning\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the end if amount is negative\n */\n","excerptTokens":[{"kind":"Reference","text":"firstKey","canonicalReference":"@discordjs/collection!Collection#firstKey"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":100,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"firstKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#firstKey:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"firstKey","canonicalReference":"@discordjs/collection!Collection#firstKey"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":101,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"firstKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#flatMap:member(1)","docComment":"/**\n * Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap | Array.flatMap()}.\n *\n * @param fn - Function that produces a new Collection\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.flatMap(guild => guild.members.cache);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"flatMap","canonicalReference":"@discordjs/collection!Collection#flatMap"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":478,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":24,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":23},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"flatMap"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#flatMap:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"flatMap","canonicalReference":"@discordjs/collection!Collection#flatMap"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":481,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":34,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":29},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":32,"endIndex":33},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"flatMap"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#hasAll:member(1)","docComment":"/**\n * Checks if all of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if all of the elements exist, `false` if at least one does not exist.\n */\n","excerptTokens":[{"kind":"Reference","text":"hasAll","canonicalReference":"@discordjs/collection!Collection#hasAll"},{"kind":"Content","text":"(..."},{"kind":"Reference","text":"keys","canonicalReference":"@discordjs/collection!~keys"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":"[]"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":63,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":7,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"keys","parameterTypeTokenRange":{"startIndex":4,"endIndex":6},"isOptional":false,"isRest":true}],"isOptional":false,"isAbstract":false,"name":"hasAll"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#hasAny:member(1)","docComment":"/**\n * Checks if any of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if any of the elements exist, `false` if none exist.\n */\n","excerptTokens":[{"kind":"Reference","text":"hasAny","canonicalReference":"@discordjs/collection!Collection#hasAny"},{"kind":"Content","text":"(..."},{"kind":"Reference","text":"keys","canonicalReference":"@discordjs/collection!~keys"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":"[]"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":73,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":7,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"keys","parameterTypeTokenRange":{"startIndex":4,"endIndex":6},"isOptional":false,"isRest":true}],"isOptional":false,"isAbstract":false,"name":"hasAny"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#intersection:member(1)","docComment":"/**\n * The intersection method returns a new collection containing the items where the key is present in both collections.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * const intersection = col1.intersection(col2);\n * console.log(col1.intersection(col2));\n * // => Collection { 'a' => 1 }\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"intersection","canonicalReference":"@discordjs/collection!Collection#intersection"},{"kind":"Content","text":"("},{"kind":"Reference","text":"other","canonicalReference":"@discordjs/collection!~other"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"any"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":816,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"other","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"intersection"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#keyAt:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}. Returns the key at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the key to obtain\n */\n","excerptTokens":[{"kind":"Reference","text":"keyAt","canonicalReference":"@discordjs/collection!Collection#keyAt"},{"kind":"Content","text":"("},{"kind":"Reference","text":"index","canonicalReference":"@discordjs/collection!~index"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":164,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":9},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"index","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"keyAt"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#last:member(1)","docComment":"/**\n * Obtains the last value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the end\n *\n * @returns A single value if no amount is provided or an array of values, starting from the start if amount is negative\n */\n","excerptTokens":[{"kind":"Reference","text":"last","canonicalReference":"@discordjs/collection!Collection#last"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":117,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"last"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#last:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"last","canonicalReference":"@discordjs/collection!Collection#last"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":118,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"last"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#lastKey:member(1)","docComment":"/**\n * Obtains the last key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the end\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the start if amount is negative\n */\n","excerptTokens":[{"kind":"Reference","text":"lastKey","canonicalReference":"@discordjs/collection!Collection#lastKey"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":134,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"lastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#lastKey:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"lastKey","canonicalReference":"@discordjs/collection!Collection#lastKey"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":135,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"lastKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#map:member(1)","docComment":"/**\n * Maps each item to another value into an array. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n *\n * @param fn - Function that produces an element of the new array, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.map(user => user.tag);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"map","canonicalReference":"@discordjs/collection!Collection#map"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":505,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":18},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"map"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#map:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"map","canonicalReference":"@discordjs/collection!Collection#map"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":506,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":29,"endIndex":31},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":24},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":27,"endIndex":28},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"map"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#mapValues:member(1)","docComment":"/**\n * Maps each item to another value into a collection. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n *\n * @param fn - Function that produces an element of the new collection, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.mapValues(user => user.tag);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"mapValues","canonicalReference":"@discordjs/collection!Collection#mapValues"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":531,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":18},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"mapValues"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#mapValues:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"mapValues","canonicalReference":"@discordjs/collection!Collection#mapValues"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":532,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":29,"endIndex":35},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":24},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":27,"endIndex":28},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"mapValues"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#merge:member(1)","docComment":"/**\n * Merges two Collections together into a new Collection.\n *\n * @param other - The other Collection to merge with\n *\n * @param whenInSelf - Function getting the result if the entry only exists in this Collection\n *\n * @param whenInOther - Function getting the result if the entry only exists in the other Collection\n *\n * @param whenInBoth - Function getting the result if the entry exists in both Collections\n *\n * @example\n * ```ts\n * // Sums up the entries in two collections.\n * coll.merge(\n *  other,\n *  x => ({ keep: true, value: x }),\n *  y => ({ keep: true, value: y }),\n *  (x, y) => ({ keep: true, value: x + y }),\n * );\n * ```\n *\n * @example\n * ```ts\n * // Intersects two collections in a left-biased manner.\n * coll.merge(\n *  other,\n *  x => ({ keep: false }),\n *  y => ({ keep: false }),\n *  (x, _) => ({ keep: true, value: x }),\n * );\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"merge","canonicalReference":"@discordjs/collection!Collection#merge"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"ResultValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"other","canonicalReference":"@discordjs/collection!~other"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":">"},{"kind":"Content","text":", "},{"kind":"Reference","text":"whenInSelf","canonicalReference":"@discordjs/collection!~whenInSelf"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":") => "},{"kind":"Reference","text":"Keep","canonicalReference":"@discordjs/collection!Keep:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"ResultValue"},{"kind":"Content","text":">"},{"kind":"Content","text":", "},{"kind":"Reference","text":"whenInOther","canonicalReference":"@discordjs/collection!~whenInOther"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"valueOther","canonicalReference":"@discordjs/collection!~valueOther"},{"kind":"Content","text":": "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":") => "},{"kind":"Reference","text":"Keep","canonicalReference":"@discordjs/collection!Keep:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"ResultValue"},{"kind":"Content","text":">"},{"kind":"Content","text":", "},{"kind":"Reference","text":"whenInBoth","canonicalReference":"@discordjs/collection!~whenInBoth"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"valueOther","canonicalReference":"@discordjs/collection!~valueOther"},{"kind":"Content","text":": "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":") => "},{"kind":"Reference","text":"Keep","canonicalReference":"@discordjs/collection!Keep:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"ResultValue"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"ResultValue"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":933,"fileColumn":9,"typeParameters":[{"typeParameterName":"OtherValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"ResultValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":67,"endIndex":73},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"other","parameterTypeTokenRange":{"startIndex":8,"endIndex":14},"isOptional":false,"isRest":false},{"parameterName":"whenInSelf","parameterTypeTokenRange":{"startIndex":17,"endIndex":30},"isOptional":false,"isRest":false},{"parameterName":"whenInOther","parameterTypeTokenRange":{"startIndex":33,"endIndex":46},"isOptional":false,"isRest":false},{"parameterName":"whenInBoth","parameterTypeTokenRange":{"startIndex":49,"endIndex":66},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"merge"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(1)","docComment":"/**\n * Partitions the collection into two collections where the first collection contains the items that passed and the second contains the items that failed.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * const [big, small] = collection.partition(guild => guild.memberCount > 250);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Exclude","canonicalReference":"!Exclude:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":425,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Exclude","canonicalReference":"!Exclude:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">>]"},{"kind":"Content","text":";"}],"fileLine":428,"fileColumn":9,"typeParameters":[{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":4,"endIndex":5},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":22},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(3)","docComment":"","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":431,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":3,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(4)","docComment":"","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Exclude","canonicalReference":"!Exclude:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewKey"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":434,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewKey","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":50},"releaseTag":"Public","isProtected":false,"overloadIndex":4,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(5)","docComment":"","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":" is "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Exclude","canonicalReference":"!Exclude:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"NewValue"},{"kind":"Content","text":">>]"},{"kind":"Content","text":";"}],"fileLine":438,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"NewValue","constraintTokenRange":{"startIndex":6,"endIndex":7},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":33,"endIndex":50},"releaseTag":"Public","isProtected":false,"overloadIndex":5,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":10,"endIndex":28},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":31,"endIndex":32},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#partition:member(6)","docComment":"","excerptTokens":[{"kind":"Reference","text":"partition","canonicalReference":"@discordjs/collection!Collection#partition"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">, "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":442,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":40},"releaseTag":"Public","isProtected":false,"overloadIndex":6,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"partition"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#random:member(1)","docComment":"/**\n * Obtains unique random value(s) from this collection.\n *\n * @param amount - Amount of values to obtain randomly\n *\n * @returns A single value if no amount is provided or an array of values\n */\n","excerptTokens":[{"kind":"Reference","text":"random","canonicalReference":"@discordjs/collection!Collection#random"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":176,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"random"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#random:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"random","canonicalReference":"@discordjs/collection!Collection#random"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":177,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"random"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#randomKey:member(1)","docComment":"/**\n * Obtains unique random key(s) from this collection.\n *\n * @param amount - Amount of keys to obtain randomly\n *\n * @returns A single key if no amount is provided or an array\n */\n","excerptTokens":[{"kind":"Reference","text":"randomKey","canonicalReference":"@discordjs/collection!Collection#randomKey"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";"}],"fileLine":194,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":5},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"randomKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#randomKey:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"randomKey","canonicalReference":"@discordjs/collection!Collection#randomKey"},{"kind":"Content","text":"("},{"kind":"Reference","text":"amount","canonicalReference":"@discordjs/collection!~amount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":"[]"},{"kind":"Content","text":";"}],"fileLine":195,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"amount","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"randomKey"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#reduce:member(1)","docComment":"/**\n * Applies a function to produce a single value. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.reduce()}.\n *\n * @param fn - Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`, and `collection`\n *\n * @param initialValue - Starting value for the accumulator\n *\n * @example\n * ```ts\n * collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"reduce","canonicalReference":"@discordjs/collection!Collection#reduce"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":" = "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"accumulator","canonicalReference":"@discordjs/collection!~accumulator"},{"kind":"Content","text":": "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"initialValue","canonicalReference":"@discordjs/collection!~initialValue"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":";"}],"fileLine":619,"fileColumn":9,"typeParameters":[{"typeParameterName":"InitialValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":4,"endIndex":5}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":29,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":8,"endIndex":24},"isOptional":false,"isRest":false},{"parameterName":"initialValue","parameterTypeTokenRange":{"startIndex":27,"endIndex":28},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"reduce"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#reduceRight:member(1)","docComment":"/**\n * Applies a function to produce a single value. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.reduceRight()}.\n *\n * @param fn - Function used to reduce, taking four arguments; `accumulator`, `value`, `key`, and `collection`\n *\n * @param initialValue - Starting value for the accumulator\n */\n","excerptTokens":[{"kind":"Reference","text":"reduceRight","canonicalReference":"@discordjs/collection!Collection#reduceRight"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"accumulator","canonicalReference":"@discordjs/collection!~accumulator"},{"kind":"Content","text":": "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":", "},{"kind":"Reference","text":"initialValue","canonicalReference":"@discordjs/collection!~initialValue"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"InitialValue"},{"kind":"Content","text":";"}],"fileLine":648,"fileColumn":9,"typeParameters":[{"typeParameterName":"InitialValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"initialValue","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"reduceRight"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#reverse:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse | Array.reverse()} but returns a Collection instead of an Array.\n */\n","excerptTokens":[{"kind":"Reference","text":"reverse","canonicalReference":"@discordjs/collection!Collection#reverse"},{"kind":"Content","text":"(): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":210,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":3},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"reverse"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#some:member(1)","docComment":"/**\n * Checks if there exists an item that passes a test. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some | Array.some()}.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.some(user => user.discriminator === '0000');\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"some","canonicalReference":"@discordjs/collection!Collection#some"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":558,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":18},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"some"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#some:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"some","canonicalReference":"@discordjs/collection!Collection#some"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":";"}],"fileLine":559,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"some"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#sort:member(1)","docComment":"/**\n * The sort method sorts the items of a collection in place and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n * ```ts\n * collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"sort","canonicalReference":"@discordjs/collection!Collection#sort"},{"kind":"Content","text":"("},{"kind":"Reference","text":"compareFunction","canonicalReference":"@discordjs/collection!~compareFunction"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Comparator","canonicalReference":"@discordjs/collection!Comparator:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":788,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":12},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"compareFunction","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"sort"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#sweep:member(1)","docComment":"/**\n * Removes items that satisfy the provided filter function.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @returns The number of removed entries\n */\n","excerptTokens":[{"kind":"Reference","text":"sweep","canonicalReference":"@discordjs/collection!Collection#sweep"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"number"},{"kind":"Content","text":";"}],"fileLine":359,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":18},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":16},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"sweep"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#sweep:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"sweep","canonicalReference":"@discordjs/collection!Collection#sweep"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"value","canonicalReference":"@discordjs/collection!~value"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":", "},{"kind":"Reference","text":"key","canonicalReference":"@discordjs/collection!~key"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"number"},{"kind":"Content","text":";"}],"fileLine":360,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":25,"endIndex":26},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"sweep"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#symmetricDifference:member(1)","docComment":"/**\n * Returns a new collection containing only the items where the keys are present in either collection, but not both.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * const symmetricDifference = col1.symmetricDifference(col2);\n * console.log(col1.symmetricDifference(col2));\n * // => Collection { 'b' => 2, 'c' => 3 }\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"symmetricDifference","canonicalReference":"@discordjs/collection!Collection#symmetricDifference"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"other","canonicalReference":"@discordjs/collection!~other"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":889,"fileColumn":9,"typeParameters":[{"typeParameterName":"OtherValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"other","parameterTypeTokenRange":{"startIndex":6,"endIndex":12},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"symmetricDifference"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#tap:member(1)","docComment":"/**\n * Runs a function on the collection and returns the collection.\n *\n * @param fn - Function to execute\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection\n *  .tap(coll => console.log(coll.size))\n *  .filter(user => user.bot)\n *  .tap(coll => console.log(coll.size))\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"tap","canonicalReference":"@discordjs/collection!Collection#tap"},{"kind":"Content","text":"("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"void"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":716,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":10},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"tap"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#tap:member(2)","docComment":"","excerptTokens":[{"kind":"Reference","text":"tap","canonicalReference":"@discordjs/collection!Collection#tap"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"This"},{"kind":"Content","text":">("},{"kind":"Reference","text":"fn","canonicalReference":"@discordjs/collection!~fn"},{"kind":"Content","text":": "},{"kind":"Content","text":"("},{"kind":"Reference","text":"this","canonicalReference":"@discordjs/collection!~this"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":", "},{"kind":"Reference","text":"collection","canonicalReference":"@discordjs/collection!~collection"},{"kind":"Content","text":": this) => "},{"kind":"Reference","text":"void"},{"kind":"Content","text":", "},{"kind":"Reference","text":"thisArg","canonicalReference":"@discordjs/collection!~thisArg"},{"kind":"Content","text":": "},{"kind":"Reference","text":"This"},{"kind":"Content","text":"): "},{"kind":"Content","text":"this"},{"kind":"Content","text":";"}],"fileLine":717,"fileColumn":9,"typeParameters":[{"typeParameterName":"This","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":20},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"fn","parameterTypeTokenRange":{"startIndex":6,"endIndex":14},"isOptional":false,"isRest":false},{"parameterName":"thisArg","parameterTypeTokenRange":{"startIndex":17,"endIndex":18},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"tap"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#toJSON:member(1)","docComment":"","excerptTokens":[{"kind":"Reference","text":"toJSON","canonicalReference":"@discordjs/collection!Collection#toJSON"},{"kind":"Content","text":"(): "},{"kind":"Content","text":"["},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"][]"},{"kind":"Content","text":";"}],"fileLine":986,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":7},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"toJSON"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#toReversed:member(1)","docComment":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed | Array.toReversed()} but returns a Collection instead of an Array.\n */\n","excerptTokens":[{"kind":"Reference","text":"toReversed","canonicalReference":"@discordjs/collection!Collection#toReversed"},{"kind":"Content","text":"(): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":965,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":2,"endIndex":8},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[],"isOptional":false,"isAbstract":false,"name":"toReversed"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#toSorted:member(1)","docComment":"/**\n * The sorted method sorts the items of a collection and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n * ```ts\n * collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"toSorted","canonicalReference":"@discordjs/collection!Collection#toSorted"},{"kind":"Content","text":"("},{"kind":"Reference","text":"compareFunction","canonicalReference":"@discordjs/collection!~compareFunction"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Comparator","canonicalReference":"@discordjs/collection!Comparator:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":982,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":11,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"compareFunction","parameterTypeTokenRange":{"startIndex":4,"endIndex":10},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"toSorted"},{"kind":"Method","canonicalReference":"@discordjs/collection!Collection#union:member(1)","docComment":"/**\n * Returns a new collection containing the items where the key is present in either of the collections.\n *\n * @remarks\n *\n * If the collections have any items with the same key, the value from the first collection will be used.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['b', 3], ['c', 3]]);\n * const union = col1.union(col2);\n * console.log(union);\n * // => Collection { 'a' => 1, 'b' => 2, 'c' => 3 }\n * ```\n *\n */\n","excerptTokens":[{"kind":"Reference","text":"union","canonicalReference":"@discordjs/collection!Collection#union"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":">("},{"kind":"Reference","text":"other","canonicalReference":"@discordjs/collection!~other"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":">"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"OtherValue"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":842,"fileColumn":9,"typeParameters":[{"typeParameterName":"OtherValue","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"other","parameterTypeTokenRange":{"startIndex":6,"endIndex":12},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"union"}],"extendsTokenRange":{"startIndex":7,"endIndex":13,"typeParameters":[{"startIndex":9,"endIndex":10},{"startIndex":11,"endIndex":12}]},"implementsTokenRanges":[]},{"kind":"TypeAlias","canonicalReference":"@discordjs/collection!ReadonlyCollection:type","docComment":"/**\n * Represents an immutable version of a collection\n */\n","excerptTokens":[{"kind":"Content","text":"export type "},{"kind":"Reference","text":"ReadonlyCollection","canonicalReference":"@discordjs/collection!ReadonlyCollection:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":"> = "},{"kind":"Reference","text":"Omit","canonicalReference":"!Omit:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Collection","canonicalReference":"@discordjs/collection!Collection:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">, 'delete' | 'ensure' | 'forEach' | 'get' | 'reverse' | 'set' | 'sort' | 'sweep'> & "},{"kind":"Reference","text":"ReadonlyMap","canonicalReference":"!ReadonlyMap:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Key"},{"kind":"Content","text":", "},{"kind":"Reference","text":"Value"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileUrlPath":"src/collection.ts","fileLine":16,"fileColumn":1,"releaseTag":"Public","name":"ReadonlyCollection","typeParameters":[{"typeParameterName":"Key","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}},{"typeParameterName":"Value","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"typeTokenRange":{"startIndex":7,"endIndex":21}},{"kind":"Variable","canonicalReference":"@discordjs/collection!version:var","docComment":"/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/collection#readme | @discordjs/collection} version that you are currently using.\n */\n","excerptTokens":[{"kind":"Reference","text":"version","canonicalReference":"@discordjs/collection!version"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"}],"fileUrlPath":"src/index.ts","fileLine":8,"fileColumn":14,"isReadonly":true,"releaseTag":"Public","name":"version","variableTypeTokenRange":{"startIndex":2,"endIndex":3}}]}]}