{
  "metadata": {
    "toolPackage": "@microsoft/api-extractor",
    "toolVersion": "7.28.4",
    "schemaVersion": 1009,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "kind": "Package",
  "canonicalReference": "@discordjs/collection!",
  "docComment": "",
  "name": "@discordjs/collection",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@discordjs/collection!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/collection!Collection:class",
          "docComment": "/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has an ID, for significantly improved performance and ease-of-use.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare class Collection<K, V> extends "
            },
            {
              "kind": "Reference",
              "text": "Map",
              "canonicalReference": "!Map:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V> "
            }
          ],
          "releaseTag": "Public",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "Collection",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#at:member(1)",
              "docComment": "/**\n * Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at). Returns the item at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the element to obtain\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "at(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "at"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#clone:member(1)",
              "docComment": "/**\n * Creates an identical shallow copy of this collection.\n *\n * @example\n *\n * const newColl = someColl.clone();\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "clone(): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "clone"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection.combineEntries:member(1)",
              "docComment": "/**\n * Creates a Collection from a list of entries.\n *\n * @param entries - The list of entries\n *\n * @param combine - Function to combine an existing entry with a new one\n *\n * @example\n *\n * Collection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y); // returns Collection { \"a\" => 3, \"b\" => 2 }\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "static combineEntries<K, V>(entries: "
                },
                {
                  "kind": "Reference",
                  "text": "Iterable",
                  "canonicalReference": "!Iterable:interface"
                },
                {
                  "kind": "Content",
                  "text": "<[K, V]>"
                },
                {
                  "kind": "Content",
                  "text": ", combine: "
                },
                {
                  "kind": "Content",
                  "text": "(firstValue: V, secondValue: V, key: K) => V"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "entries",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "combine",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "combineEntries"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#concat:member(1)",
              "docComment": "/**\n * Combines this collection with others into a new collection. None of the source collections are modified.\n *\n * @param collections - Collections to merge\n *\n * @example\n *\n * const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "concat(...collections: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyCollection",
                  "canonicalReference": "@discordjs/collection!~ReadonlyCollection:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collections",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "concat"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#difference:member(1)",
              "docComment": "/**\n * The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.\n *\n * @param other - The other Collection to filter against\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "difference<T>(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyCollection",
                  "canonicalReference": "@discordjs/collection!~ReadonlyCollection:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V | T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "difference"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#each:member(1)",
              "docComment": "/**\n * Identical to [Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach), but returns the collection instead of undefined.\n *\n * @param fn - Function to execute for each element\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection .each(user => console.log(user.username)) .filter(user => user.bot) .each(user => console.log(user.username));\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "each(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "each"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#each:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "each<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: T, value: V, key: K, collection: this) => void"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "each"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#ensure:member(1)",
              "docComment": "/**\n * Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.\n *\n * @param key - The key to get if it exists, or set otherwise\n *\n * @param defaultValueGenerator - A function that generates the default value\n *\n * @example\n *\n * collection.ensure(guildId, () => defaultGuildConfig);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "ensure(key: "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ", defaultValueGenerator: "
                },
                {
                  "kind": "Content",
                  "text": "(key: K, collection: this) => V"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "key",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "defaultValueGenerator",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "ensure"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#equals:member(1)",
              "docComment": "/**\n * Checks if this collection shares identical items with another. This is different to checking for equality using equal-signs, because the collections may be different objects, but contain the same data.\n *\n * @param collection - Collection to compare with\n *\n * @returns Whether the collections have identical contents\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "equals(collection: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyCollection",
                  "canonicalReference": "@discordjs/collection!~ReadonlyCollection:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "collection",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "equals"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(1)",
              "docComment": "/**\n * Checks if all items passes a test. Identical in behavior to [Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.every(user => !user.bot);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every<K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every<V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every<This, K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every<This, V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this is "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#every:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "every<This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "every"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(1)",
              "docComment": "/**\n * Identical to [Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter), but returns a Collection instead of an Array.\n *\n * @param fn - The function to test with (should return boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.filter(user => user.username === 'Bob');\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter<K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter<V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter<This, K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter<This, V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#filter:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "filter<This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "filter"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#find:member(1)",
              "docComment": "/**\n * Searches for a single item where the given function returns a truthy value. This behaves like [Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find). <warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you should use the `get` method. See [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>\n *\n * @param fn - The function to test with (should return boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.find(user => user.username === 'Bob');\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find<V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V2 | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#find:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#find:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find<This, V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V2 | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#find:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "find<This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "find"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#findKey:member(1)",
              "docComment": "/**\n * Searches for the key of a single item where the given function returns a truthy value. This behaves like [Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex), but returns the key rather than the positional index.\n *\n * @param fn - The function to test with (should return boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.findKey(user => user.username === 'Bob');\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findKey<K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K2 | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#findKey:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findKey(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#findKey:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findKey<This, K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K2 | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#findKey:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "findKey<This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "findKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#first:member(1)",
              "docComment": "/**\n * Obtains the first value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the beginning\n *\n * @returns A single value if no amount is provided or an array of values, starting from the end if amount is negative\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "first(): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "first"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#first:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "first(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "first"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#firstKey:member(1)",
              "docComment": "/**\n * Obtains the first key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the beginning\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the end if amount is negative\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstKey(): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "firstKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#firstKey:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "firstKey(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "firstKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#flatMap:member(1)",
              "docComment": "/**\n * Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to [Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).\n *\n * @param fn - Function that produces a new Collection\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.flatMap(guild => guild.members.cache);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flatMap<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "flatMap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#flatMap:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "flatMap<T, This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 9
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 4
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "flatMap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#hasAll:member(1)",
              "docComment": "/**\n * Checks if all of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if all of the elements exist, `false` if at least one does not exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasAll(...keys: "
                },
                {
                  "kind": "Content",
                  "text": "K[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keys",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasAll"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#hasAny:member(1)",
              "docComment": "/**\n * Checks if any of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if any of the elements exist, `false` if none exist.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "hasAny(...keys: "
                },
                {
                  "kind": "Content",
                  "text": "K[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "keys",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "hasAny"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#intersect:member(1)",
              "docComment": "/**\n * The intersect method returns a new structure containing items where the keys and values are present in both original structures.\n *\n * @param other - The other Collection to filter against\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "intersect<T>(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyCollection",
                  "canonicalReference": "@discordjs/collection!~ReadonlyCollection:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "intersect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#keyAt:member(1)",
              "docComment": "/**\n * Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at). Returns the key at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the key to obtain\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "keyAt(index: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "keyAt"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#last:member(1)",
              "docComment": "/**\n * Obtains the last value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the end\n *\n * @returns A single value if no amount is provided or an array of values, starting from the start if amount is negative\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "last(): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "last"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#last:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "last(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "last"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#lastKey:member(1)",
              "docComment": "/**\n * Obtains the last key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the end\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the start if amount is negative\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastKey(): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "lastKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#lastKey:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "lastKey(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "lastKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#map:member(1)",
              "docComment": "/**\n * Maps each item to another value into an array. Identical in behavior to [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\n *\n * @param fn - Function that produces an element of the new array, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.map(user => user.tag);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#map:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "map<This, T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => T"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "map"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#mapValues:member(1)",
              "docComment": "/**\n * Maps each item to another value into a collection. Identical in behavior to [Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).\n *\n * @param fn - Function that produces an element of the new collection, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.mapValues(user => user.tag);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapValues<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#mapValues:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "mapValues<This, T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => T"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "mapValues"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#merge:member(1)",
              "docComment": "/**\n * Merges two Collections together into a new Collection.\n *\n * @param other - The other Collection to merge with\n *\n * @param whenInSelf - Function getting the result if the entry only exists in this Collection\n *\n * @param whenInOther - Function getting the result if the entry only exists in the other Collection\n *\n * @param whenInBoth - Function getting the result if the entry exists in both Collections\n *\n * @example\n *\n * // Sums up the entries in two collections. coll.merge( other, x => ({ keep: true, value: x }), y => ({ keep: true, value: y }), (x, y) => ({ keep: true, value: x + y }), );\n *\n * @example\n *\n * // Intersects two collections in a left-biased manner. coll.merge( other, x => ({ keep: false }), y => ({ keep: false }), (x, _) => ({ keep: true, value: x }), );\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "merge<T, R>(other: "
                },
                {
                  "kind": "Reference",
                  "text": "ReadonlyCollection",
                  "canonicalReference": "@discordjs/collection!~ReadonlyCollection:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, T>"
                },
                {
                  "kind": "Content",
                  "text": ", whenInSelf: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K) => "
                },
                {
                  "kind": "Reference",
                  "text": "Keep",
                  "canonicalReference": "@discordjs/collection!~Keep:type"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ", whenInOther: "
                },
                {
                  "kind": "Content",
                  "text": "(valueOther: T, key: K) => "
                },
                {
                  "kind": "Reference",
                  "text": "Keep",
                  "canonicalReference": "@discordjs/collection!~Keep:type"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": ", whenInBoth: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, valueOther: T, key: K) => "
                },
                {
                  "kind": "Reference",
                  "text": "Keep",
                  "canonicalReference": "@discordjs/collection!~Keep:type"
                },
                {
                  "kind": "Content",
                  "text": "<R>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, R>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "R",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 16,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "other",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "whenInSelf",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "whenInOther",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "whenInBoth",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 15
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "merge"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(1)",
              "docComment": "/**\n * Partitions the collection into two collections where the first collection contains the items that passed and the second contains the items that failed.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * const [big, small] = collection.partition(guild => guild.memberCount > 250);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition<K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, K2>, V>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition<V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<V, V2>>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(3)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 8
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 3,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(4)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition<This, K2 extends "
                },
                {
                  "kind": "Content",
                  "text": "K"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/collection!~key"
                },
                {
                  "kind": "Content",
                  "text": " is K2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K2, V>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, K2>, V>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "K2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 4,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(5)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition<This, V2 extends "
                },
                {
                  "kind": "Content",
                  "text": "V"
                },
                {
                  "kind": "Content",
                  "text": ">(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => "
                },
                {
                  "kind": "Reference",
                  "text": "value",
                  "canonicalReference": "@discordjs/collection!~value"
                },
                {
                  "kind": "Content",
                  "text": " is V2"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V2>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, "
                },
                {
                  "kind": "Reference",
                  "text": "Exclude",
                  "canonicalReference": "!Exclude:type"
                },
                {
                  "kind": "Content",
                  "text": "<V, V2>>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                },
                {
                  "typeParameterName": "V2",
                  "constraintTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 5,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#partition:member(6)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "partition<This>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: This, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "This"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "["
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>, "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "This",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 6,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "partition"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#random:member(1)",
              "docComment": "/**\n * Obtains unique random value(s) from this collection.\n *\n * @param amount - Amount of values to obtain randomly\n *\n * @returns A single value if no amount is provided or an array of values\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "random(): "
                },
                {
                  "kind": "Content",
                  "text": "V | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "random"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#random:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "random(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "V[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "random"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#randomKey:member(1)",
              "docComment": "/**\n * Obtains unique random key(s) from this collection.\n *\n * @param amount - Amount of keys to obtain randomly\n *\n * @returns A single key if no amount is provided or an array\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomKey(): "
                },
                {
                  "kind": "Content",
                  "text": "K | undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "randomKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#randomKey:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "randomKey(amount: "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "K[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "amount",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "randomKey"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#reduce:member(1)",
              "docComment": "/**\n * Applies a function to produce a single value. Identical in behavior to [Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).\n *\n * @param fn - Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`, and `collection`\n *\n * @param initialValue - Starting value for the accumulator\n *\n * @example\n *\n * collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reduce<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(accumulator: T, value: V, key: K, collection: this) => T"
                },
                {
                  "kind": "Content",
                  "text": ", initialValue?: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "initialValue",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "reduce"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#reverse:member(1)",
              "docComment": "/**\n * Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse) but returns a Collection instead of an Array.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "reverse(): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "reverse"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#some:member(1)",
              "docComment": "/**\n * Checks if there exists an item that passes a test. Identical in behavior to [Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection.some(user => user.discriminator === '0000');\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "some(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "some"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#some:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "some<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: T, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "some"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#sort:member(1)",
              "docComment": "/**\n * The sort method sorts the items of a collection in place and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n *\n * collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sort(compareFunction?: "
                },
                {
                  "kind": "Reference",
                  "text": "Comparator",
                  "canonicalReference": "@discordjs/collection!~Comparator:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 5
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFunction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "sort"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#sorted:member(1)",
              "docComment": "/**\n * The sorted method sorts the items of a collection and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n *\n * collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sorted(compareFunction?: "
                },
                {
                  "kind": "Reference",
                  "text": "Comparator",
                  "canonicalReference": "@discordjs/collection!~Comparator:type"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!~Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<K, V>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 4,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "compareFunction",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 3
                  },
                  "isOptional": true
                }
              ],
              "isOptional": false,
              "name": "sorted"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#sweep:member(1)",
              "docComment": "/**\n * Removes items that satisfy the provided filter function.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @returns The number of removed entries\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sweep(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "sweep"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#sweep:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "sweep<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: T, value: V, key: K, collection: this) => boolean"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "sweep"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#tap:member(1)",
              "docComment": "/**\n * Runs a function on the collection and returns the collection.\n *\n * @param fn - Function to execute\n *\n * @param thisArg - Value to use as `this` when executing function\n *\n * @example\n *\n * collection .tap(coll => console.log(coll.size)) .filter(user => user.bot) .tap(coll => console.log(coll.size))\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tap(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(collection: this) => void"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "tap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#tap:member(2)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "tap<T>(fn: "
                },
                {
                  "kind": "Content",
                  "text": "(this: T, collection: this) => void"
                },
                {
                  "kind": "Content",
                  "text": ", thisArg: "
                },
                {
                  "kind": "Content",
                  "text": "T"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "typeParameters": [
                {
                  "typeParameterName": "T",
                  "constraintTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  },
                  "defaultTypeTokenRange": {
                    "startIndex": 0,
                    "endIndex": 0
                  }
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "fn",
                  "parameterTypeTokenRange": {
                    "startIndex": 1,
                    "endIndex": 2
                  },
                  "isOptional": false
                },
                {
                  "parameterName": "thisArg",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false
                }
              ],
              "isOptional": false,
              "name": "tap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/collection!Collection#toJSON:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "toJSON(): "
                },
                {
                  "kind": "Content",
                  "text": "V[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "name": "toJSON"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 1,
            "endIndex": 2
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/collection!ReadonlyCollection:type",
          "docComment": "/**\n * Represents an immutable version of a collection\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "declare type ReadonlyCollection<K, V> = "
            },
            {
              "kind": "Reference",
              "text": "ReadonlyMap",
              "canonicalReference": "!ReadonlyMap:interface"
            },
            {
              "kind": "Content",
              "text": "<K, V> & "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Collection",
              "canonicalReference": "@discordjs/collection!~Collection:class"
            },
            {
              "kind": "Content",
              "text": "<K, V>, 'forEach' | 'ensure' | 'reverse' | 'sweep' | 'sort' | 'get' | 'set' | 'delete'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "releaseTag": "Public",
          "name": "ReadonlyCollection",
          "typeParameters": [
            {
              "typeParameterName": "K",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            },
            {
              "typeParameterName": "V",
              "constraintTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "typeTokenRange": {
            "startIndex": 1,
            "endIndex": 7
          }
        }
      ]
    }
  ]
}
