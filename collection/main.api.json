{"meta":{"tpk":"@discordjs/api-extractor","tv":"7.38.1","v":1013,"ov":1013,"ts":{"$schema":"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json","noStandardTags":true,"tagDefinitions":[{"tagName":"@alpha","syntaxKind":"modifier"},{"tagName":"@beta","syntaxKind":"modifier"},{"tagName":"@defaultValue","syntaxKind":"block"},{"tagName":"@decorator","syntaxKind":"block","allowMultiple":true},{"tagName":"@deprecated","syntaxKind":"block"},{"tagName":"@eventProperty","syntaxKind":"modifier"},{"tagName":"@example","syntaxKind":"block","allowMultiple":true},{"tagName":"@experimental","syntaxKind":"modifier"},{"tagName":"@inheritDoc","syntaxKind":"inline"},{"tagName":"@internal","syntaxKind":"modifier"},{"tagName":"@label","syntaxKind":"inline"},{"tagName":"@link","syntaxKind":"inline","allowMultiple":true},{"tagName":"@override","syntaxKind":"modifier"},{"tagName":"@packageDocumentation","syntaxKind":"modifier"},{"tagName":"@param","syntaxKind":"block","allowMultiple":true},{"tagName":"@privateRemarks","syntaxKind":"block"},{"tagName":"@public","syntaxKind":"modifier"},{"tagName":"@readonly","syntaxKind":"modifier"},{"tagName":"@remarks","syntaxKind":"block"},{"tagName":"@returns","syntaxKind":"block"},{"tagName":"@sealed","syntaxKind":"modifier"},{"tagName":"@see","syntaxKind":"block"},{"tagName":"@throws","syntaxKind":"block","allowMultiple":true},{"tagName":"@typeParam","syntaxKind":"block","allowMultiple":true},{"tagName":"@virtual","syntaxKind":"modifier"},{"tagName":"@betaDocumentation","syntaxKind":"modifier"},{"tagName":"@internalRemarks","syntaxKind":"block"},{"tagName":"@preapproved","syntaxKind":"modifier"},{"tagName":"@mixes","syntaxKind":"block"}],"supportForTags":{"@alpha":true,"@beta":true,"@defaultValue":true,"@decorator":true,"@deprecated":true,"@eventProperty":true,"@example":true,"@experimental":true,"@inheritDoc":true,"@internal":true,"@label":true,"@link":true,"@override":true,"@packageDocumentation":true,"@param":true,"@privateRemarks":true,"@public":true,"@readonly":true,"@remarks":true,"@returns":true,"@sealed":true,"@see":true,"@throws":true,"@typeParam":true,"@virtual":true,"@betaDocumentation":true,"@internalRemarks":true,"@preapproved":true},"reportUnsupportedHtmlElements":false}},"pdir":"https://github.com/discordjs/discord.js/tree/main/packages/collection","k":"Package","c":"@discordjs/collection!","d":"","n":"@discordjs/collection","pmo":false,"ms":[{"k":"EntryPoint","c":"@discordjs/collection!","n":"","pmo":false,"ms":[{"k":"Class","c":"@discordjs/collection!Collection:class","d":"/**\n * A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has an ID, for significantly improved performance and ease-of-use.\n *\n * @typeParam Key - The key type this collection holds\n *\n * @typeParam Value - The value type this collection holds\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> extends "},{"k":"Reference","t":"Map","c":"!Map:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/collection.ts","l":28,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ab":false,"n":"Collection","pmo":false,"ms":[{"k":"Method","c":"@discordjs/collection!Collection#at:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}. Returns the item at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the element to obtain\n */\n","ex":[{"k":"Reference","t":"at","c":"@discordjs/collection!Collection#at"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/collection!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":157,"co":9,"sta":false,"rtr":{"st":6,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"at"},{"k":"Method","c":"@discordjs/collection!Collection#clone:member(1)","d":"/**\n * Creates an identical shallow copy of this collection.\n *\n * @example\n * ```ts\n * const newColl = someColl.clone();\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"clone","c":"@discordjs/collection!Collection#clone"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":789,"co":9,"sta":false,"rtr":{"st":2,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clone"},{"k":"Method","c":"@discordjs/collection!Collection.combineEntries:member(1)","d":"/**\n * Creates a Collection from a list of entries.\n *\n * @param entries - The list of entries\n *\n * @param combine - Function to combine an existing entry with a new one\n *\n * @example\n * ```ts\n * Collection.combineEntries([[\"a\", 1], [\"b\", 2], [\"a\", 2]], (x, y) => x + y);\n * // returns Collection { \"a\" => 3, \"b\" => 2 }\n * ```\n *\n */\n","ex":[{"k":"Content","t":"static "},{"k":"Reference","t":"combineEntries","c":"@discordjs/collection!Collection.combineEntries"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"entries","c":"@discordjs/collection!~entries"},{"k":"Content","t":": "},{"k":"Reference","t":"Iterable","c":"!Iterable:interface"},{"k":"Content","t":"<["},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"]>"},{"k":"Content","t":", "},{"k":"Reference","t":"combine","c":"@discordjs/collection!~combine"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"firstValue","c":"@discordjs/collection!~firstValue"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"secondValue","c":"@discordjs/collection!~secondValue"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":") => "},{"k":"Reference","t":"Value"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1064,"co":2,"tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":true,"rtr":{"st":33,"en":39},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"entries","ptr":{"st":9,"en":15},"op":false,"rs":false},{"pn":"combine","ptr":{"st":18,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"combineEntries"},{"k":"Method","c":"@discordjs/collection!Collection#concat:member(1)","d":"/**\n * Combines this collection with others into a new collection. None of the source collections are modified.\n *\n * @param collections - Collections to merge\n *\n * @example\n * ```ts\n * const newColl = someColl.concat(someOtherColl, anotherColl, ohBoyAColl);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"concat","c":"@discordjs/collection!Collection#concat"},{"k":"Content","t":"(..."},{"k":"Reference","t":"collections","c":"@discordjs/collection!~collections"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":802,"co":9,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"collections","ptr":{"st":4,"en":10},"op":false,"rs":true}],"op":false,"ab":false,"n":"concat"},{"k":"Method","c":"@discordjs/collection!Collection#difference:member(1)","d":"/**\n * Returns a new collection containing the items where the key is present in this collection but not the other.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * console.log(col1.difference(col2));\n * // => Collection { 'b' => 2 }\n * console.log(col2.difference(col1));\n * // => Collection { 'c' => 3 }\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"difference","c":"@discordjs/collection!Collection#difference"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"@discordjs/collection!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"any"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":922,"co":9,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":4,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"difference"},{"k":"Method","c":"@discordjs/collection!Collection#each:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach | Map.forEach()}, but returns the collection instead of undefined.\n *\n * @param fn - Function to execute for each element\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection\n *  .each(user => console.log(user.username))\n *  .filter(user => user.bot)\n *  .each(user => console.log(user.username));\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"each","c":"@discordjs/collection!Collection#each"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":746,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"each"},{"k":"Method","c":"@discordjs/collection!Collection#each:member(2)","d":"","ex":[{"k":"Reference","t":"each","c":"@discordjs/collection!Collection#each"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":747,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"each"},{"k":"Method","c":"@discordjs/collection!Collection#ensure:member(1)","d":"/**\n * Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.\n *\n * @param key - The key to get if it exists, or set otherwise\n *\n * @param defaultValueGenerator - A function that generates the default value\n *\n * @example\n * ```ts\n * collection.ensure(guildId, () => defaultGuildConfig);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"ensure","c":"@discordjs/collection!Collection#ensure"},{"k":"Content","t":"("},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"defaultValueGenerator","c":"@discordjs/collection!~defaultValueGenerator"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"Value"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":";"}],"l":39,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"key","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"defaultValueGenerator","ptr":{"st":8,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"ensure"},{"k":"Method","c":"@discordjs/collection!Collection#equals:member(1)","d":"/**\n * Checks if this collection shares identical items with another. This is different to checking for equality using equal-signs, because the collections may be different objects, but contain the same data.\n *\n * @param collection - Collection to compare with\n *\n * @returns Whether the collections have identical contents\n */\n","ex":[{"k":"Reference","t":"equals","c":"@discordjs/collection!Collection#equals"},{"k":"Content","t":"("},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":819,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"collection","ptr":{"st":4,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"equals"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(1)","d":"/**\n * Checks if all items passes a test. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every | Array.every()}.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.every(user => !user.bot);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":"): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":621,"co":9,"tps":[{"tp":"NewKey","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":30},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(2)","d":"","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":624,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":30},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(3)","d":"","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":627,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(4)","d":"","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":628,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewKey","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":40},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(5)","d":"","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"this is "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":632,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":40},"r":"Public","pr":false,"oi":5,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#every:member(6)","d":"","ex":[{"k":"Reference","t":"every","c":"@discordjs/collection!Collection#every"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":636,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":6,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"every"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter | Array.filter()}, but returns a Collection instead of an Array.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.filter(user => user.username === 'Bob');\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":420,"co":9,"tps":[{"tp":"NewKey","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":29},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(2)","d":"","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":423,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":29},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(3)","d":"","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":426,"co":9,"sta":false,"rtr":{"st":17,"en":23},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(4)","d":"","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":427,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewKey","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":39},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(5)","d":"","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":431,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":39},"r":"Public","pr":false,"oi":5,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#filter:member(6)","d":"","ex":[{"k":"Reference","t":"filter","c":"@discordjs/collection!Collection#filter"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":435,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":33},"r":"Public","pr":false,"oi":6,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"filter"},{"k":"Method","c":"@discordjs/collection!Collection#find:member(1)","d":"/**\n * Searches for a single item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find | Array.find()}. All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you should use the `get` method. See {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get | MDN} for details.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.find(user => user.username === 'Bob');\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"find","c":"@discordjs/collection!Collection#find"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":267,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"find"},{"k":"Method","c":"@discordjs/collection!Collection#find:member(2)","d":"","ex":[{"k":"Reference","t":"find","c":"@discordjs/collection!Collection#find"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":270,"co":9,"sta":false,"rtr":{"st":17,"en":20},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"find"},{"k":"Method","c":"@discordjs/collection!Collection#find:member(3)","d":"","ex":[{"k":"Reference","t":"find","c":"@discordjs/collection!Collection#find"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":271,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":36},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"find"},{"k":"Method","c":"@discordjs/collection!Collection#find:member(4)","d":"","ex":[{"k":"Reference","t":"find","c":"@discordjs/collection!Collection#find"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":275,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":30},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"find"},{"k":"Method","c":"@discordjs/collection!Collection#findKey:member(1)","d":"/**\n * Searches for the key of a single item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex | Array.findIndex()}, but returns the key rather than the positional index.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.findKey(user => user.username === 'Bob');\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"findKey","c":"@discordjs/collection!Collection#findKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":301,"co":9,"tps":[{"tp":"NewKey","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"findKey"},{"k":"Method","c":"@discordjs/collection!Collection#findKey:member(2)","d":"","ex":[{"k":"Reference","t":"findKey","c":"@discordjs/collection!Collection#findKey"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":304,"co":9,"sta":false,"rtr":{"st":17,"en":20},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"findKey"},{"k":"Method","c":"@discordjs/collection!Collection#findKey:member(3)","d":"","ex":[{"k":"Reference","t":"findKey","c":"@discordjs/collection!Collection#findKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":305,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewKey","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":36},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"findKey"},{"k":"Method","c":"@discordjs/collection!Collection#findKey:member(4)","d":"","ex":[{"k":"Reference","t":"findKey","c":"@discordjs/collection!Collection#findKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":309,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":30},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"findKey"},{"k":"Method","c":"@discordjs/collection!Collection#findLast:member(1)","d":"/**\n * Searches for a last item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLast | Array.findLast()}.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n */\n","ex":[{"k":"Reference","t":"findLast","c":"@discordjs/collection!Collection#findLast"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":330,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLast"},{"k":"Method","c":"@discordjs/collection!Collection#findLast:member(2)","d":"","ex":[{"k":"Reference","t":"findLast","c":"@discordjs/collection!Collection#findLast"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":333,"co":9,"sta":false,"rtr":{"st":17,"en":20},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLast"},{"k":"Method","c":"@discordjs/collection!Collection#findLast:member(3)","d":"","ex":[{"k":"Reference","t":"findLast","c":"@discordjs/collection!Collection#findLast"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":334,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":36},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLast"},{"k":"Method","c":"@discordjs/collection!Collection#findLast:member(4)","d":"","ex":[{"k":"Reference","t":"findLast","c":"@discordjs/collection!Collection#findLast"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":338,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":30},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLast"},{"k":"Method","c":"@discordjs/collection!Collection#findLastKey:member(1)","d":"/**\n * Searches for the key of a last item where the given function returns a truthy value. This behaves like {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findLastIndex | Array.findLastIndex()}, but returns the key rather than the positional index.\n *\n * @param fn - The function to test with (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n */\n","ex":[{"k":"Reference","t":"findLastKey","c":"@discordjs/collection!Collection#findLastKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":363,"co":9,"tps":[{"tp":"NewKey","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLastKey"},{"k":"Method","c":"@discordjs/collection!Collection#findLastKey:member(2)","d":"","ex":[{"k":"Reference","t":"findLastKey","c":"@discordjs/collection!Collection#findLastKey"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":366,"co":9,"sta":false,"rtr":{"st":17,"en":20},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLastKey"},{"k":"Method","c":"@discordjs/collection!Collection#findLastKey:member(3)","d":"","ex":[{"k":"Reference","t":"findLastKey","c":"@discordjs/collection!Collection#findLastKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":367,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewKey","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":36},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLastKey"},{"k":"Method","c":"@discordjs/collection!Collection#findLastKey:member(4)","d":"","ex":[{"k":"Reference","t":"findLastKey","c":"@discordjs/collection!Collection#findLastKey"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":371,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":30},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"findLastKey"},{"k":"Method","c":"@discordjs/collection!Collection#first:member(1)","d":"/**\n * Obtains the first value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the beginning\n *\n * @returns A single value if no amount is provided or an array of values, starting from the end if amount is negative\n */\n","ex":[{"k":"Reference","t":"first","c":"@discordjs/collection!Collection#first"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":73,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"first"},{"k":"Method","c":"@discordjs/collection!Collection#first:member(2)","d":"","ex":[{"k":"Reference","t":"first","c":"@discordjs/collection!Collection#first"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":74,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"first"},{"k":"Method","c":"@discordjs/collection!Collection#firstKey:member(1)","d":"/**\n * Obtains the first key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the beginning\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the end if amount is negative\n */\n","ex":[{"k":"Reference","t":"firstKey","c":"@discordjs/collection!Collection#firstKey"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":97,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"firstKey"},{"k":"Method","c":"@discordjs/collection!Collection#firstKey:member(2)","d":"","ex":[{"k":"Reference","t":"firstKey","c":"@discordjs/collection!Collection#firstKey"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":98,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"firstKey"},{"k":"Method","c":"@discordjs/collection!Collection#flatMap:member(1)","d":"/**\n * Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap | Array.flatMap()}.\n *\n * @param fn - Function that produces a new Collection\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.flatMap(guild => guild.members.cache);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"flatMap","c":"@discordjs/collection!Collection#flatMap"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":514,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":24,"en":30},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":6,"en":23},"op":false,"rs":false}],"op":false,"ab":false,"n":"flatMap"},{"k":"Method","c":"@discordjs/collection!Collection#flatMap:member(2)","d":"","ex":[{"k":"Reference","t":"flatMap","c":"@discordjs/collection!Collection#flatMap"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":517,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":34,"en":40},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":29},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":32,"en":33},"op":false,"rs":false}],"op":false,"ab":false,"n":"flatMap"},{"k":"Method","c":"@discordjs/collection!Collection#hasAll:member(1)","d":"/**\n * Checks if all of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if all of the elements exist, `false` if at least one does not exist.\n */\n","ex":[{"k":"Reference","t":"hasAll","c":"@discordjs/collection!Collection#hasAll"},{"k":"Content","t":"(..."},{"k":"Reference","t":"keys","c":"@discordjs/collection!~keys"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":53,"co":9,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"keys","ptr":{"st":4,"en":6},"op":false,"rs":true}],"op":false,"ab":false,"n":"hasAll"},{"k":"Method","c":"@discordjs/collection!Collection#hasAny:member(1)","d":"/**\n * Checks if any of the elements exist in the collection.\n *\n * @param keys - The keys of the elements to check for\n *\n * @returns `true` if any of the elements exist, `false` if none exist.\n */\n","ex":[{"k":"Reference","t":"hasAny","c":"@discordjs/collection!Collection#hasAny"},{"k":"Content","t":"(..."},{"k":"Reference","t":"keys","c":"@discordjs/collection!~keys"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":"[]"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":63,"co":9,"sta":false,"rtr":{"st":7,"en":8},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"keys","ptr":{"st":4,"en":6},"op":false,"rs":true}],"op":false,"ab":false,"n":"hasAny"},{"k":"Method","c":"@discordjs/collection!Collection#intersection:member(1)","d":"/**\n * The intersection method returns a new collection containing the items where the key is present in both collections.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * const intersection = col1.intersection(col2);\n * console.log(col1.intersection(col2));\n * // => Collection { 'a' => 1 }\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"intersection","c":"@discordjs/collection!Collection#intersection"},{"k":"Content","t":"("},{"k":"Reference","t":"other","c":"@discordjs/collection!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"any"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":872,"co":9,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":4,"en":10},"op":false,"rs":false}],"op":false,"ab":false,"n":"intersection"},{"k":"Method","c":"@discordjs/collection!Collection#keyAt:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at | Array.at()}. Returns the key at a given index, allowing for positive and negative integers. Negative integers count back from the last item in the collection.\n *\n * @param index - The index of the key to obtain\n */\n","ex":[{"k":"Reference","t":"keyAt","c":"@discordjs/collection!Collection#keyAt"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/collection!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":181,"co":9,"sta":false,"rtr":{"st":6,"en":9},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"keyAt"},{"k":"Method","c":"@discordjs/collection!Collection#last:member(1)","d":"/**\n * Obtains the last value(s) in this collection.\n *\n * @param amount - Amount of values to obtain from the end\n *\n * @returns A single value if no amount is provided or an array of values, starting from the start if amount is negative\n */\n","ex":[{"k":"Reference","t":"last","c":"@discordjs/collection!Collection#last"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":121,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"last"},{"k":"Method","c":"@discordjs/collection!Collection#last:member(2)","d":"","ex":[{"k":"Reference","t":"last","c":"@discordjs/collection!Collection#last"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":122,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"last"},{"k":"Method","c":"@discordjs/collection!Collection#lastKey:member(1)","d":"/**\n * Obtains the last key(s) in this collection.\n *\n * @param amount - Amount of keys to obtain from the end\n *\n * @returns A single key if no amount is provided or an array of keys, starting from the start if amount is negative\n */\n","ex":[{"k":"Reference","t":"lastKey","c":"@discordjs/collection!Collection#lastKey"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":139,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"lastKey"},{"k":"Method","c":"@discordjs/collection!Collection#lastKey:member(2)","d":"","ex":[{"k":"Reference","t":"lastKey","c":"@discordjs/collection!Collection#lastKey"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":140,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"lastKey"},{"k":"Method","c":"@discordjs/collection!Collection#map:member(1)","d":"/**\n * Maps each item to another value into an array. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n *\n * @param fn - Function that produces an element of the new array, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.map(user => user.tag);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"map","c":"@discordjs/collection!Collection#map"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":541,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":19,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":6,"en":18},"op":false,"rs":false}],"op":false,"ab":false,"n":"map"},{"k":"Method","c":"@discordjs/collection!Collection#map:member(2)","d":"","ex":[{"k":"Reference","t":"map","c":"@discordjs/collection!Collection#map"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":542,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":29,"en":31},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":24},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":27,"en":28},"op":false,"rs":false}],"op":false,"ab":false,"n":"map"},{"k":"Method","c":"@discordjs/collection!Collection#mapValues:member(1)","d":"/**\n * Maps each item to another value into a collection. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map | Array.map()}.\n *\n * @param fn - Function that produces an element of the new collection, taking three arguments\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.mapValues(user => user.tag);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"mapValues","c":"@discordjs/collection!Collection#mapValues"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":571,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":19,"en":25},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":6,"en":18},"op":false,"rs":false}],"op":false,"ab":false,"n":"mapValues"},{"k":"Method","c":"@discordjs/collection!Collection#mapValues:member(2)","d":"","ex":[{"k":"Reference","t":"mapValues","c":"@discordjs/collection!Collection#mapValues"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":572,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":29,"en":35},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":24},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":27,"en":28},"op":false,"rs":false}],"op":false,"ab":false,"n":"mapValues"},{"k":"Method","c":"@discordjs/collection!Collection#merge:member(1)","d":"/**\n * Merges two Collections together into a new Collection.\n *\n * @param other - The other Collection to merge with\n *\n * @param whenInSelf - Function getting the result if the entry only exists in this Collection\n *\n * @param whenInOther - Function getting the result if the entry only exists in the other Collection\n *\n * @param whenInBoth - Function getting the result if the entry exists in both Collections\n *\n * @example\n * ```ts\n * // Sums up the entries in two collections.\n * coll.merge(\n *  other,\n *  x => ({ keep: true, value: x }),\n *  y => ({ keep: true, value: y }),\n *  (x, y) => ({ keep: true, value: x + y }),\n * );\n * ```\n *\n * @example\n * ```ts\n * // Intersects two collections in a left-biased manner.\n * coll.merge(\n *  other,\n *  x => ({ keep: false }),\n *  y => ({ keep: false }),\n *  (x, _) => ({ keep: true, value: x }),\n * );\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"merge","c":"@discordjs/collection!Collection#merge"},{"k":"Content","t":"<"},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":", "},{"k":"Reference","t":"ResultValue"},{"k":"Content","t":">("},{"k":"Reference","t":"other","c":"@discordjs/collection!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"whenInSelf","c":"@discordjs/collection!~whenInSelf"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":") => "},{"k":"Reference","t":"Keep","c":"@discordjs/collection!Keep:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResultValue"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"whenInOther","c":"@discordjs/collection!~whenInOther"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"valueOther","c":"@discordjs/collection!~valueOther"},{"k":"Content","t":": "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":") => "},{"k":"Reference","t":"Keep","c":"@discordjs/collection!Keep:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResultValue"},{"k":"Content","t":">"},{"k":"Content","t":", "},{"k":"Reference","t":"whenInBoth","c":"@discordjs/collection!~whenInBoth"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"valueOther","c":"@discordjs/collection!~valueOther"},{"k":"Content","t":": "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":") => "},{"k":"Reference","t":"Keep","c":"@discordjs/collection!Keep:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResultValue"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"ResultValue"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":989,"co":9,"tps":[{"tp":"OtherValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"ResultValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":67,"en":73},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":8,"en":14},"op":false,"rs":false},{"pn":"whenInSelf","ptr":{"st":17,"en":30},"op":false,"rs":false},{"pn":"whenInOther","ptr":{"st":33,"en":46},"op":false,"rs":false},{"pn":"whenInBoth","ptr":{"st":49,"en":66},"op":false,"rs":false}],"op":false,"ab":false,"n":"merge"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(1)","d":"/**\n * Partitions the collection into two collections where the first collection contains the items that passed and the second contains the items that failed.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * const [big, small] = collection.partition(guild => guild.memberCount > 250);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":">, "},{"k":"Reference","t":"Value"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":461,"co":9,"tps":[{"tp":"NewKey","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":40},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(2)","d":"","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">>]"},{"k":"Content","t":";"}],"l":464,"co":9,"tps":[{"tp":"NewValue","ctr":{"st":4,"en":5},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":23,"en":40},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":8,"en":22},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(3)","d":"","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":467,"co":9,"sta":false,"rtr":{"st":17,"en":30},"r":"Public","pr":false,"oi":3,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(4)","d":"","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Key"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"NewKey"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewKey"},{"k":"Content","t":">, "},{"k":"Reference","t":"Value"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":470,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewKey","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":50},"r":"Public","pr":false,"oi":4,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(5)","d":"","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Value"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":" is "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Exclude","c":"!Exclude:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"NewValue"},{"k":"Content","t":">>]"},{"k":"Content","t":";"}],"l":474,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"NewValue","ctr":{"st":6,"en":7},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":33,"en":50},"r":"Public","pr":false,"oi":5,"ps":[{"pn":"fn","ptr":{"st":10,"en":28},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":31,"en":32},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#partition:member(6)","d":"","ex":[{"k":"Reference","t":"partition","c":"@discordjs/collection!Collection#partition"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"["},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":478,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":40},"r":"Public","pr":false,"oi":6,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"partition"},{"k":"Method","c":"@discordjs/collection!Collection#random:member(1)","d":"/**\n * Obtains unique random value(s) from this collection.\n *\n * @param amount - Amount of values to obtain randomly\n *\n * @returns A single value if no amount is provided or an array of values\n */\n","ex":[{"k":"Reference","t":"random","c":"@discordjs/collection!Collection#random"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Value"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":204,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"random"},{"k":"Method","c":"@discordjs/collection!Collection#random:member(2)","d":"","ex":[{"k":"Reference","t":"random","c":"@discordjs/collection!Collection#random"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":205,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"random"},{"k":"Method","c":"@discordjs/collection!Collection#randomKey:member(1)","d":"/**\n * Obtains unique random key(s) from this collection.\n *\n * @param amount - Amount of keys to obtain randomly\n *\n * @returns A single key if no amount is provided or an array\n */\n","ex":[{"k":"Reference","t":"randomKey","c":"@discordjs/collection!Collection#randomKey"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Key"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":226,"co":9,"sta":false,"rtr":{"st":2,"en":5},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"randomKey"},{"k":"Method","c":"@discordjs/collection!Collection#randomKey:member(2)","d":"","ex":[{"k":"Reference","t":"randomKey","c":"@discordjs/collection!Collection#randomKey"},{"k":"Content","t":"("},{"k":"Reference","t":"amount","c":"@discordjs/collection!~amount"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"Key"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":227,"co":9,"sta":false,"rtr":{"st":6,"en":8},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"amount","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"randomKey"},{"k":"Method","c":"@discordjs/collection!Collection#reduce:member(1)","d":"/**\n * Applies a function to produce a single value. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce | Array.reduce()}.\n *\n * @param fn - Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`, and `collection`\n *\n * @param initialValue - Starting value for the accumulator\n *\n * @example\n * ```ts\n * collection.reduce((acc, guild) => acc + guild.memberCount, 0);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"reduce","c":"@discordjs/collection!Collection#reduce"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"accumulator","c":"@discordjs/collection!~accumulator"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"initialValue","c":"@discordjs/collection!~initialValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Value"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":";"}],"l":659,"co":9,"sta":false,"rtr":{"st":25,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":20},"op":false,"rs":false},{"pn":"initialValue","ptr":{"st":23,"en":24},"op":true,"rs":false}],"op":false,"ab":false,"n":"reduce"},{"k":"Method","c":"@discordjs/collection!Collection#reduce:member(2)","d":"","ex":[{"k":"Reference","t":"reduce","c":"@discordjs/collection!Collection#reduce"},{"k":"Content","t":"<"},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"accumulator","c":"@discordjs/collection!~accumulator"},{"k":"Content","t":": "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":", "},{"k":"Reference","t":"initialValue","c":"@discordjs/collection!~initialValue"},{"k":"Content","t":": "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":";"}],"l":663,"co":9,"tps":[{"tp":"InitialValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"initialValue","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"reduce"},{"k":"Method","c":"@discordjs/collection!Collection#reduceRight:member(1)","d":"/**\n * Applies a function to produce a single value. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduceRight | Array.reduceRight()}.\n *\n * @param fn - Function used to reduce, taking four arguments; `accumulator`, `value`, `key`, and `collection`\n *\n * @param initialValue - Starting value for the accumulator\n */\n","ex":[{"k":"Reference","t":"reduceRight","c":"@discordjs/collection!Collection#reduceRight"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"accumulator","c":"@discordjs/collection!~accumulator"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"initialValue","c":"@discordjs/collection!~initialValue"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Value"},{"k":"Content","t":"): "},{"k":"Reference","t":"Value"},{"k":"Content","t":";"}],"l":696,"co":9,"sta":false,"rtr":{"st":25,"en":26},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":20},"op":false,"rs":false},{"pn":"initialValue","ptr":{"st":23,"en":24},"op":true,"rs":false}],"op":false,"ab":false,"n":"reduceRight"},{"k":"Method","c":"@discordjs/collection!Collection#reduceRight:member(2)","d":"","ex":[{"k":"Reference","t":"reduceRight","c":"@discordjs/collection!Collection#reduceRight"},{"k":"Content","t":"<"},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"accumulator","c":"@discordjs/collection!~accumulator"},{"k":"Content","t":": "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":", "},{"k":"Reference","t":"initialValue","c":"@discordjs/collection!~initialValue"},{"k":"Content","t":": "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":"): "},{"k":"Reference","t":"InitialValue"},{"k":"Content","t":";"}],"l":700,"co":9,"tps":[{"tp":"InitialValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"initialValue","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"reduceRight"},{"k":"Method","c":"@discordjs/collection!Collection#reverse:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse | Array.reverse()} but returns a Collection instead of an Array.\n */\n","ex":[{"k":"Reference","t":"reverse","c":"@discordjs/collection!Collection#reverse"},{"k":"Content","t":"(): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":246,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"reverse"},{"k":"Method","c":"@discordjs/collection!Collection#some:member(1)","d":"/**\n * Checks if there exists an item that passes a test. Identical in behavior to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some | Array.some()}.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection.some(user => user.discriminator === '0000');\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"some","c":"@discordjs/collection!Collection#some"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":598,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"some"},{"k":"Method","c":"@discordjs/collection!Collection#some:member(2)","d":"","ex":[{"k":"Reference","t":"some","c":"@discordjs/collection!Collection#some"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":599,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"some"},{"k":"Method","c":"@discordjs/collection!Collection#sort:member(1)","d":"/**\n * The sort method sorts the items of a collection in place and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n * ```ts\n * collection.sort((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"sort","c":"@discordjs/collection!Collection#sort"},{"k":"Content","t":"("},{"k":"Reference","t":"compareFunction","c":"@discordjs/collection!~compareFunction"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Comparator","c":"@discordjs/collection!Comparator:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":844,"co":9,"sta":false,"rtr":{"st":11,"en":12},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"compareFunction","ptr":{"st":4,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"sort"},{"k":"Method","c":"@discordjs/collection!Collection#sweep:member(1)","d":"/**\n * Removes items that satisfy the provided filter function.\n *\n * @param fn - Function used to test (should return a boolean)\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @returns The number of removed entries\n */\n","ex":[{"k":"Reference","t":"sweep","c":"@discordjs/collection!Collection#sweep"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":395,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":16},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweep"},{"k":"Method","c":"@discordjs/collection!Collection#sweep:member(2)","d":"","ex":[{"k":"Reference","t":"sweep","c":"@discordjs/collection!Collection#sweep"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"value","c":"@discordjs/collection!~value"},{"k":"Content","t":": "},{"k":"Reference","t":"Value"},{"k":"Content","t":", "},{"k":"Reference","t":"key","c":"@discordjs/collection!~key"},{"k":"Content","t":": "},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"unknown"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":396,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":27,"en":28},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":22},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":25,"en":26},"op":false,"rs":false}],"op":false,"ab":false,"n":"sweep"},{"k":"Method","c":"@discordjs/collection!Collection#symmetricDifference:member(1)","d":"/**\n * Returns a new collection containing only the items where the keys are present in either collection, but not both.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['c', 3]]);\n * const symmetricDifference = col1.symmetricDifference(col2);\n * console.log(col1.symmetricDifference(col2));\n * // => Collection { 'b' => 2, 'c' => 3 }\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"symmetricDifference","c":"@discordjs/collection!Collection#symmetricDifference"},{"k":"Content","t":"<"},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":">("},{"k":"Reference","t":"other","c":"@discordjs/collection!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":945,"co":9,"tps":[{"tp":"OtherValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":13,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":6,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"symmetricDifference"},{"k":"Method","c":"@discordjs/collection!Collection#tap:member(1)","d":"/**\n * Runs a function on the collection and returns the collection.\n *\n * @param fn - Function to execute\n *\n * @param thisArg - Value to use as `this` when executing the function\n *\n * @example\n * ```ts\n * collection\n *  .tap(coll => console.log(coll.size))\n *  .filter(user => user.bot)\n *  .tap(coll => console.log(coll.size))\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"tap","c":"@discordjs/collection!Collection#tap"},{"k":"Content","t":"("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"void"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":772,"co":9,"sta":false,"rtr":{"st":9,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fn","ptr":{"st":4,"en":8},"op":false,"rs":false}],"op":false,"ab":false,"n":"tap"},{"k":"Method","c":"@discordjs/collection!Collection#tap:member(2)","d":"","ex":[{"k":"Reference","t":"tap","c":"@discordjs/collection!Collection#tap"},{"k":"Content","t":"<"},{"k":"Reference","t":"This"},{"k":"Content","t":">("},{"k":"Reference","t":"fn","c":"@discordjs/collection!~fn"},{"k":"Content","t":": "},{"k":"Content","t":"("},{"k":"Reference","t":"this","c":"@discordjs/collection!~this"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":", "},{"k":"Reference","t":"collection","c":"@discordjs/collection!~collection"},{"k":"Content","t":": this) => "},{"k":"Reference","t":"void"},{"k":"Content","t":", "},{"k":"Reference","t":"thisArg","c":"@discordjs/collection!~thisArg"},{"k":"Content","t":": "},{"k":"Reference","t":"This"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":773,"co":9,"tps":[{"tp":"This","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":19,"en":20},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"fn","ptr":{"st":6,"en":14},"op":false,"rs":false},{"pn":"thisArg","ptr":{"st":17,"en":18},"op":false,"rs":false}],"op":false,"ab":false,"n":"tap"},{"k":"Method","c":"@discordjs/collection!Collection#toJSON:member(1)","d":"","ex":[{"k":"Reference","t":"toJSON","c":"@discordjs/collection!Collection#toJSON"},{"k":"Content","t":"(): "},{"k":"Content","t":"["},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"][]"},{"k":"Content","t":";"}],"l":1044,"co":9,"sta":false,"rtr":{"st":2,"en":7},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toJSON"},{"k":"Method","c":"@discordjs/collection!Collection#toReversed:member(1)","d":"/**\n * Identical to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/toReversed | Array.toReversed()} but returns a Collection instead of an Array.\n */\n","ex":[{"k":"Reference","t":"toReversed","c":"@discordjs/collection!Collection#toReversed"},{"k":"Content","t":"(): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1023,"co":9,"sta":false,"rtr":{"st":2,"en":8},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"toReversed"},{"k":"Method","c":"@discordjs/collection!Collection#toSorted:member(1)","d":"/**\n * The sorted method sorts the items of a collection and returns it. The sort is not necessarily stable in Node 10 or older. The default sort order is according to string Unicode code points.\n *\n * @param compareFunction - Specifies a function that defines the sort order. If omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n *\n * @example\n * ```ts\n * collection.sorted((userA, userB) => userA.createdTimestamp - userB.createdTimestamp);\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"toSorted","c":"@discordjs/collection!Collection#toSorted"},{"k":"Content","t":"("},{"k":"Reference","t":"compareFunction","c":"@discordjs/collection!~compareFunction"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Comparator","c":"@discordjs/collection!Comparator:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":1040,"co":9,"sta":false,"rtr":{"st":11,"en":17},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"compareFunction","ptr":{"st":4,"en":10},"op":true,"rs":false}],"op":false,"ab":false,"n":"toSorted"},{"k":"Method","c":"@discordjs/collection!Collection#union:member(1)","d":"/**\n * Returns a new collection containing the items where the key is present in either of the collections.\n *\n * @remarks\n *\n * If the collections have any items with the same key, the value from the first collection will be used.\n *\n * @param other - The other Collection to filter against\n *\n * @example\n * ```ts\n * const col1 = new Collection([['a', 1], ['b', 2]]);\n * const col2 = new Collection([['a', 1], ['b', 3], ['c', 3]]);\n * const union = col1.union(col2);\n * console.log(union);\n * // => Collection { 'a' => 1, 'b' => 2, 'c' => 3 }\n * ```\n *\n */\n","ex":[{"k":"Reference","t":"union","c":"@discordjs/collection!Collection#union"},{"k":"Content","t":"<"},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":">("},{"k":"Reference","t":"other","c":"@discordjs/collection!~other"},{"k":"Content","t":": "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"OtherValue"},{"k":"Content","t":" | "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":898,"co":9,"tps":[{"tp":"OtherValue","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"sta":false,"rtr":{"st":13,"en":21},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"other","ptr":{"st":6,"en":12},"op":false,"rs":false}],"op":false,"ab":false,"n":"union"}],"etr":{"st":7,"en":13,"tps":[{"st":9,"en":10},{"st":11,"en":12}]},"itrs":[]},{"k":"Interface","c":"@discordjs/collection!Collection:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> "}],"pat":"src/collection.ts","l":12,"co":1,"r":"Public","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"n":"Collection","pmo":false,"ms":[],"etrs":[]},{"k":"TypeAlias","c":"@discordjs/collection!ReadonlyCollection:type","d":"/**\n * Represents an immutable version of a collection\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ReadonlyCollection","c":"@discordjs/collection!ReadonlyCollection:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":"> = "},{"k":"Reference","t":"Omit","c":"!Omit:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">, 'clear' | 'delete' | 'ensure' | 'forEach' | 'get' | 'reverse' | 'set' | 'sort' | 'sweep'> & "},{"k":"Reference","t":"ReadonlyMap","c":"!ReadonlyMap:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"Key"},{"k":"Content","t":", "},{"k":"Reference","t":"Value"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/collection.ts","l":6,"co":1,"r":"Public","n":"ReadonlyCollection","tps":[{"tp":"Key","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}},{"tp":"Value","ctr":{"st":0,"en":0},"dtr":{"st":0,"en":0}}],"ttr":{"st":7,"en":21}},{"k":"Variable","c":"@discordjs/collection!version:var","d":"/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/collection#readme | @discordjs/collection} version that you are currently using.\n */\n","ex":[{"k":"Reference","t":"version","c":"@discordjs/collection!version"},{"k":"Content","t":": "},{"k":"Reference","t":"string"}],"pat":"src/index.ts","l":8,"co":14,"ro":true,"r":"Public","n":"version","vtr":{"st":2,"en":3}}]}]}