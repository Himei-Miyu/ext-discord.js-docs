{"meta":{"generator":"0.12.0-dev","format":30,"date":1654702196190},"classes":[{"name":"Collection","description":"A Map with additional utility methods. This is used throughout discord.js rather than Arrays for anything that has\nan ID, for significantly improved performance and ease-of-use.","extends":[[["Map","<"],["K",", "],["V",">"]]],"construct":{"name":"constructor","params":[{"data":{"id":40,"name":"entries","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"type":{"type":"union","types":[{"type":"literal","value":null},{"type":"typeOperator","operator":"readonly","target":{"type":"array","elementType":{"type":"typeOperator","operator":"readonly","target":{"type":"tuple","elements":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}]}}}}]}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}]},"props":[{"name":"[toStringTag]","readonly":true,"type":[[["string"]]],"meta":{"line":135,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"constructor","type":[[["CollectionConstructor"]]],"meta":{"line":24,"file":"index.ts","path":"packages/collection/src"}},{"name":"size","readonly":true,"type":[[["number"]]],"meta":{"line":28,"file":"lib.es2015.collection.d.ts","path":"node_modules/typescript/lib"}},{"name":"[species]","scope":"static","readonly":true,"type":[[["MapConstructor"]]],"meta":{"line":317,"file":"lib.es2015.symbol.wellknown.d.ts","path":"node_modules/typescript/lib"}},{"name":"default","scope":"static","readonly":true,"default":"Collection","type":[[["("],["typeof"," "],["Collection",")"]]],"meta":{"line":32,"file":"index.ts","path":"packages/collection/src"}}],"methods":[{"name":"[iterator]","description":"Returns an iterable of entries in the map.","returns":[[["IterableIterator","<["],["K",", "],["V","]>"]]]},{"name":"at","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the item at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"data":{"id":78,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The index of the element to obtain\n"},"type":{"type":"intrinsic","name":"number"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["undefined"," | "],["V"]]],"meta":{"line":154,"file":"index.ts","path":"packages/collection/src"}},{"name":"clear","returns":[[["void"]]]},{"name":"clone","description":"Creates an identical shallow copy of this collection.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":571,"file":"index.ts","path":"packages/collection/src"}},{"name":"concat","description":"Combines this collection with others into a new collection. None of the source collections are modified.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":477,"name":"collections","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"shortText":"Collections to merge\n"},"type":{"type":"array","elementType":{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"ReadonlyCollection"}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":583,"file":"index.ts","path":"packages/collection/src"}},{"name":"delete","params":[{"data":{"id":522,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":38,"name":"K"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["boolean"]]]},{"name":"difference","description":"The difference method returns a new structure containing items where the key is present in one of the original structures but not the other.","params":[{"data":{"id":491,"name":"other","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The other Collection to filter against\n"},"type":{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":490,"name":"T"}],"name":"ReadonlyCollection"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V"," | "],["T",">"]]],"meta":{"line":658,"file":"index.ts","path":"packages/collection/src"}},{"name":"each","description":"Identical to\n[Map.forEach()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/forEach),\nbut returns the collection instead of undefined.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":443,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function to execute for each element"},"type":{"type":"reflection","declaration":{"id":444,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":445,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":446,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":447,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":448,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"intrinsic","name":"void"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":538,"file":"index.ts","path":"packages/collection/src"}},{"name":"ensure","description":"Obtains the value of the given key if it exists, otherwise sets and returns the value provided by the default value generator.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":48,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The key to get if it exists, or set otherwise"},"type":{"type":"reference","id":38,"name":"K"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":49,"name":"defaultValueGenerator","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"A function that generates the default value\n"},"type":{"type":"reflection","declaration":{"id":50,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":51,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":52,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":53,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"reference","id":39,"name":"V"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["V"]]],"meta":{"line":43,"file":"index.ts","path":"packages/collection/src"}},{"name":"entries","description":"Returns an iterable of key, value pairs for every entry in the map.","returns":[[["IterableIterator","<["],["K",", "],["V","]>"]]]},{"name":"equals","description":"Checks if this collection shares identical items with another.\nThis is different to checking for equality using equal-signs, because\nthe collections may be different objects, but contain the same data.","params":[{"data":{"id":480,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Collection to compare with\n"},"type":{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"ReadonlyCollection"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":{"types":[[["boolean"]]],"description":"Whether the collections have identical contents"},"returnsDescription":"Whether the collections have identical contents","meta":{"line":600,"file":"index.ts","path":"packages/collection/src"}},{"name":"every","description":"Checks if all items passes a test. Identical in behavior to\n[Array.every()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/every).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":377,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function used to test (should return a boolean)"},"type":{"type":"reflection","declaration":{"id":378,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":379,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":380,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":381,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":382,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"predicate","name":"key","asserts":false,"targetType":{"type":"reference","id":376,"name":"K2"}}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["this"," "],["is"," "],["Collection","<"],["K2",", "],["V",">"]]],"meta":{"line":467,"file":"index.ts","path":"packages/collection/src"}},{"name":"filter","description":"Identical to\n[Array.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter),\nbut returns a Collection instead of an Array.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":187,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The function to test with (should return boolean)"},"type":{"type":"reflection","declaration":{"id":188,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":189,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":190,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":191,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":192,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"predicate","name":"key","asserts":false,"targetType":{"type":"reference","id":186,"name":"K2"}}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K2",", "],["V",">"]]],"meta":{"line":306,"file":"index.ts","path":"packages/collection/src"}},{"name":"find","description":"Searches for a single item where the given function returns a truthy value. This behaves like\n[Array.find()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find).\n<warn>All collections used in Discord.js are mapped using their `id` property, and if you want to find by id you\nshould use the `get` method. See\n[MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/get) for details.</warn>","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":95,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The function to test with (should return boolean)"},"type":{"type":"reflection","declaration":{"id":96,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":97,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":98,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":99,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":100,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"predicate","name":"value","asserts":false,"targetType":{"type":"reference","id":94,"name":"V2"}}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["undefined"," | "],["V2"]]],"meta":{"line":235,"file":"index.ts","path":"packages/collection/src"}},{"name":"findKey","description":"Searches for the key of a single item where the given function returns a truthy value. This behaves like\n[Array.findIndex()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/findIndex),\nbut returns the key rather than the positional index.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":132,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The function to test with (should return boolean)"},"type":{"type":"reflection","declaration":{"id":133,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":134,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":135,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":136,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":137,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"predicate","name":"key","asserts":false,"targetType":{"type":"reference","id":131,"name":"K2"}}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["undefined"," | "],["K2"]]],"meta":{"line":261,"file":"index.ts","path":"packages/collection/src"}},{"name":"first","description":"Obtains the first value(s) in this collection.","returns":{"types":[[["undefined"," | "],["V"]]],"description":"A single value if no amount is provided or an array of values, starting from the end if amount is negative"},"returnsDescription":"A single value if no amount is provided or an array of values, starting from the end if amount is negative","meta":{"line":79,"file":"index.ts","path":"packages/collection/src"}},{"name":"firstKey","description":"Obtains the first key(s) in this collection.","returns":{"types":[[["undefined"," | "],["K"]]],"description":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative"},"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the end if\namount is negative","meta":{"line":99,"file":"index.ts","path":"packages/collection/src"}},{"name":"flatMap","description":"Maps each item into a Collection, then joins the results into a single Collection. Identical in behavior to\n[Array.flatMap()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/flatMap).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":299,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function that produces a new Collection"},"type":{"type":"reflection","declaration":{"id":300,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":301,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":302,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":303,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":304,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":298,"name":"T"}],"name":"Collection"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["T",">"]]],"meta":{"line":385,"file":"index.ts","path":"packages/collection/src"}},{"name":"forEach","params":[{"data":{"id":525,"name":"callbackfn","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reflection","declaration":{"id":526,"name":"__type","kind":65536,"kindString":"Type literal","flags":{"isExternal":true},"signatures":[{"id":527,"name":"__type","kind":4096,"kindString":"Call signature","flags":{"isExternal":true},"parameters":[{"id":528,"name":"value","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":39,"name":"V"}},{"id":529,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":38,"name":"K"}},{"id":530,"name":"map","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"qualifiedName":"Map","package":"typescript","name":"Map"}}],"type":{"type":"intrinsic","name":"void"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":531,"name":"thisArg","kind":32768,"kindString":"Parameter","flags":{"isExternal":true,"isOptional":true},"type":{"type":"intrinsic","name":"any"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["void"]]]},{"name":"get","params":[{"data":{"id":534,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":38,"name":"K"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["undefined"," | "],["V"]]]},{"name":"has","params":[{"data":{"id":537,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":38,"name":"K"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["boolean"]]]},{"name":"hasAll","description":"Checks if all of the elements exist in the collection.","params":[{"data":{"id":56,"name":"keys","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"shortText":"The keys of the elements to check for\n"},"type":{"type":"array","elementType":{"type":"reference","id":38,"name":"K"}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":{"types":[[["boolean"]]],"description":"`true` if all of the elements exist, `false` if at least one does not exist."},"returnsDescription":"`true` if all of the elements exist, `false` if at least one does not exist.","meta":{"line":57,"file":"index.ts","path":"packages/collection/src"}},{"name":"hasAny","description":"Checks if any of the elements exist in the collection.","params":[{"data":{"id":59,"name":"keys","kind":32768,"kindString":"Parameter","flags":{"isRest":true},"comment":{"shortText":"The keys of the elements to check for\n"},"type":{"type":"array","elementType":{"type":"reference","id":38,"name":"K"}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":{"types":[[["boolean"]]],"description":"`true` if any of the elements exist, `false` if none exist."},"returnsDescription":"`true` if any of the elements exist, `false` if none exist.","meta":{"line":68,"file":"index.ts","path":"packages/collection/src"}},{"name":"intersect","description":"The intersect method returns a new structure containing items where the keys and values are present in both original structures.","params":[{"data":{"id":487,"name":"other","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The other Collection to filter against\n"},"type":{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":486,"name":"T"}],"name":"ReadonlyCollection"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["T",">"]]],"meta":{"line":643,"file":"index.ts","path":"packages/collection/src"}},{"name":"keyAt","description":"Identical to [Array.at()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/at).\nReturns the key at a given index, allowing for positive and negative integers.\nNegative integers count back from the last item in the collection.","params":[{"data":{"id":81,"name":"index","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The index of the key to obtain\n"},"type":{"type":"intrinsic","name":"number"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["undefined"," | "],["K"]]],"meta":{"line":167,"file":"index.ts","path":"packages/collection/src"}},{"name":"keys","description":"Returns an iterable of keys in the map","returns":[[["IterableIterator","<"],["K",">"]]]},{"name":"last","description":"Obtains the last value(s) in this collection.","returns":{"types":[[["undefined"," | "],["V"]]],"description":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative"},"returnsDescription":"A single value if no amount is provided or an array of values, starting from the start if\namount is negative","meta":{"line":119,"file":"index.ts","path":"packages/collection/src"}},{"name":"lastKey","description":"Obtains the last key(s) in this collection.","returns":{"types":[[["undefined"," | "],["K"]]],"description":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative"},"returnsDescription":"A single key if no amount is provided or an array of keys, starting from the start if\namount is negative","meta":{"line":137,"file":"index.ts","path":"packages/collection/src"}},{"name":"map","description":"Maps each item to another value into an array. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":319,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function that produces an element of the new array, taking three arguments"},"type":{"type":"reflection","declaration":{"id":320,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":321,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":322,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":323,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":324,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"reference","id":318,"name":"T"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Array","<"],["T",">"]]],"meta":{"line":405,"file":"index.ts","path":"packages/collection/src"}},{"name":"mapValues","description":"Maps each item to another value into a collection. Identical in behavior to\n[Array.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":339,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function that produces an element of the new collection, taking three arguments"},"type":{"type":"reflection","declaration":{"id":340,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":341,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":342,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":343,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":344,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"reference","id":338,"name":"T"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["T",">"]]],"meta":{"line":428,"file":"index.ts","path":"packages/collection/src"}},{"name":"merge","description":"Merges two Collections together into a new Collection.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":496,"name":"other","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The other Collection to merge with"},"type":{"type":"reference","id":14,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":494,"name":"T"}],"name":"ReadonlyCollection"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":497,"name":"whenInSelf","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function getting the result if the entry only exists in this Collection"},"type":{"type":"reflection","declaration":{"id":498,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":499,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":500,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":501,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}}],"type":{"type":"reference","id":554,"typeArguments":[{"type":"reference","id":495,"name":"R"}],"name":"Keep"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":502,"name":"whenInOther","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function getting the result if the entry only exists in the other Collection"},"type":{"type":"reflection","declaration":{"id":503,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":504,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":505,"name":"valueOther","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":494,"name":"T"}},{"id":506,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}}],"type":{"type":"reference","id":554,"typeArguments":[{"type":"reference","id":495,"name":"R"}],"name":"Keep"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":507,"name":"whenInBoth","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function getting the result if the entry exists in both Collections\n"},"type":{"type":"reflection","declaration":{"id":508,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":509,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":510,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":511,"name":"valueOther","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":494,"name":"T"}},{"id":512,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}}],"type":{"type":"reference","id":554,"typeArguments":[{"type":"reference","id":495,"name":"R"}],"name":"Keep"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["R",">"]]],"meta":{"line":694,"file":"index.ts","path":"packages/collection/src"}},{"name":"partition","description":"Partitions the collection into two collections where the first collection\ncontains the items that passed and the second contains the items that failed.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":243,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function used to test (should return a boolean)"},"type":{"type":"reflection","declaration":{"id":244,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":245,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":246,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":247,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":248,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"predicate","name":"key","asserts":false,"targetType":{"type":"reference","id":242,"name":"K2"}}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["["],["Collection","<"],["K2",", "],["V",">, "],["Collection","<"],["Exclude","<"],["K",", "],["K2",">, "],["V",">]"]]],"meta":{"line":337,"file":"index.ts","path":"packages/collection/src"}},{"name":"random","description":"Obtains unique random value(s) from this collection.","returns":{"types":[[["undefined"," | "],["V"]]],"description":"A single value if no amount is provided or an array of values"},"returnsDescription":"A single value if no amount is provided or an array of values","meta":{"line":180,"file":"index.ts","path":"packages/collection/src"}},{"name":"randomKey","description":"Obtains unique random key(s) from this collection.","returns":{"types":[[["undefined"," | "],["K"]]],"description":"A single key if no amount is provided or an array"},"returnsDescription":"A single key if no amount is provided or an array","meta":{"line":199,"file":"index.ts","path":"packages/collection/src"}},{"name":"reduce","description":"Applies a function to produce a single value. Identical in behavior to\n[Array.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":433,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function used to reduce, taking four arguments; `accumulator`, `currentValue`, `currentKey`,\nand `collection`"},"type":{"type":"reflection","declaration":{"id":434,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":435,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":436,"name":"accumulator","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":432,"name":"T"}},{"id":437,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":438,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":439,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"reference","id":432,"name":"T"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":440,"name":"initialValue","kind":32768,"kindString":"Parameter","flags":{"isOptional":true},"comment":{"shortText":"Starting value for the accumulator\n"},"type":{"type":"reference","id":432,"name":"T"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["T"]]],"meta":{"line":498,"file":"index.ts","path":"packages/collection/src"}},{"name":"reverse","description":"Identical to [Array.reverse()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reverse)\nbut returns a Collection instead of an Array.","returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":215,"file":"index.ts","path":"packages/collection/src"}},{"name":"set","params":[{"data":{"id":540,"name":"key","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":38,"name":"K"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":541,"name":"value","kind":32768,"kindString":"Parameter","flags":{"isExternal":true},"type":{"type":"reference","id":39,"name":"V"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]]},{"name":"some","description":"Checks if there exists an item that passes a test. Identical in behavior to\n[Array.some()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":358,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function used to test (should return a boolean)"},"type":{"type":"reflection","declaration":{"id":359,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":360,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":361,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":362,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":363,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["boolean"]]],"meta":{"line":447,"file":"index.ts","path":"packages/collection/src"}},{"name":"sort","description":"The sort method sorts the items of a collection in place and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":483,"name":"compareFunction","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value, according to the string conversion of each element.\n"},"type":{"type":"reference","id":561,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Comparator"},"defaultValue":"Collection.defaultSort"},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":624,"file":"index.ts","path":"packages/collection/src"}},{"name":"sorted","description":"The sorted method sorts the items of a collection and returns it.\nThe sort is not necessarily stable in Node 10 or older.\nThe default sort order is according to string Unicode code points.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":515,"name":"compareFunction","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Specifies a function that defines the sort order.\nIf omitted, the collection is sorted according to each character's Unicode code point value,\naccording to the string conversion of each element.\n"},"type":{"type":"reference","id":561,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Comparator"},"defaultValue":"Collection.defaultSort"},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":732,"file":"index.ts","path":"packages/collection/src"}},{"name":"sweep","description":"Removes items that satisfy the provided filter function.","params":[{"data":{"id":168,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function used to test (should return a boolean)"},"type":{"type":"reflection","declaration":{"id":169,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":170,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":171,"name":"value","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":39,"name":"V"}},{"id":172,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":38,"name":"K"}},{"id":173,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"intrinsic","name":"boolean"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":{"types":[[["number"]]],"description":"The number of removed entries"},"returnsDescription":"The number of removed entries","meta":{"line":284,"file":"index.ts","path":"packages/collection/src"}},{"name":"tap","description":"Runs a function on the collection and returns the collection.","see":[],"examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":461,"name":"fn","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function to execute"},"type":{"type":"reflection","declaration":{"id":462,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":463,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":464,"name":"collection","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":17,"typeArguments":[{"type":"reference","id":38,"name":"K"},{"type":"reference","id":39,"name":"V"}],"name":"Collection"}}],"type":{"type":"intrinsic","name":"void"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":557,"file":"index.ts","path":"packages/collection/src"}},{"name":"toJSON","returns":[[["Array","<"],["V",">"]]],"meta":{"line":736,"file":"index.ts","path":"packages/collection/src"}},{"name":"values","description":"Returns an iterable of values in the map","returns":[[["IterableIterator","<"],["V",">"]]]},{"name":"combineEntries","description":"Creates a Collection from a list of entries.","see":[],"scope":"static","examples":[],"abstract":false,"deprecated":false,"emits":[],"params":[{"data":{"id":28,"name":"entries","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"The list of entries"},"type":{"type":"reference","typeArguments":[{"type":"tuple","elements":[{"type":"reference","id":26,"name":"K"},{"type":"reference","id":27,"name":"V"}]}],"qualifiedName":"Iterable","package":"typescript","name":"Iterable"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":29,"name":"combine","kind":32768,"kindString":"Parameter","flags":{},"comment":{"shortText":"Function to combine an existing entry with a new one\n"},"type":{"type":"reflection","declaration":{"id":30,"name":"__type","kind":65536,"kindString":"Type literal","flags":{},"signatures":[{"id":31,"name":"__type","kind":4096,"kindString":"Call signature","flags":{},"parameters":[{"id":32,"name":"firstValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":27,"name":"V"}},{"id":33,"name":"secondValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":27,"name":"V"}},{"id":34,"name":"key","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":26,"name":"K"}}],"type":{"type":"reference","id":27,"name":"V"}}]}}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["Collection","<"],["K",", "],["V",">"]]],"meta":{"line":754,"file":"index.ts","path":"packages/collection/src"}},{"name":"defaultSort","scope":"static","access":"private","params":[{"data":{"id":22,"name":"firstValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":21,"name":"V"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}},{"data":{"id":23,"name":"secondValue","kind":32768,"kindString":"Parameter","flags":{},"type":{"type":"reference","id":21,"name":"V"}},"config":{"root":".","typescript":true,"input":["src/index.ts"],"custom":"docs/index.json","output":"docs/docs.json"}}],"returns":[[["number"]]],"meta":{"line":741,"file":"index.ts","path":"packages/collection/src"}}],"meta":{"line":31,"file":"index.ts","path":"packages/collection/src"}}],"functions":[],"interfaces":[],"typedefs":[{"name":"CollectionConstructor","see":[],"deprecated":false,"meta":{"line":4,"file":"index.ts","path":"packages/collection/src"},"props":[{"name":"constructor","optional":false},{"name":"[species]","optional":false,"type":[[["CollectionConstructor"]]]},{"name":"prototype","optional":false,"type":[[["Collection","<"],["unknown",", "],["unknown",">"]]]}]},{"name":"Comparator","see":[],"deprecated":false,"type":[[["("],["firstValue",": "],["V",", "],["secondValue",": "],["V",", "],["firstKey",": "],["K",", "],["secondKey",": "],["K",") => "],["number"]]],"meta":{"line":778,"file":"index.ts","path":"packages/collection/src"},"params":[{"name":"firstValue","optional":false,"type":[[["V"]]]},{"name":"secondValue","optional":false,"type":[[["V"]]]},{"name":"firstKey","optional":false,"type":[[["K"]]]},{"name":"secondKey","optional":false,"type":[[["K"]]]}],"returns":[[["number"]]]},{"name":"Keep","see":[],"deprecated":false,"type":[[["{"],["\nkeep",": "],["true",","],["\nvalue",": "],["V\n","} | {"],["\nkeep",": "],["false\n","}"]]],"meta":{"line":773,"file":"index.ts","path":"packages/collection/src"}},{"name":"ReadonlyCollection","description":"Represents an immutable version of a collection","type":[[["ReadonlyMap","<"],["K",", "],["V","> & "],["Omit","<"],["Collection","<"],["K",", "],["V",">, "],["'forEach'"," | "],["'ensure'"," | "],["'reverse'"," | "],["'sweep'"," | "],["'sort'"," | "],["'get'"," | "],["'set'"," | "],["'delete'",">"]]],"meta":{"line":15,"file":"index.ts","path":"packages/collection/src"}}],"externals":[],"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n  <br />\n  <p>\n    <a href=\"https://discord.js.org\"><img src=\"https://discord.js.org/static/logo.svg\" width=\"546\" alt=\"discord.js\" /></a>\n  </p>\n  <br />\n  <p>\n    <a href=\"https://discord.gg/djs\"><img src=\"https://img.shields.io/discord/222078108977594368?color=5865F2&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n    <a href=\"https://www.npmjs.com/package/@discordjs/collection\"><img src=\"https://img.shields.io/npm/v/@discordjs/collection.svg?maxAge=3600\" alt=\"npm version\" /></a>\n    <a href=\"https://www.npmjs.com/package/@discordjs/collection\"><img src=\"https://img.shields.io/npm/dt/@discordjs/collection.svg?maxAge=3600\" alt=\"npm downloads\" /></a>\n    <a href=\"https://github.com/discordjs/discord.js/actions\"><img src=\"https://github.com/discordjs/discord.js/actions/workflows/test.yml/badge.svg\" alt=\"Build status\" /></a>\n  </p>\n</div>\n\n## About\n\n`@discordjs/collection` is a powerful utility data structure used in discord.js.\n\n## Installation\n\n**Node.js 16.9.0 or newer is required.**\n\n```sh-session\nnpm install @discordjs/collection\nyarn add @discordjs/collection\npnpm add @discordjs/collection\n```\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/website))\n- [Documentation](https://discord.js.org/#/docs/collection)\n- [Guide](https://discordjs.guide/) ([source](https://github.com/discordjs/guide))\n  See also the [Update Guide](https://discordjs.guide/additional-info/changes-in-v13.html), including updated and removed items in the library.\n- [discord.js Discord server](https://discord.gg/djs)\n- [Discord API Discord server](https://discord.gg/discord-api)\n- [GitHub](https://github.com/discordjs/discord.js/tree/main/packages/collection)\n- [npm](https://www.npmjs.com/package/@discordjs/collection)\n- [Related libraries](https://discord.com/developers/docs/topics/community-resources#libraries)\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs/collection).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/main/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [discord.js Server](https://discord.gg/djs).\n","path":"README.md"}}}}}