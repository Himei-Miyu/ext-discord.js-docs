{"metadata":{"toolPackage":"@discordjs/api-extractor","toolVersion":"7.38.1","schemaVersion":1012,"oldestForwardsCompatibleVersion":1001,"tsdocConfig":{"$schema":"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json","noStandardTags":true,"tagDefinitions":[{"tagName":"@alpha","syntaxKind":"modifier"},{"tagName":"@beta","syntaxKind":"modifier"},{"tagName":"@defaultValue","syntaxKind":"block"},{"tagName":"@decorator","syntaxKind":"block","allowMultiple":true},{"tagName":"@deprecated","syntaxKind":"block"},{"tagName":"@eventProperty","syntaxKind":"modifier"},{"tagName":"@example","syntaxKind":"block","allowMultiple":true},{"tagName":"@experimental","syntaxKind":"modifier"},{"tagName":"@inheritDoc","syntaxKind":"inline"},{"tagName":"@internal","syntaxKind":"modifier"},{"tagName":"@label","syntaxKind":"inline"},{"tagName":"@link","syntaxKind":"inline","allowMultiple":true},{"tagName":"@override","syntaxKind":"modifier"},{"tagName":"@packageDocumentation","syntaxKind":"modifier"},{"tagName":"@param","syntaxKind":"block","allowMultiple":true},{"tagName":"@privateRemarks","syntaxKind":"block"},{"tagName":"@public","syntaxKind":"modifier"},{"tagName":"@readonly","syntaxKind":"modifier"},{"tagName":"@remarks","syntaxKind":"block"},{"tagName":"@returns","syntaxKind":"block"},{"tagName":"@sealed","syntaxKind":"modifier"},{"tagName":"@see","syntaxKind":"block"},{"tagName":"@throws","syntaxKind":"block","allowMultiple":true},{"tagName":"@typeParam","syntaxKind":"block","allowMultiple":true},{"tagName":"@virtual","syntaxKind":"modifier"},{"tagName":"@betaDocumentation","syntaxKind":"modifier"},{"tagName":"@internalRemarks","syntaxKind":"block"},{"tagName":"@preapproved","syntaxKind":"modifier"}],"supportForTags":{"@alpha":true,"@beta":true,"@defaultValue":true,"@decorator":true,"@deprecated":true,"@eventProperty":true,"@example":true,"@experimental":true,"@inheritDoc":true,"@internal":true,"@label":true,"@link":true,"@override":true,"@packageDocumentation":true,"@param":true,"@privateRemarks":true,"@public":true,"@readonly":true,"@remarks":true,"@returns":true,"@sealed":true,"@see":true,"@throws":true,"@typeParam":true,"@virtual":true,"@betaDocumentation":true,"@internalRemarks":true,"@preapproved":true},"reportUnsupportedHtmlElements":false}},"projectFolderUrl":"https://github.com/discordjs/discord.js/tree/main/packages/core","kind":"Package","canonicalReference":"@discordjs/core!","docComment":"","name":"@discordjs/core","preserveMemberOrder":false,"members":[{"kind":"EntryPoint","canonicalReference":"@discordjs/core!","name":"","preserveMemberOrder":false,"members":[{"kind":"Class","canonicalReference":"@discordjs/core!API:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"API","canonicalReference":"@discordjs/core!API:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/index.ts","fileLine":32,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"API","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!API:constructor(1)","docComment":"/**\n * Constructs a new instance of the `API` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":59,"fileColumn":40,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Property","canonicalReference":"@discordjs/core!API#applicationCommands:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"applicationCommands","canonicalReference":"@discordjs/core!API#applicationCommands"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ApplicationCommandsAPI","canonicalReference":"@discordjs/core!ApplicationCommandsAPI:class"},{"kind":"Content","text":";"}],"fileLine":33,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"applicationCommands","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#applications:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"applications","canonicalReference":"@discordjs/core!API#applications"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ApplicationsAPI","canonicalReference":"@discordjs/core!ApplicationsAPI:class"},{"kind":"Content","text":";"}],"fileLine":35,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"applications","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#channels:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"channels","canonicalReference":"@discordjs/core!API#channels"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ChannelsAPI","canonicalReference":"@discordjs/core!ChannelsAPI:class"},{"kind":"Content","text":";"}],"fileLine":37,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"channels","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#guilds:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"guilds","canonicalReference":"@discordjs/core!API#guilds"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GuildsAPI","canonicalReference":"@discordjs/core!GuildsAPI:class"},{"kind":"Content","text":";"}],"fileLine":39,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"guilds","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#interactions:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"interactions","canonicalReference":"@discordjs/core!API#interactions"},{"kind":"Content","text":": "},{"kind":"Reference","text":"InteractionsAPI","canonicalReference":"@discordjs/core!InteractionsAPI:class"},{"kind":"Content","text":";"}],"fileLine":41,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"interactions","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#invites:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"invites","canonicalReference":"@discordjs/core!API#invites"},{"kind":"Content","text":": "},{"kind":"Reference","text":"InvitesAPI","canonicalReference":"@discordjs/core!InvitesAPI:class"},{"kind":"Content","text":";"}],"fileLine":43,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"invites","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#oauth2:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"oauth2","canonicalReference":"@discordjs/core!API#oauth2"},{"kind":"Content","text":": "},{"kind":"Reference","text":"OAuth2API","canonicalReference":"@discordjs/core!OAuth2API:class"},{"kind":"Content","text":";"}],"fileLine":45,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"oauth2","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#rest:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!API#rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":";"}],"fileLine":32,"fileColumn":17,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"rest","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#roleConnections:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"roleConnections","canonicalReference":"@discordjs/core!API#roleConnections"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RoleConnectionsAPI","canonicalReference":"@discordjs/core!RoleConnectionsAPI:class"},{"kind":"Content","text":";"}],"fileLine":47,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"roleConnections","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#stageInstances:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"stageInstances","canonicalReference":"@discordjs/core!API#stageInstances"},{"kind":"Content","text":": "},{"kind":"Reference","text":"StageInstancesAPI","canonicalReference":"@discordjs/core!StageInstancesAPI:class"},{"kind":"Content","text":";"}],"fileLine":49,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"stageInstances","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#stickers:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"stickers","canonicalReference":"@discordjs/core!API#stickers"},{"kind":"Content","text":": "},{"kind":"Reference","text":"StickersAPI","canonicalReference":"@discordjs/core!StickersAPI:class"},{"kind":"Content","text":";"}],"fileLine":51,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"stickers","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#threads:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"threads","canonicalReference":"@discordjs/core!API#threads"},{"kind":"Content","text":": "},{"kind":"Reference","text":"ThreadsAPI","canonicalReference":"@discordjs/core!ThreadsAPI:class"},{"kind":"Content","text":";"}],"fileLine":53,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"threads","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#users:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"users","canonicalReference":"@discordjs/core!API#users"},{"kind":"Content","text":": "},{"kind":"Reference","text":"UsersAPI","canonicalReference":"@discordjs/core!UsersAPI:class"},{"kind":"Content","text":";"}],"fileLine":55,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"users","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#voice:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"voice","canonicalReference":"@discordjs/core!API#voice"},{"kind":"Content","text":": "},{"kind":"Reference","text":"VoiceAPI","canonicalReference":"@discordjs/core!VoiceAPI:class"},{"kind":"Content","text":";"}],"fileLine":57,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"voice","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!API#webhooks:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"webhooks","canonicalReference":"@discordjs/core!API#webhooks"},{"kind":"Content","text":": "},{"kind":"Reference","text":"WebhooksAPI","canonicalReference":"@discordjs/core!WebhooksAPI:class"},{"kind":"Content","text":";"}],"fileLine":59,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"webhooks","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!ApplicationCommandsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"ApplicationCommandsAPI","canonicalReference":"@discordjs/core!ApplicationCommandsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/applicationCommands.ts","fileLine":31,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"ApplicationCommandsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!ApplicationCommandsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `ApplicationCommandsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":32,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#bulkOverwriteGlobalCommands:member(1)","docComment":"/**\n * Overwrites global commands\n *\n * @param applicationId - The application id to overwrite commands for\n *\n * @param body - The data for overwriting commands\n *\n * @param options - The options for overwriting commands\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-global-application-commands}\n */\n","excerptTokens":[{"kind":"Reference","text":"bulkOverwriteGlobalCommands","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#bulkOverwriteGlobalCommands"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIApplicationCommandsJSONBody","canonicalReference":"discord-api-types!RESTPutAPIApplicationCommandsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPutAPIApplicationCommandsResult","canonicalReference":"discord-api-types!RESTPutAPIApplicationCommandsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":135,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"bulkOverwriteGlobalCommands"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#bulkOverwriteGuildCommands:member(1)","docComment":"/**\n * Bulk overwrites guild commands\n *\n * @param applicationId - The application id to overwrite commands for\n *\n * @param guildId - The guild id to overwrite commands for\n *\n * @param body - The data for overwriting commands\n *\n * @param options - The options for overwriting the commands\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#bulk-overwrite-guild-application-commands}\n */\n","excerptTokens":[{"kind":"Reference","text":"bulkOverwriteGuildCommands","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#bulkOverwriteGuildCommands"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIApplicationGuildCommandsJSONBody","canonicalReference":"discord-api-types!RESTPutAPIApplicationGuildCommandsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPutAPIApplicationGuildCommandsResult","canonicalReference":"discord-api-types!RESTPutAPIApplicationGuildCommandsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":258,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"bulkOverwriteGuildCommands"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#createGlobalCommand:member(1)","docComment":"/**\n * Creates a new global command\n *\n * @param applicationId - The application id to create the command for\n *\n * @param body - The data for creating the command\n *\n * @param options - The options for creating the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#create-global-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"createGlobalCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#createGlobalCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIApplicationCommandsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIApplicationCommandsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplicationCommand","canonicalReference":"discord-api-types!APIApplicationCommand:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":61,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createGlobalCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#createGuildCommand:member(1)","docComment":"/**\n * Creates a new command for a guild\n *\n * @param applicationId - The application id to create the command for\n *\n * @param guildId - The guild id to create the command for\n *\n * @param body - The data for creating the command\n *\n * @param options - The options for creating the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#create-guild-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"createGuildCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#createGuildCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIApplicationGuildCommandsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIApplicationGuildCommandsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostAPIApplicationGuildCommandsResult","canonicalReference":"discord-api-types!RESTPostAPIApplicationGuildCommandsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":176,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createGuildCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#deleteGlobalCommand:member(1)","docComment":"/**\n * Deletes a global command\n *\n * @param applicationId - The application id of the command\n *\n * @param commandId - The id of the command to delete\n *\n * @param options - The options for deleting a command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#delete-global-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteGlobalCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#deleteGlobalCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":119,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteGlobalCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#deleteGuildCommand:member(1)","docComment":"/**\n * Deletes a guild command\n *\n * @param applicationId - The application id of the command\n *\n * @param guildId - The guild id of the command\n *\n * @param commandId - The id of the command to delete\n *\n * @param options - The options for deleting the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#delete-guild-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteGuildCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#deleteGuildCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":240,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteGuildCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGlobalCommand:member(1)","docComment":"/**\n * Edits a global command\n *\n * @param applicationId - The application id of the command\n *\n * @param commandId - The id of the command to edit\n *\n * @param body - The data for editing the command\n *\n * @param options - The options for editing the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#edit-global-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"editGlobalCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGlobalCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIApplicationCommandJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIApplicationCommandJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplicationCommand","canonicalReference":"discord-api-types!APIApplicationCommand:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":99,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editGlobalCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGuildCommand:member(1)","docComment":"/**\n * Edits a guild command\n *\n * @param applicationId - The application id of the command\n *\n * @param guildId - The guild id of the command\n *\n * @param commandId - The command id to edit\n *\n * @param body - The data for editing the command\n *\n * @param options - The options for editing the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#edit-guild-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"editGuildCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGuildCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIApplicationGuildCommandJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIApplicationGuildCommandJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPatchAPIApplicationGuildCommandResult","canonicalReference":"discord-api-types!RESTPatchAPIApplicationGuildCommandResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":218,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editGuildCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGuildCommandPermissions:member(1)","docComment":"/**\n * Edits the permissions for a guild command\n *\n * @param userToken - The token of the user to edit permissions on behalf of\n *\n * @param applicationId - The application id to edit the permissions for\n *\n * @param guildId - The guild id to edit the permissions for\n *\n * @param commandId - The id of the command to edit the permissions for\n *\n * @param body - The data for editing the permissions\n *\n * @param options - The options for editing the permissions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#edit-application-command-permissions}\n */\n","excerptTokens":[{"kind":"Reference","text":"editGuildCommandPermissions","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#editGuildCommandPermissions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"userToken","canonicalReference":"@discordjs/core!~userToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIApplicationCommandPermissionsJSONBody","canonicalReference":"discord-api-types!RESTPutAPIApplicationCommandPermissionsJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildApplicationCommandPermissions","canonicalReference":"discord-api-types!APIGuildApplicationCommandPermissions:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":319,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":29,"endIndex":33},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"userToken","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":20,"endIndex":21},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":24,"endIndex":28},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editGuildCommandPermissions"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGlobalCommand:member(1)","docComment":"/**\n * Fetches a global command\n *\n * @param applicationId - The application id to fetch the command from\n *\n * @param commandId - The command id to fetch\n *\n * @param options - The options for fetching the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-global-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGlobalCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGlobalCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplicationCommand","canonicalReference":"discord-api-types!APIApplicationCommand:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":80,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGlobalCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGlobalCommands:member(1)","docComment":"/**\n * Fetches all global commands for a application\n *\n * @param applicationId - The application id to fetch commands for\n *\n * @param query - The query options for fetching commands\n *\n * @param options - The options for fetching commands\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-global-application-commands}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGlobalCommands","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGlobalCommands"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIApplicationCommandsQuery","canonicalReference":"discord-api-types!RESTGetAPIApplicationCommandsQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIApplicationCommandsResult","canonicalReference":"discord-api-types!RESTGetAPIApplicationCommandsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":42,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGlobalCommands"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommand:member(1)","docComment":"/**\n * Fetches a guild command\n *\n * @param applicationId - The application id to fetch the command from\n *\n * @param guildId - The guild id to fetch the command from\n *\n * @param commandId - The command id to fetch\n *\n * @param options - The options for fetching the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuildCommand","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommand"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIApplicationGuildCommandResult","canonicalReference":"discord-api-types!RESTGetAPIApplicationGuildCommandResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":197,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuildCommand"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommandPermissions:member(1)","docComment":"/**\n * Fetches the permissions for a guild command\n *\n * @param applicationId - The application id to get the permissions for\n *\n * @param guildId - The guild id of the command\n *\n * @param commandId - The command id to get the permissions for\n *\n * @param options - The option for fetching the command\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-guild-application-command-permissions}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuildCommandPermissions","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommandPermissions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"commandId","canonicalReference":"@discordjs/core!~commandId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildApplicationCommandPermissions","canonicalReference":"discord-api-types!APIGuildApplicationCommandPermissions:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":279,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"commandId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuildCommandPermissions"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommands:member(1)","docComment":"/**\n * Fetches all commands for a guild\n *\n * @param applicationId - The application id to fetch commands for\n *\n * @param guildId - The guild id to fetch commands for\n *\n * @param query - The data for fetching commands\n *\n * @param options - The options for fetching commands\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-guild-application-commands}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuildCommands","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommands"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIApplicationGuildCommandsQuery","canonicalReference":"discord-api-types!RESTGetAPIApplicationGuildCommandsQuery:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIApplicationGuildCommandsResult","canonicalReference":"discord-api-types!RESTGetAPIApplicationGuildCommandsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":155,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuildCommands"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommandsPermissions:member(1)","docComment":"/**\n * Fetches all permissions for all commands in a guild\n *\n * @param applicationId - The application id to get the permissions for\n *\n * @param guildId - The guild id to get the permissions for\n *\n * @param options - The options for fetching permissions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/application-commands#get-application-command-permissions}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuildCommandsPermissions","canonicalReference":"@discordjs/core!ApplicationCommandsAPI#getGuildCommandsPermissions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildApplicationCommandsPermissionsResult","canonicalReference":"discord-api-types!RESTGetAPIGuildApplicationCommandsPermissionsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":298,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuildCommandsPermissions"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!ApplicationsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"ApplicationsAPI","canonicalReference":"@discordjs/core!ApplicationsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/applications.ts","fileLine":11,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"ApplicationsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!ApplicationsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `ApplicationsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":12,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationsAPI#editCurrent:member(1)","docComment":"/**\n * Edits properties of the application associated with the requesting bot user.\n *\n * @param body - The new application data\n *\n * @param options - The options for editing the application\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/application#edit-current-application}\n */\n","excerptTokens":[{"kind":"Reference","text":"editCurrent","canonicalReference":"@discordjs/core!ApplicationsAPI#editCurrent"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchCurrentApplicationJSONBody","canonicalReference":"discord-api-types!RESTPatchCurrentApplicationJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplication","canonicalReference":"discord-api-types!APIApplication:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":31,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editCurrent"},{"kind":"Method","canonicalReference":"@discordjs/core!ApplicationsAPI#getCurrent:member(1)","docComment":"/**\n * Fetches the application associated with the requesting bot user.\n *\n * @param options - The options for fetching the application\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/application#get-current-application}\n */\n","excerptTokens":[{"kind":"Reference","text":"getCurrent","canonicalReference":"@discordjs/core!ApplicationsAPI#getCurrent"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplication","canonicalReference":"discord-api-types!APIApplication:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":20,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getCurrent"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!ChannelsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"ChannelsAPI","canonicalReference":"@discordjs/core!ChannelsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/channel.ts","fileLine":42,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"ChannelsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!ChannelsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `ChannelsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":43,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#addMessageReaction:member(1)","docComment":"/**\n * Adds a reaction to a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to add the reaction to\n *\n * @param emoji - The emoji to add the reaction with\n *\n * @param options - The options for adding the reaction\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#create-reaction}\n */\n","excerptTokens":[{"kind":"Reference","text":"addMessageReaction","canonicalReference":"@discordjs/core!ChannelsAPI#addMessageReaction"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emoji","canonicalReference":"@discordjs/core!~emoji"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":195,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"emoji","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"addMessageReaction"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#bulkDeleteMessages:member(1)","docComment":"/**\n * Bulk deletes messages\n *\n * @param channelId - The id of the channel the messages are in\n *\n * @param messageIds - The ids of the messages to delete\n *\n * @param options - The options for deleting the messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#bulk-delete-messages}\n */\n","excerptTokens":[{"kind":"Reference","text":"bulkDeleteMessages","canonicalReference":"@discordjs/core!ChannelsAPI#bulkDeleteMessages"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageIds","canonicalReference":"@discordjs/core!~messageIds"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":"[]"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":323,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":20,"endIndex":24},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageIds","parameterTypeTokenRange":{"startIndex":8,"endIndex":10},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":15,"endIndex":19},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"bulkDeleteMessages"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#createForumThread:member(1)","docComment":"/**\n * Creates a new forum post\n *\n * @param channelId - The id of the forum channel to start the thread in\n *\n * @param body - The data for starting the thread\n *\n * @param options - The options for starting the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#start-thread-in-forum-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"createForumThread","canonicalReference":"@discordjs/core!ChannelsAPI#createForumThread"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"message","canonicalReference":"@discordjs/core!~message"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"optionsBody","canonicalReference":"@discordjs/core!~optionsBody"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"StartForumThreadOptions","canonicalReference":"@discordjs/core!StartForumThreadOptions:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"APIThreadChannel","canonicalReference":"discord-api-types!APIThreadChannel:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":459,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ message, ...optionsBody }","parameterTypeTokenRange":{"startIndex":10,"endIndex":11},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createForumThread"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#createInvite:member(1)","docComment":"/**\n * Creates a new invite for a channel\n *\n * @param channelId - The id of the channel to create an invite for\n *\n * @param body - The data for creating the invite\n *\n * @param options - The options for creating the invite\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#create-channel-invite}\n */\n","excerptTokens":[{"kind":"Reference","text":"createInvite","canonicalReference":"@discordjs/core!ChannelsAPI#createInvite"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIChannelInviteJSONBody","canonicalReference":"discord-api-types!RESTPostAPIChannelInviteJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIExtendedInvite","canonicalReference":"discord-api-types!APIExtendedInvite:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":406,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createInvite"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#createMessage:member(1)","docComment":"/**\n * Sends a message in a channel\n *\n * @param channelId - The id of the channel to send the message in\n *\n * @param body - The data for sending the message\n *\n * @param options - The options for sending the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#create-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"createMessage","canonicalReference":"@discordjs/core!ChannelsAPI#createMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"RESTPostAPIChannelMessageJSONBody","canonicalReference":"discord-api-types!RESTPostAPIChannelMessageJSONBody:interface"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":53,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":24,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ files, ...body }","parameterTypeTokenRange":{"startIndex":10,"endIndex":16},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":19,"endIndex":23},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#createThread:member(1)","docComment":"/**\n * Creates a new thread\n *\n * @param channelId - The id of the channel to start the thread in\n *\n * @param body - The data for starting the thread\n *\n * @param messageId - The id of the message to start the thread from\n *\n * @param options - The options for starting the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#start-thread-from-message}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#start-thread-without-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"createThread","canonicalReference":"@discordjs/core!ChannelsAPI#createThread"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIChannelThreadsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIChannelThreadsJSONBody:interface"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":439,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createThread"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#createWebhook:member(1)","docComment":"/**\n * Creates a new webhook\n *\n * @param channelId - The id of the channel to create the webhook in\n *\n * @param body - The data for creating the webhook\n *\n * @param options - The options for creating the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#create-webhook}\n */\n","excerptTokens":[{"kind":"Reference","text":"createWebhook","canonicalReference":"@discordjs/core!ChannelsAPI#createWebhook"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIChannelWebhookJSONBody","canonicalReference":"discord-api-types!RESTPostAPIChannelWebhookJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIWebhook","canonicalReference":"discord-api-types!APIWebhook:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":523,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createWebhook"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#crosspostMessage:member(1)","docComment":"/**\n * Crossposts a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to crosspost\n *\n * @param options - The options for crossposting the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#crosspost-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"crosspostMessage","canonicalReference":"@discordjs/core!ChannelsAPI#crosspostMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":353,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"crosspostMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#delete:member(1)","docComment":"/**\n * Deletes a channel\n *\n * @param channelId - The id of the channel to delete\n *\n * @param options - The options for deleting the channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#deleteclose-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"delete","canonicalReference":"@discordjs/core!ChannelsAPI#delete"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":238,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"delete"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deleteAllMessageReactions:member(1)","docComment":"/**\n * Deletes all reactions for a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to delete the reactions for\n *\n * @param options - The options for deleting the reactions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-all-reactions}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteAllMessageReactions","canonicalReference":"@discordjs/core!ChannelsAPI#deleteAllMessageReactions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":160,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteAllMessageReactions"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deleteAllMessageReactionsForEmoji:member(1)","docComment":"/**\n * Deletes all reactions of an emoji for a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to delete the reactions for\n *\n * @param emoji - The emoji to delete the reactions for\n *\n * @param options - The options for deleting the reactions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-all-reactions-for-emoji}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteAllMessageReactionsForEmoji","canonicalReference":"@discordjs/core!ChannelsAPI#deleteAllMessageReactionsForEmoji"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emoji","canonicalReference":"@discordjs/core!~emoji"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":177,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"emoji","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteAllMessageReactionsForEmoji"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deleteMessage:member(1)","docComment":"/**\n * Deletes a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to delete\n *\n * @param options - The options for deleting the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteMessage","canonicalReference":"@discordjs/core!ChannelsAPI#deleteMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":307,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deleteOwnMessageReaction:member(1)","docComment":"/**\n * Deletes a reaction for the current user\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to delete the reaction for\n *\n * @param emoji - The emoji to delete the reaction for\n *\n * @param options - The options for deleting the reaction\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-own-reaction}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteOwnMessageReaction","canonicalReference":"@discordjs/core!ChannelsAPI#deleteOwnMessageReaction"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emoji","canonicalReference":"@discordjs/core!~emoji"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":119,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"emoji","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteOwnMessageReaction"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deletePermissionOverwrite:member(1)","docComment":"/**\n * Deletes the permission overwrite for a user or role in a channel\n *\n * @param channelId - The id of the channel to delete the permission overwrite in\n *\n * @param overwriteId - The id of the user or role to delete the permission overwrite for\n *\n * @param options - The options for deleting the permission overwrite\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-channel-permission}\n */\n","excerptTokens":[{"kind":"Reference","text":"deletePermissionOverwrite","canonicalReference":"@discordjs/core!ChannelsAPI#deletePermissionOverwrite"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"overwriteId","canonicalReference":"@discordjs/core!~overwriteId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":575,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"overwriteId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deletePermissionOverwrite"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#deleteUserMessageReaction:member(1)","docComment":"/**\n * Deletes a reaction for a user\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to delete the reaction for\n *\n * @param emoji - The emoji to delete the reaction for\n *\n * @param userId - The id of the user to delete the reaction for\n *\n * @param options - The options for deleting the reaction\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#delete-user-reaction}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteUserMessageReaction","canonicalReference":"@discordjs/core!ChannelsAPI#deleteUserMessageReaction"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emoji","canonicalReference":"@discordjs/core!~emoji"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":140,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"emoji","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteUserMessageReaction"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#edit:member(1)","docComment":"/**\n * Edits a channel\n *\n * @param channelId - The id of the channel to edit\n *\n * @param body - The new channel data\n *\n * @param options - The options for editing the channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#modify-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"edit","canonicalReference":"@discordjs/core!ChannelsAPI#edit"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIChannelJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIChannelJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":223,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"edit"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#editMessage:member(1)","docComment":"/**\n * Edits a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to edit\n *\n * @param body - The data for editing the message\n *\n * @param options - The options for editing the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#edit-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"editMessage","canonicalReference":"@discordjs/core!ChannelsAPI#editMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"RESTPatchAPIChannelMessageJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIChannelMessageJSONBody:interface"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":74,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":28,"endIndex":32},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ files, ...body }","parameterTypeTokenRange":{"startIndex":14,"endIndex":20},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":23,"endIndex":27},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#editPermissionOverwrite:member(1)","docComment":"/**\n * Edits the permission overwrite for a user or role in a channel\n *\n * @param channelId - The id of the channel to edit the permission overwrite in\n *\n * @param overwriteId - The id of the user or role to edit the permission overwrite for\n *\n * @param body - The data for editing the permission overwrite\n *\n * @param options - The options for editing the permission overwrite\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#edit-channel-permissions}\n */\n","excerptTokens":[{"kind":"Reference","text":"editPermissionOverwrite","canonicalReference":"@discordjs/core!ChannelsAPI#editPermissionOverwrite"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"overwriteId","canonicalReference":"@discordjs/core!~overwriteId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIChannelPermissionJSONBody","canonicalReference":"discord-api-types!RESTPutAPIChannelPermissionJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":554,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"overwriteId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editPermissionOverwrite"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#followAnnouncements:member(1)","docComment":"/**\n * Follows an announcement channel\n *\n * @param channelId - The id of the announcement channel to follow\n *\n * @param webhookChannelId - The id of the webhook channel to follow the announcements in\n *\n * @param options - The options for following the announcement channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#follow-announcement-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"followAnnouncements","canonicalReference":"@discordjs/core!ChannelsAPI#followAnnouncements"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"webhookChannelId","canonicalReference":"@discordjs/core!~webhookChannelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIFollowedChannel","canonicalReference":"discord-api-types!APIFollowedChannel:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":387,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"webhookChannelId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"followAnnouncements"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#get:member(1)","docComment":"/**\n * Fetches a channel\n *\n * @param channelId - The id of the channel\n *\n * @param options - The options for fetching the channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!ChannelsAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":211,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getArchivedThreads:member(1)","docComment":"/**\n * Fetches the archived threads of a channel\n *\n * @param channelId - The id of the channel to fetch archived threads from\n *\n * @param archivedStatus - The archived status of the threads to fetch\n *\n * @param query - The options for fetching archived threads\n *\n * @param options - The options for fetching archived threads\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#list-public-archived-threads}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#list-private-archived-threads}\n */\n","excerptTokens":[{"kind":"Reference","text":"getArchivedThreads","canonicalReference":"@discordjs/core!ChannelsAPI#getArchivedThreads"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"archivedStatus","canonicalReference":"@discordjs/core!~archivedStatus"},{"kind":"Content","text":": "},{"kind":"Content","text":"'private' | 'public'"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIChannelThreadsArchivedQuery","canonicalReference":"discord-api-types!RESTGetAPIChannelThreadsArchivedQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelUsersThreadsArchivedResult","canonicalReference":"discord-api-types!RESTGetAPIChannelUsersThreadsArchivedResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":484,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"archivedStatus","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getArchivedThreads"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getInvites:member(1)","docComment":"/**\n * Fetches the invites of a channel\n *\n * @param channelId - The id of the channel to fetch invites from\n *\n * @param options - The options for fetching the invites\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-channel-invites}\n */\n","excerptTokens":[{"kind":"Reference","text":"getInvites","canonicalReference":"@discordjs/core!ChannelsAPI#getInvites"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelInvitesResult","canonicalReference":"discord-api-types!RESTGetAPIChannelInvitesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":425,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getInvites"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getJoinedPrivateArchivedThreads:member(1)","docComment":"/**\n * Fetches the private joined archived threads of a channel\n *\n * @param channelId - The id of the channel to fetch joined archived threads from\n *\n * @param query - The options for fetching joined archived threads\n *\n * @param options - The options for fetching joined archived threads\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#list-joined-private-archived-threads}\n */\n","excerptTokens":[{"kind":"Reference","text":"getJoinedPrivateArchivedThreads","canonicalReference":"@discordjs/core!ChannelsAPI#getJoinedPrivateArchivedThreads"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIChannelThreadsArchivedQuery","canonicalReference":"discord-api-types!RESTGetAPIChannelThreadsArchivedQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelUsersThreadsArchivedResult","canonicalReference":"discord-api-types!RESTGetAPIChannelUsersThreadsArchivedResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":504,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getJoinedPrivateArchivedThreads"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getMessage:member(1)","docComment":"/**\n * Fetches a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to fetch\n *\n * @param options - The options for fetching the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-channel-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMessage","canonicalReference":"@discordjs/core!ChannelsAPI#getMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":339,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getMessageReactions:member(1)","docComment":"/**\n * Fetches the reactions for a message\n *\n * @param channelId - The id of the channel the message is in\n *\n * @param messageId - The id of the message to get the reactions for\n *\n * @param emoji - The emoji to get the reactions for\n *\n * @param query - The query options for fetching the reactions\n *\n * @param options - The options for fetching the message reactions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-reactions}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMessageReactions","canonicalReference":"@discordjs/core!ChannelsAPI#getMessageReactions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emoji","canonicalReference":"@discordjs/core!~emoji"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIChannelMessageReactionUsersQuery","canonicalReference":"discord-api-types!RESTGetAPIChannelMessageReactionUsersQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelMessageReactionUsersResult","canonicalReference":"discord-api-types!RESTGetAPIChannelMessageReactionUsersResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":97,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"emoji","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMessageReactions"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getMessages:member(1)","docComment":"/**\n * Fetches the messages of a channel\n *\n * @param channelId - The id of the channel to fetch messages from\n *\n * @param query - The query options for fetching messages\n *\n * @param options - The options for fetching the messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-channel-messages}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMessages","canonicalReference":"@discordjs/core!ChannelsAPI#getMessages"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIChannelMessagesQuery","canonicalReference":"discord-api-types!RESTGetAPIChannelMessagesQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelMessagesResult","canonicalReference":"discord-api-types!RESTGetAPIChannelMessagesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":250,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMessages"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getPins:member(1)","docComment":"/**\n * Fetches the pinned messages of a channel\n *\n * @param channelId - The id of the channel to fetch pinned messages from\n *\n * @param options - The options for fetching the pinned messages\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-pinned-messages}\n */\n","excerptTokens":[{"kind":"Reference","text":"getPins","canonicalReference":"@discordjs/core!ChannelsAPI#getPins"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelPinsResult","canonicalReference":"discord-api-types!RESTGetAPIChannelPinsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":279,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getPins"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#getWebhooks:member(1)","docComment":"/**\n * Fetches the webhooks of a channel\n *\n * @param channelId - The id of the channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#get-channel-webhooks}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWebhooks","canonicalReference":"@discordjs/core!ChannelsAPI#getWebhooks"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelWebhooksResult","canonicalReference":"discord-api-types!RESTGetAPIChannelWebhooksResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":541,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":10},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWebhooks"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#pinMessage:member(1)","docComment":"/**\n * Pins a message in a channel\n *\n * @param channelId - The id of the channel to pin the message in\n *\n * @param messageId - The id of the message to pin\n *\n * @param options - The options for pinning the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#pin-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"pinMessage","canonicalReference":"@discordjs/core!ChannelsAPI#pinMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":291,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"pinMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#showTyping:member(1)","docComment":"/**\n * Shows a typing indicator in a channel\n *\n * @param channelId - The id of the channel to show the typing indicator in\n *\n * @param options - The options for showing the typing indicator\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#trigger-typing-indicator}\n */\n","excerptTokens":[{"kind":"Reference","text":"showTyping","canonicalReference":"@discordjs/core!ChannelsAPI#showTyping"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":268,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"showTyping"},{"kind":"Method","canonicalReference":"@discordjs/core!ChannelsAPI#unpinMessage:member(1)","docComment":"/**\n * Unpins a message in a channel\n *\n * @param channelId - The id of the channel to unpin the message in\n *\n * @param messageId - The id of the message to unpin\n *\n * @param options - The options for unpinning the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#unpin-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"unpinMessage","canonicalReference":"@discordjs/core!ChannelsAPI#unpinMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":371,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"unpinMessage"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!Client:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"Client","canonicalReference":"@discordjs/core!Client:class"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"AsyncEventEmitter","canonicalReference":"@vladfrangu/async_event_emitter!AsyncEventEmitter:class"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"ManagerShardEventsMap","canonicalReference":"@discordjs/core!ManagerShardEventsMap:type"},{"kind":"Content","text":">"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":182,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"Client","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!Client:constructor(1)","docComment":"/**\n * Constructs a new instance of the `Client` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor({ "},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":", "},{"kind":"Reference","text":"gateway","canonicalReference":"@discordjs/core!~gateway"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"ClientOptions","canonicalReference":"@discordjs/core!ClientOptions:interface"},{"kind":"Content","text":");"}],"fileLine":187,"fileColumn":27,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ rest, gateway }","parameterTypeTokenRange":{"startIndex":5,"endIndex":6},"isOptional":false,"isRest":false}]},{"kind":"Property","canonicalReference":"@discordjs/core!Client#api:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"api","canonicalReference":"@discordjs/core!Client#api"},{"kind":"Content","text":": "},{"kind":"Reference","text":"API","canonicalReference":"@discordjs/core!API:class"},{"kind":"Content","text":";"}],"fileLine":187,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"api","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Property","canonicalReference":"@discordjs/core!Client#gateway:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"gateway","canonicalReference":"@discordjs/core!Client#gateway"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Gateway","canonicalReference":"@discordjs/core!~Gateway:interface"},{"kind":"Content","text":";"}],"fileLine":185,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"gateway","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Method","canonicalReference":"@discordjs/core!Client#requestGuildMembers:member(1)","docComment":"/**\n * Requests guild members from the gateway.\n *\n * @param options - The options for the request\n *\n * @param timeout - The timeout for waiting for each guild members chunk event\n *\n * @example\n *\n * Requesting specific members from a guild\n * ```ts\n * const { members } = await client.requestGuildMembers({ guild_id: '1234567890', user_ids: ['9876543210'] });\n * ```\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/gateway-events#request-guild-members}\n */\n","excerptTokens":[{"kind":"Reference","text":"requestGuildMembers","canonicalReference":"@discordjs/core!Client#requestGuildMembers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GatewayRequestGuildMembersData","canonicalReference":"discord-api-types!GatewayRequestGuildMembersData:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"timeout","canonicalReference":"@discordjs/core!~timeout"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<{    "},{"kind":"Reference","text":"members","canonicalReference":"@discordjs/core!~__type#members"},{"kind":"Content","text":": import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"nonce","canonicalReference":"@discordjs/core!~__type#nonce"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"notFound","canonicalReference":"@discordjs/core!~__type#notFound"},{"kind":"Content","text":": "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"presences","canonicalReference":"@discordjs/core!~__type#presences"},{"kind":"Content","text":": import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"GatewayGuildMembersChunkPresence","canonicalReference":"discord-api-types!GatewayGuildMembersChunkPresence:type"},{"kind":"Content","text":"[];  }>"},{"kind":"Content","text":";"}],"fileLine":290,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":10,"endIndex":28},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"timeout","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"requestGuildMembers"},{"kind":"Method","canonicalReference":"@discordjs/core!Client#requestGuildMembersIterator:member(1)","docComment":"/**\n * Requests guild members from the gateway and returns an async iterator that yields the data from each guild members chunk event.\n *\n * @param options - The options for the request\n *\n * @param timeout - The timeout for waiting for each guild members chunk event\n *\n * @example\n *\n * Requesting all members from a guild\n * ```ts\n * for await (const { members } of client.requestGuildMembersIterator({ guild_id: '1234567890', query: '', limit: 0 })) {\n * \tconsole.log(members);\n * }\n * ```\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/gateway-events#request-guild-members}\n */\n","excerptTokens":[{"kind":"Reference","text":"requestGuildMembersIterator","canonicalReference":"@discordjs/core!Client#requestGuildMembersIterator"},{"kind":"Content","text":"("},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GatewayRequestGuildMembersData","canonicalReference":"discord-api-types!GatewayRequestGuildMembersData:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"timeout","canonicalReference":"@discordjs/core!~timeout"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"number"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"AsyncGenerator","canonicalReference":"!AsyncGenerator:interface"},{"kind":"Content","text":"<{    "},{"kind":"Reference","text":"members","canonicalReference":"@discordjs/core!~__type#members"},{"kind":"Content","text":": import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"nonce","canonicalReference":"@discordjs/core!~__type#nonce"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"notFound","canonicalReference":"@discordjs/core!~__type#notFound"},{"kind":"Content","text":": "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":"[] | "},{"kind":"Reference","text":"null"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"presences","canonicalReference":"@discordjs/core!~__type#presences"},{"kind":"Content","text":": import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"GatewayGuildMembersChunkPresence","canonicalReference":"discord-api-types!GatewayGuildMembersChunkPresence:type"},{"kind":"Content","text":"[] | "},{"kind":"Reference","text":"null"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"chunkIndex","canonicalReference":"@discordjs/core!~__type#chunkIndex"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"chunkCount","canonicalReference":"@discordjs/core!~__type#chunkCount"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":";  }, "},{"kind":"Reference","text":"void"},{"kind":"Content","text":", "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":215,"fileColumn":16,"isStatic":false,"returnTypeTokenRange":{"startIndex":10,"endIndex":44},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"timeout","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"requestGuildMembersIterator"},{"kind":"Property","canonicalReference":"@discordjs/core!Client#rest:member","docComment":"","excerptTokens":[{"kind":"Content","text":"readonly "},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!Client#rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":";"}],"fileLine":183,"fileColumn":2,"isReadonly":true,"isOptional":false,"releaseTag":"Public","name":"rest","propertyTypeTokenRange":{"startIndex":3,"endIndex":4},"isStatic":false,"isProtected":false,"isAbstract":false},{"kind":"Method","canonicalReference":"@discordjs/core!Client#updatePresence:member(1)","docComment":"/**\n * Updates the presence of the bot user\n *\n * @param shardId - The id of the shard to update the presence in\n *\n * @param options - The options for updating the presence\n */\n","excerptTokens":[{"kind":"Reference","text":"updatePresence","canonicalReference":"@discordjs/core!Client#updatePresence"},{"kind":"Content","text":"("},{"kind":"Reference","text":"shardId","canonicalReference":"@discordjs/core!~shardId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":", "},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GatewayPresenceUpdateData","canonicalReference":"discord-api-types!GatewayPresenceUpdateData:interface"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":327,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":10,"endIndex":14},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"shardId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"updatePresence"},{"kind":"Method","canonicalReference":"@discordjs/core!Client#updateVoiceState:member(1)","docComment":"/**\n * Updates the voice state of the bot user\n *\n * @param options - The options for updating the voice state\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/gateway-events#update-voice-state}\n */\n","excerptTokens":[{"kind":"Reference","text":"updateVoiceState","canonicalReference":"@discordjs/core!Client#updateVoiceState"},{"kind":"Content","text":"("},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GatewayVoiceStateUpdateData","canonicalReference":"discord-api-types!GatewayVoiceStateUpdateData:interface"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":311,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":10},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"updateVoiceState"}],"extendsTokenRange":{"startIndex":3,"endIndex":7,"typeParameters":[{"startIndex":5,"endIndex":6}]},"implementsTokenRanges":[]},{"kind":"Interface","canonicalReference":"@discordjs/core!ClientOptions:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"ClientOptions","canonicalReference":"@discordjs/core!ClientOptions:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":170,"fileColumn":1,"releaseTag":"Public","name":"ClientOptions","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!ClientOptions#gateway:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"gateway","canonicalReference":"@discordjs/core!ClientOptions#gateway"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Gateway","canonicalReference":"@discordjs/core!~Gateway:interface"},{"kind":"Content","text":";"}],"fileLine":171,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"gateway","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!ClientOptions#rest:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!ClientOptions#rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":";"}],"fileLine":172,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"rest","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}}],"extendsTokenRanges":[]},{"kind":"Interface","canonicalReference":"@discordjs/core!DescriptiveRawFile:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"DescriptiveRawFile","canonicalReference":"@discordjs/core!DescriptiveRawFile:interface"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/util/files.ts","fileLine":4,"fileColumn":1,"releaseTag":"Public","name":"DescriptiveRawFile","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!DescriptiveRawFile#description:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"description","canonicalReference":"@discordjs/core!DescriptiveRawFile#description"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";"}],"fileLine":5,"fileColumn":2,"isReadonly":false,"isOptional":true,"releaseTag":"Public","name":"description","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}}],"extendsTokenRanges":[{"startIndex":3,"endIndex":4,"typeParameters":[]}]},{"kind":"Class","canonicalReference":"@discordjs/core!GuildsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"GuildsAPI","canonicalReference":"@discordjs/core!GuildsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/guild.ts","fileLine":103,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"GuildsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!GuildsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `GuildsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":104,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#addMember:member(1)","docComment":"/**\n * Adds user to the guild\n *\n * @param guildId - The id of the guild to add the user to\n *\n * @param userId - The id of the user to add\n *\n * @param body - The data for adding users to the guild\n *\n * @param options - The options for adding users to the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#add-guild-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"addMember","canonicalReference":"@discordjs/core!GuildsAPI#addMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIGuildMemberJSONBody","canonicalReference":"discord-api-types!RESTPutAPIGuildMemberJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPutAPIGuildMemberResult","canonicalReference":"discord-api-types!RESTPutAPIGuildMemberResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":181,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"addMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#addRoleToMember:member(1)","docComment":"/**\n * Adds a role to a guild member\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param roleId - The id of the role\n *\n * @param options - The options for adding a role to a guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#add-guild-member-role}\n */\n","excerptTokens":[{"kind":"Reference","text":"addRoleToMember","canonicalReference":"@discordjs/core!GuildsAPI#addRoleToMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"roleId","canonicalReference":"@discordjs/core!~roleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1182,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"roleId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"addRoleToMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#banUser:member(1)","docComment":"/**\n * Bans a user from a guild\n *\n * @param guildId - The id of the guild to ban the member in\n *\n * @param userId - The id of the user to ban\n *\n * @param body - The payload for banning the user\n *\n * @param options - The options for banning the user\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#create-guild-ban}\n */\n","excerptTokens":[{"kind":"Reference","text":"banUser","canonicalReference":"@discordjs/core!GuildsAPI#banUser"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPutAPIGuildBanJSONBody","canonicalReference":"discord-api-types!RESTPutAPIGuildBanJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":312,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"banUser"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#beginPrune:member(1)","docComment":"/**\n * Prunes members in a guild\n *\n * @param guildId - The id of the guild to prune members in\n *\n * @param body - The options for pruning members\n *\n * @param options - The options for initiating the prune\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#begin-guild-prune}\n */\n","excerptTokens":[{"kind":"Reference","text":"beginPrune","canonicalReference":"@discordjs/core!GuildsAPI#beginPrune"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPostAPIGuildPruneJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildPruneJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostAPIGuildPruneResult","canonicalReference":"discord-api-types!RESTPostAPIGuildPruneResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":469,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"beginPrune"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#create:member(1)","docComment":"/**\n * Creates a guild\n *\n * @param body - The guild to create\n *\n * @param options - The options for creating the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#create-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"create","canonicalReference":"@discordjs/core!GuildsAPI#create"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildsJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuild","canonicalReference":"discord-api-types!APIGuild:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":137,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"create"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createAutoModerationRule:member(1)","docComment":"/**\n * Creates a new auto moderation rule for a guild\n *\n * @param guildId - The id of the guild to create the auto moderation rule from\n *\n * @param body - The data for creating the auto moderation rule\n *\n * @param options - The options for creating the auto moderation rule\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/auto-moderation#create-auto-moderation-rule}\n */\n","excerptTokens":[{"kind":"Reference","text":"createAutoModerationRule","canonicalReference":"@discordjs/core!GuildsAPI#createAutoModerationRule"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIAutoModerationRuleJSONBody","canonicalReference":"discord-api-types!RESTPostAPIAutoModerationRuleJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIAutoModerationRule","canonicalReference":"discord-api-types!APIAutoModerationRule:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1054,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createAutoModerationRule"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createChannel:member(1)","docComment":"/**\n * Creates a guild channel\n *\n * @param guildId - The id of the guild to create the channel in\n *\n * @param body - The data to create the new channel\n *\n * @param options - The options for creating the guild channel\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#create-guild-channel}\n */\n","excerptTokens":[{"kind":"Reference","text":"createChannel","canonicalReference":"@discordjs/core!GuildsAPI#createChannel"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildChannelJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildChannelJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":233,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createChannel"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createEmoji:member(1)","docComment":"/**\n * Creates a new emoji for a guild\n *\n * @param guildId - The id of the guild to create the emoji from\n *\n * @param body - The data for creating the emoji\n *\n * @param options - The options for creating the emoji\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/emoji#create-guild-emoji}\n */\n","excerptTokens":[{"kind":"Reference","text":"createEmoji","canonicalReference":"@discordjs/core!GuildsAPI#createEmoji"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildEmojiJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildEmojiJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIEmoji","canonicalReference":"discord-api-types!APIEmoji:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":684,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createEmoji"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createRole:member(1)","docComment":"/**\n * Creates a guild role\n *\n * @param guildId - The id of the guild to create the role in\n *\n * @param body - The data to create the role with\n *\n * @param options - The options for creating the guild role\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#create-guild-role}\n */\n","excerptTokens":[{"kind":"Reference","text":"createRole","canonicalReference":"@discordjs/core!GuildsAPI#createRole"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildRoleJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildRoleJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIRole","canonicalReference":"discord-api-types!APIRole:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":356,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createRole"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createScheduledEvent:member(1)","docComment":"/**\n * Creates a new scheduled event for a guild\n *\n * @param guildId - The id of the guild to create the scheduled event from\n *\n * @param body - The data to create the event with\n *\n * @param options - The options for creating the scheduled event\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#create-guild-scheduled-event}\n */\n","excerptTokens":[{"kind":"Reference","text":"createScheduledEvent","canonicalReference":"@discordjs/core!GuildsAPI#createScheduledEvent"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildScheduledEventJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildScheduledEventJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildScheduledEvent","canonicalReference":"discord-api-types!APIGuildScheduledEvent:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":761,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createScheduledEvent"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createSticker:member(1)","docComment":"/**\n * Creates a sticker for a guild\n *\n * @param guildId - The id of the guild to create the sticker for\n *\n * @param body - The data for creating the sticker\n *\n * @param options - The options for creating the sticker\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#create-guild-sticker}\n */\n","excerptTokens":[{"kind":"Reference","text":"createSticker","canonicalReference":"@discordjs/core!GuildsAPI#createSticker"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"file","canonicalReference":"@discordjs/core!~file"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"Omit","canonicalReference":"!Omit:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostAPIGuildStickerFormDataBody","canonicalReference":"discord-api-types!RESTPostAPIGuildStickerFormDataBody:interface"},{"kind":"Content","text":", 'file'> & {    "},{"kind":"Reference","text":"file","canonicalReference":"@discordjs/core!~__type#file"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":";  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APISticker","canonicalReference":"discord-api-types!APISticker:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":942,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":28,"endIndex":32},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ file, ...body }","parameterTypeTokenRange":{"startIndex":10,"endIndex":18},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":23,"endIndex":27},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createSticker"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#createTemplate:member(1)","docComment":"/**\n * Creates a new template\n *\n * @param templateCode - The code of the template\n *\n * @param body - The data for creating the template\n *\n * @param options - The options for creating the template\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#create-guild-template}\n */\n","excerptTokens":[{"kind":"Reference","text":"createTemplate","canonicalReference":"@discordjs/core!GuildsAPI#createTemplate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"templateCode","canonicalReference":"@discordjs/core!~templateCode"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildTemplatesJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildTemplatesJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APITemplate","canonicalReference":"discord-api-types!APITemplate:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1228,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"templateCode","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createTemplate"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#delete:member(1)","docComment":"/**\n * Deletes a guild\n *\n * @param guildId - The id of the guild to delete\n *\n * @param options - The options for deleting this guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#delete-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"delete","canonicalReference":"@discordjs/core!GuildsAPI#delete"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":", "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":168,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":15,"endIndex":19},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal, reason }","parameterTypeTokenRange":{"startIndex":10,"endIndex":14},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"delete"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteAutoModerationRule:member(1)","docComment":"/**\n * Deletes an auto moderation rule for a guild\n *\n * @param guildId - The id of the guild to delete the auto moderation rule from\n *\n * @param ruleId - The id of the auto moderation rule to delete\n *\n * @param options - The options for deleting the auto moderation rule\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/auto-moderation#delete-auto-moderation-rule}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteAutoModerationRule","canonicalReference":"@discordjs/core!GuildsAPI#deleteAutoModerationRule"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"ruleId","canonicalReference":"@discordjs/core!~ruleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1096,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"ruleId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteAutoModerationRule"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteEmoji:member(1)","docComment":"/**\n * Deletes an emoji for a guild\n *\n * @param guildId - The id of the guild to delete the emoji from\n *\n * @param emojiId - The id of the emoji to delete\n *\n * @param options - The options for deleting the emoji\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/emoji#delete-guild-emoji}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteEmoji","canonicalReference":"@discordjs/core!GuildsAPI#deleteEmoji"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emojiId","canonicalReference":"@discordjs/core!~emojiId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":726,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"emojiId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteEmoji"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteIntegration:member(1)","docComment":"/**\n * Deletes an integration from a guild\n *\n * @param guildId - The id of the guild to delete the integration from\n *\n * @param integrationId - The id of the integration to delete\n *\n * @param options - The options for deleting the integration\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#delete-guild-integration}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteIntegration","canonicalReference":"@discordjs/core!GuildsAPI#deleteIntegration"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"integrationId","canonicalReference":"@discordjs/core!~integrationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":522,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"integrationId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteIntegration"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteRole:member(1)","docComment":"/**\n * Deletes a guild role\n *\n * @param guildId - The id of the guild to delete the role in\n *\n * @param roleId - The id of the role to delete\n *\n * @param options - The options for deleting the guild role\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#delete-guild-role}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteRole","canonicalReference":"@discordjs/core!GuildsAPI#deleteRole"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"roleId","canonicalReference":"@discordjs/core!~roleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":414,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"roleId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteRole"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteScheduledEvent:member(1)","docComment":"/**\n * Deletes a scheduled event for a guild\n *\n * @param guildId - The id of the guild to delete the scheduled event from\n *\n * @param eventId - The id of the scheduled event to delete\n *\n * @param options - The options for deleting the scheduled event\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#delete-guild-scheduled-event}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteScheduledEvent","canonicalReference":"@discordjs/core!GuildsAPI#deleteScheduledEvent"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"eventId","canonicalReference":"@discordjs/core!~eventId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":824,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"eventId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteScheduledEvent"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteSticker:member(1)","docComment":"/**\n * Deletes a sticker for a guild\n *\n * @param guildId - The id of the guild to delete the sticker from\n *\n * @param stickerId - The id of the sticker to delete\n *\n * @param options - The options for deleting the sticker\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#delete-guild-sticker}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteSticker","canonicalReference":"@discordjs/core!GuildsAPI#deleteSticker"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"stickerId","canonicalReference":"@discordjs/core!~stickerId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":988,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"stickerId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteSticker"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#deleteTemplate:member(1)","docComment":"/**\n * Deletes a template for a guild\n *\n * @param guildId - The id of the guild to delete the template from\n *\n * @param templateCode - The code of the template to delete\n *\n * @param options - The options for deleting the template\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#delete-guild-template}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteTemplate","canonicalReference":"@discordjs/core!GuildsAPI#deleteTemplate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"templateCode","canonicalReference":"@discordjs/core!~templateCode"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":907,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"templateCode","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteTemplate"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#edit:member(1)","docComment":"/**\n * Edits a guild\n *\n * @param guildId - The id of the guild to edit\n *\n * @param body - The new guild data\n *\n * @param options - The options for editing the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"edit","canonicalReference":"@discordjs/core!GuildsAPI#edit"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuild","canonicalReference":"discord-api-types!APIGuild:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":149,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"edit"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editAutoModerationRule:member(1)","docComment":"/**\n * Edits an auto moderation rule for a guild\n *\n * @param guildId - The id of the guild to edit the auto moderation rule from\n *\n * @param ruleId - The id of the auto moderation rule to edit\n *\n * @param body - The data for editing the auto moderation rule\n *\n * @param options - The options for editing the auto moderation rule\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/auto-moderation#modify-auto-moderation-rule}\n */\n","excerptTokens":[{"kind":"Reference","text":"editAutoModerationRule","canonicalReference":"@discordjs/core!GuildsAPI#editAutoModerationRule"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"ruleId","canonicalReference":"@discordjs/core!~ruleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIAutoModerationRuleJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIAutoModerationRuleJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIAutoModerationRule","canonicalReference":"discord-api-types!APIAutoModerationRule:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1075,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"ruleId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editAutoModerationRule"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editEmoji:member(1)","docComment":"/**\n * Edits an emoji for a guild\n *\n * @param guildId - The id of the guild to edit the emoji from\n *\n * @param emojiId - The id of the emoji to edit\n *\n * @param body - The data for editing the emoji\n *\n * @param options - The options for editing the emoji\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/emoji#modify-guild-emoji}\n */\n","excerptTokens":[{"kind":"Reference","text":"editEmoji","canonicalReference":"@discordjs/core!GuildsAPI#editEmoji"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emojiId","canonicalReference":"@discordjs/core!~emojiId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildEmojiJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildEmojiJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIEmoji","canonicalReference":"discord-api-types!APIEmoji:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":705,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"emojiId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editEmoji"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editMember:member(1)","docComment":"/**\n * Edits a guild member\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param body - The data for editing the guild member\n *\n * @param options - The options for editing the guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"editMember","canonicalReference":"@discordjs/core!GuildsAPI#editMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPatchAPIGuildMemberJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildMemberJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1144,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editMFALevel:member(1)","docComment":"/**\n * Edits the multi-factor-authentication (MFA) level of a guild\n *\n * @param guildId - The id of the guild to edit the MFA level for\n *\n * @param level - The new MFA level\n *\n * @param options - The options for editing the MFA level\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-mfa-level}\n */\n","excerptTokens":[{"kind":"Reference","text":"editMFALevel","canonicalReference":"@discordjs/core!GuildsAPI#editMFALevel"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"level","canonicalReference":"@discordjs/core!~level"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GuildMFALevel","canonicalReference":"discord-api-types!GuildMFALevel:enum"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"RESTPostAPIGuildsMFAJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildsMFAJSONBody:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":430,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"level","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editMFALevel"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editOnboarding:member(1)","docComment":"/**\n * Edits a guild onboarding\n *\n * @param guildId - The id of the guild\n *\n * @param body - The data for editing the guild onboarding\n *\n * @param options - The options for editing the guild onboarding\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-onboarding}\n */\n","excerptTokens":[{"kind":"Reference","text":"editOnboarding","canonicalReference":"@discordjs/core!GuildsAPI#editOnboarding"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIGuildOnboardingJSONBody","canonicalReference":"discord-api-types!RESTPutAPIGuildOnboardingJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildOnboarding","canonicalReference":"discord-api-types!APIGuildOnboarding:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1278,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editOnboarding"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editRole:member(1)","docComment":"/**\n * Edits a guild role\n *\n * @param guildId - The id of the guild to edit the role in\n *\n * @param roleId - The id of the role to edit\n *\n * @param body - data for editing the role\n *\n * @param options - The options for editing the guild role\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-role}\n */\n","excerptTokens":[{"kind":"Reference","text":"editRole","canonicalReference":"@discordjs/core!GuildsAPI#editRole"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"roleId","canonicalReference":"@discordjs/core!~roleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildRoleJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildRoleJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIRole","canonicalReference":"discord-api-types!APIRole:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":393,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"roleId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editRole"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editScheduledEvent:member(1)","docComment":"/**\n * Edits a scheduled event for a guild\n *\n * @param guildId - The id of the guild to edit the scheduled event from\n *\n * @param eventId - The id of the scheduled event to edit\n *\n * @param body - The new event data\n *\n * @param options - The options for editing the scheduled event\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#modify-guild-scheduled-event}\n */\n","excerptTokens":[{"kind":"Reference","text":"editScheduledEvent","canonicalReference":"@discordjs/core!GuildsAPI#editScheduledEvent"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"eventId","canonicalReference":"@discordjs/core!~eventId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildScheduledEventJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildScheduledEventJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildScheduledEvent","canonicalReference":"discord-api-types!APIGuildScheduledEvent:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":803,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"eventId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editScheduledEvent"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editSticker:member(1)","docComment":"/**\n * Edits a sticker for a guild\n *\n * @param guildId - The id of the guild to edit the sticker from\n *\n * @param stickerId - The id of the sticker to edit\n *\n * @param body - The data for editing the sticker\n *\n * @param options - The options for editing the sticker\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#modify-guild-sticker}\n */\n","excerptTokens":[{"kind":"Reference","text":"editSticker","canonicalReference":"@discordjs/core!GuildsAPI#editSticker"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"stickerId","canonicalReference":"@discordjs/core!~stickerId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildStickerJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildStickerJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APISticker","canonicalReference":"discord-api-types!APISticker:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":967,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"stickerId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editSticker"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editTemplate:member(1)","docComment":"/**\n * Edits a template for a guild\n *\n * @param guildId - The id of the guild to edit the template from\n *\n * @param templateCode - The code of the template to edit\n *\n * @param body - The data for editing the template\n *\n * @param options - The options for editing the template\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#modify-guild-template}\n */\n","excerptTokens":[{"kind":"Reference","text":"editTemplate","canonicalReference":"@discordjs/core!GuildsAPI#editTemplate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"templateCode","canonicalReference":"@discordjs/core!~templateCode"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildTemplateJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildTemplateJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APITemplate","canonicalReference":"discord-api-types!APITemplate:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":887,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"templateCode","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editTemplate"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editUserVoiceState:member(1)","docComment":"/**\n * Edits a user's voice state in a guild\n *\n * @param guildId - The id of the guild to edit the current user's voice state in\n *\n * @param userId - The id of the user to edit the voice state for\n *\n * @param body - The data for editing the voice state\n *\n * @param options - The options for editing the voice state\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-user-voice-state}\n */\n","excerptTokens":[{"kind":"Reference","text":"editUserVoiceState","canonicalReference":"@discordjs/core!GuildsAPI#editUserVoiceState"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildVoiceStateUserJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildVoiceStateUserJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":644,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editUserVoiceState"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editWelcomeScreen:member(1)","docComment":"/**\n * Edits the welcome screen for a guild\n *\n * @param guildId - The id of the guild to edit the welcome screen for\n *\n * @param body - The new welcome screen data\n *\n * @param options - The options for editing the welcome screen\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-welcome-screen}\n */\n","excerptTokens":[{"kind":"Reference","text":"editWelcomeScreen","canonicalReference":"@discordjs/core!GuildsAPI#editWelcomeScreen"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPatchAPIGuildWelcomeScreenJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildWelcomeScreenJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildWelcomeScreen","canonicalReference":"discord-api-types!APIGuildWelcomeScreen:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":623,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editWelcomeScreen"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#editWidgetSettings:member(1)","docComment":"/**\n * Edits the widget settings for a guild\n *\n * @param guildId - The id of the guild to edit the widget settings from\n *\n * @param body - The new widget settings data\n *\n * @param options - The options for editing the widget settings\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-widget}\n */\n","excerptTokens":[{"kind":"Reference","text":"editWidgetSettings","canonicalReference":"@discordjs/core!GuildsAPI#editWidgetSettings"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildWidgetSettingsJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildWidgetSettingsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildWidgetSettings","canonicalReference":"discord-api-types!APIGuildWidgetSettings:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":551,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editWidgetSettings"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#get:member(1)","docComment":"/**\n * Fetches a guild\n *\n * @param guildId - The id of the guild\n *\n * @param options - The options for fetching the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!GuildsAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuild","canonicalReference":"discord-api-types!APIGuild:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":113,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getActiveThreads:member(1)","docComment":"/**\n * Fetches the active threads in a guild\n *\n * @param guildId - The id of the guild to fetch the active threads from\n *\n * @param options - The options for fetching the active threads\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#list-active-guild-threads}\n */\n","excerptTokens":[{"kind":"Reference","text":"getActiveThreads","canonicalReference":"@discordjs/core!GuildsAPI#getActiveThreads"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIThreadList","canonicalReference":"discord-api-types!APIThreadList:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":268,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getActiveThreads"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getAuditLogs:member(1)","docComment":"/**\n * Fetches the audit logs for a guild\n *\n * @param guildId - The id of the guild to fetch the audit logs from\n *\n * @param query - The query options for fetching the audit logs\n *\n * @param options - The options for fetching the audit logs\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/audit-log#get-guild-audit-log}\n */\n","excerptTokens":[{"kind":"Reference","text":"getAuditLogs","canonicalReference":"@discordjs/core!GuildsAPI#getAuditLogs"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIAuditLogQuery","canonicalReference":"discord-api-types!RESTGetAPIAuditLogQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIAuditLog","canonicalReference":"discord-api-types!APIAuditLog:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1004,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getAuditLogs"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getAutoModerationRule:member(1)","docComment":"/**\n * Fetches an auto moderation rule for a guild\n *\n * @param guildId - The id of the guild to fetch the auto moderation rule from\n *\n * @param ruleId - The id of the auto moderation rule to fetch\n *\n * @param options - The options for fetching the auto moderation rule\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/auto-moderation#get-auto-moderation-rule}\n */\n","excerptTokens":[{"kind":"Reference","text":"getAutoModerationRule","canonicalReference":"@discordjs/core!GuildsAPI#getAutoModerationRule"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"ruleId","canonicalReference":"@discordjs/core!~ruleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIAutoModerationRule","canonicalReference":"discord-api-types!APIAutoModerationRule:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1036,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"ruleId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getAutoModerationRule"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getAutoModerationRules:member(1)","docComment":"/**\n * Fetches all auto moderation rules for a guild\n *\n * @param guildId - The id of the guild to fetch the auto moderation rules from\n *\n * @param options - The options for fetching the auto moderation rules\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/auto-moderation#list-auto-moderation-rules-for-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"getAutoModerationRules","canonicalReference":"@discordjs/core!GuildsAPI#getAutoModerationRules"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIAutoModerationRulesResult","canonicalReference":"discord-api-types!RESTGetAPIAutoModerationRulesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1022,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getAutoModerationRules"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getChannels:member(1)","docComment":"/**\n * Fetches a guild's channels\n *\n * @param guildId - The id of the guild to fetch the channels from\n *\n * @param options - The options for fetching the guild channels\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-channels}\n */\n","excerptTokens":[{"kind":"Reference","text":"getChannels","canonicalReference":"@discordjs/core!GuildsAPI#getChannels"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildChannelsResult","canonicalReference":"discord-api-types!RESTGetAPIGuildChannelsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":219,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getChannels"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getEmoji:member(1)","docComment":"/**\n * Fetches an emoji for a guild\n *\n * @param guildId - The id of the guild to fetch the emoji from\n *\n * @param emojiId - The id of the emoji to fetch\n *\n * @param options - The options for fetching the emoji\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/emoji#get-guild-emoji}\n */\n","excerptTokens":[{"kind":"Reference","text":"getEmoji","canonicalReference":"@discordjs/core!GuildsAPI#getEmoji"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"emojiId","canonicalReference":"@discordjs/core!~emojiId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIEmoji","canonicalReference":"discord-api-types!APIEmoji:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":672,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"emojiId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getEmoji"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getEmojis:member(1)","docComment":"/**\n * Fetches all emojis for a guild\n *\n * @param guildId - The id of the guild to fetch the emojis from\n *\n * @param options - The options for fetching the emojis\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/emoji#list-guild-emojis}\n */\n","excerptTokens":[{"kind":"Reference","text":"getEmojis","canonicalReference":"@discordjs/core!GuildsAPI#getEmojis"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildEmojisResult","canonicalReference":"discord-api-types!RESTGetAPIGuildEmojisResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":660,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getEmojis"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getIntegrations:member(1)","docComment":"/**\n * Fetches the integrations for a guild\n *\n * @param guildId - The id of the guild to fetch the integrations from\n *\n * @param options - The options for fetching the integrations\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-integrations}\n */\n","excerptTokens":[{"kind":"Reference","text":"getIntegrations","canonicalReference":"@discordjs/core!GuildsAPI#getIntegrations"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildIntegrationsResult","canonicalReference":"discord-api-types!RESTGetAPIGuildIntegrationsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":510,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getIntegrations"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getInvites:member(1)","docComment":"/**\n * Fetches the invites for a guild\n *\n * @param guildId - The id of the guild to fetch the invites from\n *\n * @param options - The options for fetching the invites\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-invites}\n */\n","excerptTokens":[{"kind":"Reference","text":"getInvites","canonicalReference":"@discordjs/core!GuildsAPI#getInvites"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildInvitesResult","canonicalReference":"discord-api-types!RESTGetAPIGuildInvitesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":499,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getInvites"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getMember:member(1)","docComment":"/**\n * Fetches a guild member\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param options - The options for fetching the guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMember","canonicalReference":"@discordjs/core!GuildsAPI#getMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1112,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getMemberBan:member(1)","docComment":"/**\n * Fetches a guild member ban\n *\n * @param guildId - The id of the guild to fetch the ban from\n *\n * @param userId - The id of the user to fetch the ban\n *\n * @param options - The options for fetching the ban\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-ban}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMemberBan","canonicalReference":"@discordjs/core!GuildsAPI#getMemberBan"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIBan","canonicalReference":"discord-api-types!APIBan:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":280,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMemberBan"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getMemberBans:member(1)","docComment":"/**\n * Fetches guild member bans\n *\n * @param guildId - The id of the guild to fetch the bans from\n *\n * @param query - The query options for fetching the bans\n *\n * @param options - The options for fetching the bans\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-bans}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMemberBans","canonicalReference":"@discordjs/core!GuildsAPI#getMemberBans"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildBansQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildBansQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildBansResult","canonicalReference":"discord-api-types!RESTGetAPIGuildBansResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":292,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMemberBans"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getMembers:member(1)","docComment":"/**\n * Fetches all the members of a guild\n *\n * @param guildId - The id of the guild\n *\n * @param query - The query for fetching the guild members\n *\n * @param options - The options for fetching the guild members\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#list-guild-members}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMembers","canonicalReference":"@discordjs/core!GuildsAPI#getMembers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildMembersQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildMembersQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildMembersResult","canonicalReference":"discord-api-types!RESTGetAPIGuildMembersResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":201,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMembers"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getOnboarding:member(1)","docComment":"/**\n * Fetches a guild onboarding\n *\n * @param guildId - The id of the guild\n *\n * @param options - The options for fetching the guild onboarding\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-onboarding}\n */\n","excerptTokens":[{"kind":"Reference","text":"getOnboarding","canonicalReference":"@discordjs/core!GuildsAPI#getOnboarding"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildOnboarding","canonicalReference":"discord-api-types!APIGuildOnboarding:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1266,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getOnboarding"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getPreview:member(1)","docComment":"/**\n * Fetches a guild preview\n *\n * @param guildId - The id of the guild to fetch the preview from\n *\n * @param options - The options for fetching the guild preview\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-preview}\n */\n","excerptTokens":[{"kind":"Reference","text":"getPreview","canonicalReference":"@discordjs/core!GuildsAPI#getPreview"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildPreview","canonicalReference":"discord-api-types!APIGuildPreview:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":124,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getPreview"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getPruneCount:member(1)","docComment":"/**\n * Fetch the number of members that can be pruned from a guild\n *\n * @param guildId - The id of the guild to fetch the number of pruned members from\n *\n * @param query - The query options for fetching the number of pruned members\n *\n * @param options - The options for fetching the number of pruned members\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-prune-count}\n */\n","excerptTokens":[{"kind":"Reference","text":"getPruneCount","canonicalReference":"@discordjs/core!GuildsAPI#getPruneCount"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildPruneCountQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildPruneCountQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildPruneCountResult","canonicalReference":"discord-api-types!RESTGetAPIGuildPruneCountResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":450,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getPruneCount"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getRoles:member(1)","docComment":"/**\n * Gets all the roles in a guild\n *\n * @param guildId - The id of the guild to fetch the roles from\n *\n * @param options - The options for fetching the guild roles\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-roles}\n */\n","excerptTokens":[{"kind":"Reference","text":"getRoles","canonicalReference":"@discordjs/core!GuildsAPI#getRoles"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildRolesResult","canonicalReference":"discord-api-types!RESTGetAPIGuildRolesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":344,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getRoles"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEvent:member(1)","docComment":"/**\n * Fetches a scheduled event for a guild\n *\n * @param guildId - The id of the guild to fetch the scheduled event from\n *\n * @param eventId - The id of the scheduled event to fetch\n *\n * @param query - The options for fetching the scheduled event\n *\n * @param options - The options for fetching the scheduled event\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event}\n */\n","excerptTokens":[{"kind":"Reference","text":"getScheduledEvent","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEvent"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"eventId","canonicalReference":"@discordjs/core!~eventId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildScheduledEventQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildScheduledEventQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildScheduledEvent","canonicalReference":"discord-api-types!APIGuildScheduledEvent:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":782,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"eventId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getScheduledEvent"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEvents:member(1)","docComment":"/**\n * Fetches all scheduled events for a guild\n *\n * @param guildId - The id of the guild to fetch the scheduled events from\n *\n * @param query - The query options for fetching the scheduled events\n *\n * @param options - The options for fetching the scheduled events\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#list-scheduled-events-for-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"getScheduledEvents","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEvents"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildScheduledEventsQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildScheduledEventsQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildScheduledEventsResult","canonicalReference":"discord-api-types!RESTGetAPIGuildScheduledEventsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":742,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getScheduledEvents"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEventUsers:member(1)","docComment":"/**\n * Gets all users that are interested in a scheduled event\n *\n * @param guildId - The id of the guild to fetch the scheduled event users from\n *\n * @param eventId - The id of the scheduled event to fetch the users for\n *\n * @param query - The options for fetching the scheduled event users\n *\n * @param options - The options for fetching the scheduled event users\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-scheduled-event#get-guild-scheduled-event-users}\n */\n","excerptTokens":[{"kind":"Reference","text":"getScheduledEventUsers","canonicalReference":"@discordjs/core!GuildsAPI#getScheduledEventUsers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"eventId","canonicalReference":"@discordjs/core!~eventId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIGuildScheduledEventUsersQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildScheduledEventUsersQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildScheduledEventUsersResult","canonicalReference":"discord-api-types!RESTGetAPIGuildScheduledEventUsersResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":841,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"eventId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getScheduledEventUsers"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getSticker:member(1)","docComment":"/**\n * Fetches a sticker for a guild\n *\n * @param guildId - The id of the guild to fetch the sticker from\n *\n * @param stickerId - The id of the sticker to fetch\n *\n * @param options - The options for fetching the sticker\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#get-guild-sticker}\n */\n","excerptTokens":[{"kind":"Reference","text":"getSticker","canonicalReference":"@discordjs/core!GuildsAPI#getSticker"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"stickerId","canonicalReference":"@discordjs/core!~stickerId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APISticker","canonicalReference":"discord-api-types!APISticker:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":930,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"stickerId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getSticker"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getStickers:member(1)","docComment":"/**\n * Fetches all the stickers for a guild\n *\n * @param guildId - The id of the guild to fetch the stickers from\n *\n * @param options - The options for fetching the stickers\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#list-guild-stickers}\n */\n","excerptTokens":[{"kind":"Reference","text":"getStickers","canonicalReference":"@discordjs/core!GuildsAPI#getStickers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildStickersResult","canonicalReference":"discord-api-types!RESTGetAPIGuildStickersResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":918,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getStickers"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getTemplate:member(1)","docComment":"/**\n * Fetches a guild template\n *\n * @param templateCode - The code of the template\n *\n * @param options - The options for fetching the guild template\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#get-guild-template}\n */\n","excerptTokens":[{"kind":"Reference","text":"getTemplate","canonicalReference":"@discordjs/core!GuildsAPI#getTemplate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"templateCode","canonicalReference":"@discordjs/core!~templateCode"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APITemplate","canonicalReference":"discord-api-types!APITemplate:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1216,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"templateCode","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getTemplate"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getTemplates:member(1)","docComment":"/**\n * Fetches all the templates for a guild\n *\n * @param guildId - The id of the guild to fetch the templates from\n *\n * @param options - The options for fetching the templates\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#get-guild-templates}\n */\n","excerptTokens":[{"kind":"Reference","text":"getTemplates","canonicalReference":"@discordjs/core!GuildsAPI#getTemplates"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildTemplatesResult","canonicalReference":"discord-api-types!RESTGetAPIGuildTemplatesResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":860,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getTemplates"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getVanityURL:member(1)","docComment":"/**\n * Fetches the vanity url for a guild\n *\n * @param guildId - The id of the guild to fetch the vanity url from\n *\n * @param options - The options for fetching the vanity url\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-vanity-url}\n */\n","excerptTokens":[{"kind":"Reference","text":"getVanityURL","canonicalReference":"@discordjs/core!GuildsAPI#getVanityURL"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildVanityUrlResult","canonicalReference":"discord-api-types!RESTGetAPIGuildVanityUrlResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":581,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getVanityURL"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getVoiceRegions:member(1)","docComment":"/**\n * Fetches voice regions for a guild\n *\n * @param guildId - The id of the guild to fetch the voice regions from\n *\n * @param options - The options for fetching the voice regions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-voice-regions}\n */\n","excerptTokens":[{"kind":"Reference","text":"getVoiceRegions","canonicalReference":"@discordjs/core!GuildsAPI#getVoiceRegions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildVoiceRegionsResult","canonicalReference":"discord-api-types!RESTGetAPIGuildVoiceRegionsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":488,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getVoiceRegions"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getWebhooks:member(1)","docComment":"/**\n * Fetches webhooks for a guild\n *\n * @param id - The id of the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#get-guild-webhooks}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWebhooks","canonicalReference":"@discordjs/core!GuildsAPI#getWebhooks"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildWebhooksResult","canonicalReference":"discord-api-types!RESTGetAPIGuildWebhooksResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1242,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":10},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWebhooks"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getWelcomeScreen:member(1)","docComment":"/**\n * Fetches the welcome screen for a guild\n *\n * @param guildId - The id of the guild to fetch the welcome screen from\n *\n * @param options - The options for fetching the welcome screen\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-welcome-screen}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWelcomeScreen","canonicalReference":"@discordjs/core!GuildsAPI#getWelcomeScreen"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildWelcomeScreen","canonicalReference":"discord-api-types!APIGuildWelcomeScreen:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":611,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWelcomeScreen"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getWidget:member(1)","docComment":"/**\n * Fetches the widget for a guild\n *\n * @param guildId - The id of the guild to fetch the widget from\n *\n * @param options - The options for fetching the widget\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-widget}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWidget","canonicalReference":"@discordjs/core!GuildsAPI#getWidget"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildWidget","canonicalReference":"discord-api-types!APIGuildWidget:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":570,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWidget"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getWidgetImage:member(1)","docComment":"/**\n * Fetches the widget image for a guild\n *\n * @param guildId - The id of the guild to fetch the widget image from\n *\n * @param style - The style of the widget image\n *\n * @param options - The options for fetching the widget image\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-widget-image}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWidgetImage","canonicalReference":"@discordjs/core!GuildsAPI#getWidgetImage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"style","canonicalReference":"@discordjs/core!~style"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"GuildWidgetStyle","canonicalReference":"discord-api-types!GuildWidgetStyle:enum"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"ArrayBuffer","canonicalReference":"!ArrayBuffer:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":593,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"style","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWidgetImage"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#getWidgetSettings:member(1)","docComment":"/**\n * Fetches the widget settings for a guild\n *\n * @param guildId - The id of the guild to fetch the widget settings from\n *\n * @param options - The options for fetching the widget settings\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#get-guild-widget-settings}\n */\n","excerptTokens":[{"kind":"Reference","text":"getWidgetSettings","canonicalReference":"@discordjs/core!GuildsAPI#getWidgetSettings"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildWidgetSettings","canonicalReference":"discord-api-types!APIGuildWidgetSettings:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":537,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getWidgetSettings"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#removeMember:member(1)","docComment":"/**\n * Removes a member from a guild\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param options - The options for removing the guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#remove-guild-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"removeMember","canonicalReference":"@discordjs/core!GuildsAPI#removeMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1165,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"removeMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#removeRoleFromMember:member(1)","docComment":"/**\n * Removes a role from a guild member\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param roleId - The id of the role\n *\n * @param options - The options for removing a role from a guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#remove-guild-member-role}\n */\n","excerptTokens":[{"kind":"Reference","text":"removeRoleFromMember","canonicalReference":"@discordjs/core!GuildsAPI#removeRoleFromMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"roleId","canonicalReference":"@discordjs/core!~roleId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1200,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"roleId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":18,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"removeRoleFromMember"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#searchForMembers:member(1)","docComment":"/**\n * Searches for guild members\n *\n * @param guildId - The id of the guild to search in\n *\n * @param query - The query to search for\n *\n * @param options - The options for searching for guild members\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#search-guild-members}\n */\n","excerptTokens":[{"kind":"Reference","text":"searchForMembers","canonicalReference":"@discordjs/core!GuildsAPI#searchForMembers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTGetAPIGuildMembersSearchQuery","canonicalReference":"discord-api-types!RESTGetAPIGuildMembersSearchQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIGuildMembersSearchResult","canonicalReference":"discord-api-types!RESTGetAPIGuildMembersSearchResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1124,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"searchForMembers"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#setChannelPositions:member(1)","docComment":"/**\n * Edits a guild channel's positions\n *\n * @param guildId - The id of the guild to edit the channel positions from\n *\n * @param body - The data to edit the channel positions with\n *\n * @param options - The options for editing the guild channel positions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-channel-positions}\n */\n","excerptTokens":[{"kind":"Reference","text":"setChannelPositions","canonicalReference":"@discordjs/core!GuildsAPI#setChannelPositions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildChannelPositionsJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildChannelPositionsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":253,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"setChannelPositions"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#setRolePositions:member(1)","docComment":"/**\n * Sets role positions in a guild\n *\n * @param guildId - The id of the guild to set role positions for\n *\n * @param body - The data for setting a role position\n *\n * @param options - The options for setting role positions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-guild-role-positions}\n */\n","excerptTokens":[{"kind":"Reference","text":"setRolePositions","canonicalReference":"@discordjs/core!GuildsAPI#setRolePositions"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIGuildRolePositionsJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildRolePositionsJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPatchAPIGuildRolePositionsResult","canonicalReference":"discord-api-types!RESTPatchAPIGuildRolePositionsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":372,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"setRolePositions"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#setVoiceState:member(1)","docComment":"/**\n * Sets the voice state for the current user\n *\n * @param guildId - The id of the guild\n *\n * @param body - The options for setting the voice state\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-current-user-voice-state}\n */\n","excerptTokens":[{"kind":"Reference","text":"setVoiceState","canonicalReference":"@discordjs/core!GuildsAPI#setVoiceState"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPatchAPIGuildVoiceStateCurrentMemberJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildVoiceStateCurrentMemberJSONBody:interface"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"never"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":1253,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":10,"endIndex":14},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"setVoiceState"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#syncTemplate:member(1)","docComment":"/**\n * Syncs a template for a guild\n *\n * @param guildId - The id of the guild to sync the template from\n *\n * @param templateCode - The code of the template to sync\n *\n * @param options - The options for syncing the template\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild-template#sync-guild-template}\n */\n","excerptTokens":[{"kind":"Reference","text":"syncTemplate","canonicalReference":"@discordjs/core!GuildsAPI#syncTemplate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"templateCode","canonicalReference":"@discordjs/core!~templateCode"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APITemplate","canonicalReference":"discord-api-types!APITemplate:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":872,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"templateCode","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"syncTemplate"},{"kind":"Method","canonicalReference":"@discordjs/core!GuildsAPI#unbanUser:member(1)","docComment":"/**\n * Unbans a user from a guild\n *\n * @param guildId - The id of the guild to unban the member in\n *\n * @param userId - The id of the user to unban\n *\n * @param options - The options for unbanning the user\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#remove-guild-ban}\n */\n","excerptTokens":[{"kind":"Reference","text":"unbanUser","canonicalReference":"@discordjs/core!GuildsAPI#unbanUser"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":329,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"unbanUser"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!InteractionsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"InteractionsAPI","canonicalReference":"@discordjs/core!InteractionsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/interactions.ts","fileLine":15,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"InteractionsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!InteractionsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `InteractionsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":", "},{"kind":"Reference","text":"webhooks","canonicalReference":"@discordjs/core!~webhooks"},{"kind":"Content","text":": "},{"kind":"Reference","text":"WebhooksAPI","canonicalReference":"@discordjs/core!WebhooksAPI:class"},{"kind":"Content","text":");"}],"fileLine":19,"fileColumn":3,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false},{"parameterName":"webhooks","parameterTypeTokenRange":{"startIndex":7,"endIndex":8},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#createAutocompleteResponse:member(1)","docComment":"/**\n * Sends an autocomplete response to an interaction\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param callbackData - The callback data for the autocomplete response\n *\n * @param options - The options for sending the autocomplete response\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"createAutocompleteResponse","canonicalReference":"@discordjs/core!InteractionsAPI#createAutocompleteResponse"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"callbackData","canonicalReference":"@discordjs/core!~callbackData"},{"kind":"Content","text":": "},{"kind":"Reference","text":"APICommandAutocompleteInteractionResponseCallbackData","canonicalReference":"discord-api-types!APICommandAutocompleteInteractionResponseCallbackData:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":211,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"callbackData","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createAutocompleteResponse"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#createModal:member(1)","docComment":"/**\n * Sends a modal response to an interaction\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param callbackData - The modal callback data to send\n *\n * @param options - The options for sending the modal\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"createModal","canonicalReference":"@discordjs/core!InteractionsAPI#createModal"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"callbackData","canonicalReference":"@discordjs/core!~callbackData"},{"kind":"Content","text":": "},{"kind":"Reference","text":"APIModalInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIModalInteractionResponseCallbackData:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":236,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"callbackData","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createModal"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#defer:member(1)","docComment":"/**\n * Defers the reply to an interaction\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param data - The data for deferring the reply\n *\n * @param options - The options for deferring\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"defer","canonicalReference":"@discordjs/core!InteractionsAPI#defer"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"data","canonicalReference":"@discordjs/core!~data"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"APIInteractionResponseDeferredChannelMessageWithSource","canonicalReference":"discord-api-types!APIInteractionResponseDeferredChannelMessageWithSource:interface"},{"kind":"Content","text":"['data']"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":56,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":22,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"data","parameterTypeTokenRange":{"startIndex":12,"endIndex":14},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":17,"endIndex":21},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"defer"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#deferMessageUpdate:member(1)","docComment":"/**\n * Defers an update from a message component interaction\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param options - The options for deferring\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"deferMessageUpdate","canonicalReference":"@discordjs/core!InteractionsAPI#deferMessageUpdate"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":80,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deferMessageUpdate"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#deleteReply:member(1)","docComment":"/**\n * Deletes the initial reply to an interaction\n *\n * @param applicationId - The application id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param messageId - The id of the message to delete. If omitted, the original reply will be deleted\n *\n * @param options - The options for deleting the reply\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#delete-original-interaction-response}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#delete-followup-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteReply","canonicalReference":"@discordjs/core!InteractionsAPI#deleteReply"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":" | '@original'"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":167,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":22,"endIndex":26},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":12,"endIndex":14},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":17,"endIndex":21},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteReply"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#editReply:member(1)","docComment":"/**\n * Edits the initial reply to an interaction\n *\n * @param applicationId - The application id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param callbackData - The callback data for editing the reply\n *\n * @param messageId - The id of the message to edit. If omitted, the original reply will be edited\n *\n * @param options - The options for editing the reply\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#edit-original-interaction-response}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#edit-followup-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"editReply","canonicalReference":"@discordjs/core!InteractionsAPI#editReply"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"callbackData","canonicalReference":"@discordjs/core!~callbackData"},{"kind":"Content","text":": "},{"kind":"Reference","text":"APIInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIInteractionResponseCallbackData:type"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":" | '@original'"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":123,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":31,"endIndex":35},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"callbackData","parameterTypeTokenRange":{"startIndex":12,"endIndex":18},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":21,"endIndex":23},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":26,"endIndex":30},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editReply"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#followUp:member(1)","docComment":"/**\n * Reply to a deferred interaction\n *\n * @param applicationId - The application id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param body - The callback data for replying\n *\n * @param options - The options for replying\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-followup-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"followUp","canonicalReference":"@discordjs/core!InteractionsAPI#followUp"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"APIInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIInteractionResponseCallbackData:type"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":103,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":26,"endIndex":30},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":18},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":21,"endIndex":25},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"followUp"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#getOriginalReply:member(1)","docComment":"/**\n * Fetches the initial reply to an interaction\n *\n * @param applicationId - The application id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param options - The options for fetching the reply\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#get-original-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"getOriginalReply","canonicalReference":"@discordjs/core!InteractionsAPI#getOriginalReply"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":143,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getOriginalReply"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#reply:member(1)","docComment":"/**\n * Replies to an interaction\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param body - The callback data for replying\n *\n * @param options - The options for replying\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"reply","canonicalReference":"@discordjs/core!InteractionsAPI#reply"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"data","canonicalReference":"@discordjs/core!~data"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"APIInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIInteractionResponseCallbackData:type"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":30,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":28,"endIndex":32},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ files, ...data }","parameterTypeTokenRange":{"startIndex":14,"endIndex":20},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":23,"endIndex":27},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"reply"},{"kind":"Method","canonicalReference":"@discordjs/core!InteractionsAPI#updateMessage:member(1)","docComment":"/**\n * Updates the the message the component interaction was triggered on\n *\n * @param interactionId - The id of the interaction\n *\n * @param interactionToken - The token of the interaction\n *\n * @param callbackData - The callback data for updating the interaction\n *\n * @param options - The options for updating the interaction\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/interactions/receiving-and-responding#create-interaction-response}\n */\n","excerptTokens":[{"kind":"Reference","text":"updateMessage","canonicalReference":"@discordjs/core!InteractionsAPI#updateMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"interactionId","canonicalReference":"@discordjs/core!~interactionId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"interactionToken","canonicalReference":"@discordjs/core!~interactionToken"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"data","canonicalReference":"@discordjs/core!~data"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"APIInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIInteractionResponseCallbackData:type"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":185,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":28,"endIndex":32},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"interactionId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"interactionToken","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ files, ...data }","parameterTypeTokenRange":{"startIndex":14,"endIndex":20},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":23,"endIndex":27},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"updateMessage"}],"implementsTokenRanges":[]},{"kind":"Interface","canonicalReference":"@discordjs/core!IntrinsicProps:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"IntrinsicProps","canonicalReference":"@discordjs/core!IntrinsicProps:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":77,"fileColumn":1,"releaseTag":"Public","name":"IntrinsicProps","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!IntrinsicProps#api:member","docComment":"/**\n * The REST API\n */\n","excerptTokens":[{"kind":"Reference","text":"api","canonicalReference":"@discordjs/core!IntrinsicProps#api"},{"kind":"Content","text":": "},{"kind":"Reference","text":"API","canonicalReference":"@discordjs/core!API:class"},{"kind":"Content","text":";"}],"fileLine":81,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"api","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!IntrinsicProps#shardId:member","docComment":"/**\n * The id of the shard that emitted the event\n */\n","excerptTokens":[{"kind":"Reference","text":"shardId","canonicalReference":"@discordjs/core!IntrinsicProps#shardId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"number"},{"kind":"Content","text":";"}],"fileLine":85,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"shardId","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}}],"extendsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!InvitesAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"InvitesAPI","canonicalReference":"@discordjs/core!InvitesAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/invite.ts","fileLine":6,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"InvitesAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!InvitesAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `InvitesAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":7,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!InvitesAPI#delete:member(1)","docComment":"/**\n * Deletes an invite\n *\n * @param code - The invite code\n *\n * @param options - The options for deleting the invite\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/invite#delete-invite}\n */\n","excerptTokens":[{"kind":"Reference","text":"delete","canonicalReference":"@discordjs/core!InvitesAPI#delete"},{"kind":"Content","text":"("},{"kind":"Reference","text":"code","canonicalReference":"@discordjs/core!~code"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":31,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":15,"endIndex":19},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"code","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":10,"endIndex":14},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"delete"},{"kind":"Method","canonicalReference":"@discordjs/core!InvitesAPI#get:member(1)","docComment":"/**\n * Fetches an invite\n *\n * @param code - The invite code\n *\n * @param query - The options for fetching the invite\n *\n * @param options - The options for fetching the invite\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/invite#get-invite}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!InvitesAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"code","canonicalReference":"@discordjs/core!~code"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIInviteQuery","canonicalReference":"discord-api-types!RESTGetAPIInviteQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIInvite","canonicalReference":"discord-api-types!APIInvite:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":17,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"code","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"}],"implementsTokenRanges":[]},{"kind":"TypeAlias","canonicalReference":"@discordjs/core!ManagerShardEventsMap:type","docComment":"","excerptTokens":[{"kind":"Content","text":"export type "},{"kind":"Reference","text":"ManagerShardEventsMap","canonicalReference":"@discordjs/core!ManagerShardEventsMap:type"},{"kind":"Content","text":" = "},{"kind":"Content","text":"{  ["},{"kind":"Reference","text":"K"},{"kind":"Content","text":" in keyof "},{"kind":"Reference","text":"MappedEvents","canonicalReference":"@discordjs/core!MappedEvents:interface"},{"kind":"Content","text":"]: "},{"kind":"Reference","text":"MappedEvents","canonicalReference":"@discordjs/core!MappedEvents:interface"},{"kind":"Content","text":"["},{"kind":"Reference","text":"K"},{"kind":"Content","text":"];}"},{"kind":"Content","text":";"}],"fileUrlPath":"src/client.ts","fileLine":166,"fileColumn":1,"releaseTag":"Public","name":"ManagerShardEventsMap","typeTokenRange":{"startIndex":3,"endIndex":12}},{"kind":"Interface","canonicalReference":"@discordjs/core!MappedEvents:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"MappedEvents","canonicalReference":"@discordjs/core!MappedEvents:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":92,"fileColumn":1,"releaseTag":"Public","name":"MappedEvents","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#APPLICATION_COMMAND_PERMISSIONS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ApplicationCommandPermissionsUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ApplicationCommandPermissionsUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"[    "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayApplicationCommandPermissionsUpdateDispatchData","canonicalReference":"discord-api-types!GatewayApplicationCommandPermissionsUpdateDispatchData:interface"},{"kind":"Content","text":">  ]"},{"kind":"Content","text":";"}],"fileLine":93,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"APPLICATION_COMMAND_PERMISSIONS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#AUTO_MODERATION_ACTION_EXECUTION:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.AutoModerationActionExecution","canonicalReference":"discord-api-types!GatewayDispatchEvents.AutoModerationActionExecution:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"[    "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayAutoModerationActionExecutionDispatchData","canonicalReference":"discord-api-types!GatewayAutoModerationActionExecutionDispatchData:interface"},{"kind":"Content","text":">  ]"},{"kind":"Content","text":";"}],"fileLine":96,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"AUTO_MODERATION_ACTION_EXECUTION","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#AUTO_MODERATION_RULE_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.AutoModerationRuleCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.AutoModerationRuleCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayAutoModerationRuleCreateDispatchData","canonicalReference":"discord-api-types!GatewayAutoModerationRuleCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":99,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"AUTO_MODERATION_RULE_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#AUTO_MODERATION_RULE_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.AutoModerationRuleDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.AutoModerationRuleDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayAutoModerationRuleDeleteDispatchData","canonicalReference":"discord-api-types!GatewayAutoModerationRuleDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":100,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"AUTO_MODERATION_RULE_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#AUTO_MODERATION_RULE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.AutoModerationRuleUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.AutoModerationRuleUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayAutoModerationRuleUpdateDispatchData","canonicalReference":"discord-api-types!GatewayAutoModerationRuleUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":101,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"AUTO_MODERATION_RULE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#CHANNEL_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ChannelCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ChannelCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayChannelCreateDispatchData","canonicalReference":"discord-api-types!GatewayChannelCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":102,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"CHANNEL_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#CHANNEL_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ChannelDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.ChannelDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayChannelDeleteDispatchData","canonicalReference":"discord-api-types!GatewayChannelDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":103,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"CHANNEL_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#CHANNEL_PINS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ChannelPinsUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ChannelPinsUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayChannelPinsUpdateDispatchData","canonicalReference":"discord-api-types!GatewayChannelPinsUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":104,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"CHANNEL_PINS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#CHANNEL_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ChannelUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ChannelUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayChannelUpdateDispatchData","canonicalReference":"discord-api-types!GatewayChannelUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":105,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"CHANNEL_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_AUDIT_LOG_ENTRY_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildAuditLogEntryCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildAuditLogEntryCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildAuditLogEntryCreateDispatchData","canonicalReference":"discord-api-types!GatewayGuildAuditLogEntryCreateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":106,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_AUDIT_LOG_ENTRY_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_BAN_ADD:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildBanAdd","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildBanAdd:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildBanAddDispatchData","canonicalReference":"discord-api-types!GatewayGuildBanAddDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":107,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_BAN_ADD","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_BAN_REMOVE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildBanRemove","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildBanRemove:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildBanRemoveDispatchData","canonicalReference":"discord-api-types!GatewayGuildBanRemoveDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":108,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_BAN_REMOVE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildCreateDispatchData","canonicalReference":"discord-api-types!GatewayGuildCreateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":109,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildDeleteDispatchData","canonicalReference":"discord-api-types!GatewayGuildDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":110,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_EMOJIS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildEmojisUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildEmojisUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildEmojisUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildEmojisUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":111,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_EMOJIS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_INTEGRATIONS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildIntegrationsUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildIntegrationsUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildIntegrationsUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildIntegrationsUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":112,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_INTEGRATIONS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_MEMBER_ADD:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildMemberAdd","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildMemberAdd:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMemberAddDispatchData","canonicalReference":"discord-api-types!GatewayGuildMemberAddDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":113,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_MEMBER_ADD","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_MEMBER_REMOVE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildMemberRemove","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildMemberRemove:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMemberRemoveDispatchData","canonicalReference":"discord-api-types!GatewayGuildMemberRemoveDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":114,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_MEMBER_REMOVE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_MEMBER_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildMemberUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildMemberUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMemberUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildMemberUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":115,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_MEMBER_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_MEMBERS_CHUNK:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildMembersChunk","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildMembersChunk:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMembersChunkDispatchData","canonicalReference":"discord-api-types!GatewayGuildMembersChunkDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":116,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_MEMBERS_CHUNK","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_ROLE_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildRoleCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildRoleCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildRoleCreateDispatchData","canonicalReference":"discord-api-types!GatewayGuildRoleCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":117,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_ROLE_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_ROLE_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildRoleDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildRoleDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildRoleDeleteDispatchData","canonicalReference":"discord-api-types!GatewayGuildRoleDeleteDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":118,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_ROLE_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_ROLE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildRoleUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildRoleUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildRoleUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildRoleUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":119,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_ROLE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_SCHEDULED_EVENT_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildScheduledEventCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildScheduledEventCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildScheduledEventCreateDispatchData","canonicalReference":"discord-api-types!GatewayGuildScheduledEventCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":120,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_SCHEDULED_EVENT_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_SCHEDULED_EVENT_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildScheduledEventDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildScheduledEventDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildScheduledEventDeleteDispatchData","canonicalReference":"discord-api-types!GatewayGuildScheduledEventDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":121,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_SCHEDULED_EVENT_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_SCHEDULED_EVENT_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildScheduledEventUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildScheduledEventUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildScheduledEventUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildScheduledEventUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":122,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_SCHEDULED_EVENT_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_SCHEDULED_EVENT_USER_ADD:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildScheduledEventUserAdd","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildScheduledEventUserAdd:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"[    "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildScheduledEventUserAddDispatchData","canonicalReference":"discord-api-types!GatewayGuildScheduledEventUserAddDispatchData:interface"},{"kind":"Content","text":">  ]"},{"kind":"Content","text":";"}],"fileLine":123,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_SCHEDULED_EVENT_USER_ADD","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_SCHEDULED_EVENT_USER_REMOVE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildScheduledEventUserRemove","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildScheduledEventUserRemove:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"[    "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildScheduledEventUserRemoveDispatchData","canonicalReference":"discord-api-types!GatewayGuildScheduledEventUserRemoveDispatchData:interface"},{"kind":"Content","text":">  ]"},{"kind":"Content","text":";"}],"fileLine":126,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_SCHEDULED_EVENT_USER_REMOVE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_STICKERS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildStickersUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildStickersUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildStickersUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildStickersUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":129,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_STICKERS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#GUILD_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.GuildUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.GuildUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildUpdateDispatchData","canonicalReference":"discord-api-types!GatewayGuildUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":130,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"GUILD_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INTEGRATION_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.IntegrationCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.IntegrationCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayIntegrationCreateDispatchData","canonicalReference":"discord-api-types!GatewayIntegrationCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":131,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INTEGRATION_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INTEGRATION_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.IntegrationDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.IntegrationDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayIntegrationDeleteDispatchData","canonicalReference":"discord-api-types!GatewayIntegrationDeleteDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":132,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INTEGRATION_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INTEGRATION_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.IntegrationUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.IntegrationUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayIntegrationUpdateDispatchData","canonicalReference":"discord-api-types!GatewayIntegrationUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":133,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INTEGRATION_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INTERACTION_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.InteractionCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.InteractionCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayInteractionCreateDispatchData","canonicalReference":"discord-api-types!GatewayInteractionCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":134,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INTERACTION_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INVITE_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.InviteCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.InviteCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayInviteCreateDispatchData","canonicalReference":"discord-api-types!GatewayInviteCreateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":135,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INVITE_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#INVITE_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.InviteDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.InviteDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayInviteDeleteDispatchData","canonicalReference":"discord-api-types!GatewayInviteDeleteDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":136,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"INVITE_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageCreateDispatchData","canonicalReference":"discord-api-types!GatewayMessageCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":137,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_DELETE_BULK:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageDeleteBulk","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageDeleteBulk:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageDeleteBulkDispatchData","canonicalReference":"discord-api-types!GatewayMessageDeleteBulkDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":139,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_DELETE_BULK","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageDeleteDispatchData","canonicalReference":"discord-api-types!GatewayMessageDeleteDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":138,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_REACTION_ADD:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageReactionAdd","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageReactionAdd:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageReactionAddDispatchData","canonicalReference":"discord-api-types!GatewayMessageReactionAddDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":140,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_REACTION_ADD","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_REACTION_REMOVE_ALL:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageReactionRemoveAll","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageReactionRemoveAll:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageReactionRemoveAllDispatchData","canonicalReference":"discord-api-types!GatewayMessageReactionRemoveAllDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":142,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_REACTION_REMOVE_ALL","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_REACTION_REMOVE_EMOJI:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageReactionRemoveEmoji","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageReactionRemoveEmoji:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"[    "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageReactionRemoveEmojiDispatchData","canonicalReference":"discord-api-types!GatewayMessageReactionRemoveEmojiDispatchData:interface"},{"kind":"Content","text":">  ]"},{"kind":"Content","text":";"}],"fileLine":143,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_REACTION_REMOVE_EMOJI","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_REACTION_REMOVE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageReactionRemove","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageReactionRemove:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageReactionRemoveDispatchData","canonicalReference":"discord-api-types!GatewayMessageReactionRemoveDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":141,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_REACTION_REMOVE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#MESSAGE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.MessageUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.MessageUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayMessageUpdateDispatchData","canonicalReference":"discord-api-types!GatewayMessageUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":146,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"MESSAGE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#PRESENCE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.PresenceUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.PresenceUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayPresenceUpdateDispatchData","canonicalReference":"discord-api-types!GatewayPresenceUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":147,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"PRESENCE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#READY:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.Ready","canonicalReference":"discord-api-types!GatewayDispatchEvents.Ready:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayReadyDispatchData","canonicalReference":"discord-api-types!GatewayReadyDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":148,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"READY","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#RESUMED:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.Resumed","canonicalReference":"discord-api-types!GatewayDispatchEvents.Resumed:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"never"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":149,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"RESUMED","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#STAGE_INSTANCE_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.StageInstanceCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.StageInstanceCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayStageInstanceCreateDispatchData","canonicalReference":"discord-api-types!GatewayStageInstanceCreateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":150,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"STAGE_INSTANCE_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#STAGE_INSTANCE_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.StageInstanceDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.StageInstanceDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayStageInstanceDeleteDispatchData","canonicalReference":"discord-api-types!GatewayStageInstanceDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":151,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"STAGE_INSTANCE_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#STAGE_INSTANCE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.StageInstanceUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.StageInstanceUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayStageInstanceUpdateDispatchData","canonicalReference":"discord-api-types!GatewayStageInstanceUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":152,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"STAGE_INSTANCE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_CREATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadCreate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadCreate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadCreateDispatchData","canonicalReference":"discord-api-types!GatewayThreadCreateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":153,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_CREATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_DELETE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadDelete","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadDelete:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadDeleteDispatchData","canonicalReference":"discord-api-types!GatewayThreadDeleteDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":154,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_DELETE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_LIST_SYNC:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadListSync","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadListSync:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadListSyncDispatchData","canonicalReference":"discord-api-types!GatewayThreadListSyncDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":155,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_LIST_SYNC","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_MEMBER_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadMemberUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadMemberUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadMemberUpdateDispatchData","canonicalReference":"discord-api-types!GatewayThreadMemberUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":156,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_MEMBER_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_MEMBERS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadMembersUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadMembersUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadMembersUpdateDispatchData","canonicalReference":"discord-api-types!GatewayThreadMembersUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":157,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_MEMBERS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#THREAD_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.ThreadUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.ThreadUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayThreadUpdateDispatchData","canonicalReference":"discord-api-types!GatewayThreadUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":158,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"THREAD_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#TYPING_START:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.TypingStart","canonicalReference":"discord-api-types!GatewayDispatchEvents.TypingStart:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayTypingStartDispatchData","canonicalReference":"discord-api-types!GatewayTypingStartDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":159,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"TYPING_START","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#USER_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.UserUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.UserUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayUserUpdateDispatchData","canonicalReference":"discord-api-types!GatewayUserUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":160,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"USER_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#VOICE_SERVER_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.VoiceServerUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.VoiceServerUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayVoiceServerUpdateDispatchData","canonicalReference":"discord-api-types!GatewayVoiceServerUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":161,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"VOICE_SERVER_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#VOICE_STATE_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.VoiceStateUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.VoiceStateUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayVoiceStateUpdateDispatchData","canonicalReference":"discord-api-types!GatewayVoiceStateUpdateDispatchData:type"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":162,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"VOICE_STATE_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!MappedEvents#WEBHOOKS_UPDATE:member","docComment":"","excerptTokens":[{"kind":"Content","text":"["},{"kind":"Reference","text":"GatewayDispatchEvents.WebhooksUpdate","canonicalReference":"discord-api-types!GatewayDispatchEvents.WebhooksUpdate:member"},{"kind":"Content","text":"]: "},{"kind":"Content","text":"["},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayWebhooksUpdateDispatchData","canonicalReference":"discord-api-types!GatewayWebhooksUpdateDispatchData:interface"},{"kind":"Content","text":">]"},{"kind":"Content","text":";"}],"fileLine":163,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"WEBHOOKS_UPDATE","propertyTypeTokenRange":{"startIndex":3,"endIndex":8}}],"extendsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!OAuth2API:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"OAuth2API","canonicalReference":"@discordjs/core!OAuth2API:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/oauth2.ts","fileLine":19,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"OAuth2API","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!OAuth2API:constructor(1)","docComment":"/**\n * Constructs a new instance of the `OAuth2API` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":20,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#generateAuthorizationURL:member(1)","docComment":"/**\n * Creates an OAuth2 authorization URL given the options\n *\n * @param options - The options for creating the authorization URL\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-authorization-url-example}\n */\n","excerptTokens":[{"kind":"Reference","text":"generateAuthorizationURL","canonicalReference":"@discordjs/core!OAuth2API#generateAuthorizationURL"},{"kind":"Content","text":"("},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTOAuth2AuthorizationQuery","canonicalReference":"discord-api-types!RESTOAuth2AuthorizationQuery:interface"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";"}],"fileLine":28,"fileColumn":9,"isStatic":false,"returnTypeTokenRange":{"startIndex":6,"endIndex":7},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"generateAuthorizationURL"},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#getCurrentAuthorizationInformation:member(1)","docComment":"/**\n * Fetches the current authorization information\n *\n * @param options - The options for the current authorization information request\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#get-current-authorization-information}\n */\n","excerptTokens":[{"kind":"Reference","text":"getCurrentAuthorizationInformation","canonicalReference":"@discordjs/core!OAuth2API#getCurrentAuthorizationInformation"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIOAuth2CurrentAuthorizationResult","canonicalReference":"discord-api-types!RESTGetAPIOAuth2CurrentAuthorizationResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":117,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getCurrentAuthorizationInformation"},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#getCurrentBotApplicationInformation:member(1)","docComment":"/**\n * Fetches the current bot's application information\n *\n * @param options - The options for the current bot application information request\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#get-current-bot-application-information}\n */\n","excerptTokens":[{"kind":"Reference","text":"getCurrentBotApplicationInformation","canonicalReference":"@discordjs/core!OAuth2API#getCurrentBotApplicationInformation"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIOAuth2CurrentApplicationResult","canonicalReference":"discord-api-types!RESTGetAPIOAuth2CurrentApplicationResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":105,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getCurrentBotApplicationInformation"},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#getToken:member(1)","docComment":"/**\n * Fetches the bearer token for the current application\n *\n * @remarks\n *\n * This is primarily used for testing purposes\n *\n * @param body - The options for the client credentials grant request\n *\n * @param options - The options for the client credentials grant request\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#client-credentials-grant}\n */\n","excerptTokens":[{"kind":"Reference","text":"getToken","canonicalReference":"@discordjs/core!OAuth2API#getToken"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostOAuth2ClientCredentialsURLEncodedData","canonicalReference":"discord-api-types!RESTPostOAuth2ClientCredentialsURLEncodedData:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"RESTOAuth2ImplicitAuthorizationURLFragmentResult","canonicalReference":"discord-api-types!RESTOAuth2ImplicitAuthorizationURLFragmentResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":85,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getToken"},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#refreshToken:member(1)","docComment":"/**\n * Refreshes an OAuth2 access token, giving you a new one\n *\n * @param body - The options for the refresh token request\n *\n * @param options - The options for the refresh token request\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-refresh-token-exchange-example}\n */\n","excerptTokens":[{"kind":"Reference","text":"refreshToken","canonicalReference":"@discordjs/core!OAuth2API#refreshToken"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostOAuth2RefreshTokenURLEncodedData","canonicalReference":"discord-api-types!RESTPostOAuth2RefreshTokenURLEncodedData:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostOAuth2AccessTokenResult","canonicalReference":"discord-api-types!RESTPostOAuth2AccessTokenResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":62,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"refreshToken"},{"kind":"Method","canonicalReference":"@discordjs/core!OAuth2API#tokenExchange:member(1)","docComment":"/**\n * Performs an OAuth2 token exchange, giving you an access token\n *\n * @param body - The body of the token exchange request\n *\n * @param options - The options for the token exchange request\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/oauth2#authorization-code-grant-access-token-exchange-example}\n */\n","excerptTokens":[{"kind":"Reference","text":"tokenExchange","canonicalReference":"@discordjs/core!OAuth2API#tokenExchange"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostOAuth2AccessTokenURLEncodedData","canonicalReference":"discord-api-types!RESTPostOAuth2AccessTokenURLEncodedData:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostOAuth2AccessTokenResult","canonicalReference":"discord-api-types!RESTPostOAuth2AccessTokenResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":41,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"tokenExchange"}],"implementsTokenRanges":[]},{"kind":"Interface","canonicalReference":"@discordjs/core!RequestGuildMembersResult:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"RequestGuildMembersResult","canonicalReference":"@discordjs/core!RequestGuildMembersResult:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":175,"fileColumn":1,"releaseTag":"Public","name":"RequestGuildMembersResult","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!RequestGuildMembersResult#members:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"members","canonicalReference":"@discordjs/core!RequestGuildMembersResult#members"},{"kind":"Content","text":": "},{"kind":"Reference","text":"GatewayGuildMembersChunkDispatchData","canonicalReference":"discord-api-types!GatewayGuildMembersChunkDispatchData:interface"},{"kind":"Content","text":"['members']"},{"kind":"Content","text":";"}],"fileLine":176,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"members","propertyTypeTokenRange":{"startIndex":2,"endIndex":4}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!RequestGuildMembersResult#nonce:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"nonce","canonicalReference":"@discordjs/core!RequestGuildMembersResult#nonce"},{"kind":"Content","text":": "},{"kind":"Reference","text":"NonNullable","canonicalReference":"!NonNullable:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMembersChunkDispatchData","canonicalReference":"discord-api-types!GatewayGuildMembersChunkDispatchData:interface"},{"kind":"Content","text":"['nonce']>"},{"kind":"Content","text":";"}],"fileLine":177,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"nonce","propertyTypeTokenRange":{"startIndex":2,"endIndex":6}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!RequestGuildMembersResult#notFound:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"notFound","canonicalReference":"@discordjs/core!RequestGuildMembersResult#notFound"},{"kind":"Content","text":": "},{"kind":"Reference","text":"NonNullable","canonicalReference":"!NonNullable:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMembersChunkDispatchData","canonicalReference":"discord-api-types!GatewayGuildMembersChunkDispatchData:interface"},{"kind":"Content","text":"['not_found']>"},{"kind":"Content","text":";"}],"fileLine":178,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"notFound","propertyTypeTokenRange":{"startIndex":2,"endIndex":6}},{"kind":"PropertySignature","canonicalReference":"@discordjs/core!RequestGuildMembersResult#presences:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"presences","canonicalReference":"@discordjs/core!RequestGuildMembersResult#presences"},{"kind":"Content","text":": "},{"kind":"Reference","text":"NonNullable","canonicalReference":"!NonNullable:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"GatewayGuildMembersChunkDispatchData","canonicalReference":"discord-api-types!GatewayGuildMembersChunkDispatchData:interface"},{"kind":"Content","text":"['presences']>"},{"kind":"Content","text":";"}],"fileLine":179,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"presences","propertyTypeTokenRange":{"startIndex":2,"endIndex":6}}],"extendsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!RoleConnectionsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"RoleConnectionsAPI","canonicalReference":"@discordjs/core!RoleConnectionsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/roleConnections.ts","fileLine":12,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"RoleConnectionsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!RoleConnectionsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `RoleConnectionsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":13,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!RoleConnectionsAPI#getMetadataRecords:member(1)","docComment":"/**\n * Gets the role connection metadata records for the application\n *\n * @param applicationId - The id of the application to get role connection metadata records for\n *\n * @param options - The options for fetching the role connection metadata records\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/application-role-connection-metadata#get-application-role-connection-metadata-records}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMetadataRecords","canonicalReference":"@discordjs/core!RoleConnectionsAPI#getMetadataRecords"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIApplicationRoleConnectionMetadataResult","canonicalReference":"discord-api-types!RESTGetAPIApplicationRoleConnectionMetadataResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":22,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMetadataRecords"},{"kind":"Method","canonicalReference":"@discordjs/core!RoleConnectionsAPI#updateMetadataRecords:member(1)","docComment":"/**\n * Updates the role connection metadata records for the application\n *\n * @param applicationId - The id of the application to update role connection metadata records for\n *\n * @param body - The new role connection metadata records\n *\n * @param options - The options for updating the role connection metadata records\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/application-role-connection-metadata#update-application-role-connection-metadata-records}\n */\n","excerptTokens":[{"kind":"Reference","text":"updateMetadataRecords","canonicalReference":"@discordjs/core!RoleConnectionsAPI#updateMetadataRecords"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPIApplicationRoleConnectionMetadataJSONBody","canonicalReference":"discord-api-types!RESTPutAPIApplicationRoleConnectionMetadataJSONBody:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPutAPIApplicationRoleConnectionMetadataResult","canonicalReference":"discord-api-types!RESTPutAPIApplicationRoleConnectionMetadataResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":36,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"updateMetadataRecords"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!StageInstancesAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"StageInstancesAPI","canonicalReference":"@discordjs/core!StageInstancesAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/stageInstances.ts","fileLine":14,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"StageInstancesAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!StageInstancesAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `StageInstancesAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":15,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!StageInstancesAPI#create:member(1)","docComment":"/**\n * Creates a new stage instance\n *\n * @param body - The data for creating the new stage instance\n *\n * @param options - The options for creating the new stage instance\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/stage-instance#get-stage-instance}\n */\n","excerptTokens":[{"kind":"Reference","text":"create","canonicalReference":"@discordjs/core!StageInstancesAPI#create"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIStageInstanceJSONBody","canonicalReference":"discord-api-types!RESTPostAPIStageInstanceJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIStageInstance","canonicalReference":"discord-api-types!APIStageInstance:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":24,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":15,"endIndex":19},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":10,"endIndex":14},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"create"},{"kind":"Method","canonicalReference":"@discordjs/core!StageInstancesAPI#delete:member(1)","docComment":"/**\n * Deletes a stage instance\n *\n * @param channelId - The id of the channel\n *\n * @param options - The options for deleting the stage instance\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/stage-instance#delete-stage-instance}\n */\n","excerptTokens":[{"kind":"Reference","text":"delete","canonicalReference":"@discordjs/core!StageInstancesAPI#delete"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":73,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":15,"endIndex":19},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":10,"endIndex":14},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"delete"},{"kind":"Method","canonicalReference":"@discordjs/core!StageInstancesAPI#edit:member(1)","docComment":"/**\n * Edits a stage instance\n *\n * @param channelId - The id of the channel\n *\n * @param body - The new stage instance data\n *\n * @param options - The options for editing the stage instance\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/stage-instance#modify-stage-instance}\n */\n","excerptTokens":[{"kind":"Reference","text":"edit","canonicalReference":"@discordjs/core!StageInstancesAPI#edit"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIStageInstanceJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIStageInstanceJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIStageInstance","canonicalReference":"discord-api-types!APIStageInstance:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":54,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"edit"},{"kind":"Method","canonicalReference":"@discordjs/core!StageInstancesAPI#get:member(1)","docComment":"/**\n * Fetches a stage instance\n *\n * @param channelId - The id of the channel\n *\n * @param options - The options for fetching the stage instance\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/stage-instance#get-stage-instance}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!StageInstancesAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"channelId","canonicalReference":"@discordjs/core!~channelId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIStageInstance","canonicalReference":"discord-api-types!APIStageInstance:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":42,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"channelId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"}],"implementsTokenRanges":[]},{"kind":"Interface","canonicalReference":"@discordjs/core!StartForumThreadOptions:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"StartForumThreadOptions","canonicalReference":"@discordjs/core!StartForumThreadOptions:interface"},{"kind":"Content","text":" extends "},{"kind":"Reference","text":"RESTPostAPIGuildForumThreadsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildForumThreadsJSONBody:type"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/channel.ts","fileLine":38,"fileColumn":1,"releaseTag":"Public","name":"StartForumThreadOptions","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!StartForumThreadOptions#message:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"message","canonicalReference":"@discordjs/core!StartForumThreadOptions#message"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIGuildForumThreadsJSONBody","canonicalReference":"discord-api-types!RESTPostAPIGuildForumThreadsJSONBody:type"},{"kind":"Content","text":"['message'] & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];  }"},{"kind":"Content","text":";"}],"fileLine":39,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"message","propertyTypeTokenRange":{"startIndex":2,"endIndex":8}}],"extendsTokenRanges":[{"startIndex":3,"endIndex":4,"typeParameters":[]}]},{"kind":"Class","canonicalReference":"@discordjs/core!StickersAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"StickersAPI","canonicalReference":"@discordjs/core!StickersAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/sticker.ts","fileLine":11,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"StickersAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!StickersAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `StickersAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":12,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!StickersAPI#get:member(1)","docComment":"/**\n * Fetches a sticker\n *\n * @param stickerId - The id of the sticker\n *\n * @param options - The options for fetching the sticker\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#get-sticker}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!StickersAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"stickerId","canonicalReference":"@discordjs/core!~stickerId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APISticker","canonicalReference":"discord-api-types!APISticker:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":42,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"stickerId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"},{"kind":"Method","canonicalReference":"@discordjs/core!StickersAPI#getNitroStickers:member(1)","docComment":"/**\n * Fetches all of the sticker packs\n *\n * @deprecated\n *\n * Use {@link StickersAPI.getStickers} instead.\n *\n * @param options - The options for fetching the sticker packs\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#list-sticker-packs}\n */\n","excerptTokens":[{"kind":"Reference","text":"getNitroStickers","canonicalReference":"@discordjs/core!StickersAPI#getNitroStickers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetStickerPacksResult","canonicalReference":"discord-api-types!RESTGetStickerPacksResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":31,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"options","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getNitroStickers"},{"kind":"Method","canonicalReference":"@discordjs/core!StickersAPI#getStickers:member(1)","docComment":"/**\n * Fetches all of the sticker packs\n *\n * @param options - The options for fetching the sticker packs\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/sticker#list-sticker-packs}\n */\n","excerptTokens":[{"kind":"Reference","text":"getStickers","canonicalReference":"@discordjs/core!StickersAPI#getStickers"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetStickerPacksResult","canonicalReference":"discord-api-types!RESTGetStickerPacksResult:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":20,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getStickers"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!ThreadsAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"ThreadsAPI","canonicalReference":"@discordjs/core!ThreadsAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/thread.ts","fileLine":11,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"ThreadsAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!ThreadsAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `ThreadsAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":12,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#addMember:member(1)","docComment":"/**\n * Adds a member to a thread\n *\n * @param threadId - The id of the thread to add the member to\n *\n * @param userId - The id of the user to add to the thread\n *\n * @param options - The options for adding the member to the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#add-thread-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"addMember","canonicalReference":"@discordjs/core!ThreadsAPI#addMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":33,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"addMember"},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#getAllMembers:member(1)","docComment":"/**\n * Fetches all members of a thread\n *\n * @param threadId - The id of the thread to fetch the members from\n *\n * @param options - The options for fetching the members\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#list-thread-members}\n */\n","excerptTokens":[{"kind":"Reference","text":"getAllMembers","canonicalReference":"@discordjs/core!ThreadsAPI#getAllMembers"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIChannelThreadMembersResult","canonicalReference":"discord-api-types!RESTGetAPIChannelThreadMembersResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":79,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getAllMembers"},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#getMember:member(1)","docComment":"/**\n * Fetches a member of a thread\n *\n * @param threadId - The id of the thread to fetch the member from\n *\n * @param userId - The id of the user\n *\n * @param options - The options for fetching the member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#get-thread-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMember","canonicalReference":"@discordjs/core!ThreadsAPI#getMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"APIThreadMember","canonicalReference":"discord-api-types!APIThreadMember:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":68,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMember"},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#join:member(1)","docComment":"/**\n * Adds the current user to a thread\n *\n * @param threadId - The id of the thread to join\n *\n * @param options - The options for joining the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#join-thread}\n */\n","excerptTokens":[{"kind":"Reference","text":"join","canonicalReference":"@discordjs/core!ThreadsAPI#join"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":21,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"join"},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#leave:member(1)","docComment":"/**\n * Removes the current user from a thread\n *\n * @param threadId - The id of the thread to leave\n *\n * @param options - The options for leaving the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#leave-thread}\n */\n","excerptTokens":[{"kind":"Reference","text":"leave","canonicalReference":"@discordjs/core!ThreadsAPI#leave"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":44,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"leave"},{"kind":"Method","canonicalReference":"@discordjs/core!ThreadsAPI#removeMember:member(1)","docComment":"/**\n * Removes a member from a thread\n *\n * @param threadId - The id of the thread to remove the member from\n *\n * @param userId - The id of the user to remove from the thread\n *\n * @param options - The options for removing the member from the thread\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/channel#remove-thread-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"removeMember","canonicalReference":"@discordjs/core!ThreadsAPI#removeMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"threadId","canonicalReference":"@discordjs/core!~threadId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":56,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"threadId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"removeMember"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!UsersAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"UsersAPI","canonicalReference":"@discordjs/core!UsersAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/user.ts","fileLine":23,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"UsersAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!UsersAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `UsersAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":24,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#createDM:member(1)","docComment":"/**\n * Opens a new DM channel with a user\n *\n * @param userId - The id of the user to open a DM channel with\n *\n * @param options - The options for opening the DM\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#create-dm}\n */\n","excerptTokens":[{"kind":"Reference","text":"createDM","canonicalReference":"@discordjs/core!UsersAPI#createDM"},{"kind":"Content","text":"("},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIChannel","canonicalReference":"discord-api-types!APIChannel:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":121,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"createDM"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#edit:member(1)","docComment":"/**\n * Edits the current user\n *\n * @param body - The new data for the current user\n *\n * @param options - The options for editing the user\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#modify-current-user}\n */\n","excerptTokens":[{"kind":"Reference","text":"edit","canonicalReference":"@discordjs/core!UsersAPI#edit"},{"kind":"Content","text":"("},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPICurrentUserJSONBody","canonicalReference":"discord-api-types!RESTPatchAPICurrentUserJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIUser","canonicalReference":"discord-api-types!APIUser:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":79,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"body","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"edit"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#editCurrentGuildMember:member(1)","docComment":"/**\n * Edits the guild member for the current user\n *\n * @param guildId - The id of the guild\n *\n * @param body - The new data for the guild member\n *\n * @param options - The options for editing the guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/guild#modify-current-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"editCurrentGuildMember","canonicalReference":"@discordjs/core!UsersAPI#editCurrentGuildMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPatchAPIGuildMemberJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIGuildMemberJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":102,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":19,"endIndex":23},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":true,"isRest":false},{"parameterName":"{ reason, signal }","parameterTypeTokenRange":{"startIndex":14,"endIndex":18},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editCurrentGuildMember"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#get:member(1)","docComment":"/**\n * Fetches a user by their id\n *\n * @param userId - The id of the user to fetch\n *\n * @param options - The options for fetching the user\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-user}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!UsersAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"userId","canonicalReference":"@discordjs/core!~userId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIUser","canonicalReference":"discord-api-types!APIUser:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":33,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"userId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#getApplicationRoleConnection:member(1)","docComment":"/**\n * Gets the current user's active application role connection\n *\n * @param applicationId - The id of the application\n *\n * @param options - The options for fetching the role connections\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-user-application-role-connection}\n */\n","excerptTokens":[{"kind":"Reference","text":"getApplicationRoleConnection","canonicalReference":"@discordjs/core!UsersAPI#getApplicationRoleConnection"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplicationRoleConnection","canonicalReference":"discord-api-types!APIApplicationRoleConnection:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":145,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getApplicationRoleConnection"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#getConnections:member(1)","docComment":"/**\n * Gets the current user's connections\n *\n * @param options - The options for fetching the user's connections\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-user-connections}\n */\n","excerptTokens":[{"kind":"Reference","text":"getConnections","canonicalReference":"@discordjs/core!UsersAPI#getConnections"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPICurrentUserConnectionsResult","canonicalReference":"discord-api-types!RESTGetAPICurrentUserConnectionsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":134,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getConnections"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#getCurrent:member(1)","docComment":"/**\n * Returns the user object of the requester's account\n *\n * @param options - The options for fetching the current user\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-current-user}\n */\n","excerptTokens":[{"kind":"Reference","text":"getCurrent","canonicalReference":"@discordjs/core!UsersAPI#getCurrent"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIUser","canonicalReference":"discord-api-types!APIUser:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":43,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getCurrent"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#getGuildMember:member(1)","docComment":"/**\n * Fetches the guild member for the current user\n *\n * @param guildId - The id of the guild\n *\n * @param options - The options for fetching the guild member\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-current-user-guild-member}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuildMember","canonicalReference":"@discordjs/core!UsersAPI#getGuildMember"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIGuildMember","canonicalReference":"discord-api-types!APIGuildMember:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":90,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuildMember"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#getGuilds:member(1)","docComment":"/**\n * Returns a list of partial guild objects the current user is a member of\n *\n * @param query - The query options for fetching the current user's guilds\n *\n * @param options - The options for fetching the guilds\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#get-current-user-guilds}\n */\n","excerptTokens":[{"kind":"Reference","text":"getGuilds","canonicalReference":"@discordjs/core!UsersAPI#getGuilds"},{"kind":"Content","text":"("},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPICurrentUserGuildsQuery","canonicalReference":"discord-api-types!RESTGetAPICurrentUserGuildsQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPICurrentUserGuildsResult","canonicalReference":"discord-api-types!RESTGetAPICurrentUserGuildsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":54,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"query","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getGuilds"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#leaveGuild:member(1)","docComment":"/**\n * Leaves the guild with the given id\n *\n * @param guildId - The id of the guild\n *\n * @param options - The options for leaving the guild\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#leave-guild}\n */\n","excerptTokens":[{"kind":"Reference","text":"leaveGuild","canonicalReference":"@discordjs/core!UsersAPI#leaveGuild"},{"kind":"Content","text":"("},{"kind":"Reference","text":"guildId","canonicalReference":"@discordjs/core!~guildId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":68,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":13,"endIndex":17},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"guildId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":8,"endIndex":12},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"leaveGuild"},{"kind":"Method","canonicalReference":"@discordjs/core!UsersAPI#updateApplicationRoleConnection:member(1)","docComment":"/**\n * Updates the current user's application role connection\n *\n * @param applicationId - The id of the application\n *\n * @param body - The data for updating the application role connection\n *\n * @param options - The options for updating the application role connection\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/user#update-user-application-role-connection}\n */\n","excerptTokens":[{"kind":"Reference","text":"updateApplicationRoleConnection","canonicalReference":"@discordjs/core!UsersAPI#updateApplicationRoleConnection"},{"kind":"Content","text":"("},{"kind":"Reference","text":"applicationId","canonicalReference":"@discordjs/core!~applicationId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPutAPICurrentUserApplicationRoleConnectionJSONBody","canonicalReference":"discord-api-types!RESTPutAPICurrentUserApplicationRoleConnectionJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIApplicationRoleConnection","canonicalReference":"discord-api-types!APIApplicationRoleConnection:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":159,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":17,"endIndex":21},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"applicationId","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":16},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"updateApplicationRoleConnection"}],"implementsTokenRanges":[]},{"kind":"Variable","canonicalReference":"@discordjs/core!version:var","docComment":"/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/core#readme | @discordjs/core} version that you are currently using.\n */\n","excerptTokens":[{"kind":"Reference","text":"version","canonicalReference":"@discordjs/core!version"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"}],"fileUrlPath":"src/index.ts","fileLine":12,"fileColumn":14,"isReadonly":true,"releaseTag":"Public","name":"version","variableTypeTokenRange":{"startIndex":2,"endIndex":3}},{"kind":"Class","canonicalReference":"@discordjs/core!VoiceAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"VoiceAPI","canonicalReference":"@discordjs/core!VoiceAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/voice.ts","fileLine":6,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"VoiceAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!VoiceAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `VoiceAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":7,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!VoiceAPI#getVoiceRegions:member(1)","docComment":"/**\n * Fetches all voice regions\n *\n * @param options - The options for fetching the voice regions\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/voice#list-voice-regions}\n */\n","excerptTokens":[{"kind":"Reference","text":"getVoiceRegions","canonicalReference":"@discordjs/core!VoiceAPI#getVoiceRegions"},{"kind":"Content","text":"({ "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTGetAPIVoiceRegionsResult","canonicalReference":"discord-api-types!RESTGetAPIVoiceRegionsResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":15,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":9,"endIndex":13},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":4,"endIndex":8},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getVoiceRegions"}],"implementsTokenRanges":[]},{"kind":"Class","canonicalReference":"@discordjs/core!WebhooksAPI:class","docComment":"","excerptTokens":[{"kind":"Content","text":"export declare class "},{"kind":"Reference","text":"WebhooksAPI","canonicalReference":"@discordjs/core!WebhooksAPI:class"},{"kind":"Content","text":" "}],"fileUrlPath":"src/api/webhook.ts","fileLine":21,"fileColumn":1,"releaseTag":"Public","isAbstract":false,"name":"WebhooksAPI","preserveMemberOrder":false,"members":[{"kind":"Constructor","canonicalReference":"@discordjs/core!WebhooksAPI:constructor(1)","docComment":"/**\n * Constructs a new instance of the `WebhooksAPI` class\n */\n","excerptTokens":[{"kind":"Content","text":"constructor("},{"kind":"Reference","text":"rest","canonicalReference":"@discordjs/core!~rest"},{"kind":"Content","text":": "},{"kind":"Reference","text":"REST","canonicalReference":"@discordjs/rest!REST:class"},{"kind":"Content","text":");"}],"fileLine":22,"fileColumn":42,"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"rest","parameterTypeTokenRange":{"startIndex":3,"endIndex":4},"isOptional":false,"isRest":false}]},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#delete:member(1)","docComment":"/**\n * Deletes a webhook\n *\n * @param id - The id of the webhook to delete\n *\n * @param options - The options for deleting the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#delete-webhook}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#delete-webhook-with-token}\n */\n","excerptTokens":[{"kind":"Reference","text":"delete","canonicalReference":"@discordjs/core!WebhooksAPI#delete"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":", "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'> & {    "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~__type#token"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";  }"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":72,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":23,"endIndex":27},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ token, reason, signal }","parameterTypeTokenRange":{"startIndex":12,"endIndex":22},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"delete"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#deleteMessage:member(1)","docComment":"/**\n * Deletes an associated message from a webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param messageId - The id of the message to delete\n *\n * @param query - The options for deleting the message\n *\n * @param options - The options for deleting the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#delete-webhook-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"deleteMessage","canonicalReference":"@discordjs/core!WebhooksAPI#deleteMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Content","text":"{    "},{"kind":"Reference","text":"thread_id","canonicalReference":"@discordjs/core!~__type#thread_id"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":";  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":259,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":29,"endIndex":33},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":16,"endIndex":21},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":24,"endIndex":28},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"deleteMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#edit:member(1)","docComment":"/**\n * Edits a webhook\n *\n * @param id - The id of the webhook to edit\n *\n * @param body - The new webhook data\n *\n * @param options - The options for editing the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#modify-webhook}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#modify-webhook-with-token}\n */\n","excerptTokens":[{"kind":"Reference","text":"edit","canonicalReference":"@discordjs/core!WebhooksAPI#edit"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPatchAPIWebhookJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIWebhookJSONBody:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":", "},{"kind":"Reference","text":"reason","canonicalReference":"@discordjs/core!~reason"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'reason' | 'signal'> & {    "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~__type#token"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";  }"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIWebhook","canonicalReference":"discord-api-types!APIWebhook:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":51,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":27,"endIndex":31},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"{ token, reason, signal }","parameterTypeTokenRange":{"startIndex":16,"endIndex":26},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"edit"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#editMessage:member(1)","docComment":"/**\n * Edits an associated message from a webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param messageId - The id of the message to edit\n *\n * @param body - The data for editing the message\n *\n * @param options - The options for editing the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#edit-webhook-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"editMessage","canonicalReference":"@discordjs/core!WebhooksAPI#editMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"thread_id","canonicalReference":"@discordjs/core!~thread_id"},{"kind":"Content","text":", "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":", ..."},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":" }: "},{"kind":"Reference","text":"RESTPatchAPIWebhookWithTokenMessageJSONBody","canonicalReference":"discord-api-types!RESTPatchAPIWebhookWithTokenMessageJSONBody:type"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"thread_id","canonicalReference":"@discordjs/core!~__type#thread_id"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";  }"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":229,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":38,"endIndex":42},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"{ thread_id, files, ...body }","parameterTypeTokenRange":{"startIndex":20,"endIndex":30},"isOptional":false,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":33,"endIndex":37},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"editMessage"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#execute:member(1)","docComment":"/**\n * Executes a webhook and returns the created message\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param body - The data for executing the webhook\n *\n * @param options - The options for executing the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#execute-webhook}\n */\n","excerptTokens":[{"kind":"Reference","text":"execute","canonicalReference":"@discordjs/core!WebhooksAPI#execute"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenJSONBody","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenJSONBody:interface"},{"kind":"Content","text":" & "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenQuery","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenQuery:interface"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"wait","canonicalReference":"@discordjs/core!~__type#wait"},{"kind":"Content","text":": true;  }"},{"kind":"Content","text":", "},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenWaitResult","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenWaitResult:type"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":92,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":30,"endIndex":34},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":25,"endIndex":29},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"execute"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#execute:member(2)","docComment":"/**\n * Executes a webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param body - The data for executing the webhook\n *\n * @param options - The options for executing the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#execute-webhook}\n */\n","excerptTokens":[{"kind":"Reference","text":"execute","canonicalReference":"@discordjs/core!WebhooksAPI#execute"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenJSONBody","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenJSONBody:interface"},{"kind":"Content","text":" & "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenQuery","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenQuery:interface"},{"kind":"Content","text":" & {    "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RawFile","canonicalReference":"@discordjs/rest!RawFile:interface"},{"kind":"Content","text":"[];    "},{"kind":"Reference","text":"wait","canonicalReference":"@discordjs/core!~__type#wait"},{"kind":"Content","text":"?: false;  }"},{"kind":"Content","text":", "},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":108,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":30,"endIndex":34},"releaseTag":"Public","isProtected":false,"overloadIndex":2,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":22},"isOptional":false,"isRest":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":25,"endIndex":29},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"execute"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#executeGitHub:member(1)","docComment":"/**\n * Executes a github webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param body - The data for executing the webhook\n *\n * @param query - The options for executing the webhook\n *\n * @param options - The options for executing the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#execute-githubcompatible-webhook}\n */\n","excerptTokens":[{"kind":"Reference","text":"executeGitHub","canonicalReference":"@discordjs/core!WebhooksAPI#executeGitHub"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenGitHubQuery","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenGitHubQuery:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":180,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"executeGitHub"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#executeSlack:member(1)","docComment":"/**\n * Executes a slack webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param body - The data for executing the webhook\n *\n * @param query - The query options for executing the webhook\n *\n * @param options - The options for executing the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#execute-slackcompatible-webhook}\n */\n","excerptTokens":[{"kind":"Reference","text":"executeSlack","canonicalReference":"@discordjs/core!WebhooksAPI#executeSlack"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~body"},{"kind":"Content","text":": "},{"kind":"Reference","text":"unknown"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTPostAPIWebhookWithTokenSlackQuery","canonicalReference":"discord-api-types!RESTPostAPIWebhookWithTokenSlackQuery:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"void"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":155,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"body","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"executeSlack"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#get:member(1)","docComment":"/**\n * Fetches a webhook\n *\n * @param id - The id of the webhook\n *\n * @param options - The options for fetching the webhook\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#get-webhook}\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#get-webhook-with-token}\n */\n","excerptTokens":[{"kind":"Reference","text":"get","canonicalReference":"@discordjs/core!WebhooksAPI#get"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":", "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'> & {    "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~__type#token"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";  }"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIWebhook","canonicalReference":"discord-api-types!APIWebhook:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":32,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":21,"endIndex":25},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"{ token, signal }","parameterTypeTokenRange":{"startIndex":10,"endIndex":20},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"get"},{"kind":"Method","canonicalReference":"@discordjs/core!WebhooksAPI#getMessage:member(1)","docComment":"/**\n * Fetches an associated message from a webhook\n *\n * @param id - The id of the webhook\n *\n * @param token - The token of the webhook\n *\n * @param messageId - The id of the message to fetch\n *\n * @param query - The query options for fetching the message\n *\n * @param options - The options for fetching the message\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/resources/webhook#get-webhook-message}\n */\n","excerptTokens":[{"kind":"Reference","text":"getMessage","canonicalReference":"@discordjs/core!WebhooksAPI#getMessage"},{"kind":"Content","text":"("},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"token","canonicalReference":"@discordjs/core!~token"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":", "},{"kind":"Reference","text":"messageId","canonicalReference":"@discordjs/core!~messageId"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Snowflake","canonicalReference":"discord-api-types!Snowflake:type"},{"kind":"Content","text":", "},{"kind":"Reference","text":"query","canonicalReference":"@discordjs/core!~query"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"RESTGetAPIWebhookWithTokenMessageQuery","canonicalReference":"discord-api-types!RESTGetAPIWebhookWithTokenMessageQuery:interface"},{"kind":"Content","text":", { "},{"kind":"Reference","text":"signal","canonicalReference":"@discordjs/core!~signal"},{"kind":"Content","text":" }?: "},{"kind":"Reference","text":"Pick","canonicalReference":"!Pick:type"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"RequestData","canonicalReference":"@discordjs/rest!RequestData:interface"},{"kind":"Content","text":", 'signal'>"},{"kind":"Content","text":"): "},{"kind":"Reference","text":"Promise","canonicalReference":"!Promise:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessage","canonicalReference":"discord-api-types!APIMessage:interface"},{"kind":"Content","text":">"},{"kind":"Content","text":";"}],"fileLine":205,"fileColumn":15,"isStatic":false,"returnTypeTokenRange":{"startIndex":25,"endIndex":29},"releaseTag":"Public","isProtected":false,"overloadIndex":1,"parameters":[{"parameterName":"id","parameterTypeTokenRange":{"startIndex":4,"endIndex":5},"isOptional":false,"isRest":false},{"parameterName":"token","parameterTypeTokenRange":{"startIndex":8,"endIndex":9},"isOptional":false,"isRest":false},{"parameterName":"messageId","parameterTypeTokenRange":{"startIndex":12,"endIndex":13},"isOptional":false,"isRest":false},{"parameterName":"query","parameterTypeTokenRange":{"startIndex":16,"endIndex":17},"isOptional":true,"isRest":false},{"parameterName":"{ signal }","parameterTypeTokenRange":{"startIndex":20,"endIndex":24},"isOptional":true,"isRest":false}],"isOptional":false,"isAbstract":false,"name":"getMessage"}],"implementsTokenRanges":[]},{"kind":"Function","canonicalReference":"@discordjs/core!withFiles:function(1)","docComment":"/**\n * A utility function to create a form data payload given an array of file buffers\n *\n * @param files - The files to create a form data payload for\n *\n * @param options - The additional options for the form data payload\n */\n","excerptTokens":[{"kind":"Content","text":"export declare function "},{"kind":"Reference","text":"withFiles","canonicalReference":"@discordjs/core!withFiles"},{"kind":"Content","text":"("},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~files"},{"kind":"Content","text":": "},{"kind":"Reference","text":"DescriptiveRawFile","canonicalReference":"@discordjs/core!DescriptiveRawFile:interface"},{"kind":"Content","text":"[]"},{"kind":"Content","text":", "},{"kind":"Reference","text":"options","canonicalReference":"@discordjs/core!~options"},{"kind":"Content","text":": "},{"kind":"Reference","text":"APIInteractionResponseCallbackData","canonicalReference":"discord-api-types!APIInteractionResponseCallbackData:type"},{"kind":"Content","text":"): "},{"kind":"Content","text":"{  "},{"kind":"Reference","text":"body","canonicalReference":"@discordjs/core!~__type#body"},{"kind":"Content","text":": {    "},{"kind":"Reference","text":"attachments","canonicalReference":"@discordjs/core!~__type#attachments"},{"kind":"Content","text":": {      "},{"kind":"Reference","text":"id","canonicalReference":"@discordjs/core!~__type#id"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";      "},{"kind":"Reference","text":"description","canonicalReference":"@discordjs/core!~__type#description"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    }[];    "},{"kind":"Reference","text":"flags","canonicalReference":"@discordjs/core!~__type#flags"},{"kind":"Content","text":"?: import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"MessageFlags","canonicalReference":"discord-api-types!MessageFlags:enum"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"content","canonicalReference":"@discordjs/core!~__type#content"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"embeds","canonicalReference":"@discordjs/core!~__type#embeds"},{"kind":"Content","text":"?: import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIEmbed","canonicalReference":"discord-api-types!APIEmbed:interface"},{"kind":"Content","text":"[] | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"allowed_mentions","canonicalReference":"@discordjs/core!~__type#allowed_mentions"},{"kind":"Content","text":"?: import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIAllowedMentions","canonicalReference":"discord-api-types!APIAllowedMentions:interface"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"components","canonicalReference":"@discordjs/core!~__type#components"},{"kind":"Content","text":"?: import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIActionRowComponent","canonicalReference":"discord-api-types!APIActionRowComponent:interface"},{"kind":"Content","text":"<import(\"discord-api-types/v10\")."},{"kind":"Reference","text":"APIMessageActionRowComponent","canonicalReference":"discord-api-types!APIMessageActionRowComponent:type"},{"kind":"Content","text":">[] | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"tts","canonicalReference":"@discordjs/core!~__type#tts"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"thread_name","canonicalReference":"@discordjs/core!~__type#thread_name"},{"kind":"Content","text":"?: "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"undefined"},{"kind":"Content","text":";  };  "},{"kind":"Reference","text":"files","canonicalReference":"@discordjs/core!~__type#files"},{"kind":"Content","text":": {    "},{"kind":"Reference","text":"name","canonicalReference":"@discordjs/core!~__type#name"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":";    "},{"kind":"Reference","text":"data","canonicalReference":"@discordjs/core!~__type#data"},{"kind":"Content","text":": "},{"kind":"Reference","text":"string"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"number"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"boolean"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"Uint8Array","canonicalReference":"!Uint8Array:interface"},{"kind":"Content","text":" | "},{"kind":"Reference","text":"Buffer","canonicalReference":"!\"\\\"buffer\\\"\".__global.Buffer:interface"},{"kind":"Content","text":";  }[];}"},{"kind":"Content","text":";"}],"fileUrlPath":"src/util/files.ts","fileLine":14,"fileColumn":1,"returnTypeTokenRange":{"startIndex":12,"endIndex":87},"releaseTag":"Public","overloadIndex":1,"parameters":[{"parameterName":"files","parameterTypeTokenRange":{"startIndex":5,"endIndex":7},"isOptional":false,"isRest":false},{"parameterName":"options","parameterTypeTokenRange":{"startIndex":10,"endIndex":11},"isOptional":false,"isRest":false}],"name":"withFiles"},{"kind":"Interface","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface","docComment":"","excerptTokens":[{"kind":"Content","text":"export interface "},{"kind":"Reference","text":"WithIntrinsicProps","canonicalReference":"@discordjs/core!WithIntrinsicProps:interface"},{"kind":"Content","text":"<"},{"kind":"Reference","text":"Data"},{"kind":"Content","text":"> extends "},{"kind":"Reference","text":"IntrinsicProps","canonicalReference":"@discordjs/core!IntrinsicProps:interface"},{"kind":"Content","text":" "}],"fileUrlPath":"src/client.ts","fileLine":88,"fileColumn":1,"releaseTag":"Public","typeParameters":[{"typeParameterName":"Data","constraintTokenRange":{"startIndex":0,"endIndex":0},"defaultTypeTokenRange":{"startIndex":0,"endIndex":0}}],"name":"WithIntrinsicProps","preserveMemberOrder":false,"members":[{"kind":"PropertySignature","canonicalReference":"@discordjs/core!WithIntrinsicProps#data:member","docComment":"","excerptTokens":[{"kind":"Reference","text":"data","canonicalReference":"@discordjs/core!WithIntrinsicProps#data"},{"kind":"Content","text":": "},{"kind":"Reference","text":"Data"},{"kind":"Content","text":";"}],"fileLine":89,"fileColumn":2,"isReadonly":false,"isOptional":false,"releaseTag":"Public","name":"data","propertyTypeTokenRange":{"startIndex":2,"endIndex":3}}],"extendsTokenRanges":[{"startIndex":5,"endIndex":6,"typeParameters":[]}]}]}]}