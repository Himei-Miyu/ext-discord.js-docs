{
  "metadata": {
    "toolPackage": "@discordjs/api-extractor",
    "toolVersion": "7.38.1",
    "schemaVersion": 1012,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/discordjs/discord.js/tree/main/packages/rest",
  "kind": "Package",
  "canonicalReference": "@discordjs/rest!",
  "docComment": "",
  "name": "@discordjs/rest",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@discordjs/rest!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!ALLOWED_EXTENSIONS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "ALLOWED_EXTENSIONS",
              "canonicalReference": "@discordjs/rest!ALLOWED_EXTENSIONS"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "readonly [\"webp\", \"png\", \"jpg\", \"jpeg\", \"gif\"]"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 48,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ALLOWED_EXTENSIONS",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!ALLOWED_SIZES:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "ALLOWED_SIZES",
              "canonicalReference": "@discordjs/rest!ALLOWED_SIZES"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "readonly [16, 32, 64, 128, 256, 512, 1024, 2048, 4096]"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 50,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ALLOWED_SIZES",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!ALLOWED_STICKER_EXTENSIONS:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "ALLOWED_STICKER_EXTENSIONS",
              "canonicalReference": "@discordjs/rest!ALLOWED_STICKER_EXTENSIONS"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "readonly [\"png\", \"json\", \"gif\"]"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 49,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ALLOWED_STICKER_EXTENSIONS",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!APIRequest:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "APIRequest",
              "canonicalReference": "@discordjs/rest!APIRequest:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 177,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "APIRequest",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#data:member",
              "docComment": "/**\n * The data that was used to form the body of this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/rest!APIRequest#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "HandlerRequestData",
                  "canonicalReference": "@discordjs/rest!HandlerRequestData:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 181,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#method:member",
              "docComment": "/**\n * The HTTP method used in this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!APIRequest#method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 185,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#options:member",
              "docComment": "/**\n * Additional HTTP options for this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!APIRequest#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RequestInit",
                  "canonicalReference": "undici!RequestInit:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 189,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#path:member",
              "docComment": "/**\n * The full path used to make the request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "path",
                  "canonicalReference": "@discordjs/rest!APIRequest#path"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 193,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "path",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#retries:member",
              "docComment": "/**\n * The number of times this request has been attempted\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retries",
                  "canonicalReference": "@discordjs/rest!APIRequest#retries"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 197,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retries",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!APIRequest#route:member",
              "docComment": "/**\n * The API route identifying the ratelimit for this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "route",
                  "canonicalReference": "@discordjs/rest!APIRequest#route"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 201,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "route",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface",
          "docComment": "/**\n * The options used for image URLs\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "BaseImageURLOptions",
              "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/CDN.ts",
          "fileLine": 18,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "BaseImageURLOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!BaseImageURLOptions#extension:member",
              "docComment": "/**\n * The extension to use for the image URL\n *\n * @defaultValue\n *\n * `'webp'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "extension",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions#extension"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageExtension",
                  "canonicalReference": "@discordjs/rest!ImageExtension:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extension",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!BaseImageURLOptions#size:member",
              "docComment": "/**\n * The size specified in the image URL\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "size",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions#size"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSize",
                  "canonicalReference": "@discordjs/rest!ImageSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!BurstHandlerMajorIdKey:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "BurstHandlerMajorIdKey",
              "canonicalReference": "@discordjs/rest!BurstHandlerMajorIdKey"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "\"burst\""
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 61,
          "fileColumn": 14,
          "initializerTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          },
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "BurstHandlerMajorIdKey",
          "variableTypeTokenRange": {
            "startIndex": 0,
            "endIndex": 0
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/rest!calculateUserDefaultAvatarIndex:function(1)",
          "docComment": "/**\n * Calculates the default avatar index for a given user id.\n *\n * @param userId - The user id to calculate the default avatar index for\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "calculateUserDefaultAvatarIndex",
              "canonicalReference": "@discordjs/rest!calculateUserDefaultAvatarIndex"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "userId",
              "canonicalReference": "@discordjs/rest!~userId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Snowflake",
              "canonicalReference": "discord-api-types!Snowflake:type"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/utils.ts",
          "fileLine": 121,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 8
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "userId",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "calculateUserDefaultAvatarIndex"
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/rest!CDN:class",
          "docComment": "/**\n * The CDN link builder\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "CDN",
              "canonicalReference": "@discordjs/rest!CDN:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/CDN.ts",
          "fileLine": 64,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "CDN",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/rest!CDN:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `CDN` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "base",
                  "canonicalReference": "@discordjs/rest!~base"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 65,
              "fileColumn": 42,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "base",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#appAsset:member(1)",
              "docComment": "/**\n * Generates an app asset URL for a client's asset.\n *\n * @param clientId - The client id that has the asset\n *\n * @param assetHash - The hash provided by Discord for this asset\n *\n * @param options - Optional options for the asset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "appAsset",
                  "canonicalReference": "@discordjs/rest!CDN#appAsset"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "clientId",
                  "canonicalReference": "@discordjs/rest!~clientId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "assetHash",
                  "canonicalReference": "@discordjs/rest!~assetHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 74,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "assetHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "appAsset"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#appIcon:member(1)",
              "docComment": "/**\n * Generates an app icon URL for a client's icon.\n *\n * @param clientId - The client id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "appIcon",
                  "canonicalReference": "@discordjs/rest!CDN#appIcon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "clientId",
                  "canonicalReference": "@discordjs/rest!~clientId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "iconHash",
                  "canonicalReference": "@discordjs/rest!~iconHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 85,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "clientId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "iconHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "appIcon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#avatar:member(1)",
              "docComment": "/**\n * Generates an avatar URL, e.g. for a user or a webhook.\n *\n * @param id - The id that has the icon\n *\n * @param avatarHash - The hash provided by Discord for this avatar\n *\n * @param options - Optional options for the avatar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "avatar",
                  "canonicalReference": "@discordjs/rest!CDN#avatar"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/rest!~id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "avatarHash",
                  "canonicalReference": "@discordjs/rest!~avatarHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ImageURLOptions",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 96,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "avatarHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "avatar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#avatarDecoration:member(1)",
              "docComment": "/**\n * Generates a user avatar decoration URL.\n *\n * @param userId - The id of the user\n *\n * @param userAvatarDecoration - The hash provided by Discord for this avatar decoration\n *\n * @param options - Optional options for the avatar decoration\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "avatarDecoration",
                  "canonicalReference": "@discordjs/rest!CDN#avatarDecoration"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "userId",
                  "canonicalReference": "@discordjs/rest!~userId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "userAvatarDecoration",
                  "canonicalReference": "@discordjs/rest!~userAvatarDecoration"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 107,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "userId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "userAvatarDecoration",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "avatarDecoration"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#banner:member(1)",
              "docComment": "/**\n * Generates a banner URL, e.g. for a user or a guild.\n *\n * @param id - The id that has the banner splash\n *\n * @param bannerHash - The hash provided by Discord for this banner\n *\n * @param options - Optional options for the banner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "banner",
                  "canonicalReference": "@discordjs/rest!CDN#banner"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/rest!~id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "bannerHash",
                  "canonicalReference": "@discordjs/rest!~bannerHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ImageURLOptions",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 122,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "bannerHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "banner"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#channelIcon:member(1)",
              "docComment": "/**\n * Generates an icon URL for a channel, e.g. a group DM.\n *\n * @param channelId - The channel id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this channel\n *\n * @param options - Optional options for the icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "channelIcon",
                  "canonicalReference": "@discordjs/rest!CDN#channelIcon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "channelId",
                  "canonicalReference": "@discordjs/rest!~channelId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "iconHash",
                  "canonicalReference": "@discordjs/rest!~iconHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 133,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "channelId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "iconHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "channelIcon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#defaultAvatar:member(1)",
              "docComment": "/**\n * Generates a default avatar URL\n *\n * @remarks\n *\n * To calculate the index for a user do `(userId >> 22) % 6`, or `discriminator % 5` if they're using the legacy username system.\n *\n * @param index - The default avatar index\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "defaultAvatar",
                  "canonicalReference": "@discordjs/rest!CDN#defaultAvatar"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "index",
                  "canonicalReference": "@discordjs/rest!~index"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 145,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "index",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "defaultAvatar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#discoverySplash:member(1)",
              "docComment": "/**\n * Generates a discovery splash URL for a guild's discovery splash.\n *\n * @param guildId - The guild id that has the discovery splash\n *\n * @param splashHash - The hash provided by Discord for this splash\n *\n * @param options - Optional options for the splash\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "discoverySplash",
                  "canonicalReference": "@discordjs/rest!CDN#discoverySplash"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "guildId",
                  "canonicalReference": "@discordjs/rest!~guildId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "splashHash",
                  "canonicalReference": "@discordjs/rest!~splashHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 156,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "guildId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "splashHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "discoverySplash"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#emoji:member(1)",
              "docComment": "/**\n * Generates an emoji's URL for an emoji.\n *\n * @param emojiId - The emoji id\n *\n * @param options - Optional options for the emoji\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/rest!CDN#emoji"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "emojiId",
                  "canonicalReference": "@discordjs/rest!~emojiId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 166,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "emojiId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "emoji"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#emoji:member(2)",
              "docComment": "/**\n * Generates an emoji's URL for an emoji.\n *\n * @deprecated\n *\n * This overload is deprecated. Pass an object containing the extension instead.\n *\n * @param emojiId - The emoji id\n *\n * @param extension - The extension of the emoji\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "emoji",
                  "canonicalReference": "@discordjs/rest!CDN#emoji"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "emojiId",
                  "canonicalReference": "@discordjs/rest!~emojiId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "extension",
                  "canonicalReference": "@discordjs/rest!~extension"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageExtension",
                  "canonicalReference": "@discordjs/rest!ImageExtension:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 176,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 2,
              "parameters": [
                {
                  "parameterName": "emojiId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "extension",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "emoji"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#guildMemberAvatar:member(1)",
              "docComment": "/**\n * Generates a guild member avatar URL.\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param avatarHash - The hash provided by Discord for this avatar\n *\n * @param options - Optional options for the avatar\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "guildMemberAvatar",
                  "canonicalReference": "@discordjs/rest!CDN#guildMemberAvatar"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "guildId",
                  "canonicalReference": "@discordjs/rest!~guildId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "userId",
                  "canonicalReference": "@discordjs/rest!~userId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "avatarHash",
                  "canonicalReference": "@discordjs/rest!~avatarHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ImageURLOptions",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 206,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "guildId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "userId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "avatarHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 20
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "guildMemberAvatar"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#guildMemberBanner:member(1)",
              "docComment": "/**\n * Generates a guild member banner URL.\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param bannerHash - The hash provided by Discord for this banner\n *\n * @param options - Optional options for the banner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "guildMemberBanner",
                  "canonicalReference": "@discordjs/rest!CDN#guildMemberBanner"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "guildId",
                  "canonicalReference": "@discordjs/rest!~guildId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "userId",
                  "canonicalReference": "@discordjs/rest!~userId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "bannerHash",
                  "canonicalReference": "@discordjs/rest!~bannerHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ImageURLOptions",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 223,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 21,
                "endIndex": 22
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "guildId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "userId",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "bannerHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 13
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 16,
                    "endIndex": 20
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "guildMemberBanner"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#guildScheduledEventCover:member(1)",
              "docComment": "/**\n * Generates a cover image for a guild scheduled event.\n *\n * @param scheduledEventId - The scheduled event id\n *\n * @param coverHash - The hash provided by discord for this cover image\n *\n * @param options - Optional options for the cover image\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "guildScheduledEventCover",
                  "canonicalReference": "@discordjs/rest!CDN#guildScheduledEventCover"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "scheduledEventId",
                  "canonicalReference": "@discordjs/rest!~scheduledEventId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "coverHash",
                  "canonicalReference": "@discordjs/rest!~coverHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 305,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "scheduledEventId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "coverHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "guildScheduledEventCover"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#icon:member(1)",
              "docComment": "/**\n * Generates an icon URL, e.g. for a guild.\n *\n * @param id - The id that has the icon splash\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "icon",
                  "canonicalReference": "@discordjs/rest!CDN#icon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/rest!~id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "iconHash",
                  "canonicalReference": "@discordjs/rest!~iconHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ImageURLOptions",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 239,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "iconHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "icon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#roleIcon:member(1)",
              "docComment": "/**\n * Generates a URL for the icon of a role\n *\n * @param roleId - The id of the role that has the icon\n *\n * @param roleIconHash - The hash provided by Discord for this role icon\n *\n * @param options - Optional options for the role icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "roleIcon",
                  "canonicalReference": "@discordjs/rest!CDN#roleIcon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "roleId",
                  "canonicalReference": "@discordjs/rest!~roleId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "roleIconHash",
                  "canonicalReference": "@discordjs/rest!~roleIconHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 250,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "roleId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "roleIconHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "roleIcon"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#splash:member(1)",
              "docComment": "/**\n * Generates a guild invite splash URL for a guild's invite splash.\n *\n * @param guildId - The guild id that has the invite splash\n *\n * @param splashHash - The hash provided by Discord for this splash\n *\n * @param options - Optional options for the splash\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "splash",
                  "canonicalReference": "@discordjs/rest!CDN#splash"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "guildId",
                  "canonicalReference": "@discordjs/rest!~guildId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "splashHash",
                  "canonicalReference": "@discordjs/rest!~splashHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 261,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "guildId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "splashHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "splash"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#sticker:member(1)",
              "docComment": "/**\n * Generates a sticker URL.\n *\n * @param stickerId - The sticker id\n *\n * @param extension - The extension of the sticker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "sticker",
                  "canonicalReference": "@discordjs/rest!CDN#sticker"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "stickerId",
                  "canonicalReference": "@discordjs/rest!~stickerId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "extension",
                  "canonicalReference": "@discordjs/rest!~extension"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "StickerExtension",
                  "canonicalReference": "@discordjs/rest!StickerExtension:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 273,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "stickerId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "extension",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "sticker"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#stickerPackBanner:member(1)",
              "docComment": "/**\n * Generates a sticker pack banner URL.\n *\n * @param bannerId - The banner id\n *\n * @param options - Optional options for the banner\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "stickerPackBanner",
                  "canonicalReference": "@discordjs/rest!CDN#stickerPackBanner"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "bannerId",
                  "canonicalReference": "@discordjs/rest!~bannerId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 283,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 13,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "bannerId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 12
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "stickerPackBanner"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!CDN#teamIcon:member(1)",
              "docComment": "/**\n * Generates a team icon URL for a team's icon.\n *\n * @param teamId - The team id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "teamIcon",
                  "canonicalReference": "@discordjs/rest!CDN#teamIcon"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "teamId",
                  "canonicalReference": "@discordjs/rest!~teamId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "iconHash",
                  "canonicalReference": "@discordjs/rest!~iconHash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BaseImageURLOptions",
                  "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 294,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 17,
                "endIndex": 18
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "teamId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "iconHash",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 12,
                    "endIndex": 16
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "teamIcon"
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!DefaultRestOptions:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "DefaultRestOptions",
              "canonicalReference": "@discordjs/rest!DefaultRestOptions"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "{  readonly "
            },
            {
              "kind": "Reference",
              "text": "agent",
              "canonicalReference": "@discordjs/rest!~__type#agent"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "api",
              "canonicalReference": "@discordjs/rest!~__type#api"
            },
            {
              "kind": "Content",
              "text": ": \"https://discord.com/api\";  readonly "
            },
            {
              "kind": "Reference",
              "text": "authPrefix",
              "canonicalReference": "@discordjs/rest!~__type#authPrefix"
            },
            {
              "kind": "Content",
              "text": ": \"Bot\";  readonly "
            },
            {
              "kind": "Reference",
              "text": "cdn",
              "canonicalReference": "@discordjs/rest!~__type#cdn"
            },
            {
              "kind": "Content",
              "text": ": \"https://cdn.discordapp.com\";  readonly "
            },
            {
              "kind": "Reference",
              "text": "headers",
              "canonicalReference": "@discordjs/rest!~__type#headers"
            },
            {
              "kind": "Content",
              "text": ": {};  readonly "
            },
            {
              "kind": "Reference",
              "text": "invalidRequestWarningInterval",
              "canonicalReference": "@discordjs/rest!~__type#invalidRequestWarningInterval"
            },
            {
              "kind": "Content",
              "text": ": 0;  readonly "
            },
            {
              "kind": "Reference",
              "text": "globalRequestsPerSecond",
              "canonicalReference": "@discordjs/rest!~__type#globalRequestsPerSecond"
            },
            {
              "kind": "Content",
              "text": ": 50;  readonly "
            },
            {
              "kind": "Reference",
              "text": "offset",
              "canonicalReference": "@discordjs/rest!~__type#offset"
            },
            {
              "kind": "Content",
              "text": ": 50;  readonly "
            },
            {
              "kind": "Reference",
              "text": "rejectOnRateLimit",
              "canonicalReference": "@discordjs/rest!~__type#rejectOnRateLimit"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "retries",
              "canonicalReference": "@discordjs/rest!~__type#retries"
            },
            {
              "kind": "Content",
              "text": ": 3;  readonly "
            },
            {
              "kind": "Reference",
              "text": "timeout",
              "canonicalReference": "@discordjs/rest!~__type#timeout"
            },
            {
              "kind": "Content",
              "text": ": 15000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "userAgentAppendix",
              "canonicalReference": "@discordjs/rest!~__type#userAgentAppendix"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "version",
              "canonicalReference": "@discordjs/rest!~__type#version"
            },
            {
              "kind": "Content",
              "text": ": \"10\";  readonly "
            },
            {
              "kind": "Reference",
              "text": "hashSweepInterval",
              "canonicalReference": "@discordjs/rest!~__type#hashSweepInterval"
            },
            {
              "kind": "Content",
              "text": ": 14400000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "hashLifetime",
              "canonicalReference": "@discordjs/rest!~__type#hashLifetime"
            },
            {
              "kind": "Content",
              "text": ": 86400000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "handlerSweepInterval",
              "canonicalReference": "@discordjs/rest!~__type#handlerSweepInterval"
            },
            {
              "kind": "Content",
              "text": ": 3600000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "makeRequest",
              "canonicalReference": "@discordjs/rest!~__type#makeRequest"
            },
            {
              "kind": "Content",
              "text": ": ("
            },
            {
              "kind": "Reference",
              "text": "url",
              "canonicalReference": "@discordjs/rest!~url"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "init",
              "canonicalReference": "@discordjs/rest!~init"
            },
            {
              "kind": "Content",
              "text": ": import(\"undici\")."
            },
            {
              "kind": "Reference",
              "text": "RequestInit",
              "canonicalReference": "undici!RequestInit:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ResponseLike",
              "canonicalReference": "@discordjs/rest!ResponseLike:interface"
            },
            {
              "kind": "Content",
              "text": ">;}"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 14,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultRestOptions",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 55
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!DefaultUserAgent:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "DefaultUserAgent",
              "canonicalReference": "@discordjs/rest!DefaultUserAgent"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "`DiscordBot (https://discord.js.org, ${"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "})`"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 6,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultUserAgent",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!DefaultUserAgentAppendix:var",
          "docComment": "/**\n * The default string to append onto the user agent.\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "DefaultUserAgentAppendix",
              "canonicalReference": "@discordjs/rest!DefaultUserAgentAppendix"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 12,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultUserAgentAppendix",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/rest!DiscordAPIError:class",
          "docComment": "/**\n * Represents an API error returned by Discord\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "DiscordAPIError",
              "canonicalReference": "@discordjs/rest!DiscordAPIError:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/DiscordAPIError.ts",
          "fileLine": 41,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "DiscordAPIError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/rest!DiscordAPIError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `DiscordAPIError` class\n *\n * @param rawError - The error reported by Discord\n *\n * @param code - The error code reported by Discord\n *\n * @param status - The status code of the response\n *\n * @param method - The method of the request that erred\n *\n * @param url - The url of the request that erred\n *\n * @param bodyData - The unparsed data for the request that errored\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "rawError",
                  "canonicalReference": "@discordjs/rest!~rawError"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DiscordErrorData",
                  "canonicalReference": "@discordjs/rest!DiscordErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "OAuthErrorData",
                  "canonicalReference": "@discordjs/rest!OAuthErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "code",
                  "canonicalReference": "@discordjs/rest!~code"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "status",
                  "canonicalReference": "@discordjs/rest!~status"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!~method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "bodyData",
                  "canonicalReference": "@discordjs/rest!~bodyData"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InternalRequest",
                  "canonicalReference": "@discordjs/rest!InternalRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'body' | 'files'>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "rawError",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "code",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 20
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 23,
                    "endIndex": 24
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "bodyData",
                  "parameterTypeTokenRange": {
                    "startIndex": 27,
                    "endIndex": 31
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "code",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#code"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 54,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 56,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#name:member",
              "docComment": "/**\n * The name of the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#name"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 68,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#rawError:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "rawError",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#rawError"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "DiscordErrorData",
                  "canonicalReference": "@discordjs/rest!DiscordErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "OAuthErrorData",
                  "canonicalReference": "@discordjs/rest!OAuthErrorData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 53,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rawError",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#requestBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "requestBody",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#requestBody"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RequestBody",
                  "canonicalReference": "@discordjs/rest!RequestBody:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 42,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestBody",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "status",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#status"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 55,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!DiscordAPIError#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!DiscordAPIError#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 57,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!DiscordErrorData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "DiscordErrorData",
              "canonicalReference": "@discordjs/rest!DiscordErrorData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/DiscordAPIError.ts",
          "fileLine": 14,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "DiscordErrorData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!DiscordErrorData#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "code",
                  "canonicalReference": "@discordjs/rest!DiscordErrorData#code"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 15,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!DiscordErrorData#errors:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "errors",
                  "canonicalReference": "@discordjs/rest!DiscordErrorData#errors"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "DiscordError",
                  "canonicalReference": "@discordjs/rest!~DiscordError:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "errors",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!DiscordErrorData#message:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "message",
                  "canonicalReference": "@discordjs/rest!DiscordErrorData#message"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 17,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "message",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!HandlerRequestData:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "HandlerRequestData",
              "canonicalReference": "@discordjs/rest!HandlerRequestData:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "InternalRequest",
              "canonicalReference": "@discordjs/rest!InternalRequest:interface"
            },
            {
              "kind": "Content",
              "text": ", 'auth' | 'body' | 'files' | 'signal'>"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 338,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "HandlerRequestData",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 7
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/rest!HTTPError:class",
          "docComment": "/**\n * Represents a HTTP error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "HTTPError",
              "canonicalReference": "@discordjs/rest!HTTPError:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/HTTPError.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "HTTPError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/rest!HTTPError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `HTTPError` class\n *\n * @param status - The status code of the response\n *\n * @param statusText - The status text of the response\n *\n * @param method - The method of the request that erred\n *\n * @param url - The url of the request that erred\n *\n * @param bodyData - The unparsed data for the request that errored\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "status",
                  "canonicalReference": "@discordjs/rest!~status"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "statusText",
                  "canonicalReference": "@discordjs/rest!~statusText"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!~method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "bodyData",
                  "canonicalReference": "@discordjs/rest!~bodyData"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Pick",
                  "canonicalReference": "!Pick:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "InternalRequest",
                  "canonicalReference": "@discordjs/rest!InternalRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'body' | 'files'>"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 19,
              "fileColumn": 2,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "status",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "statusText",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "method",
                  "parameterTypeTokenRange": {
                    "startIndex": 11,
                    "endIndex": 12
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 15,
                    "endIndex": 16
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "bodyData",
                  "parameterTypeTokenRange": {
                    "startIndex": 19,
                    "endIndex": 23
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!HTTPError#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!HTTPError#method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 22,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!HTTPError#name:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/rest!HTTPError#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 10,
              "fileColumn": 18,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!HTTPError#requestBody:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "requestBody",
                  "canonicalReference": "@discordjs/rest!HTTPError#requestBody"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RequestBody",
                  "canonicalReference": "@discordjs/rest!RequestBody:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 8,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "requestBody",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!HTTPError#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "status",
                  "canonicalReference": "@discordjs/rest!HTTPError#status"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 20,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!HTTPError#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!HTTPError#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 23,
              "fileColumn": 10,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!ImageExtension:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ImageExtension",
              "canonicalReference": "@discordjs/rest!ImageExtension:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "typeof"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Reference",
              "text": "ALLOWED_EXTENSIONS",
              "canonicalReference": "@discordjs/rest!ALLOWED_EXTENSIONS:var"
            },
            {
              "kind": "Content",
              "text": ")["
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 52,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ImageExtension",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!ImageSize:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ImageSize",
              "canonicalReference": "@discordjs/rest!ImageSize:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "typeof"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Reference",
              "text": "ALLOWED_SIZES",
              "canonicalReference": "@discordjs/rest!ALLOWED_SIZES:var"
            },
            {
              "kind": "Content",
              "text": ")["
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 54,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ImageSize",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!ImageURLOptions:interface",
          "docComment": "/**\n * The options used for image URLs with animated content\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ImageURLOptions",
              "canonicalReference": "@discordjs/rest!ImageURLOptions:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "BaseImageURLOptions",
              "canonicalReference": "@discordjs/rest!BaseImageURLOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/CDN.ts",
          "fileLine": 34,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ImageURLOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!ImageURLOptions#forceStatic:member",
              "docComment": "/**\n * Whether or not to prefer the static version of an image asset.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "forceStatic",
                  "canonicalReference": "@discordjs/rest!ImageURLOptions#forceStatic"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 38,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forceStatic",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!InvalidRequestWarningData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "InvalidRequestWarningData",
              "canonicalReference": "@discordjs/rest!InvalidRequestWarningData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 209,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "InvalidRequestWarningData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!InvalidRequestWarningData#count:member",
              "docComment": "/**\n * Number of invalid requests that have been made in the window\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "count",
                  "canonicalReference": "@discordjs/rest!InvalidRequestWarningData#count"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 213,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "count",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!InvalidRequestWarningData#remainingTime:member",
              "docComment": "/**\n * Time in milliseconds remaining before the count resets\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "remainingTime",
                  "canonicalReference": "@discordjs/rest!InvalidRequestWarningData#remainingTime"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 217,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "remainingTime",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!MakeURLOptions:interface",
          "docComment": "/**\n * The options to use when making a CDN URL\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "MakeURLOptions",
              "canonicalReference": "@discordjs/rest!MakeURLOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/CDN.ts",
          "fileLine": 44,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "MakeURLOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!MakeURLOptions#allowedExtensions:member",
              "docComment": "/**\n * The allowed extensions that can be used\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "allowedExtensions",
                  "canonicalReference": "@discordjs/rest!MakeURLOptions#allowedExtensions"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 48,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "allowedExtensions",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!MakeURLOptions#extension:member",
              "docComment": "/**\n * The extension to use for the image URL\n *\n * @defaultValue\n *\n * `'webp'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "extension",
                  "canonicalReference": "@discordjs/rest!MakeURLOptions#extension"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 54,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "extension",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!MakeURLOptions#size:member",
              "docComment": "/**\n * The size specified in the image URL\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "size",
                  "canonicalReference": "@discordjs/rest!MakeURLOptions#size"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "ImageSize",
                  "canonicalReference": "@discordjs/rest!ImageSize:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 58,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "size",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/rest!makeURLSearchParams:function(1)",
          "docComment": "/**\n * Creates and populates an URLSearchParams instance from an object, stripping out null and undefined values, while also coercing non-strings to strings.\n *\n * @param options - The options to use\n *\n * @returns A populated URLSearchParams instance\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "makeURLSearchParams",
              "canonicalReference": "@discordjs/rest!makeURLSearchParams"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "object"
            },
            {
              "kind": "Content",
              "text": ">("
            },
            {
              "kind": "Reference",
              "text": "options",
              "canonicalReference": "@discordjs/rest!~options"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "Readonly",
              "canonicalReference": "!Readonly:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "T"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Content",
              "text": "import(\"url\")."
            },
            {
              "kind": "Reference",
              "text": "URLSearchParams",
              "canonicalReference": "!\"\\\"url\\\"\".URLSearchParams:class"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/utils.ts",
          "fileLine": 36,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 14,
            "endIndex": 16
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "options",
              "parameterTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "isOptional": true,
              "isRest": false
            }
          ],
          "typeParameters": [
            {
              "typeParameterName": "T",
              "constraintTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "defaultTypeTokenRange": {
                "startIndex": 0,
                "endIndex": 0
              }
            }
          ],
          "name": "makeURLSearchParams"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!OAuthErrorData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "OAuthErrorData",
              "canonicalReference": "@discordjs/rest!OAuthErrorData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/DiscordAPIError.ts",
          "fileLine": 20,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "OAuthErrorData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!OAuthErrorData#error_description:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "error_description",
                  "canonicalReference": "@discordjs/rest!OAuthErrorData#error_description"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 22,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "error_description",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!OAuthErrorData#error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "error",
                  "canonicalReference": "@discordjs/rest!OAuthErrorData#error"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "error",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!OverwrittenMimeTypes:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "OverwrittenMimeTypes",
              "canonicalReference": "@discordjs/rest!OverwrittenMimeTypes"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "{  readonly 'image/apng': \"image/png\";}"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 56,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "OverwrittenMimeTypes",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/rest!parseResponse:function(1)",
          "docComment": "/**\n * Converts the response to usable data\n *\n * @param res - The fetch response\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "parseResponse",
              "canonicalReference": "@discordjs/rest!parseResponse"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "res",
              "canonicalReference": "@discordjs/rest!~res"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "ResponseLike",
              "canonicalReference": "@discordjs/rest!ResponseLike:interface"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "unknown"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/utils.ts",
          "fileLine": 53,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "res",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "parseResponse"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RateLimitData:interface",
          "docComment": "/**\n * Data emitted on `RESTEvents.RateLimited`\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RateLimitData",
              "canonicalReference": "@discordjs/rest!RateLimitData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 134,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RateLimitData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#global:member",
              "docComment": "/**\n * Whether the rate limit that was reached was the global limit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "global",
                  "canonicalReference": "@discordjs/rest!RateLimitData#global"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 138,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "global",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#hash:member",
              "docComment": "/**\n * The bucket hash for this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hash",
                  "canonicalReference": "@discordjs/rest!RateLimitData#hash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 142,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#limit:member",
              "docComment": "/**\n * The amount of requests we can perform before locking requests\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "limit",
                  "canonicalReference": "@discordjs/rest!RateLimitData#limit"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 146,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#majorParameter:member",
              "docComment": "/**\n * The major parameter of the route\n *\n * For example, in `/channels/x`, this will be `x`. If there is no major parameter (e.g: `/bot/gateway`) this will be `global`.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "majorParameter",
                  "canonicalReference": "@discordjs/rest!RateLimitData#majorParameter"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 153,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "majorParameter",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#method:member",
              "docComment": "/**\n * The HTTP method being performed\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!RateLimitData#method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 157,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#route:member",
              "docComment": "/**\n * The route being hit in this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "route",
                  "canonicalReference": "@discordjs/rest!RateLimitData#route"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 161,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "route",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#timeToReset:member",
              "docComment": "/**\n * The time, in milliseconds, until the request-lock is reset\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "timeToReset",
                  "canonicalReference": "@discordjs/rest!RateLimitData#timeToReset"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 165,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeToReset",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RateLimitData#url:member",
              "docComment": "/**\n * The full URL for this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!RateLimitData#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 169,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/rest!RateLimitError:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "RateLimitError",
              "canonicalReference": "@discordjs/rest!RateLimitError:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "RateLimitData",
              "canonicalReference": "@discordjs/rest!RateLimitData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/RateLimitError.ts",
          "fileLine": 3,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "RateLimitError",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/rest!RateLimitError:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `RateLimitError` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor({ "
                },
                {
                  "kind": "Reference",
                  "text": "timeToReset",
                  "canonicalReference": "@discordjs/rest!~timeToReset"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "limit",
                  "canonicalReference": "@discordjs/rest!~limit"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!~method"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "hash",
                  "canonicalReference": "@discordjs/rest!~hash"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!~url"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "route",
                  "canonicalReference": "@discordjs/rest!~route"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "majorParameter",
                  "canonicalReference": "@discordjs/rest!~majorParameter"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "global",
                  "canonicalReference": "@discordjs/rest!~global"
                },
                {
                  "kind": "Content",
                  "text": " }: "
                },
                {
                  "kind": "Reference",
                  "text": "RateLimitData",
                  "canonicalReference": "@discordjs/rest!RateLimitData:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 18,
              "fileColumn": 25,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "{ timeToReset, limit, method, hash, url, route, majorParameter, global }",
                  "parameterTypeTokenRange": {
                    "startIndex": 17,
                    "endIndex": 18
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#global:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "global",
                  "canonicalReference": "@discordjs/rest!RateLimitError#global"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 18,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "global",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#hash:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hash",
                  "canonicalReference": "@discordjs/rest!RateLimitError#hash"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 10,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hash",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#limit:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "limit",
                  "canonicalReference": "@discordjs/rest!RateLimitError#limit"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 6,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "limit",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#majorParameter:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "majorParameter",
                  "canonicalReference": "@discordjs/rest!RateLimitError#majorParameter"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "majorParameter",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#method:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "method",
                  "canonicalReference": "@discordjs/rest!RateLimitError#method"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 8,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "method",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#name:member",
              "docComment": "/**\n * The name of the error\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get "
                },
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/rest!RateLimitError#name"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#route:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "route",
                  "canonicalReference": "@discordjs/rest!RateLimitError#route"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 14,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "route",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#timeToReset:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "timeToReset",
                  "canonicalReference": "@discordjs/rest!RateLimitError#timeToReset"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 4,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeToReset",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!RateLimitError#url:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!RateLimitError#url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 12,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "url",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 4,
            "typeParameters": []
          },
          "implementsTokenRanges": [
            {
              "startIndex": 5,
              "endIndex": 6,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!RateLimitQueueFilter:type",
          "docComment": "/**\n * A function that determines whether the rate limit hit should throw an Error\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RateLimitQueueFilter",
              "canonicalReference": "@discordjs/rest!RateLimitQueueFilter:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "rateLimitData",
              "canonicalReference": "@discordjs/rest!~rateLimitData"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "RateLimitData",
              "canonicalReference": "@discordjs/rest!RateLimitData:interface"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": "> | "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 175,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RateLimitQueueFilter",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 13
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RawFile:interface",
          "docComment": "/**\n * Represents a file to be added to the request\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RawFile",
              "canonicalReference": "@discordjs/rest!RawFile:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 223,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RawFile",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RawFile#contentType:member",
              "docComment": "/**\n * Content-Type of the file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "contentType",
                  "canonicalReference": "@discordjs/rest!RawFile#contentType"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 227,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "contentType",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RawFile#data:member",
              "docComment": "/**\n * The actual data for the file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/rest!RawFile#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Buffer",
                  "canonicalReference": "!\"\\\"buffer\\\"\".__global.Buffer:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "Uint8Array",
                  "canonicalReference": "!Uint8Array:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 231,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 11
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RawFile#key:member",
              "docComment": "/**\n * An explicit key to use for key of the formdata field for this file. When not provided, the index of the file in the files array is used in the form `files[${index}]`. If you wish to alter the placeholder snowflake, you must provide this property in the same form (`files[${placeholder}]`)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "key",
                  "canonicalReference": "@discordjs/rest!RawFile#key"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 237,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "key",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RawFile#name:member",
              "docComment": "/**\n * The name of the file\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "name",
                  "canonicalReference": "@discordjs/rest!RawFile#name"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 241,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "name",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RequestBody:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RequestBody",
              "canonicalReference": "@discordjs/rest!RequestBody:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/errors/DiscordAPIError.ts",
          "fileLine": 25,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequestBody",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestBody#files:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "files",
                  "canonicalReference": "@discordjs/rest!RequestBody#files"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RawFile",
                  "canonicalReference": "@discordjs/rest!RawFile:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "files",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestBody#json:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "json",
                  "canonicalReference": "@discordjs/rest!RequestBody#json"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "json",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RequestData:interface",
          "docComment": "/**\n * Represents possible data to be given to an endpoint\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RequestData",
              "canonicalReference": "@discordjs/rest!RequestData:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 247,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequestData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#appendToFormData:member",
              "docComment": "/**\n * Whether to append JSON data to form data instead of `payload_json` when sending files\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "appendToFormData",
                  "canonicalReference": "@discordjs/rest!RequestData#appendToFormData"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 251,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "appendToFormData",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#auth:member",
              "docComment": "/**\n * If this request needs the `Authorization` header\n *\n * @defaultValue\n *\n * `true`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "auth",
                  "canonicalReference": "@discordjs/rest!RequestData#auth"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 257,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "auth",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#authPrefix:member",
              "docComment": "/**\n * The authorization prefix to use for this request, useful if you use this with bearer tokens\n *\n * @defaultValue\n *\n * `'Bot'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "authPrefix",
                  "canonicalReference": "@discordjs/rest!RequestData#authPrefix"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Content",
                  "text": "'Bearer' | 'Bot'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 263,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "authPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#body:member",
              "docComment": "/**\n * The body to send to this request. If providing as BodyInit, set `passThroughBody: true`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "body",
                  "canonicalReference": "@discordjs/rest!RequestData#body"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "BodyInit",
                  "canonicalReference": "undici!BodyInit:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 268,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#dispatcher:member",
              "docComment": "/**\n * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} to use for the request.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "dispatcher",
                  "canonicalReference": "@discordjs/rest!RequestData#dispatcher"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Agent",
                  "canonicalReference": "undici!Agent:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 272,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "dispatcher",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#files:member",
              "docComment": "/**\n * Files to be attached to this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "files",
                  "canonicalReference": "@discordjs/rest!RequestData#files"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RawFile",
                  "canonicalReference": "@discordjs/rest!RawFile:interface"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 276,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "files",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#headers:member",
              "docComment": "/**\n * Additional headers to add to this request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "headers",
                  "canonicalReference": "@discordjs/rest!RequestData#headers"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 280,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#passThroughBody:member",
              "docComment": "/**\n * Whether to pass-through the body property directly to `fetch()`. <warn>This only applies when files is NOT present</warn>\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "passThroughBody",
                  "canonicalReference": "@discordjs/rest!RequestData#passThroughBody"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 285,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "passThroughBody",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#query:member",
              "docComment": "/**\n * Query string parameters to append to the called endpoint\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "query",
                  "canonicalReference": "@discordjs/rest!RequestData#query"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "URLSearchParams",
                  "canonicalReference": "!URLSearchParams:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 289,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "query",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#reason:member",
              "docComment": "/**\n * Reason to show in the audit logs\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "reason",
                  "canonicalReference": "@discordjs/rest!RequestData#reason"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 293,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#signal:member",
              "docComment": "/**\n * The signal to abort the queue entry or the REST call, where applicable\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/rest!RequestData#signal"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "undefined"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 297,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "signal",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestData#versioned:member",
              "docComment": "/**\n * If this request should be versioned\n *\n * @defaultValue\n *\n * `true`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "versioned",
                  "canonicalReference": "@discordjs/rest!RequestData#versioned"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 303,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "versioned",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RequestHeaders:interface",
          "docComment": "/**\n * Possible headers for an API call\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RequestHeaders",
              "canonicalReference": "@discordjs/rest!RequestHeaders:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 309,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequestHeaders",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestHeaders#\"User-Agent\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'User-Agent': "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 311,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "\"User-Agent\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestHeaders#\"X-Audit-Log-Reason\":member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "'X-Audit-Log-Reason'?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 312,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "\"X-Audit-Log-Reason\"",
              "propertyTypeTokenRange": {
                "startIndex": 1,
                "endIndex": 2
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RequestHeaders#Authorization:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Authorization",
                  "canonicalReference": "@discordjs/rest!RequestHeaders#Authorization"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 310,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "Authorization",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/rest!RequestMethod:enum",
          "docComment": "/**\n * Possible API methods to be used when doing requests\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "RequestMethod",
              "canonicalReference": "@discordjs/rest!RequestMethod:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 318,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequestMethod",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RequestMethod.Delete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Delete",
                  "canonicalReference": "@discordjs/rest!RequestMethod.Delete:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"DELETE\""
                }
              ],
              "fileLine": 319,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Delete"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RequestMethod.Get:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Get",
                  "canonicalReference": "@discordjs/rest!RequestMethod.Get:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"GET\""
                }
              ],
              "fileLine": 320,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Get"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RequestMethod.Patch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Patch",
                  "canonicalReference": "@discordjs/rest!RequestMethod.Patch:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"PATCH\""
                }
              ],
              "fileLine": 321,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Patch"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RequestMethod.Post:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Post",
                  "canonicalReference": "@discordjs/rest!RequestMethod.Post:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"POST\""
                }
              ],
              "fileLine": 322,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Post"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RequestMethod.Put:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Put",
                  "canonicalReference": "@discordjs/rest!RequestMethod.Put:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"PUT\""
                }
              ],
              "fileLine": 323,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Put"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!ResponseLike:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ResponseLike",
              "canonicalReference": "@discordjs/rest!ResponseLike:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Pick",
              "canonicalReference": "!Pick:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "Response",
              "canonicalReference": "undici!Response:class"
            },
            {
              "kind": "Content",
              "text": ", 'arrayBuffer' | 'bodyUsed' | 'headers' | 'json' | 'ok' | 'status' | 'statusText' | 'text'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 204,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ResponseLike",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!ResponseLike#body:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "body",
                  "canonicalReference": "@discordjs/rest!ResponseLike#body"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Readable",
                  "canonicalReference": "!\"\\\"stream\\\"\".internal.Readable:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "ReadableStream",
                  "canonicalReference": "!\"\\\"stream/web\\\"\".ReadableStream:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 206,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "body",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                },
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/rest!REST:class",
          "docComment": "/**\n * Represents the class that manages handlers for endpoints\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "REST",
              "canonicalReference": "@discordjs/rest!REST:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "AsyncEventEmitter",
              "canonicalReference": "@vladfrangu/async_event_emitter!AsyncEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "RestEventsMap",
              "canonicalReference": "@discordjs/rest!RestEventsMap:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/REST.ts",
          "fileLine": 34,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "REST",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/rest!REST:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `REST` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "RESTOptions",
                  "canonicalReference": "@discordjs/rest!RESTOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 74,
              "fileColumn": 39,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 7
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#agent:member",
              "docComment": "/**\n * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} for all requests performed by this manager.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "agent",
                  "canonicalReference": "@discordjs/rest!REST#agent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Dispatcher",
                  "canonicalReference": "undici!Dispatcher:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 39,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "agent",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#cdn:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "cdn",
                  "canonicalReference": "@discordjs/rest!REST#cdn"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "CDN",
                  "canonicalReference": "@discordjs/rest!CDN:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 41,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cdn",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#clearHandlerSweeper:member(1)",
              "docComment": "/**\n * Stops the request handler sweeping interval\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "clearHandlerSweeper",
                  "canonicalReference": "@discordjs/rest!REST#clearHandlerSweeper"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 417,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearHandlerSweeper"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#clearHashSweeper:member(1)",
              "docComment": "/**\n * Stops the hash sweeping interval\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "clearHashSweeper",
                  "canonicalReference": "@discordjs/rest!REST#clearHashSweeper"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 410,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "clearHashSweeper"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#delete:member(1)",
              "docComment": "/**\n * Runs a delete request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "delete",
                  "canonicalReference": "@discordjs/rest!REST#delete"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "fullRoute",
                  "canonicalReference": "@discordjs/rest!~fullRoute"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestData",
                  "canonicalReference": "@discordjs/rest!RequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 171,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullRoute",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "delete"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#get:member(1)",
              "docComment": "/**\n * Runs a get request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "get",
                  "canonicalReference": "@discordjs/rest!REST#get"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "fullRoute",
                  "canonicalReference": "@discordjs/rest!~fullRoute"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestData",
                  "canonicalReference": "@discordjs/rest!RequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 161,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullRoute",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "get"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#globalDelay:member",
              "docComment": "/**\n * The promise used to wait out the global rate limit\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "globalDelay",
                  "canonicalReference": "@discordjs/rest!REST#globalDelay"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": "> | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 51,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "globalDelay",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#globalRemaining:member",
              "docComment": "/**\n * The number of requests remaining in the global bucket\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "globalRemaining",
                  "canonicalReference": "@discordjs/rest!REST#globalRemaining"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 46,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "globalRemaining",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#globalReset:member",
              "docComment": "/**\n * The timestamp at which the global bucket resets\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "globalReset",
                  "canonicalReference": "@discordjs/rest!REST#globalReset"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 56,
              "fileColumn": 9,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "globalReset",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#handlers:member",
              "docComment": "/**\n * Request handlers created from the bucket hash and the major parameters\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "handlers",
                  "canonicalReference": "@discordjs/rest!REST#handlers"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IHandler",
                  "canonicalReference": "@discordjs/rest!~IHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 66,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handlers",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#hashes:member",
              "docComment": "/**\n * API bucket hashes that are cached from provided routes\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "hashes",
                  "canonicalReference": "@discordjs/rest!REST#hashes"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "HashData",
                  "canonicalReference": "@discordjs/rest!HashData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 61,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hashes",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/rest!REST#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!REST#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RESTOptions",
                  "canonicalReference": "@discordjs/rest!RESTOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 74,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#patch:member(1)",
              "docComment": "/**\n * Runs a patch request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "patch",
                  "canonicalReference": "@discordjs/rest!REST#patch"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "fullRoute",
                  "canonicalReference": "@discordjs/rest!~fullRoute"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestData",
                  "canonicalReference": "@discordjs/rest!RequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 201,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullRoute",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "patch"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#post:member(1)",
              "docComment": "/**\n * Runs a post request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "post",
                  "canonicalReference": "@discordjs/rest!REST#post"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "fullRoute",
                  "canonicalReference": "@discordjs/rest!~fullRoute"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestData",
                  "canonicalReference": "@discordjs/rest!RequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 181,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullRoute",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "post"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#put:member(1)",
              "docComment": "/**\n * Runs a put request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "put",
                  "canonicalReference": "@discordjs/rest!REST#put"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "fullRoute",
                  "canonicalReference": "@discordjs/rest!~fullRoute"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RouteLike",
                  "canonicalReference": "@discordjs/rest!RouteLike:type"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "RequestData",
                  "canonicalReference": "@discordjs/rest!RequestData:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 191,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "fullRoute",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "put"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#queueRequest:member(1)",
              "docComment": "/**\n * Queues a request to be sent\n *\n * @param request - All the information needed to make a request\n *\n * @returns The response from the api request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "queueRequest",
                  "canonicalReference": "@discordjs/rest!REST#queueRequest"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@discordjs/rest!~request"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InternalRequest",
                  "canonicalReference": "@discordjs/rest!InternalRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponseLike",
                  "canonicalReference": "@discordjs/rest!ResponseLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 241,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "request",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "queueRequest"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#request:member(1)",
              "docComment": "/**\n * Runs a request from the api\n *\n * @param options - Request options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "request",
                  "canonicalReference": "@discordjs/rest!REST#request"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/rest!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "InternalRequest",
                  "canonicalReference": "@discordjs/rest!InternalRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "unknown"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 210,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "request"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#setAgent:member(1)",
              "docComment": "/**\n * Sets the default agent to use for requests performed by this manager\n *\n * @param agent - The agent to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setAgent",
                  "canonicalReference": "@discordjs/rest!REST#setAgent"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "agent",
                  "canonicalReference": "@discordjs/rest!~agent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Dispatcher",
                  "canonicalReference": "undici!Dispatcher:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 220,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "agent",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setAgent"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/rest!REST#setToken:member(1)",
              "docComment": "/**\n * Sets the authorization token that should be used for requests\n *\n * @param token - The authorization token to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "setToken",
                  "canonicalReference": "@discordjs/rest!REST#setToken"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "token",
                  "canonicalReference": "@discordjs/rest!~token"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "this"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 230,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "token",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "setToken"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/rest!RESTEvents:enum",
          "docComment": "/**\n * The events that the REST manager emits\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "RESTEvents",
              "canonicalReference": "@discordjs/rest!RESTEvents:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 39,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RESTEvents",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.Debug:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Debug",
                  "canonicalReference": "@discordjs/rest!RESTEvents.Debug:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"restDebug\""
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Debug"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.HandlerSweep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "HandlerSweep",
                  "canonicalReference": "@discordjs/rest!RESTEvents.HandlerSweep:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"handlerSweep\""
                }
              ],
              "fileLine": 41,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "HandlerSweep"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.HashSweep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "HashSweep",
                  "canonicalReference": "@discordjs/rest!RESTEvents.HashSweep:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"hashSweep\""
                }
              ],
              "fileLine": 42,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "HashSweep"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.InvalidRequestWarning:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "InvalidRequestWarning",
                  "canonicalReference": "@discordjs/rest!RESTEvents.InvalidRequestWarning:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"invalidRequestWarning\""
                }
              ],
              "fileLine": 43,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "InvalidRequestWarning"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.RateLimited:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "RateLimited",
                  "canonicalReference": "@discordjs/rest!RESTEvents.RateLimited:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"rateLimited\""
                }
              ],
              "fileLine": 44,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "RateLimited"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/rest!RESTEvents.Response:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Response",
                  "canonicalReference": "@discordjs/rest!RESTEvents.Response:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"response\""
                }
              ],
              "fileLine": 45,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Response"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RestEvents:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RestEvents",
              "canonicalReference": "@discordjs/rest!RestEvents:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 7,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RestEvents",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#handlerSweep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "handlerSweep",
                  "canonicalReference": "@discordjs/rest!RestEvents#handlerSweep"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[sweptHandlers: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "IHandler",
                  "canonicalReference": "@discordjs/rest!~IHandler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 8,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handlerSweep",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#hashSweep:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hashSweep",
                  "canonicalReference": "@discordjs/rest!RestEvents#hashSweep"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[sweptHashes: "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "HashData",
                  "canonicalReference": "@discordjs/rest!HashData:interface"
                },
                {
                  "kind": "Content",
                  "text": ">]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 9,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hashSweep",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 9
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#invalidRequestWarning:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "invalidRequestWarning",
                  "canonicalReference": "@discordjs/rest!RestEvents#invalidRequestWarning"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[invalidRequestInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "InvalidRequestWarningData",
                  "canonicalReference": "@discordjs/rest!InvalidRequestWarningData:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 10,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "invalidRequestWarning",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#rateLimited:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "rateLimited",
                  "canonicalReference": "@discordjs/rest!RestEvents#rateLimited"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[rateLimitInfo: "
                },
                {
                  "kind": "Reference",
                  "text": "RateLimitData",
                  "canonicalReference": "@discordjs/rest!RateLimitData:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rateLimited",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#response:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "response",
                  "canonicalReference": "@discordjs/rest!RestEvents#response"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[request: "
                },
                {
                  "kind": "Reference",
                  "text": "APIRequest",
                  "canonicalReference": "@discordjs/rest!APIRequest:interface"
                },
                {
                  "kind": "Content",
                  "text": ", response: "
                },
                {
                  "kind": "Reference",
                  "text": "ResponseLike",
                  "canonicalReference": "@discordjs/rest!ResponseLike:interface"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 12,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "response",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RestEvents#restDebug:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "restDebug",
                  "canonicalReference": "@discordjs/rest!RestEvents#restDebug"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "[info: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 13,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "restDebug",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!RestEventsMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RestEventsMap",
              "canonicalReference": "@discordjs/rest!RestEventsMap:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{  ["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": " in keyof "
            },
            {
              "kind": "Reference",
              "text": "RestEvents",
              "canonicalReference": "@discordjs/rest!RestEvents:interface"
            },
            {
              "kind": "Content",
              "text": "]: "
            },
            {
              "kind": "Reference",
              "text": "RestEvents",
              "canonicalReference": "@discordjs/rest!RestEvents:interface"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "];}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 16,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RestEventsMap",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 12
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/rest!RESTOptions:interface",
          "docComment": "/**\n * Options to be passed when creating the REST instance\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RESTOptions",
              "canonicalReference": "@discordjs/rest!RESTOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 23,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RESTOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#agent:member",
              "docComment": "/**\n * The agent to set globally\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "agent",
                  "canonicalReference": "@discordjs/rest!RESTOptions#agent"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Dispatcher",
                  "canonicalReference": "undici!Dispatcher:class"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "agent",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#api:member",
              "docComment": "/**\n * The base api path, without version\n *\n * @defaultValue\n *\n * `'https://discord.com/api'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "api",
                  "canonicalReference": "@discordjs/rest!RESTOptions#api"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 33,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "api",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#authPrefix:member",
              "docComment": "/**\n * The authorization prefix to use for requests, useful if you want to use bearer tokens\n *\n * @defaultValue\n *\n * `'Bot'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "authPrefix",
                  "canonicalReference": "@discordjs/rest!RESTOptions#authPrefix"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Content",
                  "text": "'Bearer' | 'Bot'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "authPrefix",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#cdn:member",
              "docComment": "/**\n * The cdn path\n *\n * @defaultValue\n *\n * `'https://cdn.discordapp.com'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "cdn",
                  "canonicalReference": "@discordjs/rest!RESTOptions#cdn"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 46,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "cdn",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#globalRequestsPerSecond:member",
              "docComment": "/**\n * How many requests to allow sending per second (Infinity for unlimited, 50 for the standard global limit used by Discord)\n *\n * @defaultValue\n *\n * `50`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "globalRequestsPerSecond",
                  "canonicalReference": "@discordjs/rest!RESTOptions#globalRequestsPerSecond"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "globalRequestsPerSecond",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#handlerSweepInterval:member",
              "docComment": "/**\n * The amount of time in milliseconds that passes between each hash sweep. (defaults to 1h)\n *\n * @defaultValue\n *\n * `3_600_000`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "handlerSweepInterval",
                  "canonicalReference": "@discordjs/rest!RESTOptions#handlerSweepInterval"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 58,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handlerSweepInterval",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#hashLifetime:member",
              "docComment": "/**\n * The maximum amount of time a hash can exist in milliseconds without being hit with a request (defaults to 24h)\n *\n * @defaultValue\n *\n * `86_400_000`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hashLifetime",
                  "canonicalReference": "@discordjs/rest!RESTOptions#hashLifetime"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 64,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hashLifetime",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#hashSweepInterval:member",
              "docComment": "/**\n * The amount of time in milliseconds that passes between each hash sweep. (defaults to 4h)\n *\n * @defaultValue\n *\n * `14_400_000`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "hashSweepInterval",
                  "canonicalReference": "@discordjs/rest!RESTOptions#hashSweepInterval"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 70,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "hashSweepInterval",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#headers:member",
              "docComment": "/**\n * Additional headers to send for all API requests\n *\n * @defaultValue\n *\n * `{}`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "headers",
                  "canonicalReference": "@discordjs/rest!RESTOptions#headers"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Record",
                  "canonicalReference": "!Record:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 76,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "headers",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 8
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#invalidRequestWarningInterval:member",
              "docComment": "/**\n * The number of invalid REST requests (those that return 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings). That is, if set to 500, warnings will be emitted at invalid request number 500, 1000, 1500, and so on.\n *\n * @defaultValue\n *\n * `0`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "invalidRequestWarningInterval",
                  "canonicalReference": "@discordjs/rest!RESTOptions#invalidRequestWarningInterval"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 83,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "invalidRequestWarningInterval",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#makeRequest:member(1)",
              "docComment": "/**\n * The method called to perform the actual HTTP request given a url and web `fetch` options For example, to use global fetch, simply provide `makeRequest: fetch`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "makeRequest",
                  "canonicalReference": "@discordjs/rest!RESTOptions#makeRequest"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "url",
                  "canonicalReference": "@discordjs/rest!~url"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "init",
                  "canonicalReference": "@discordjs/rest!~init"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RequestInit",
                  "canonicalReference": "undici!RequestInit:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "ResponseLike",
                  "canonicalReference": "@discordjs/rest!ResponseLike:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 88,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "url",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "init",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "makeRequest"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#offset:member",
              "docComment": "/**\n * The extra offset to add to rate limits in milliseconds\n *\n * @defaultValue\n *\n * `50`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "offset",
                  "canonicalReference": "@discordjs/rest!RESTOptions#offset"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 94,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "offset",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#rejectOnRateLimit:member",
              "docComment": "/**\n * Determines how rate limiting and pre-emptive throttling should be handled. When an array of strings, each element is treated as a prefix for the request route (e.g. `/channels` to match any route starting with `/channels` such as `/channels/:id/messages`) for which to throw {@link RateLimitError}s. All other request routes will be queued normally\n *\n * @defaultValue\n *\n * `null`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "rejectOnRateLimit",
                  "canonicalReference": "@discordjs/rest!RESTOptions#rejectOnRateLimit"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "RateLimitQueueFilter",
                  "canonicalReference": "@discordjs/rest!RateLimitQueueFilter:type"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 103,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rejectOnRateLimit",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#retries:member",
              "docComment": "/**\n * The number of retries for errors with the 500 code, or errors that timeout\n *\n * @defaultValue\n *\n * `3`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retries",
                  "canonicalReference": "@discordjs/rest!RESTOptions#retries"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 110,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "retries",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#timeout:member",
              "docComment": "/**\n * The time to wait in milliseconds before a request is aborted\n *\n * @defaultValue\n *\n * `15_000`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "timeout",
                  "canonicalReference": "@discordjs/rest!RESTOptions#timeout"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 116,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "timeout",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#userAgentAppendix:member",
              "docComment": "/**\n * Extra information to add to the user agent\n *\n * @defaultValue\n *\n * DefaultUserAgentAppendix\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "userAgentAppendix",
                  "canonicalReference": "@discordjs/rest!RESTOptions#userAgentAppendix"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 122,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "userAgentAppendix",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/rest!RESTOptions#version:member",
              "docComment": "/**\n * The version of the API to use\n *\n * @defaultValue\n *\n * `'10'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "version",
                  "canonicalReference": "@discordjs/rest!RESTOptions#version"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 128,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!RouteLike:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "RouteLike",
              "canonicalReference": "@discordjs/rest!RouteLike:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "`/${"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "}`"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/types.ts",
          "fileLine": 326,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RouteLike",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/rest!StickerExtension:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "StickerExtension",
              "canonicalReference": "@discordjs/rest!StickerExtension:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "typeof"
            },
            {
              "kind": "Content",
              "text": " "
            },
            {
              "kind": "Reference",
              "text": "ALLOWED_STICKER_EXTENSIONS",
              "canonicalReference": "@discordjs/rest!ALLOWED_STICKER_EXTENSIONS:var"
            },
            {
              "kind": "Content",
              "text": ")["
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": "]"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/lib/utils/constants.ts",
          "fileLine": 53,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "StickerExtension",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 10
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/rest!version:var",
          "docComment": "/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/rest/#readme | @discordjs/rest} version that you are currently using.\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "version",
              "canonicalReference": "@discordjs/rest!version"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            }
          ],
          "fileUrlPath": "src/shared.ts",
          "fileLine": 15,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        }
      ]
    }
  ]
}
