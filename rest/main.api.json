{"meta":{"tpk":"@discordjs/api-extractor","tv":"7.38.1","v":1013,"ov":1013,"ts":{"$schema":"https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json","noStandardTags":true,"tagDefinitions":[{"tagName":"@alpha","syntaxKind":"modifier"},{"tagName":"@beta","syntaxKind":"modifier"},{"tagName":"@defaultValue","syntaxKind":"block"},{"tagName":"@decorator","syntaxKind":"block","allowMultiple":true},{"tagName":"@deprecated","syntaxKind":"block"},{"tagName":"@eventProperty","syntaxKind":"modifier"},{"tagName":"@example","syntaxKind":"block","allowMultiple":true},{"tagName":"@experimental","syntaxKind":"modifier"},{"tagName":"@inheritDoc","syntaxKind":"inline"},{"tagName":"@internal","syntaxKind":"modifier"},{"tagName":"@label","syntaxKind":"inline"},{"tagName":"@link","syntaxKind":"inline","allowMultiple":true},{"tagName":"@override","syntaxKind":"modifier"},{"tagName":"@packageDocumentation","syntaxKind":"modifier"},{"tagName":"@param","syntaxKind":"block","allowMultiple":true},{"tagName":"@privateRemarks","syntaxKind":"block"},{"tagName":"@public","syntaxKind":"modifier"},{"tagName":"@readonly","syntaxKind":"modifier"},{"tagName":"@remarks","syntaxKind":"block"},{"tagName":"@returns","syntaxKind":"block"},{"tagName":"@sealed","syntaxKind":"modifier"},{"tagName":"@see","syntaxKind":"block"},{"tagName":"@throws","syntaxKind":"block","allowMultiple":true},{"tagName":"@typeParam","syntaxKind":"block","allowMultiple":true},{"tagName":"@virtual","syntaxKind":"modifier"},{"tagName":"@betaDocumentation","syntaxKind":"modifier"},{"tagName":"@internalRemarks","syntaxKind":"block"},{"tagName":"@preapproved","syntaxKind":"modifier"},{"tagName":"@mixes","syntaxKind":"block"}],"supportForTags":{"@alpha":true,"@beta":true,"@defaultValue":true,"@decorator":true,"@deprecated":true,"@eventProperty":true,"@example":true,"@experimental":true,"@inheritDoc":true,"@internal":true,"@label":true,"@link":true,"@override":true,"@packageDocumentation":true,"@param":true,"@privateRemarks":true,"@public":true,"@readonly":true,"@remarks":true,"@returns":true,"@sealed":true,"@see":true,"@throws":true,"@typeParam":true,"@virtual":true,"@betaDocumentation":true,"@internalRemarks":true,"@preapproved":true},"reportUnsupportedHtmlElements":false}},"pdir":"https://github.com/discordjs/discord.js/tree/main/packages/rest","dp":{"@discordjs/collection":"2.1.1","@discordjs/util":"1.1.1"},"k":"Package","c":"@discordjs/rest!","d":"","n":"@discordjs/rest","pmo":false,"ms":[{"k":"EntryPoint","c":"@discordjs/rest!","n":"","pmo":false,"ms":[{"k":"Variable","c":"@discordjs/rest!ALLOWED_EXTENSIONS:var","d":"","ex":[{"k":"Reference","t":"ALLOWED_EXTENSIONS","c":"@discordjs/rest!ALLOWED_EXTENSIONS"},{"k":"Content","t":": "},{"k":"Content","t":"readonly [\"webp\", \"png\", \"jpg\", \"jpeg\", \"gif\"]"}],"pat":"src/lib/utils/constants.ts","l":49,"co":14,"ro":true,"r":"Public","n":"ALLOWED_EXTENSIONS","vtr":{"st":2,"en":3}},{"k":"Variable","c":"@discordjs/rest!ALLOWED_SIZES:var","d":"","ex":[{"k":"Reference","t":"ALLOWED_SIZES","c":"@discordjs/rest!ALLOWED_SIZES"},{"k":"Content","t":": "},{"k":"Content","t":"readonly [16, 32, 64, 128, 256, 512, 1024, 2048, 4096]"}],"pat":"src/lib/utils/constants.ts","l":51,"co":14,"ro":true,"r":"Public","n":"ALLOWED_SIZES","vtr":{"st":2,"en":3}},{"k":"Variable","c":"@discordjs/rest!ALLOWED_STICKER_EXTENSIONS:var","d":"","ex":[{"k":"Reference","t":"ALLOWED_STICKER_EXTENSIONS","c":"@discordjs/rest!ALLOWED_STICKER_EXTENSIONS"},{"k":"Content","t":": "},{"k":"Content","t":"readonly [\"png\", \"json\", \"gif\"]"}],"pat":"src/lib/utils/constants.ts","l":50,"co":14,"ro":true,"r":"Public","n":"ALLOWED_STICKER_EXTENSIONS","vtr":{"st":2,"en":3}},{"k":"Interface","c":"@discordjs/rest!APIRequest:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"APIRequest","c":"@discordjs/rest!APIRequest:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":205,"co":1,"r":"Public","n":"APIRequest","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#data:member","d":"/**\n * The data that was used to form the body of this request\n */\n","ex":[{"k":"Reference","t":"data","c":"@discordjs/rest!APIRequest#data"},{"k":"Content","t":": "},{"k":"Reference","t":"HandlerRequestData","c":"@discordjs/rest!HandlerRequestData:type"},{"k":"Content","t":";"}],"l":209,"co":2,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#method:member","d":"/**\n * The HTTP method used in this request\n */\n","ex":[{"k":"Reference","t":"method","c":"@discordjs/rest!APIRequest#method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":213,"co":2,"ro":false,"op":false,"r":"Public","n":"method","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#options:member","d":"/**\n * Additional HTTP options for this request\n */\n","ex":[{"k":"Reference","t":"options","c":"@discordjs/rest!APIRequest#options"},{"k":"Content","t":": "},{"k":"Reference","t":"RequestInit","c":"undici!RequestInit:interface"},{"k":"Content","t":";"}],"l":217,"co":2,"ro":false,"op":false,"r":"Public","n":"options","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#path:member","d":"/**\n * The full path used to make the request\n */\n","ex":[{"k":"Reference","t":"path","c":"@discordjs/rest!APIRequest#path"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":";"}],"l":221,"co":2,"ro":false,"op":false,"r":"Public","n":"path","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#retries:member","d":"/**\n * The number of times this request has been attempted\n */\n","ex":[{"k":"Reference","t":"retries","c":"@discordjs/rest!APIRequest#retries"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":225,"co":2,"ro":false,"op":false,"r":"Public","n":"retries","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!APIRequest#route:member","d":"/**\n * The API route identifying the ratelimit for this request\n */\n","ex":[{"k":"Reference","t":"route","c":"@discordjs/rest!APIRequest#route"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":229,"co":2,"ro":false,"op":false,"r":"Public","n":"route","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!BaseImageURLOptions:interface","d":"/**\n * The options used for image URLs\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":" "}],"pat":"src/lib/CDN.ts","l":18,"co":1,"r":"Public","n":"BaseImageURLOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!BaseImageURLOptions#extension:member","d":"/**\n * The extension to use for the image URL\n *\n * @defaultValue\n *\n * `'webp'`\n */\n","ex":[{"k":"Reference","t":"extension","c":"@discordjs/rest!BaseImageURLOptions#extension"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageExtension","c":"@discordjs/rest!ImageExtension:type"},{"k":"Content","t":";"}],"l":24,"co":2,"ro":false,"op":true,"r":"Public","n":"extension","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!BaseImageURLOptions#size:member","d":"/**\n * The size specified in the image URL\n */\n","ex":[{"k":"Reference","t":"size","c":"@discordjs/rest!BaseImageURLOptions#size"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageSize","c":"@discordjs/rest!ImageSize:type"},{"k":"Content","t":";"}],"l":28,"co":2,"ro":false,"op":true,"r":"Public","n":"size","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Variable","c":"@discordjs/rest!BurstHandlerMajorIdKey:var","d":"","ex":[{"k":"Reference","t":"BurstHandlerMajorIdKey","c":"@discordjs/rest!BurstHandlerMajorIdKey"},{"k":"Content","t":" = "},{"k":"Content","t":"\"burst\""}],"pat":"src/lib/utils/constants.ts","l":62,"co":14,"itr":{"st":2,"en":3},"ro":true,"r":"Public","n":"BurstHandlerMajorIdKey","vtr":{"st":0,"en":0}},{"k":"Function","c":"@discordjs/rest!calculateUserDefaultAvatarIndex:function(1)","d":"/**\n * Calculates the default avatar index for a given user id.\n *\n * @param userId - The user id to calculate the default avatar index for\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"calculateUserDefaultAvatarIndex","c":"@discordjs/rest!calculateUserDefaultAvatarIndex"},{"k":"Content","t":"("},{"k":"Reference","t":"userId","c":"@discordjs/rest!~userId"},{"k":"Content","t":": "},{"k":"Reference","t":"Snowflake","c":"discord-api-types!Snowflake:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/lib/utils/utils.ts","l":122,"co":1,"rtr":{"st":7,"en":8},"r":"Public","oi":1,"ps":[{"pn":"userId","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"calculateUserDefaultAvatarIndex"},{"k":"Class","c":"@discordjs/rest!CDN:class","d":"/**\n * The CDN link builder\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"CDN","c":"@discordjs/rest!CDN:class"},{"k":"Content","t":" "}],"pat":"src/lib/CDN.ts","l":70,"co":1,"r":"Public","ab":false,"n":"CDN","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/rest!CDN:constructor(1)","d":"/**\n * Constructs a new instance of the `CDN` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"cdn","c":"@discordjs/rest!~cdn"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"mediaProxy","c":"@discordjs/rest!~mediaProxy"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":");"}],"l":74,"co":3,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"cdn","ptr":{"st":3,"en":4},"op":true,"rs":false},{"pn":"mediaProxy","ptr":{"st":7,"en":8},"op":true,"rs":false}]},{"k":"Method","c":"@discordjs/rest!CDN#appAsset:member(1)","d":"/**\n * Generates an app asset URL for a client's asset.\n *\n * @param clientId - The client id that has the asset\n *\n * @param assetHash - The hash provided by Discord for this asset\n *\n * @param options - Optional options for the asset\n */\n","ex":[{"k":"Reference","t":"appAsset","c":"@discordjs/rest!CDN#appAsset"},{"k":"Content","t":"("},{"k":"Reference","t":"clientId","c":"@discordjs/rest!~clientId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"assetHash","c":"@discordjs/rest!~assetHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":83,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"clientId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"assetHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"appAsset"},{"k":"Method","c":"@discordjs/rest!CDN#appIcon:member(1)","d":"/**\n * Generates an app icon URL for a client's icon.\n *\n * @param clientId - The client id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n","ex":[{"k":"Reference","t":"appIcon","c":"@discordjs/rest!CDN#appIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"clientId","c":"@discordjs/rest!~clientId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"iconHash","c":"@discordjs/rest!~iconHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":94,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"clientId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"iconHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"appIcon"},{"k":"Method","c":"@discordjs/rest!CDN#avatar:member(1)","d":"/**\n * Generates an avatar URL, e.g. for a user or a webhook.\n *\n * @param id - The id that has the icon\n *\n * @param avatarHash - The hash provided by Discord for this avatar\n *\n * @param options - Optional options for the avatar\n */\n","ex":[{"k":"Reference","t":"avatar","c":"@discordjs/rest!CDN#avatar"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"@discordjs/rest!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"avatarHash","c":"@discordjs/rest!~avatarHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":105,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"avatarHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatar"},{"k":"Method","c":"@discordjs/rest!CDN#avatarDecoration:member(1)","d":"/**\n * Generates a user avatar decoration preset URL.\n *\n * @param asset - The avatar decoration hash\n */\n","ex":[{"k":"Reference","t":"avatarDecoration","c":"@discordjs/rest!CDN#avatarDecoration"},{"k":"Content","t":"("},{"k":"Reference","t":"asset","c":"@discordjs/rest!~asset"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":114,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"asset","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"avatarDecoration"},{"k":"Method","c":"@discordjs/rest!CDN#avatarDecoration:member(2)","d":"/**\n * Generates a user avatar decoration URL.\n *\n * @deprecated\n *\n * This overload is deprecated. Pass a hash instead.\n *\n * @param userId - The id of the user\n *\n * @param userAvatarDecoration - The hash provided by Discord for this avatar decoration\n *\n * @param options - Optional options for the avatar decoration\n */\n","ex":[{"k":"Reference","t":"avatarDecoration","c":"@discordjs/rest!CDN#avatarDecoration"},{"k":"Content","t":"("},{"k":"Reference","t":"userId","c":"@discordjs/rest!~userId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"userAvatarDecoration","c":"@discordjs/rest!~userAvatarDecoration"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":124,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"userId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"userAvatarDecoration","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"avatarDecoration"},{"k":"Method","c":"@discordjs/rest!CDN#banner:member(1)","d":"/**\n * Generates a banner URL, e.g. for a user or a guild.\n *\n * @param id - The id that has the banner splash\n *\n * @param bannerHash - The hash provided by Discord for this banner\n *\n * @param options - Optional options for the banner\n */\n","ex":[{"k":"Reference","t":"banner","c":"@discordjs/rest!CDN#banner"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"@discordjs/rest!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"bannerHash","c":"@discordjs/rest!~bannerHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":150,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"bannerHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"banner"},{"k":"Method","c":"@discordjs/rest!CDN#channelIcon:member(1)","d":"/**\n * Generates an icon URL for a channel, e.g. a group DM.\n *\n * @param channelId - The channel id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this channel\n *\n * @param options - Optional options for the icon\n */\n","ex":[{"k":"Reference","t":"channelIcon","c":"@discordjs/rest!CDN#channelIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"channelId","c":"@discordjs/rest!~channelId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"iconHash","c":"@discordjs/rest!~iconHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":161,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"channelId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"iconHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"channelIcon"},{"k":"Method","c":"@discordjs/rest!CDN#defaultAvatar:member(1)","d":"/**\n * Generates a default avatar URL\n *\n * @remarks\n *\n * To calculate the index for a user do `(userId >> 22) % 6`, or `discriminator % 5` if they're using the legacy username system.\n *\n * @param index - The default avatar index\n */\n","ex":[{"k":"Reference","t":"defaultAvatar","c":"@discordjs/rest!CDN#defaultAvatar"},{"k":"Content","t":"("},{"k":"Reference","t":"index","c":"@discordjs/rest!~index"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":173,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"index","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"defaultAvatar"},{"k":"Method","c":"@discordjs/rest!CDN#discoverySplash:member(1)","d":"/**\n * Generates a discovery splash URL for a guild's discovery splash.\n *\n * @param guildId - The guild id that has the discovery splash\n *\n * @param splashHash - The hash provided by Discord for this splash\n *\n * @param options - Optional options for the splash\n */\n","ex":[{"k":"Reference","t":"discoverySplash","c":"@discordjs/rest!CDN#discoverySplash"},{"k":"Content","t":"("},{"k":"Reference","t":"guildId","c":"@discordjs/rest!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"splashHash","c":"@discordjs/rest!~splashHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":184,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"splashHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"discoverySplash"},{"k":"Method","c":"@discordjs/rest!CDN#emoji:member(1)","d":"/**\n * Generates an emoji's URL for an emoji.\n *\n * @param emojiId - The emoji id\n *\n * @param options - Optional options for the emoji\n */\n","ex":[{"k":"Reference","t":"emoji","c":"@discordjs/rest!CDN#emoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emojiId","c":"@discordjs/rest!~emojiId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":194,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"emojiId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"emoji"},{"k":"Method","c":"@discordjs/rest!CDN#emoji:member(2)","d":"/**\n * Generates an emoji's URL for an emoji.\n *\n * @deprecated\n *\n * This overload is deprecated. Pass an object containing the extension instead.\n *\n * @param emojiId - The emoji id\n *\n * @param extension - The extension of the emoji\n */\n","ex":[{"k":"Reference","t":"emoji","c":"@discordjs/rest!CDN#emoji"},{"k":"Content","t":"("},{"k":"Reference","t":"emojiId","c":"@discordjs/rest!~emojiId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"extension","c":"@discordjs/rest!~extension"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageExtension","c":"@discordjs/rest!ImageExtension:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":204,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":2,"ps":[{"pn":"emojiId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"extension","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"emoji"},{"k":"Method","c":"@discordjs/rest!CDN#guildMemberAvatar:member(1)","d":"/**\n * Generates a guild member avatar URL.\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param avatarHash - The hash provided by Discord for this avatar\n *\n * @param options - Optional options for the avatar\n */\n","ex":[{"k":"Reference","t":"guildMemberAvatar","c":"@discordjs/rest!CDN#guildMemberAvatar"},{"k":"Content","t":"("},{"k":"Reference","t":"guildId","c":"@discordjs/rest!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"userId","c":"@discordjs/rest!~userId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"avatarHash","c":"@discordjs/rest!~avatarHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":234,"co":9,"sta":false,"rtr":{"st":21,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"userId","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"avatarHash","ptr":{"st":12,"en":13},"op":false,"rs":false},{"pn":"options","ptr":{"st":16,"en":20},"op":true,"rs":false}],"op":false,"ab":false,"n":"guildMemberAvatar"},{"k":"Method","c":"@discordjs/rest!CDN#guildMemberBanner:member(1)","d":"/**\n * Generates a guild member banner URL.\n *\n * @param guildId - The id of the guild\n *\n * @param userId - The id of the user\n *\n * @param bannerHash - The hash provided by Discord for this banner\n *\n * @param options - Optional options for the banner\n */\n","ex":[{"k":"Reference","t":"guildMemberBanner","c":"@discordjs/rest!CDN#guildMemberBanner"},{"k":"Content","t":"("},{"k":"Reference","t":"guildId","c":"@discordjs/rest!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"userId","c":"@discordjs/rest!~userId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"bannerHash","c":"@discordjs/rest!~bannerHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":251,"co":9,"sta":false,"rtr":{"st":21,"en":22},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"userId","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"bannerHash","ptr":{"st":12,"en":13},"op":false,"rs":false},{"pn":"options","ptr":{"st":16,"en":20},"op":true,"rs":false}],"op":false,"ab":false,"n":"guildMemberBanner"},{"k":"Method","c":"@discordjs/rest!CDN#guildScheduledEventCover:member(1)","d":"/**\n * Generates a cover image for a guild scheduled event.\n *\n * @param scheduledEventId - The scheduled event id\n *\n * @param coverHash - The hash provided by discord for this cover image\n *\n * @param options - Optional options for the cover image\n */\n","ex":[{"k":"Reference","t":"guildScheduledEventCover","c":"@discordjs/rest!CDN#guildScheduledEventCover"},{"k":"Content","t":"("},{"k":"Reference","t":"scheduledEventId","c":"@discordjs/rest!~scheduledEventId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"coverHash","c":"@discordjs/rest!~coverHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":338,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"scheduledEventId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"coverHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"guildScheduledEventCover"},{"k":"Method","c":"@discordjs/rest!CDN#icon:member(1)","d":"/**\n * Generates an icon URL, e.g. for a guild.\n *\n * @param id - The id that has the icon splash\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n","ex":[{"k":"Reference","t":"icon","c":"@discordjs/rest!CDN#icon"},{"k":"Content","t":"("},{"k":"Reference","t":"id","c":"@discordjs/rest!~id"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"iconHash","c":"@discordjs/rest!~iconHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":267,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"id","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"iconHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"icon"},{"k":"Method","c":"@discordjs/rest!CDN#roleIcon:member(1)","d":"/**\n * Generates a URL for the icon of a role\n *\n * @param roleId - The id of the role that has the icon\n *\n * @param roleIconHash - The hash provided by Discord for this role icon\n *\n * @param options - Optional options for the role icon\n */\n","ex":[{"k":"Reference","t":"roleIcon","c":"@discordjs/rest!CDN#roleIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"roleId","c":"@discordjs/rest!~roleId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"roleIconHash","c":"@discordjs/rest!~roleIconHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":278,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"roleId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"roleIconHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"roleIcon"},{"k":"Method","c":"@discordjs/rest!CDN#splash:member(1)","d":"/**\n * Generates a guild invite splash URL for a guild's invite splash.\n *\n * @param guildId - The guild id that has the invite splash\n *\n * @param splashHash - The hash provided by Discord for this splash\n *\n * @param options - Optional options for the splash\n */\n","ex":[{"k":"Reference","t":"splash","c":"@discordjs/rest!CDN#splash"},{"k":"Content","t":"("},{"k":"Reference","t":"guildId","c":"@discordjs/rest!~guildId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"splashHash","c":"@discordjs/rest!~splashHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":289,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"guildId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"splashHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"splash"},{"k":"Method","c":"@discordjs/rest!CDN#sticker:member(1)","d":"/**\n * Generates a sticker URL.\n *\n * @param stickerId - The sticker id\n *\n * @param extension - The extension of the sticker\n */\n","ex":[{"k":"Reference","t":"sticker","c":"@discordjs/rest!CDN#sticker"},{"k":"Content","t":"("},{"k":"Reference","t":"stickerId","c":"@discordjs/rest!~stickerId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"extension","c":"@discordjs/rest!~extension"},{"k":"Content","t":"?: "},{"k":"Reference","t":"StickerExtension","c":"@discordjs/rest!StickerExtension:type"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":302,"co":9,"sta":false,"rtr":{"st":10,"en":11},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"stickerId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"extension","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"sticker"},{"k":"Method","c":"@discordjs/rest!CDN#stickerPackBanner:member(1)","d":"/**\n * Generates a sticker pack banner URL.\n *\n * @param bannerId - The banner id\n *\n * @param options - Optional options for the banner\n */\n","ex":[{"k":"Reference","t":"stickerPackBanner","c":"@discordjs/rest!CDN#stickerPackBanner"},{"k":"Content","t":"("},{"k":"Reference","t":"bannerId","c":"@discordjs/rest!~bannerId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":316,"co":9,"sta":false,"rtr":{"st":13,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"bannerId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":12},"op":true,"rs":false}],"op":false,"ab":false,"n":"stickerPackBanner"},{"k":"Method","c":"@discordjs/rest!CDN#teamIcon:member(1)","d":"/**\n * Generates a team icon URL for a team's icon.\n *\n * @param teamId - The team id that has the icon\n *\n * @param iconHash - The hash provided by Discord for this icon\n *\n * @param options - Optional options for the icon\n */\n","ex":[{"k":"Reference","t":"teamIcon","c":"@discordjs/rest!CDN#teamIcon"},{"k":"Content","t":"("},{"k":"Reference","t":"teamId","c":"@discordjs/rest!~teamId"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"iconHash","c":"@discordjs/rest!~iconHash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":327,"co":9,"sta":false,"rtr":{"st":17,"en":18},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"teamId","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"iconHash","ptr":{"st":8,"en":9},"op":false,"rs":false},{"pn":"options","ptr":{"st":12,"en":16},"op":true,"rs":false}],"op":false,"ab":false,"n":"teamIcon"}],"itrs":[]},{"k":"Variable","c":"@discordjs/rest!DefaultRestOptions:var","d":"","ex":[{"k":"Reference","t":"DefaultRestOptions","c":"@discordjs/rest!DefaultRestOptions"},{"k":"Content","t":": "},{"k":"Content","t":"{  readonly "},{"k":"Reference","t":"agent","c":"@discordjs/rest!~__type#agent"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  readonly "},{"k":"Reference","t":"api","c":"@discordjs/rest!~__type#api"},{"k":"Content","t":": \"https://discord.com/api\";  readonly "},{"k":"Reference","t":"authPrefix","c":"@discordjs/rest!~__type#authPrefix"},{"k":"Content","t":": \"Bot\";  readonly "},{"k":"Reference","t":"cdn","c":"@discordjs/rest!~__type#cdn"},{"k":"Content","t":": \"https://cdn.discordapp.com\";  readonly "},{"k":"Reference","t":"headers","c":"@discordjs/rest!~__type#headers"},{"k":"Content","t":": {};  readonly "},{"k":"Reference","t":"invalidRequestWarningInterval","c":"@discordjs/rest!~__type#invalidRequestWarningInterval"},{"k":"Content","t":": 0;  readonly "},{"k":"Reference","t":"globalRequestsPerSecond","c":"@discordjs/rest!~__type#globalRequestsPerSecond"},{"k":"Content","t":": 50;  readonly "},{"k":"Reference","t":"offset","c":"@discordjs/rest!~__type#offset"},{"k":"Content","t":": 50;  readonly "},{"k":"Reference","t":"rejectOnRateLimit","c":"@discordjs/rest!~__type#rejectOnRateLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"null"},{"k":"Content","t":";  readonly "},{"k":"Reference","t":"retries","c":"@discordjs/rest!~__type#retries"},{"k":"Content","t":": 3;  readonly "},{"k":"Reference","t":"timeout","c":"@discordjs/rest!~__type#timeout"},{"k":"Content","t":": 15000;  readonly "},{"k":"Reference","t":"userAgentAppendix","c":"@discordjs/rest!~__type#userAgentAppendix"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";  readonly "},{"k":"Reference","t":"version","c":"@discordjs/rest!~__type#version"},{"k":"Content","t":": \"10\";  readonly "},{"k":"Reference","t":"hashSweepInterval","c":"@discordjs/rest!~__type#hashSweepInterval"},{"k":"Content","t":": 14400000;  readonly "},{"k":"Reference","t":"hashLifetime","c":"@discordjs/rest!~__type#hashLifetime"},{"k":"Content","t":": 86400000;  readonly "},{"k":"Reference","t":"handlerSweepInterval","c":"@discordjs/rest!~__type#handlerSweepInterval"},{"k":"Content","t":": 3600000;  readonly "},{"k":"Reference","t":"makeRequest","c":"@discordjs/rest!~__type#makeRequest"},{"k":"Content","t":": ("},{"k":"Reference","t":"url","c":"@discordjs/rest!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"init","c":"@discordjs/rest!~init"},{"k":"Content","t":": import(\"undici\")."},{"k":"Reference","t":"RequestInit","c":"undici!RequestInit:interface"},{"k":"Content","t":") => "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":">;  readonly "},{"k":"Reference","t":"mediaProxy","c":"@discordjs/rest!~__type#mediaProxy"},{"k":"Content","t":": \"https://media.discordapp.net\";}"}],"pat":"src/lib/utils/constants.ts","l":14,"co":14,"ro":true,"r":"Public","n":"DefaultRestOptions","vtr":{"st":2,"en":57}},{"k":"Variable","c":"@discordjs/rest!DefaultUserAgent:var","d":"","ex":[{"k":"Reference","t":"DefaultUserAgent","c":"@discordjs/rest!DefaultUserAgent"},{"k":"Content","t":": "},{"k":"Content","t":"`DiscordBot (https://discord.js.org, ${"},{"k":"Reference","t":"string"},{"k":"Content","t":"})`"}],"pat":"src/lib/utils/constants.ts","l":6,"co":14,"ro":true,"r":"Public","n":"DefaultUserAgent","vtr":{"st":2,"en":5}},{"k":"Variable","c":"@discordjs/rest!DefaultUserAgentAppendix:var","d":"/**\n * The default string to append onto the user agent.\n */\n","ex":[{"k":"Reference","t":"DefaultUserAgentAppendix","c":"@discordjs/rest!DefaultUserAgentAppendix"},{"k":"Content","t":": "},{"k":"Reference","t":"string"}],"pat":"src/lib/utils/constants.ts","l":12,"co":14,"ro":true,"r":"Public","n":"DefaultUserAgentAppendix","vtr":{"st":2,"en":3}},{"k":"Class","c":"@discordjs/rest!DiscordAPIError:class","d":"/**\n * Represents an API error returned by Discord\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"DiscordAPIError","c":"@discordjs/rest!DiscordAPIError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/DiscordAPIError.ts","l":41,"co":1,"r":"Public","ab":false,"n":"DiscordAPIError","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/rest!DiscordAPIError:constructor(1)","d":"/**\n * Constructs a new instance of the `DiscordAPIError` class\n *\n * @param rawError - The error reported by Discord\n *\n * @param code - The error code reported by Discord\n *\n * @param status - The status code of the response\n *\n * @param method - The method of the request that erred\n *\n * @param url - The url of the request that erred\n *\n * @param bodyData - The unparsed data for the request that errored\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"rawError","c":"@discordjs/rest!~rawError"},{"k":"Content","t":": "},{"k":"Reference","t":"DiscordErrorData","c":"@discordjs/rest!DiscordErrorData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"OAuthErrorData","c":"@discordjs/rest!OAuthErrorData:interface"},{"k":"Content","t":", "},{"k":"Reference","t":"code","c":"@discordjs/rest!~code"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"status","c":"@discordjs/rest!~status"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"method","c":"@discordjs/rest!~method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"url","c":"@discordjs/rest!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"bodyData","c":"@discordjs/rest!~bodyData"},{"k":"Content","t":": "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InternalRequest","c":"@discordjs/rest!InternalRequest:interface"},{"k":"Content","t":", 'body' | 'files'>"},{"k":"Content","t":");"}],"l":52,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"rawError","ptr":{"st":3,"en":6},"op":false,"rs":false},{"pn":"code","ptr":{"st":9,"en":12},"op":false,"rs":false},{"pn":"status","ptr":{"st":15,"en":16},"op":false,"rs":false},{"pn":"method","ptr":{"st":19,"en":20},"op":false,"rs":false},{"pn":"url","ptr":{"st":23,"en":24},"op":false,"rs":false},{"pn":"bodyData","ptr":{"st":27,"en":31},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#code:member","d":"","ex":[{"k":"Reference","t":"code","c":"@discordjs/rest!DiscordAPIError#code"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":54,"co":10,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":2,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#method:member","d":"","ex":[{"k":"Reference","t":"method","c":"@discordjs/rest!DiscordAPIError#method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":56,"co":10,"ro":false,"op":false,"r":"Public","n":"method","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#name:member","d":"/**\n * The name of the error\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"name","c":"@discordjs/rest!DiscordAPIError#name"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":68,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#rawError:member","d":"","ex":[{"k":"Reference","t":"rawError","c":"@discordjs/rest!DiscordAPIError#rawError"},{"k":"Content","t":": "},{"k":"Reference","t":"DiscordErrorData","c":"@discordjs/rest!DiscordErrorData:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"OAuthErrorData","c":"@discordjs/rest!OAuthErrorData:interface"},{"k":"Content","t":";"}],"l":53,"co":10,"ro":false,"op":false,"r":"Public","n":"rawError","prtr":{"st":2,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#requestBody:member","d":"","ex":[{"k":"Reference","t":"requestBody","c":"@discordjs/rest!DiscordAPIError#requestBody"},{"k":"Content","t":": "},{"k":"Reference","t":"RequestBody","c":"@discordjs/rest!RequestBody:interface"},{"k":"Content","t":";"}],"l":42,"co":9,"ro":false,"op":false,"r":"Public","n":"requestBody","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#status:member","d":"","ex":[{"k":"Reference","t":"status","c":"@discordjs/rest!DiscordAPIError#status"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":55,"co":10,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!DiscordAPIError#url:member","d":"","ex":[{"k":"Reference","t":"url","c":"@discordjs/rest!DiscordAPIError#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":57,"co":10,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"Interface","c":"@discordjs/rest!DiscordErrorData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"DiscordErrorData","c":"@discordjs/rest!DiscordErrorData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/DiscordAPIError.ts","l":14,"co":1,"r":"Public","n":"DiscordErrorData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!DiscordErrorData#code:member","d":"","ex":[{"k":"Reference","t":"code","c":"@discordjs/rest!DiscordErrorData#code"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":15,"co":2,"ro":false,"op":false,"r":"Public","n":"code","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!DiscordErrorData#errors:member","d":"","ex":[{"k":"Reference","t":"errors","c":"@discordjs/rest!DiscordErrorData#errors"},{"k":"Content","t":"?: "},{"k":"Reference","t":"DiscordError","c":"@discordjs/rest!~DiscordError:type"},{"k":"Content","t":";"}],"l":16,"co":2,"ro":false,"op":true,"r":"Public","n":"errors","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!DiscordErrorData#message:member","d":"","ex":[{"k":"Reference","t":"message","c":"@discordjs/rest!DiscordErrorData#message"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":17,"co":2,"ro":false,"op":false,"r":"Public","n":"message","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"@discordjs/rest!GetRateLimitOffsetFunction:type","d":"/**\n * A function that determines the rate limit offset for a given request.\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"GetRateLimitOffsetFunction","c":"@discordjs/rest!GetRateLimitOffsetFunction:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"route","c":"@discordjs/rest!~route"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":") => "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"pat":"src/lib/utils/types.ts","l":203,"co":1,"r":"Public","n":"GetRateLimitOffsetFunction","ttr":{"st":3,"en":9}},{"k":"TypeAlias","c":"@discordjs/rest!HandlerRequestData:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"HandlerRequestData","c":"@discordjs/rest!HandlerRequestData:type"},{"k":"Content","t":" = "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InternalRequest","c":"@discordjs/rest!InternalRequest:interface"},{"k":"Content","t":", 'auth' | 'body' | 'files' | 'signal'>"},{"k":"Content","t":";"}],"pat":"src/lib/utils/types.ts","l":366,"co":1,"r":"Public","n":"HandlerRequestData","ttr":{"st":3,"en":7}},{"k":"Class","c":"@discordjs/rest!HTTPError:class","d":"/**\n * Represents a HTTP error\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"HTTPError","c":"@discordjs/rest!HTTPError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/HTTPError.ts","l":7,"co":1,"r":"Public","ab":false,"n":"HTTPError","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/rest!HTTPError:constructor(1)","d":"/**\n * Constructs a new instance of the `HTTPError` class\n *\n * @param status - The status code of the response\n *\n * @param statusText - The status text of the response\n *\n * @param method - The method of the request that erred\n *\n * @param url - The url of the request that erred\n *\n * @param bodyData - The unparsed data for the request that errored\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"status","c":"@discordjs/rest!~status"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":", "},{"k":"Reference","t":"statusText","c":"@discordjs/rest!~statusText"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"method","c":"@discordjs/rest!~method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"url","c":"@discordjs/rest!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"bodyData","c":"@discordjs/rest!~bodyData"},{"k":"Content","t":": "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"InternalRequest","c":"@discordjs/rest!InternalRequest:interface"},{"k":"Content","t":", 'body' | 'files'>"},{"k":"Content","t":");"}],"l":19,"co":2,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"status","ptr":{"st":3,"en":4},"op":false,"rs":false},{"pn":"statusText","ptr":{"st":7,"en":8},"op":false,"rs":false},{"pn":"method","ptr":{"st":11,"en":12},"op":false,"rs":false},{"pn":"url","ptr":{"st":15,"en":16},"op":false,"rs":false},{"pn":"bodyData","ptr":{"st":19,"en":23},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/rest!HTTPError#method:member","d":"","ex":[{"k":"Reference","t":"method","c":"@discordjs/rest!HTTPError#method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":22,"co":10,"ro":false,"op":false,"r":"Public","n":"method","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!HTTPError#name:member","d":"","ex":[{"k":"Reference","t":"name","c":"@discordjs/rest!HTTPError#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":10,"co":18,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!HTTPError#requestBody:member","d":"","ex":[{"k":"Reference","t":"requestBody","c":"@discordjs/rest!HTTPError#requestBody"},{"k":"Content","t":": "},{"k":"Reference","t":"RequestBody","c":"@discordjs/rest!RequestBody:interface"},{"k":"Content","t":";"}],"l":8,"co":9,"ro":false,"op":false,"r":"Public","n":"requestBody","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!HTTPError#status:member","d":"","ex":[{"k":"Reference","t":"status","c":"@discordjs/rest!HTTPError#status"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":20,"co":10,"ro":false,"op":false,"r":"Public","n":"status","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!HTTPError#url:member","d":"","ex":[{"k":"Reference","t":"url","c":"@discordjs/rest!HTTPError#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":23,"co":10,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[]},{"k":"TypeAlias","c":"@discordjs/rest!ImageExtension:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ImageExtension","c":"@discordjs/rest!ImageExtension:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ALLOWED_EXTENSIONS","c":"@discordjs/rest!ALLOWED_EXTENSIONS:var"},{"k":"Content","t":")["},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/lib/utils/constants.ts","l":53,"co":1,"r":"Public","n":"ImageExtension","ttr":{"st":3,"en":10}},{"k":"TypeAlias","c":"@discordjs/rest!ImageSize:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"ImageSize","c":"@discordjs/rest!ImageSize:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ALLOWED_SIZES","c":"@discordjs/rest!ALLOWED_SIZES:var"},{"k":"Content","t":")["},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/lib/utils/constants.ts","l":55,"co":1,"r":"Public","n":"ImageSize","ttr":{"st":3,"en":10}},{"k":"Interface","c":"@discordjs/rest!ImageURLOptions:interface","d":"/**\n * The options used for image URLs with animated content\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ImageURLOptions","c":"@discordjs/rest!ImageURLOptions:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"BaseImageURLOptions","c":"@discordjs/rest!BaseImageURLOptions:interface"},{"k":"Content","t":" "}],"pat":"src/lib/CDN.ts","l":34,"co":1,"r":"Public","n":"ImageURLOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!ImageURLOptions#forceStatic:member","d":"/**\n * Whether or not to prefer the static version of an image asset.\n */\n","ex":[{"k":"Reference","t":"forceStatic","c":"@discordjs/rest!ImageURLOptions#forceStatic"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":38,"co":2,"ro":false,"op":true,"r":"Public","n":"forceStatic","prtr":{"st":2,"en":3}}],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"@discordjs/rest!InvalidRequestWarningData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"InvalidRequestWarningData","c":"@discordjs/rest!InvalidRequestWarningData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":237,"co":1,"r":"Public","n":"InvalidRequestWarningData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!InvalidRequestWarningData#count:member","d":"/**\n * Number of invalid requests that have been made in the window\n */\n","ex":[{"k":"Reference","t":"count","c":"@discordjs/rest!InvalidRequestWarningData#count"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":241,"co":2,"ro":false,"op":false,"r":"Public","n":"count","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!InvalidRequestWarningData#remainingTime:member","d":"/**\n * Time in milliseconds remaining before the count resets\n */\n","ex":[{"k":"Reference","t":"remainingTime","c":"@discordjs/rest!InvalidRequestWarningData#remainingTime"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":245,"co":2,"ro":false,"op":false,"r":"Public","n":"remainingTime","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!MakeURLOptions:interface","d":"/**\n * The options to use when making a CDN URL\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"MakeURLOptions","c":"@discordjs/rest!MakeURLOptions:interface"},{"k":"Content","t":" "}],"pat":"src/lib/CDN.ts","l":44,"co":1,"r":"Public","n":"MakeURLOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!MakeURLOptions#allowedExtensions:member","d":"/**\n * The allowed extensions that can be used\n */\n","ex":[{"k":"Reference","t":"allowedExtensions","c":"@discordjs/rest!MakeURLOptions#allowedExtensions"},{"k":"Content","t":"?: "},{"k":"Content","t":"readonly "},{"k":"Reference","t":"string"},{"k":"Content","t":"[]"},{"k":"Content","t":";"}],"l":48,"co":2,"ro":false,"op":true,"r":"Public","n":"allowedExtensions","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!MakeURLOptions#base:member","d":"/**\n * The base URL.\n *\n * @defaultValue\n *\n * `DefaultRestOptions.cdn`\n */\n","ex":[{"k":"Reference","t":"base","c":"@discordjs/rest!MakeURLOptions#base"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":54,"co":2,"ro":false,"op":true,"r":"Public","n":"base","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!MakeURLOptions#extension:member","d":"/**\n * The extension to use for the image URL\n *\n * @defaultValue\n *\n * `'webp'`\n */\n","ex":[{"k":"Reference","t":"extension","c":"@discordjs/rest!MakeURLOptions#extension"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":60,"co":2,"ro":false,"op":true,"r":"Public","n":"extension","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!MakeURLOptions#size:member","d":"/**\n * The size specified in the image URL\n */\n","ex":[{"k":"Reference","t":"size","c":"@discordjs/rest!MakeURLOptions#size"},{"k":"Content","t":"?: "},{"k":"Reference","t":"ImageSize","c":"@discordjs/rest!ImageSize:type"},{"k":"Content","t":";"}],"l":64,"co":2,"ro":false,"op":true,"r":"Public","n":"size","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Function","c":"@discordjs/rest!makeURLSearchParams:function(1)","d":"/**\n * Creates and populates an URLSearchParams instance from an object, stripping out null and undefined values, while also coercing non-strings to strings.\n *\n * @param options - The options to use\n *\n * @returns A populated URLSearchParams instance\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"makeURLSearchParams","c":"@discordjs/rest!makeURLSearchParams"},{"k":"Content","t":"<"},{"k":"Reference","t":"OptionsType"},{"k":"Content","t":" extends "},{"k":"Reference","t":"object"},{"k":"Content","t":">("},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Readonly","c":"!Readonly:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"OptionsType"},{"k":"Content","t":">"},{"k":"Content","t":"): "},{"k":"Content","t":"import(\"url\")."},{"k":"Reference","t":"URLSearchParams","c":"!\"\\\"url\\\"\".URLSearchParams:class"},{"k":"Content","t":";"}],"pat":"src/lib/utils/utils.ts","l":37,"co":1,"rtr":{"st":14,"en":16},"r":"Public","oi":1,"ps":[{"pn":"options","ptr":{"st":9,"en":13},"op":true,"rs":false}],"tps":[{"tp":"OptionsType","ctr":{"st":5,"en":6},"dtr":{"st":0,"en":0}}],"n":"makeURLSearchParams"},{"k":"Interface","c":"@discordjs/rest!OAuthErrorData:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"OAuthErrorData","c":"@discordjs/rest!OAuthErrorData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/DiscordAPIError.ts","l":20,"co":1,"r":"Public","n":"OAuthErrorData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!OAuthErrorData#error_description:member","d":"","ex":[{"k":"Reference","t":"error_description","c":"@discordjs/rest!OAuthErrorData#error_description"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":22,"co":2,"ro":false,"op":true,"r":"Public","n":"error_description","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!OAuthErrorData#error:member","d":"","ex":[{"k":"Reference","t":"error","c":"@discordjs/rest!OAuthErrorData#error"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":21,"co":2,"ro":false,"op":false,"r":"Public","n":"error","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Variable","c":"@discordjs/rest!OverwrittenMimeTypes:var","d":"","ex":[{"k":"Reference","t":"OverwrittenMimeTypes","c":"@discordjs/rest!OverwrittenMimeTypes"},{"k":"Content","t":": "},{"k":"Content","t":"{  readonly 'image/apng': \"image/png\";}"}],"pat":"src/lib/utils/constants.ts","l":57,"co":14,"ro":true,"r":"Public","n":"OverwrittenMimeTypes","vtr":{"st":2,"en":3}},{"k":"Function","c":"@discordjs/rest!parseResponse:function(1)","d":"/**\n * Converts the response to usable data\n *\n * @param res - The fetch response\n */\n","ex":[{"k":"Content","t":"export declare function "},{"k":"Reference","t":"parseResponse","c":"@discordjs/rest!parseResponse"},{"k":"Content","t":"("},{"k":"Reference","t":"res","c":"@discordjs/rest!~res"},{"k":"Content","t":": "},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/lib/utils/utils.ts","l":54,"co":1,"rtr":{"st":7,"en":11},"r":"Public","oi":1,"ps":[{"pn":"res","ptr":{"st":5,"en":6},"op":false,"rs":false}],"n":"parseResponse"},{"k":"Interface","c":"@discordjs/rest!RateLimitData:interface","d":"/**\n * Data emitted on `RESTEvents.RateLimited`\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":139,"co":1,"r":"Public","n":"RateLimitData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#global:member","d":"/**\n * Whether the rate limit that was reached was the global limit\n */\n","ex":[{"k":"Reference","t":"global","c":"@discordjs/rest!RateLimitData#global"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":143,"co":2,"ro":false,"op":false,"r":"Public","n":"global","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#hash:member","d":"/**\n * The bucket hash for this request\n */\n","ex":[{"k":"Reference","t":"hash","c":"@discordjs/rest!RateLimitData#hash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":147,"co":2,"ro":false,"op":false,"r":"Public","n":"hash","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#limit:member","d":"/**\n * The amount of requests we can perform before locking requests\n */\n","ex":[{"k":"Reference","t":"limit","c":"@discordjs/rest!RateLimitData#limit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":151,"co":2,"ro":false,"op":false,"r":"Public","n":"limit","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#majorParameter:member","d":"/**\n * The major parameter of the route\n *\n * For example, in `/channels/x`, this will be `x`. If there is no major parameter (e.g: `/bot/gateway`) this will be `global`.\n */\n","ex":[{"k":"Reference","t":"majorParameter","c":"@discordjs/rest!RateLimitData#majorParameter"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":158,"co":2,"ro":false,"op":false,"r":"Public","n":"majorParameter","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#method:member","d":"/**\n * The HTTP method being performed\n */\n","ex":[{"k":"Reference","t":"method","c":"@discordjs/rest!RateLimitData#method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":162,"co":2,"ro":false,"op":false,"r":"Public","n":"method","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#retryAfter:member","d":"/**\n * The time, in milliseconds, that will need to pass before this specific request can be retried\n */\n","ex":[{"k":"Reference","t":"retryAfter","c":"@discordjs/rest!RateLimitData#retryAfter"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":166,"co":2,"ro":false,"op":false,"r":"Public","n":"retryAfter","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#route:member","d":"/**\n * The route being hit in this request\n */\n","ex":[{"k":"Reference","t":"route","c":"@discordjs/rest!RateLimitData#route"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":170,"co":2,"ro":false,"op":false,"r":"Public","n":"route","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#scope:member","d":"/**\n * The scope of the rate limit that was hit.\n *\n * This can be `user` for rate limits that are per client, `global` for rate limits that affect all clients or `shared` for rate limits that are shared per resource.\n */\n","ex":[{"k":"Reference","t":"scope","c":"@discordjs/rest!RateLimitData#scope"},{"k":"Content","t":": "},{"k":"Content","t":"'global' | 'shared' | 'user'"},{"k":"Content","t":";"}],"l":177,"co":2,"ro":false,"op":false,"r":"Public","n":"scope","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#sublimitTimeout:member","d":"/**\n * The time, in milliseconds, that will need to pass before the sublimit lock for the route resets, and requests that fall under a sublimit can be retried\n *\n * This is only present on certain sublimits, and `0` otherwise\n */\n","ex":[{"k":"Reference","t":"sublimitTimeout","c":"@discordjs/rest!RateLimitData#sublimitTimeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":184,"co":2,"ro":false,"op":false,"r":"Public","n":"sublimitTimeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#timeToReset:member","d":"/**\n * The time, in milliseconds, until the route's request-lock is reset\n */\n","ex":[{"k":"Reference","t":"timeToReset","c":"@discordjs/rest!RateLimitData#timeToReset"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":188,"co":2,"ro":false,"op":false,"r":"Public","n":"timeToReset","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RateLimitData#url:member","d":"/**\n * The full URL for this request\n */\n","ex":[{"k":"Reference","t":"url","c":"@discordjs/rest!RateLimitData#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":192,"co":2,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Class","c":"@discordjs/rest!RateLimitError:class","d":"","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"RateLimitError","c":"@discordjs/rest!RateLimitError:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Error","c":"!Error:interface"},{"k":"Content","t":" implements "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/RateLimitError.ts","l":3,"co":1,"r":"Public","ab":false,"n":"RateLimitError","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/rest!RateLimitError:constructor(1)","d":"/**\n * Constructs a new instance of the `RateLimitError` class\n */\n","ex":[{"k":"Content","t":"constructor({ "},{"k":"Reference","t":"timeToReset","c":"@discordjs/rest!~timeToReset"},{"k":"Content","t":", "},{"k":"Reference","t":"limit","c":"@discordjs/rest!~limit"},{"k":"Content","t":", "},{"k":"Reference","t":"method","c":"@discordjs/rest!~method"},{"k":"Content","t":", "},{"k":"Reference","t":"hash","c":"@discordjs/rest!~hash"},{"k":"Content","t":", "},{"k":"Reference","t":"url","c":"@discordjs/rest!~url"},{"k":"Content","t":", "},{"k":"Reference","t":"route","c":"@discordjs/rest!~route"},{"k":"Content","t":", "},{"k":"Reference","t":"majorParameter","c":"@discordjs/rest!~majorParameter"},{"k":"Content","t":", "},{"k":"Reference","t":"global","c":"@discordjs/rest!~global"},{"k":"Content","t":", "},{"k":"Reference","t":"retryAfter","c":"@discordjs/rest!~retryAfter"},{"k":"Content","t":", "},{"k":"Reference","t":"sublimitTimeout","c":"@discordjs/rest!~sublimitTimeout"},{"k":"Content","t":", "},{"k":"Reference","t":"scope","c":"@discordjs/rest!~scope"},{"k":"Content","t":", }: "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":");"}],"l":24,"co":39,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"{ timeToReset, limit, method, hash, url, route, majorParameter, global, retryAfter, sublimitTimeout, scope, }","ptr":{"st":23,"en":24},"op":false,"rs":false}]},{"k":"Property","c":"@discordjs/rest!RateLimitError#global:member","d":"","ex":[{"k":"Reference","t":"global","c":"@discordjs/rest!RateLimitError#global"},{"k":"Content","t":": "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":18,"co":9,"ro":false,"op":false,"r":"Public","n":"global","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#hash:member","d":"","ex":[{"k":"Reference","t":"hash","c":"@discordjs/rest!RateLimitError#hash"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":10,"co":9,"ro":false,"op":false,"r":"Public","n":"hash","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#limit:member","d":"","ex":[{"k":"Reference","t":"limit","c":"@discordjs/rest!RateLimitError#limit"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":6,"co":9,"ro":false,"op":false,"r":"Public","n":"limit","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#majorParameter:member","d":"","ex":[{"k":"Reference","t":"majorParameter","c":"@discordjs/rest!RateLimitError#majorParameter"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":16,"co":9,"ro":false,"op":false,"r":"Public","n":"majorParameter","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#method:member","d":"","ex":[{"k":"Reference","t":"method","c":"@discordjs/rest!RateLimitError#method"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":8,"co":9,"ro":false,"op":false,"r":"Public","n":"method","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#name:member","d":"/**\n * The name of the error\n */\n","ex":[{"k":"Content","t":"get "},{"k":"Reference","t":"name","c":"@discordjs/rest!RateLimitError#name"},{"k":"Content","t":"(): "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":56,"co":2,"ro":true,"op":false,"r":"Public","n":"name","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#retryAfter:member","d":"","ex":[{"k":"Reference","t":"retryAfter","c":"@discordjs/rest!RateLimitError#retryAfter"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":20,"co":9,"ro":false,"op":false,"r":"Public","n":"retryAfter","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#route:member","d":"","ex":[{"k":"Reference","t":"route","c":"@discordjs/rest!RateLimitError#route"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":14,"co":9,"ro":false,"op":false,"r":"Public","n":"route","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#scope:member","d":"","ex":[{"k":"Reference","t":"scope","c":"@discordjs/rest!RateLimitError#scope"},{"k":"Content","t":": "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":"['scope']"},{"k":"Content","t":";"}],"l":24,"co":9,"ro":false,"op":false,"r":"Public","n":"scope","prtr":{"st":2,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#sublimitTimeout:member","d":"","ex":[{"k":"Reference","t":"sublimitTimeout","c":"@discordjs/rest!RateLimitError#sublimitTimeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":22,"co":9,"ro":false,"op":false,"r":"Public","n":"sublimitTimeout","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#timeToReset:member","d":"","ex":[{"k":"Reference","t":"timeToReset","c":"@discordjs/rest!RateLimitError#timeToReset"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":4,"co":9,"ro":false,"op":false,"r":"Public","n":"timeToReset","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!RateLimitError#url:member","d":"","ex":[{"k":"Reference","t":"url","c":"@discordjs/rest!RateLimitError#url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":12,"co":9,"ro":false,"op":false,"r":"Public","n":"url","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false}],"etr":{"st":3,"en":4,"tps":[]},"itrs":[{"st":5,"en":6,"tps":[]}]},{"k":"TypeAlias","c":"@discordjs/rest!RateLimitQueueFilter:type","d":"/**\n * A function that determines whether the rate limit hit should throw an Error\n */\n","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RateLimitQueueFilter","c":"@discordjs/rest!RateLimitQueueFilter:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"rateLimitData","c":"@discordjs/rest!~rateLimitData"},{"k":"Content","t":": "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":") => "},{"k":"Reference","t":"Awaitable","c":"@discordjs/util!Awaitable:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"boolean"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"pat":"src/lib/utils/types.ts","l":198,"co":1,"r":"Public","n":"RateLimitQueueFilter","ttr":{"st":3,"en":12}},{"k":"Interface","c":"@discordjs/rest!RawFile:interface","d":"/**\n * Represents a file to be added to the request\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RawFile","c":"@discordjs/rest!RawFile:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":251,"co":1,"r":"Public","n":"RawFile","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RawFile#contentType:member","d":"/**\n * Content-Type of the file\n */\n","ex":[{"k":"Reference","t":"contentType","c":"@discordjs/rest!RawFile#contentType"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":255,"co":2,"ro":false,"op":true,"r":"Public","n":"contentType","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RawFile#data:member","d":"/**\n * The actual data for the file\n */\n","ex":[{"k":"Reference","t":"data","c":"@discordjs/rest!RawFile#data"},{"k":"Content","t":": "},{"k":"Reference","t":"Buffer","c":"!\"\\\"buffer\\\"\".__global.Buffer:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"Uint8Array","c":"!Uint8Array:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"boolean"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":259,"co":2,"ro":false,"op":false,"r":"Public","n":"data","prtr":{"st":2,"en":11}},{"k":"PropertySignature","c":"@discordjs/rest!RawFile#key:member","d":"/**\n * An explicit key to use for key of the formdata field for this file. When not provided, the index of the file in the files array is used in the form `files[${index}]`. If you wish to alter the placeholder snowflake, you must provide this property in the same form (`files[${placeholder}]`)\n */\n","ex":[{"k":"Reference","t":"key","c":"@discordjs/rest!RawFile#key"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":265,"co":2,"ro":false,"op":true,"r":"Public","n":"key","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RawFile#name:member","d":"/**\n * The name of the file\n */\n","ex":[{"k":"Reference","t":"name","c":"@discordjs/rest!RawFile#name"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":269,"co":2,"ro":false,"op":false,"r":"Public","n":"name","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!RequestBody:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RequestBody","c":"@discordjs/rest!RequestBody:interface"},{"k":"Content","t":" "}],"pat":"src/lib/errors/DiscordAPIError.ts","l":25,"co":1,"r":"Public","n":"RequestBody","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RequestBody#files:member","d":"","ex":[{"k":"Reference","t":"files","c":"@discordjs/rest!RequestBody#files"},{"k":"Content","t":": "},{"k":"Reference","t":"RawFile","c":"@discordjs/rest!RawFile:interface"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":false,"op":false,"r":"Public","n":"files","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RequestBody#json:member","d":"","ex":[{"k":"Reference","t":"json","c":"@discordjs/rest!RequestBody#json"},{"k":"Content","t":": "},{"k":"Reference","t":"unknown"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":27,"co":2,"ro":false,"op":false,"r":"Public","n":"json","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!RequestData:interface","d":"/**\n * Represents possible data to be given to an endpoint\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":275,"co":1,"r":"Public","n":"RequestData","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RequestData#appendToFormData:member","d":"/**\n * Whether to append JSON data to form data instead of `payload_json` when sending files\n */\n","ex":[{"k":"Reference","t":"appendToFormData","c":"@discordjs/rest!RequestData#appendToFormData"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":279,"co":2,"ro":false,"op":true,"r":"Public","n":"appendToFormData","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#auth:member","d":"/**\n * If this request needs the `Authorization` header\n *\n * @defaultValue\n *\n * `true`\n */\n","ex":[{"k":"Reference","t":"auth","c":"@discordjs/rest!RequestData#auth"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":285,"co":2,"ro":false,"op":true,"r":"Public","n":"auth","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#authPrefix:member","d":"/**\n * The authorization prefix to use for this request, useful if you use this with bearer tokens\n *\n * @defaultValue\n *\n * `'Bot'`\n */\n","ex":[{"k":"Reference","t":"authPrefix","c":"@discordjs/rest!RequestData#authPrefix"},{"k":"Content","t":"?: "},{"k":"Content","t":"'Bearer' | 'Bot'"},{"k":"Content","t":";"}],"l":291,"co":2,"ro":false,"op":true,"r":"Public","n":"authPrefix","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#body:member","d":"/**\n * The body to send to this request. If providing as BodyInit, set `passThroughBody: true`\n */\n","ex":[{"k":"Reference","t":"body","c":"@discordjs/rest!RequestData#body"},{"k":"Content","t":"?: "},{"k":"Reference","t":"BodyInit","c":"undici!BodyInit:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"unknown"},{"k":"Content","t":";"}],"l":296,"co":2,"ro":false,"op":true,"r":"Public","n":"body","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#dispatcher:member","d":"/**\n * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} to use for the request.\n */\n","ex":[{"k":"Reference","t":"dispatcher","c":"@discordjs/rest!RequestData#dispatcher"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Agent","c":"undici!Agent:class"},{"k":"Content","t":";"}],"l":300,"co":2,"ro":false,"op":true,"r":"Public","n":"dispatcher","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#files:member","d":"/**\n * Files to be attached to this request\n */\n","ex":[{"k":"Reference","t":"files","c":"@discordjs/rest!RequestData#files"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RawFile","c":"@discordjs/rest!RawFile:interface"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":304,"co":2,"ro":false,"op":true,"r":"Public","n":"files","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#headers:member","d":"/**\n * Additional headers to add to this request\n */\n","ex":[{"k":"Reference","t":"headers","c":"@discordjs/rest!RequestData#headers"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":308,"co":2,"ro":false,"op":true,"r":"Public","n":"headers","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#passThroughBody:member","d":"/**\n * Whether to pass-through the body property directly to `fetch()`. <warn>This only applies when files is NOT present</warn>\n */\n","ex":[{"k":"Reference","t":"passThroughBody","c":"@discordjs/rest!RequestData#passThroughBody"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":313,"co":2,"ro":false,"op":true,"r":"Public","n":"passThroughBody","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#query:member","d":"/**\n * Query string parameters to append to the called endpoint\n */\n","ex":[{"k":"Reference","t":"query","c":"@discordjs/rest!RequestData#query"},{"k":"Content","t":"?: "},{"k":"Reference","t":"URLSearchParams","c":"!\"\\\"url\\\"\".__global.URLSearchParams:interface"},{"k":"Content","t":";"}],"l":317,"co":2,"ro":false,"op":true,"r":"Public","n":"query","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#reason:member","d":"/**\n * Reason to show in the audit logs\n */\n","ex":[{"k":"Reference","t":"reason","c":"@discordjs/rest!RequestData#reason"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":321,"co":2,"ro":false,"op":true,"r":"Public","n":"reason","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#signal:member","d":"/**\n * The signal to abort the queue entry or the REST call, where applicable\n */\n","ex":[{"k":"Reference","t":"signal","c":"@discordjs/rest!RequestData#signal"},{"k":"Content","t":"?: "},{"k":"Reference","t":"AbortSignal","c":"!AbortSignal:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"undefined"},{"k":"Content","t":";"}],"l":325,"co":2,"ro":false,"op":true,"r":"Public","n":"signal","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RequestData#versioned:member","d":"/**\n * If this request should be versioned\n *\n * @defaultValue\n *\n * `true`\n */\n","ex":[{"k":"Reference","t":"versioned","c":"@discordjs/rest!RequestData#versioned"},{"k":"Content","t":"?: "},{"k":"Reference","t":"boolean"},{"k":"Content","t":";"}],"l":331,"co":2,"ro":false,"op":true,"r":"Public","n":"versioned","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!RequestHeaders:interface","d":"/**\n * Possible headers for an API call\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RequestHeaders","c":"@discordjs/rest!RequestHeaders:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":337,"co":1,"r":"Public","n":"RequestHeaders","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RequestHeaders#\"User-Agent\":member","d":"","ex":[{"k":"Content","t":"'User-Agent': "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":339,"co":2,"ro":false,"op":false,"r":"Public","n":"\"User-Agent\"","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"@discordjs/rest!RequestHeaders#\"X-Audit-Log-Reason\":member","d":"","ex":[{"k":"Content","t":"'X-Audit-Log-Reason'?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":340,"co":2,"ro":false,"op":true,"r":"Public","n":"\"X-Audit-Log-Reason\"","prtr":{"st":1,"en":2}},{"k":"PropertySignature","c":"@discordjs/rest!RequestHeaders#Authorization:member","d":"","ex":[{"k":"Reference","t":"Authorization","c":"@discordjs/rest!RequestHeaders#Authorization"},{"k":"Content","t":"?: "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":338,"co":2,"ro":false,"op":true,"r":"Public","n":"Authorization","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"Enum","c":"@discordjs/rest!RequestMethod:enum","d":"/**\n * Possible API methods to be used when doing requests\n */\n","ex":[{"k":"Content","t":"export declare enum "},{"k":"Reference","t":"RequestMethod","c":"@discordjs/rest!RequestMethod:enum"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":346,"co":1,"r":"Public","n":"RequestMethod","pmo":false,"ms":[{"k":"EnumMember","c":"@discordjs/rest!RequestMethod.Delete:member","d":"","ex":[{"k":"Reference","t":"Delete","c":"@discordjs/rest!RequestMethod.Delete:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"DELETE\""}],"l":347,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Delete"},{"k":"EnumMember","c":"@discordjs/rest!RequestMethod.Get:member","d":"","ex":[{"k":"Reference","t":"Get","c":"@discordjs/rest!RequestMethod.Get:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"GET\""}],"l":348,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Get"},{"k":"EnumMember","c":"@discordjs/rest!RequestMethod.Patch:member","d":"","ex":[{"k":"Reference","t":"Patch","c":"@discordjs/rest!RequestMethod.Patch:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"PATCH\""}],"l":349,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Patch"},{"k":"EnumMember","c":"@discordjs/rest!RequestMethod.Post:member","d":"","ex":[{"k":"Reference","t":"Post","c":"@discordjs/rest!RequestMethod.Post:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"POST\""}],"l":350,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Post"},{"k":"EnumMember","c":"@discordjs/rest!RequestMethod.Put:member","d":"","ex":[{"k":"Reference","t":"Put","c":"@discordjs/rest!RequestMethod.Put:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"PUT\""}],"l":351,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Put"}]},{"k":"Interface","c":"@discordjs/rest!ResponseLike:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"Pick","c":"!Pick:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"Response","c":"undici!Response:class"},{"k":"Content","t":", 'arrayBuffer' | 'bodyUsed' | 'headers' | 'json' | 'ok' | 'status' | 'statusText' | 'text'>"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":232,"co":1,"r":"Public","n":"ResponseLike","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!ResponseLike#body:member","d":"","ex":[{"k":"Reference","t":"body","c":"@discordjs/rest!ResponseLike#body"},{"k":"Content","t":": "},{"k":"Reference","t":"Readable","c":"!\"\\\"stream\\\"\".internal.Readable:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"ReadableStream","c":"!\"\\\"stream/web\\\"\".ReadableStream:interface"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":234,"co":2,"ro":false,"op":false,"r":"Public","n":"body","prtr":{"st":2,"en":7}}],"etrs":[{"st":3,"en":7,"tps":[{"st":5,"en":6},{"st":0,"en":0}]}]},{"k":"Class","c":"@discordjs/rest!REST:class","d":"/**\n * Represents the class that manages handlers for endpoints\n */\n","ex":[{"k":"Content","t":"export declare class "},{"k":"Reference","t":"REST","c":"@discordjs/rest!REST:class"},{"k":"Content","t":" extends "},{"k":"Reference","t":"AsyncEventEmitter","c":"@vladfrangu/async_event_emitter!AsyncEventEmitter:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"RestEvents","c":"@discordjs/rest!RestEvents:interface"},{"k":"Content","t":">"},{"k":"Content","t":" "}],"pat":"src/lib/REST.ts","l":34,"co":1,"r":"Public","ab":false,"n":"REST","pmo":false,"ms":[{"k":"Constructor","c":"@discordjs/rest!REST:constructor(1)","d":"/**\n * Constructs a new instance of the `REST` class\n */\n","ex":[{"k":"Content","t":"constructor("},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"Partial","c":"!Partial:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"RESTOptions","c":"@discordjs/rest!RESTOptions:interface"},{"k":"Content","t":">"},{"k":"Content","t":");"}],"l":74,"co":39,"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":3,"en":7},"op":true,"rs":false}]},{"k":"Property","c":"@discordjs/rest!REST#agent:member","d":"/**\n * The {@link https://undici.nodejs.org/#/docs/api/Agent | Agent} for all requests performed by this manager.\n */\n","ex":[{"k":"Reference","t":"agent","c":"@discordjs/rest!REST#agent"},{"k":"Content","t":": "},{"k":"Reference","t":"Dispatcher","c":"undici!Dispatcher:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":39,"co":9,"ro":false,"op":false,"r":"Public","n":"agent","prtr":{"st":2,"en":5},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#cdn:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"cdn","c":"@discordjs/rest!REST#cdn"},{"k":"Content","t":": "},{"k":"Reference","t":"CDN","c":"@discordjs/rest!CDN:class"},{"k":"Content","t":";"}],"l":41,"co":2,"ro":true,"op":false,"r":"Public","n":"cdn","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/rest!REST#clearHandlerSweeper:member(1)","d":"/**\n * Stops the request handler sweeping interval\n */\n","ex":[{"k":"Reference","t":"clearHandlerSweeper","c":"@discordjs/rest!REST#clearHandlerSweeper"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":416,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearHandlerSweeper"},{"k":"Method","c":"@discordjs/rest!REST#clearHashSweeper:member(1)","d":"/**\n * Stops the hash sweeping interval\n */\n","ex":[{"k":"Reference","t":"clearHashSweeper","c":"@discordjs/rest!REST#clearHashSweeper"},{"k":"Content","t":"(): "},{"k":"Reference","t":"void"},{"k":"Content","t":";"}],"l":409,"co":9,"sta":false,"rtr":{"st":2,"en":3},"r":"Public","pr":false,"oi":1,"ps":[],"op":false,"ab":false,"n":"clearHashSweeper"},{"k":"Method","c":"@discordjs/rest!REST#delete:member(1)","d":"/**\n * Runs a delete request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n","ex":[{"k":"Reference","t":"delete","c":"@discordjs/rest!REST#delete"},{"k":"Content","t":"("},{"k":"Reference","t":"fullRoute","c":"@discordjs/rest!~fullRoute"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":170,"co":15,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fullRoute","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"delete"},{"k":"Method","c":"@discordjs/rest!REST#get:member(1)","d":"/**\n * Runs a get request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n","ex":[{"k":"Reference","t":"get","c":"@discordjs/rest!REST#get"},{"k":"Content","t":"("},{"k":"Reference","t":"fullRoute","c":"@discordjs/rest!~fullRoute"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":160,"co":15,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fullRoute","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"get"},{"k":"Property","c":"@discordjs/rest!REST#globalDelay:member","d":"/**\n * The promise used to wait out the global rate limit\n */\n","ex":[{"k":"Reference","t":"globalDelay","c":"@discordjs/rest!REST#globalDelay"},{"k":"Content","t":": "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"void"},{"k":"Content","t":"> | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":51,"co":9,"ro":false,"op":false,"r":"Public","n":"globalDelay","prtr":{"st":2,"en":7},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#globalRemaining:member","d":"/**\n * The number of requests remaining in the global bucket\n */\n","ex":[{"k":"Reference","t":"globalRemaining","c":"@discordjs/rest!REST#globalRemaining"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":46,"co":9,"ro":false,"op":false,"r":"Public","n":"globalRemaining","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#globalReset:member","d":"/**\n * The timestamp at which the global bucket resets\n */\n","ex":[{"k":"Reference","t":"globalReset","c":"@discordjs/rest!REST#globalReset"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":56,"co":9,"ro":false,"op":false,"r":"Public","n":"globalReset","prtr":{"st":2,"en":3},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#handlers:member","d":"/**\n * Request handlers created from the bucket hash and the major parameters\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"handlers","c":"@discordjs/rest!REST#handlers"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"IHandler","c":"@discordjs/rest!~IHandler:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":66,"co":2,"ro":true,"op":false,"r":"Public","n":"handlers","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#hashes:member","d":"/**\n * API bucket hashes that are cached from provided routes\n */\n","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"hashes","c":"@discordjs/rest!REST#hashes"},{"k":"Content","t":": "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"HashData","c":"@discordjs/rest!HashData:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":61,"co":2,"ro":true,"op":false,"r":"Public","n":"hashes","prtr":{"st":3,"en":9},"sta":false,"pr":false,"ab":false},{"k":"Property","c":"@discordjs/rest!REST#options:member","d":"","ex":[{"k":"Content","t":"readonly "},{"k":"Reference","t":"options","c":"@discordjs/rest!REST#options"},{"k":"Content","t":": "},{"k":"Reference","t":"RESTOptions","c":"@discordjs/rest!RESTOptions:interface"},{"k":"Content","t":";"}],"l":74,"co":2,"ro":true,"op":false,"r":"Public","n":"options","prtr":{"st":3,"en":4},"sta":false,"pr":false,"ab":false},{"k":"Method","c":"@discordjs/rest!REST#patch:member(1)","d":"/**\n * Runs a patch request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n","ex":[{"k":"Reference","t":"patch","c":"@discordjs/rest!REST#patch"},{"k":"Content","t":"("},{"k":"Reference","t":"fullRoute","c":"@discordjs/rest!~fullRoute"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":200,"co":15,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fullRoute","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"patch"},{"k":"Method","c":"@discordjs/rest!REST#post:member(1)","d":"/**\n * Runs a post request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n","ex":[{"k":"Reference","t":"post","c":"@discordjs/rest!REST#post"},{"k":"Content","t":"("},{"k":"Reference","t":"fullRoute","c":"@discordjs/rest!~fullRoute"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":180,"co":15,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fullRoute","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"post"},{"k":"Method","c":"@discordjs/rest!REST#put:member(1)","d":"/**\n * Runs a put request from the api\n *\n * @param fullRoute - The full route to query\n *\n * @param options - Optional request options\n */\n","ex":[{"k":"Reference","t":"put","c":"@discordjs/rest!REST#put"},{"k":"Content","t":"("},{"k":"Reference","t":"fullRoute","c":"@discordjs/rest!~fullRoute"},{"k":"Content","t":": "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":", "},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":"?: "},{"k":"Reference","t":"RequestData","c":"@discordjs/rest!RequestData:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":190,"co":15,"sta":false,"rtr":{"st":10,"en":14},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"fullRoute","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"options","ptr":{"st":8,"en":9},"op":true,"rs":false}],"op":false,"ab":false,"n":"put"},{"k":"Method","c":"@discordjs/rest!REST#queueRequest:member(1)","d":"/**\n * Queues a request to be sent\n *\n * @param request - All the information needed to make a request\n *\n * @returns The response from the api request\n */\n","ex":[{"k":"Reference","t":"queueRequest","c":"@discordjs/rest!REST#queueRequest"},{"k":"Content","t":"("},{"k":"Reference","t":"request","c":"@discordjs/rest!~request"},{"k":"Content","t":": "},{"k":"Reference","t":"InternalRequest","c":"@discordjs/rest!InternalRequest:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":240,"co":15,"sta":false,"rtr":{"st":6,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"request","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"queueRequest"},{"k":"Method","c":"@discordjs/rest!REST#request:member(1)","d":"/**\n * Runs a request from the api\n *\n * @param options - Request options\n */\n","ex":[{"k":"Reference","t":"request","c":"@discordjs/rest!REST#request"},{"k":"Content","t":"("},{"k":"Reference","t":"options","c":"@discordjs/rest!~options"},{"k":"Content","t":": "},{"k":"Reference","t":"InternalRequest","c":"@discordjs/rest!InternalRequest:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"unknown"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":209,"co":15,"sta":false,"rtr":{"st":6,"en":10},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"options","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"request"},{"k":"Method","c":"@discordjs/rest!REST#setAgent:member(1)","d":"/**\n * Sets the default agent to use for requests performed by this manager\n *\n * @param agent - The agent to use\n */\n","ex":[{"k":"Reference","t":"setAgent","c":"@discordjs/rest!REST#setAgent"},{"k":"Content","t":"("},{"k":"Reference","t":"agent","c":"@discordjs/rest!~agent"},{"k":"Content","t":": "},{"k":"Reference","t":"Dispatcher","c":"undici!Dispatcher:class"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":219,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"agent","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setAgent"},{"k":"Method","c":"@discordjs/rest!REST#setToken:member(1)","d":"/**\n * Sets the authorization token that should be used for requests\n *\n * @param token - The authorization token to use\n */\n","ex":[{"k":"Reference","t":"setToken","c":"@discordjs/rest!REST#setToken"},{"k":"Content","t":"("},{"k":"Reference","t":"token","c":"@discordjs/rest!~token"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":"): "},{"k":"Content","t":"this"},{"k":"Content","t":";"}],"l":229,"co":9,"sta":false,"rtr":{"st":6,"en":7},"r":"Public","pr":false,"oi":1,"ps":[{"pn":"token","ptr":{"st":4,"en":5},"op":false,"rs":false}],"op":false,"ab":false,"n":"setToken"}],"etr":{"st":3,"en":7,"tps":[{"st":5,"en":6}]},"itrs":[]},{"k":"Enum","c":"@discordjs/rest!RESTEvents:enum","d":"/**\n * The events that the REST manager emits\n */\n","ex":[{"k":"Content","t":"export declare enum "},{"k":"Reference","t":"RESTEvents","c":"@discordjs/rest!RESTEvents:enum"},{"k":"Content","t":" "}],"pat":"src/lib/utils/constants.ts","l":40,"co":1,"r":"Public","n":"RESTEvents","pmo":false,"ms":[{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.Debug:member","d":"","ex":[{"k":"Reference","t":"Debug","c":"@discordjs/rest!RESTEvents.Debug:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"restDebug\""}],"l":41,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Debug"},{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.HandlerSweep:member","d":"","ex":[{"k":"Reference","t":"HandlerSweep","c":"@discordjs/rest!RESTEvents.HandlerSweep:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"handlerSweep\""}],"l":42,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"HandlerSweep"},{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.HashSweep:member","d":"","ex":[{"k":"Reference","t":"HashSweep","c":"@discordjs/rest!RESTEvents.HashSweep:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"hashSweep\""}],"l":43,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"HashSweep"},{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.InvalidRequestWarning:member","d":"","ex":[{"k":"Reference","t":"InvalidRequestWarning","c":"@discordjs/rest!RESTEvents.InvalidRequestWarning:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"invalidRequestWarning\""}],"l":44,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"InvalidRequestWarning"},{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.RateLimited:member","d":"","ex":[{"k":"Reference","t":"RateLimited","c":"@discordjs/rest!RESTEvents.RateLimited:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"rateLimited\""}],"l":45,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"RateLimited"},{"k":"EnumMember","c":"@discordjs/rest!RESTEvents.Response:member","d":"","ex":[{"k":"Reference","t":"Response","c":"@discordjs/rest!RESTEvents.Response:member"},{"k":"Content","t":" = "},{"k":"Content","t":"\"response\""}],"l":46,"co":2,"itr":{"st":2,"en":3},"r":"Public","n":"Response"}]},{"k":"Interface","c":"@discordjs/rest!RestEvents:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RestEvents","c":"@discordjs/rest!RestEvents:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":8,"co":1,"r":"Public","n":"RestEvents","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#handlerSweep:member","d":"","ex":[{"k":"Reference","t":"handlerSweep","c":"@discordjs/rest!RestEvents#handlerSweep"},{"k":"Content","t":": "},{"k":"Content","t":"[sweptHandlers: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"IHandler","c":"@discordjs/rest!~IHandler:interface"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":9,"co":2,"ro":false,"op":false,"r":"Public","n":"handlerSweep","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#hashSweep:member","d":"","ex":[{"k":"Reference","t":"hashSweep","c":"@discordjs/rest!RestEvents#hashSweep"},{"k":"Content","t":": "},{"k":"Content","t":"[sweptHashes: "},{"k":"Reference","t":"Collection","c":"@discordjs/collection!Collection:class"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"HashData","c":"@discordjs/rest!HashData:interface"},{"k":"Content","t":">]"},{"k":"Content","t":";"}],"l":10,"co":2,"ro":false,"op":false,"r":"Public","n":"hashSweep","prtr":{"st":2,"en":9}},{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#invalidRequestWarning:member","d":"","ex":[{"k":"Reference","t":"invalidRequestWarning","c":"@discordjs/rest!RestEvents#invalidRequestWarning"},{"k":"Content","t":": "},{"k":"Content","t":"[invalidRequestInfo: "},{"k":"Reference","t":"InvalidRequestWarningData","c":"@discordjs/rest!InvalidRequestWarningData:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":11,"co":2,"ro":false,"op":false,"r":"Public","n":"invalidRequestWarning","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#rateLimited:member","d":"","ex":[{"k":"Reference","t":"rateLimited","c":"@discordjs/rest!RestEvents#rateLimited"},{"k":"Content","t":": "},{"k":"Content","t":"[rateLimitInfo: "},{"k":"Reference","t":"RateLimitData","c":"@discordjs/rest!RateLimitData:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":12,"co":2,"ro":false,"op":false,"r":"Public","n":"rateLimited","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#response:member","d":"","ex":[{"k":"Reference","t":"response","c":"@discordjs/rest!RestEvents#response"},{"k":"Content","t":": "},{"k":"Content","t":"[request: "},{"k":"Reference","t":"APIRequest","c":"@discordjs/rest!APIRequest:interface"},{"k":"Content","t":", response: "},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":13,"co":2,"ro":false,"op":false,"r":"Public","n":"response","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"@discordjs/rest!RestEvents#restDebug:member","d":"","ex":[{"k":"Reference","t":"restDebug","c":"@discordjs/rest!RestEvents#restDebug"},{"k":"Content","t":": "},{"k":"Content","t":"[info: "},{"k":"Reference","t":"string"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"l":14,"co":2,"ro":false,"op":false,"r":"Public","n":"restDebug","prtr":{"st":2,"en":5}}],"etrs":[]},{"k":"Interface","c":"@discordjs/rest!RestEventsMap:interface","d":"","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RestEventsMap","c":"@discordjs/rest!RestEventsMap:interface"},{"k":"Content","t":" extends "},{"k":"Reference","t":"RestEvents","c":"@discordjs/rest!RestEvents:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":17,"co":1,"r":"Public","n":"RestEventsMap","pmo":false,"ms":[],"etrs":[{"st":3,"en":4,"tps":[]}]},{"k":"Interface","c":"@discordjs/rest!RESTOptions:interface","d":"/**\n * Options to be passed when creating the REST instance\n */\n","ex":[{"k":"Content","t":"export interface "},{"k":"Reference","t":"RESTOptions","c":"@discordjs/rest!RESTOptions:interface"},{"k":"Content","t":" "}],"pat":"src/lib/utils/types.ts","l":22,"co":1,"r":"Public","n":"RESTOptions","pmo":false,"ms":[{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#agent:member","d":"/**\n * The agent to set globally\n */\n","ex":[{"k":"Reference","t":"agent","c":"@discordjs/rest!RESTOptions#agent"},{"k":"Content","t":": "},{"k":"Reference","t":"Dispatcher","c":"undici!Dispatcher:class"},{"k":"Content","t":" | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":26,"co":2,"ro":false,"op":false,"r":"Public","n":"agent","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#api:member","d":"/**\n * The base api path, without version\n *\n * @defaultValue\n *\n * `'https://discord.com/api'`\n */\n","ex":[{"k":"Reference","t":"api","c":"@discordjs/rest!RESTOptions#api"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":32,"co":2,"ro":false,"op":false,"r":"Public","n":"api","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#authPrefix:member","d":"/**\n * The authorization prefix to use for requests, useful if you want to use bearer tokens\n *\n * @defaultValue\n *\n * `'Bot'`\n */\n","ex":[{"k":"Reference","t":"authPrefix","c":"@discordjs/rest!RESTOptions#authPrefix"},{"k":"Content","t":": "},{"k":"Content","t":"'Bearer' | 'Bot'"},{"k":"Content","t":";"}],"l":39,"co":2,"ro":false,"op":false,"r":"Public","n":"authPrefix","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#cdn:member","d":"/**\n * The cdn path\n *\n * @defaultValue\n *\n * `'https://cdn.discordapp.com'`\n */\n","ex":[{"k":"Reference","t":"cdn","c":"@discordjs/rest!RESTOptions#cdn"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":45,"co":2,"ro":false,"op":false,"r":"Public","n":"cdn","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#globalRequestsPerSecond:member","d":"/**\n * How many requests to allow sending per second (Infinity for unlimited, 50 for the standard global limit used by Discord)\n *\n * @defaultValue\n *\n * `50`\n */\n","ex":[{"k":"Reference","t":"globalRequestsPerSecond","c":"@discordjs/rest!RESTOptions#globalRequestsPerSecond"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":51,"co":2,"ro":false,"op":false,"r":"Public","n":"globalRequestsPerSecond","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#handlerSweepInterval:member","d":"/**\n * The amount of time in milliseconds that passes between each hash sweep. (defaults to 1h)\n *\n * @defaultValue\n *\n * `3_600_000`\n */\n","ex":[{"k":"Reference","t":"handlerSweepInterval","c":"@discordjs/rest!RESTOptions#handlerSweepInterval"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":57,"co":2,"ro":false,"op":false,"r":"Public","n":"handlerSweepInterval","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#hashLifetime:member","d":"/**\n * The maximum amount of time a hash can exist in milliseconds without being hit with a request (defaults to 24h)\n *\n * @defaultValue\n *\n * `86_400_000`\n */\n","ex":[{"k":"Reference","t":"hashLifetime","c":"@discordjs/rest!RESTOptions#hashLifetime"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":63,"co":2,"ro":false,"op":false,"r":"Public","n":"hashLifetime","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#hashSweepInterval:member","d":"/**\n * The amount of time in milliseconds that passes between each hash sweep. (defaults to 4h)\n *\n * @defaultValue\n *\n * `14_400_000`\n */\n","ex":[{"k":"Reference","t":"hashSweepInterval","c":"@discordjs/rest!RESTOptions#hashSweepInterval"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":69,"co":2,"ro":false,"op":false,"r":"Public","n":"hashSweepInterval","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#headers:member","d":"/**\n * Additional headers to send for all API requests\n *\n * @defaultValue\n *\n * `{}`\n */\n","ex":[{"k":"Reference","t":"headers","c":"@discordjs/rest!RESTOptions#headers"},{"k":"Content","t":": "},{"k":"Reference","t":"Record","c":"!Record:type"},{"k":"Content","t":"<"},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"string"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":75,"co":2,"ro":false,"op":false,"r":"Public","n":"headers","prtr":{"st":2,"en":8}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#invalidRequestWarningInterval:member","d":"/**\n * The number of invalid REST requests (those that return 401, 403, or 429) in a 10 minute window between emitted warnings (0 for no warnings). That is, if set to 500, warnings will be emitted at invalid request number 500, 1000, 1500, and so on.\n *\n * @defaultValue\n *\n * `0`\n */\n","ex":[{"k":"Reference","t":"invalidRequestWarningInterval","c":"@discordjs/rest!RESTOptions#invalidRequestWarningInterval"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":82,"co":2,"ro":false,"op":false,"r":"Public","n":"invalidRequestWarningInterval","prtr":{"st":2,"en":3}},{"k":"MethodSignature","c":"@discordjs/rest!RESTOptions#makeRequest:member(1)","d":"/**\n * The method called to perform the actual HTTP request given a url and web `fetch` options For example, to use global fetch, simply provide `makeRequest: fetch`\n */\n","ex":[{"k":"Reference","t":"makeRequest","c":"@discordjs/rest!RESTOptions#makeRequest"},{"k":"Content","t":"("},{"k":"Reference","t":"url","c":"@discordjs/rest!~url"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":", "},{"k":"Reference","t":"init","c":"@discordjs/rest!~init"},{"k":"Content","t":": "},{"k":"Reference","t":"RequestInit","c":"undici!RequestInit:interface"},{"k":"Content","t":"): "},{"k":"Reference","t":"Promise","c":"!Promise:interface"},{"k":"Content","t":"<"},{"k":"Reference","t":"ResponseLike","c":"@discordjs/rest!ResponseLike:interface"},{"k":"Content","t":">"},{"k":"Content","t":";"}],"l":87,"co":2,"op":false,"rtr":{"st":10,"en":14},"r":"Public","oi":1,"ps":[{"pn":"url","ptr":{"st":4,"en":5},"op":false,"rs":false},{"pn":"init","ptr":{"st":8,"en":9},"op":false,"rs":false}],"n":"makeRequest"},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#mediaProxy:member","d":"/**\n * The media proxy path\n *\n * @defaultValue\n *\n * `'https://media.discordapp.net'`\n */\n","ex":[{"k":"Reference","t":"mediaProxy","c":"@discordjs/rest!RESTOptions#mediaProxy"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":93,"co":2,"ro":false,"op":false,"r":"Public","n":"mediaProxy","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#offset:member","d":"/**\n * The extra offset to add to rate limits in milliseconds\n *\n * @defaultValue\n *\n * `50`\n */\n","ex":[{"k":"Reference","t":"offset","c":"@discordjs/rest!RESTOptions#offset"},{"k":"Content","t":": "},{"k":"Reference","t":"GetRateLimitOffsetFunction","c":"@discordjs/rest!GetRateLimitOffsetFunction:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":99,"co":2,"ro":false,"op":false,"r":"Public","n":"offset","prtr":{"st":2,"en":5}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#rejectOnRateLimit:member","d":"/**\n * Determines how rate limiting and pre-emptive throttling should be handled. When an array of strings, each element is treated as a prefix for the request route (e.g. `/channels` to match any route starting with `/channels` such as `/channels/:id/messages`) for which to throw {@link RateLimitError}s. All other request routes will be queued normally\n *\n * @defaultValue\n *\n * `null`\n */\n","ex":[{"k":"Reference","t":"rejectOnRateLimit","c":"@discordjs/rest!RESTOptions#rejectOnRateLimit"},{"k":"Content","t":": "},{"k":"Reference","t":"RateLimitQueueFilter","c":"@discordjs/rest!RateLimitQueueFilter:type"},{"k":"Content","t":" | "},{"k":"Reference","t":"string"},{"k":"Content","t":"[] | "},{"k":"Reference","t":"null"},{"k":"Content","t":";"}],"l":108,"co":2,"ro":false,"op":false,"r":"Public","n":"rejectOnRateLimit","prtr":{"st":2,"en":7}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#retries:member","d":"/**\n * The number of retries for errors with the 500 code, or errors that timeout\n *\n * @defaultValue\n *\n * `3`\n */\n","ex":[{"k":"Reference","t":"retries","c":"@discordjs/rest!RESTOptions#retries"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":115,"co":2,"ro":false,"op":false,"r":"Public","n":"retries","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#timeout:member","d":"/**\n * The time to wait in milliseconds before a request is aborted\n *\n * @defaultValue\n *\n * `15_000`\n */\n","ex":[{"k":"Reference","t":"timeout","c":"@discordjs/rest!RESTOptions#timeout"},{"k":"Content","t":": "},{"k":"Reference","t":"number"},{"k":"Content","t":";"}],"l":121,"co":2,"ro":false,"op":false,"r":"Public","n":"timeout","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#userAgentAppendix:member","d":"/**\n * Extra information to add to the user agent\n *\n * @defaultValue\n *\n * DefaultUserAgentAppendix\n */\n","ex":[{"k":"Reference","t":"userAgentAppendix","c":"@discordjs/rest!RESTOptions#userAgentAppendix"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":127,"co":2,"ro":false,"op":false,"r":"Public","n":"userAgentAppendix","prtr":{"st":2,"en":3}},{"k":"PropertySignature","c":"@discordjs/rest!RESTOptions#version:member","d":"/**\n * The version of the API to use\n *\n * @defaultValue\n *\n * `'10'`\n */\n","ex":[{"k":"Reference","t":"version","c":"@discordjs/rest!RESTOptions#version"},{"k":"Content","t":": "},{"k":"Reference","t":"string"},{"k":"Content","t":";"}],"l":133,"co":2,"ro":false,"op":false,"r":"Public","n":"version","prtr":{"st":2,"en":3}}],"etrs":[]},{"k":"TypeAlias","c":"@discordjs/rest!RouteLike:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"RouteLike","c":"@discordjs/rest!RouteLike:type"},{"k":"Content","t":" = "},{"k":"Content","t":"`/${"},{"k":"Reference","t":"string"},{"k":"Content","t":"}`"},{"k":"Content","t":";"}],"pat":"src/lib/utils/types.ts","l":354,"co":1,"r":"Public","n":"RouteLike","ttr":{"st":3,"en":6}},{"k":"TypeAlias","c":"@discordjs/rest!StickerExtension:type","d":"","ex":[{"k":"Content","t":"export type "},{"k":"Reference","t":"StickerExtension","c":"@discordjs/rest!StickerExtension:type"},{"k":"Content","t":" = "},{"k":"Content","t":"("},{"k":"Reference","t":"typeof"},{"k":"Content","t":" "},{"k":"Reference","t":"ALLOWED_STICKER_EXTENSIONS","c":"@discordjs/rest!ALLOWED_STICKER_EXTENSIONS:var"},{"k":"Content","t":")["},{"k":"Reference","t":"number"},{"k":"Content","t":"]"},{"k":"Content","t":";"}],"pat":"src/lib/utils/constants.ts","l":54,"co":1,"r":"Public","n":"StickerExtension","ttr":{"st":3,"en":10}},{"k":"Variable","c":"@discordjs/rest!version:var","d":"/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/rest#readme | @discordjs/rest} version that you are currently using.\n */\n","ex":[{"k":"Reference","t":"version","c":"@discordjs/rest!version"},{"k":"Content","t":": "},{"k":"Reference","t":"string"}],"pat":"src/shared.ts","l":15,"co":14,"ro":true,"r":"Public","n":"version","vtr":{"st":2,"en":3}}]}]}