{
  "metadata": {
    "toolPackage": "@discordjs/api-extractor",
    "toolVersion": "7.38.1",
    "schemaVersion": 1012,
    "oldestForwardsCompatibleVersion": 1001,
    "tsdocConfig": {
      "$schema": "https://developer.microsoft.com/json-schemas/tsdoc/v0/tsdoc.schema.json",
      "noStandardTags": true,
      "tagDefinitions": [
        {
          "tagName": "@alpha",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@beta",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@defaultValue",
          "syntaxKind": "block"
        },
        {
          "tagName": "@decorator",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@deprecated",
          "syntaxKind": "block"
        },
        {
          "tagName": "@eventProperty",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@example",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@experimental",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@inheritDoc",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@internal",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@label",
          "syntaxKind": "inline"
        },
        {
          "tagName": "@link",
          "syntaxKind": "inline",
          "allowMultiple": true
        },
        {
          "tagName": "@override",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@packageDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@param",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@privateRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@public",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@readonly",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@remarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@returns",
          "syntaxKind": "block"
        },
        {
          "tagName": "@sealed",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@see",
          "syntaxKind": "block"
        },
        {
          "tagName": "@throws",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@typeParam",
          "syntaxKind": "block",
          "allowMultiple": true
        },
        {
          "tagName": "@virtual",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@betaDocumentation",
          "syntaxKind": "modifier"
        },
        {
          "tagName": "@internalRemarks",
          "syntaxKind": "block"
        },
        {
          "tagName": "@preapproved",
          "syntaxKind": "modifier"
        }
      ],
      "supportForTags": {
        "@alpha": true,
        "@beta": true,
        "@defaultValue": true,
        "@decorator": true,
        "@deprecated": true,
        "@eventProperty": true,
        "@example": true,
        "@experimental": true,
        "@inheritDoc": true,
        "@internal": true,
        "@label": true,
        "@link": true,
        "@override": true,
        "@packageDocumentation": true,
        "@param": true,
        "@privateRemarks": true,
        "@public": true,
        "@readonly": true,
        "@remarks": true,
        "@returns": true,
        "@sealed": true,
        "@see": true,
        "@throws": true,
        "@typeParam": true,
        "@virtual": true,
        "@betaDocumentation": true,
        "@internalRemarks": true,
        "@preapproved": true
      },
      "reportUnsupportedHtmlElements": false
    }
  },
  "projectFolderUrl": "https://github.com/discordjs/discord.js/tree/main/packages/ws",
  "kind": "Package",
  "canonicalReference": "@discordjs/ws!",
  "docComment": "",
  "name": "@discordjs/ws",
  "preserveMemberOrder": false,
  "members": [
    {
      "kind": "EntryPoint",
      "canonicalReference": "@discordjs/ws!",
      "name": "",
      "preserveMemberOrder": false,
      "members": [
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!BootstrapOptions:interface",
          "docComment": "/**\n * Options for bootstrapping the worker\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "BootstrapOptions",
              "canonicalReference": "@discordjs/ws!BootstrapOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/utils/WorkerBootstrapper.ts",
          "fileLine": 18,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "BootstrapOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!BootstrapOptions#forwardEvents:member",
              "docComment": "/**\n * Shard events to just arbitrarily forward to the parent thread for the manager to emit Note: By default, this will include ALL events you most likely want to handle dispatch within the worker itself\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "forwardEvents",
                  "canonicalReference": "@discordjs/ws!BootstrapOptions#forwardEvents"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardEvents",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents:enum"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "forwardEvents",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!BootstrapOptions#shardCallback:member(1)",
              "docComment": "/**\n * Function to call when a shard is created for additional setup\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardCallback",
                  "canonicalReference": "@discordjs/ws!BootstrapOptions#shardCallback"
                },
                {
                  "kind": "Content",
                  "text": "?("
                },
                {
                  "kind": "Reference",
                  "text": "shard",
                  "canonicalReference": "@discordjs/ws!~shard"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShard",
                  "canonicalReference": "@discordjs/ws!WebSocketShard:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 28,
              "fileColumn": 2,
              "isOptional": true,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shard",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "shardCallback"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!CloseCodes:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "CloseCodes",
              "canonicalReference": "@discordjs/ws!CloseCodes:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 73,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "CloseCodes",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!CloseCodes.Normal:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Normal",
                  "canonicalReference": "@discordjs/ws!CloseCodes.Normal:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1000"
                }
              ],
              "fileLine": 74,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Normal"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!CloseCodes.Resuming:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Resuming",
                  "canonicalReference": "@discordjs/ws!CloseCodes.Resuming:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4200"
                }
              ],
              "fileLine": 75,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Resuming"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!CompressionMethod:enum",
          "docComment": "/**\n * Valid compression methods\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "CompressionMethod",
              "canonicalReference": "@discordjs/ws!CompressionMethod:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 20,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "CompressionMethod",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!CompressionMethod.ZlibStream:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "ZlibStream",
                  "canonicalReference": "@discordjs/ws!CompressionMethod.ZlibStream:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"zlib-stream\""
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "ZlibStream"
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/ws!DefaultDeviceProperty:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "DefaultDeviceProperty",
              "canonicalReference": "@discordjs/ws!DefaultDeviceProperty"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "`@discordjs/ws ${"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "}`"
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 24,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultDeviceProperty",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 5
          }
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/ws!DefaultWebSocketManagerOptions:var",
          "docComment": "/**\n * Default options used by the manager\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "DefaultWebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!DefaultWebSocketManagerOptions"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Content",
              "text": "{  readonly "
            },
            {
              "kind": "Reference",
              "text": "buildIdentifyThrottler",
              "canonicalReference": "@discordjs/ws!~__type#buildIdentifyThrottler"
            },
            {
              "kind": "Content",
              "text": ": ("
            },
            {
              "kind": "Reference",
              "text": "manager",
              "canonicalReference": "@discordjs/ws!~manager"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WebSocketManager",
              "canonicalReference": "@discordjs/ws!WebSocketManager:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "SimpleIdentifyThrottler",
              "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler:class"
            },
            {
              "kind": "Content",
              "text": ">;  readonly "
            },
            {
              "kind": "Reference",
              "text": "buildStrategy",
              "canonicalReference": "@discordjs/ws!~__type#buildStrategy"
            },
            {
              "kind": "Content",
              "text": ": ("
            },
            {
              "kind": "Reference",
              "text": "manager",
              "canonicalReference": "@discordjs/ws!~manager"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WebSocketManager",
              "canonicalReference": "@discordjs/ws!WebSocketManager:class"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "SimpleShardingStrategy",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy:class"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "shardCount",
              "canonicalReference": "@discordjs/ws!~__type#shardCount"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "shardIds",
              "canonicalReference": "@discordjs/ws!~__type#shardIds"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "largeThreshold",
              "canonicalReference": "@discordjs/ws!~__type#largeThreshold"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "initialPresence",
              "canonicalReference": "@discordjs/ws!~__type#initialPresence"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "identifyProperties",
              "canonicalReference": "@discordjs/ws!~__type#identifyProperties"
            },
            {
              "kind": "Content",
              "text": ": {    readonly "
            },
            {
              "kind": "Reference",
              "text": "browser",
              "canonicalReference": "@discordjs/ws!~__type#browser"
            },
            {
              "kind": "Content",
              "text": ": `@discordjs/ws ${"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "}`;    readonly "
            },
            {
              "kind": "Reference",
              "text": "device",
              "canonicalReference": "@discordjs/ws!~__type#device"
            },
            {
              "kind": "Content",
              "text": ": `@discordjs/ws ${"
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": "}`;    readonly "
            },
            {
              "kind": "Reference",
              "text": "os",
              "canonicalReference": "@discordjs/ws!~__type#os"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "NodeJS.Platform",
              "canonicalReference": "!\"\\\"process\\\"\".__global.NodeJS.Platform:type"
            },
            {
              "kind": "Content",
              "text": ";  };  readonly "
            },
            {
              "kind": "Reference",
              "text": "version",
              "canonicalReference": "@discordjs/ws!~__type#version"
            },
            {
              "kind": "Content",
              "text": ": \"10\";  readonly "
            },
            {
              "kind": "Reference",
              "text": "encoding",
              "canonicalReference": "@discordjs/ws!~__type#encoding"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Encoding",
              "canonicalReference": "@discordjs/ws!Encoding:enum"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "compression",
              "canonicalReference": "@discordjs/ws!~__type#compression"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "retrieveSessionInfo",
              "canonicalReference": "@discordjs/ws!~__type#retrieveSessionInfo"
            },
            {
              "kind": "Content",
              "text": ": ("
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "SessionInfo",
              "canonicalReference": "@discordjs/ws!SessionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "updateSessionInfo",
              "canonicalReference": "@discordjs/ws!~__type#updateSessionInfo"
            },
            {
              "kind": "Content",
              "text": ": ("
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ", "
            },
            {
              "kind": "Reference",
              "text": "info",
              "canonicalReference": "@discordjs/ws!~info"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "SessionInfo",
              "canonicalReference": "@discordjs/ws!SessionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ") => "
            },
            {
              "kind": "Reference",
              "text": "void"
            },
            {
              "kind": "Content",
              "text": ";  readonly "
            },
            {
              "kind": "Reference",
              "text": "handshakeTimeout",
              "canonicalReference": "@discordjs/ws!~__type#handshakeTimeout"
            },
            {
              "kind": "Content",
              "text": ": 30000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "helloTimeout",
              "canonicalReference": "@discordjs/ws!~__type#helloTimeout"
            },
            {
              "kind": "Content",
              "text": ": 60000;  readonly "
            },
            {
              "kind": "Reference",
              "text": "readyTimeout",
              "canonicalReference": "@discordjs/ws!~__type#readyTimeout"
            },
            {
              "kind": "Content",
              "text": ": 15000;}"
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 31,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "DefaultWebSocketManagerOptions",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 91
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!Encoding:enum",
          "docComment": "/**\n * Valid encoding types\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "Encoding",
              "canonicalReference": "@discordjs/ws!Encoding:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 13,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "Encoding",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!Encoding.JSON:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "JSON",
                  "canonicalReference": "@discordjs/ws!Encoding.JSON:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"json\""
                }
              ],
              "fileLine": 14,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "JSON"
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "FetchingStrategyOptions",
              "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "Omit",
              "canonicalReference": "!Omit:type"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!WebSocketManagerOptions:type"
            },
            {
              "kind": "Content",
              "text": ", 'buildIdentifyThrottler' | 'buildStrategy' | 'rest' | 'retrieveSessionInfo' | 'shardCount' | 'shardIds' | 'updateSessionInfo'>"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/context/IContextFetchingStrategy.ts",
          "fileLine": 5,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "FetchingStrategyOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!FetchingStrategyOptions#gatewayInformation:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "gatewayInformation",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions#gatewayInformation"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "APIGatewayBotInfo",
                  "canonicalReference": "discord-api-types!APIGatewayBotInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 16,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "gatewayInformation",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!FetchingStrategyOptions#shardCount:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "shardCount",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions#shardCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 17,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardCount",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 7,
              "typeParameters": [
                {
                  "startIndex": 5,
                  "endIndex": 6
                },
                {
                  "startIndex": 0,
                  "endIndex": 0
                }
              ]
            }
          ]
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/ws!getInitialSendRateLimitState:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "getInitialSendRateLimitState",
              "canonicalReference": "@discordjs/ws!getInitialSendRateLimitState"
            },
            {
              "kind": "Content",
              "text": "(): "
            },
            {
              "kind": "Reference",
              "text": "SendRateLimitState",
              "canonicalReference": "@discordjs/ws!SendRateLimitState:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 72,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 3,
            "endIndex": 4
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [],
          "name": "getInitialSendRateLimitState"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!IContextFetchingStrategy:interface",
          "docComment": "/**\n * Strategies responsible solely for making manager information accessible\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IContextFetchingStrategy",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/context/IContextFetchingStrategy.ts",
          "fileLine": 23,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "IContextFetchingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FetchingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#retrieveSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retrieveSessionInfo",
                  "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#retrieveSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 25,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "retrieveSessionInfo"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#updateSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateSessionInfo",
                  "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#updateSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sessionInfo",
                  "canonicalReference": "@discordjs/ws!~sessionInfo"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "sessionInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "updateSessionInfo"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#waitForIdentify:member(1)",
              "docComment": "/**\n * Resolves once the given shard should be allowed to identify This should correctly handle the signal and reject with an abort error if the operation is aborted. Other errors will cause the shard to reconnect.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "waitForIdentify",
                  "canonicalReference": "@discordjs/ws!IContextFetchingStrategy#waitForIdentify"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/ws!~signal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 32,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "signal",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "waitForIdentify"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!IdentifyState:interface",
          "docComment": "/**\n * The state of a rate limit key's identify queue.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IdentifyState",
              "canonicalReference": "@discordjs/ws!IdentifyState:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/throttling/SimpleIdentifyThrottler.ts",
          "fileLine": 9,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "IdentifyState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!IdentifyState#queue:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "queue",
                  "canonicalReference": "@discordjs/ws!IdentifyState#queue"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AsyncQueue",
                  "canonicalReference": "@sapphire/async-queue!AsyncQueue:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 10,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "queue",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!IdentifyState#resetsAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "resetsAt",
                  "canonicalReference": "@discordjs/ws!IdentifyState#resetsAt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 11,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resetsAt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!IIdentifyThrottler:interface",
          "docComment": "/**\n * IdentifyThrottlers are responsible for dictating when a shard is allowed to identify.\n *\n * @see\n *\n * {@link https://discord.com/developers/docs/topics/gateway#sharding-max-concurrency}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IIdentifyThrottler",
              "canonicalReference": "@discordjs/ws!IIdentifyThrottler:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/throttling/IIdentifyThrottler.ts",
          "fileLine": 6,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "IIdentifyThrottler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IIdentifyThrottler#waitForIdentify:member(1)",
              "docComment": "/**\n * Resolves once the given shard should be allowed to identify, or rejects if the operation was aborted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "waitForIdentify",
                  "canonicalReference": "@discordjs/ws!IIdentifyThrottler#waitForIdentify"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/ws!~signal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 10,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "signal",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "waitForIdentify"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/ws!ImportantGatewayOpcodes:var",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "ImportantGatewayOpcodes",
              "canonicalReference": "@discordjs/ws!ImportantGatewayOpcodes"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Set",
              "canonicalReference": "!Set:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "GatewayOpcodes",
              "canonicalReference": "discord-api-types!GatewayOpcodes:enum"
            },
            {
              "kind": "Content",
              "text": ">"
            }
          ],
          "fileUrlPath": "src/utils/constants.ts",
          "fileLine": 66,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "ImportantGatewayOpcodes",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 6
          }
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!IShardingStrategy:interface",
          "docComment": "/**\n * Strategies responsible for spawning, initializing connections, destroying shards, and relaying events\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "IShardingStrategy",
              "canonicalReference": "@discordjs/ws!IShardingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/IShardingStrategy.ts",
          "fileLine": 9,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "IShardingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IShardingStrategy#connect:member(1)",
              "docComment": "/**\n * Initializes all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy#connect"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 13,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "connect"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IShardingStrategy#destroy:member(1)",
              "docComment": "/**\n * Destroys all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'recover'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 17,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "name": "destroy"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IShardingStrategy#fetchStatus:member(1)",
              "docComment": "/**\n * Fetches the status of all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fetchStatus",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy#fetchStatus"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [],
              "name": "fetchStatus"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IShardingStrategy#send:member(1)",
              "docComment": "/**\n * Sends a payload to a shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "send",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy#send"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "payload",
                  "canonicalReference": "@discordjs/ws!~payload"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewaySendPayload",
                  "canonicalReference": "discord-api-types!GatewaySendPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 25,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "send"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!IShardingStrategy#spawn:member(1)",
              "docComment": "/**\n * Spawns all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "spawn",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy#spawn"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardIds",
                  "canonicalReference": "@discordjs/ws!~shardIds"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 29,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "spawn"
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/ws!ManagerShardEventsMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "ManagerShardEventsMap",
              "canonicalReference": "@discordjs/ws!ManagerShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{  ["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": " in keyof "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEventsMap",
              "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": "]: [    "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEventsMap",
              "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "] extends [] ? {      "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";    } : "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEventsMap",
              "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": "["
            },
            {
              "kind": "Reference",
              "text": "K"
            },
            {
              "kind": "Content",
              "text": "][0] & {      "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";    }  ];}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 183,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ManagerShardEventsMap",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 24
          }
        },
        {
          "kind": "Function",
          "canonicalReference": "@discordjs/ws!managerToFetchingStrategyOptions:function(1)",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare function "
            },
            {
              "kind": "Reference",
              "text": "managerToFetchingStrategyOptions",
              "canonicalReference": "@discordjs/ws!managerToFetchingStrategyOptions"
            },
            {
              "kind": "Content",
              "text": "("
            },
            {
              "kind": "Reference",
              "text": "manager",
              "canonicalReference": "@discordjs/ws!~manager"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WebSocketManager",
              "canonicalReference": "@discordjs/ws!WebSocketManager:class"
            },
            {
              "kind": "Content",
              "text": "): "
            },
            {
              "kind": "Reference",
              "text": "Promise",
              "canonicalReference": "!Promise:interface"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "FetchingStrategyOptions",
              "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/strategies/context/IContextFetchingStrategy.ts",
          "fileLine": 35,
          "fileColumn": 1,
          "returnTypeTokenRange": {
            "startIndex": 7,
            "endIndex": 11
          },
          "releaseTag": "Public",
          "overloadIndex": 1,
          "parameters": [
            {
              "parameterName": "manager",
              "parameterTypeTokenRange": {
                "startIndex": 5,
                "endIndex": 6
              },
              "isOptional": false,
              "isRest": false
            }
          ],
          "name": "managerToFetchingStrategyOptions"
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions:interface",
          "docComment": "/**\n * Optional additional configuration for the WebSocketManager\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "OptionalWebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 73,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "OptionalWebSocketManagerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#buildIdentifyThrottler:member(1)",
              "docComment": "/**\n * Builds an identify throttler to use for this manager's shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buildIdentifyThrottler",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#buildIdentifyThrottler"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "manager",
                  "canonicalReference": "@discordjs/ws!~manager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManager",
                  "canonicalReference": "@discordjs/ws!WebSocketManager:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "IIdentifyThrottler",
                  "canonicalReference": "@discordjs/ws!IIdentifyThrottler:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 77,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "buildIdentifyThrottler"
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#buildStrategy:member(1)",
              "docComment": "/**\n * Builds the strategy to use for sharding\n *\n * @example\n * ```ts\n * const manager = new WebSocketManager({\n *  token: process.env.DISCORD_TOKEN,\n *  intents: 0, // for no intents\n *  rest,\n *  buildStrategy: (manager) => new WorkerShardingStrategy(manager, { shardsPerWorker: 2 }),\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "buildStrategy",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#buildStrategy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "manager",
                  "canonicalReference": "@discordjs/ws!~manager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManager",
                  "canonicalReference": "@discordjs/ws!WebSocketManager:class"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "IShardingStrategy",
                  "canonicalReference": "@discordjs/ws!IShardingStrategy:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 91,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 7
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "buildStrategy"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#compression:member",
              "docComment": "/**\n * The compression method to use\n *\n * @defaultValue\n *\n * `null` (no compression)\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "compression",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#compression"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "CompressionMethod",
                  "canonicalReference": "@discordjs/ws!CompressionMethod:enum"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 97,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "compression",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#encoding:member",
              "docComment": "/**\n * The encoding to use\n *\n * @defaultValue\n *\n * `'json'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "encoding",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#encoding"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Encoding",
                  "canonicalReference": "@discordjs/ws!Encoding:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 103,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "encoding",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#handshakeTimeout:member",
              "docComment": "/**\n * How long to wait for a shard to connect before giving up\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "handshakeTimeout",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#handshakeTimeout"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 107,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "handshakeTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#helloTimeout:member",
              "docComment": "/**\n * How long to wait for a shard's HELLO packet before giving up\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "helloTimeout",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#helloTimeout"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 111,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "helloTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#identifyProperties:member",
              "docComment": "/**\n * Properties to send to the gateway when identifying\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "identifyProperties",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#identifyProperties"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayIdentifyProperties",
                  "canonicalReference": "discord-api-types!GatewayIdentifyProperties:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 115,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "identifyProperties",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#initialPresence:member",
              "docComment": "/**\n * Initial presence data to send to the gateway when identifying\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "initialPresence",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#initialPresence"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayPresenceUpdateData",
                  "canonicalReference": "discord-api-types!GatewayPresenceUpdateData:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 119,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "initialPresence",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#largeThreshold:member",
              "docComment": "/**\n * Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "largeThreshold",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#largeThreshold"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 123,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "largeThreshold",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#readyTimeout:member",
              "docComment": "/**\n * How long to wait for a shard's READY packet before giving up\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "readyTimeout",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#readyTimeout"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 127,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "readyTimeout",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#retrieveSessionInfo:member(1)",
              "docComment": "/**\n * Function used to retrieve session information (and attempt to resume) for a given shard\n *\n * @example\n * ```ts\n * const manager = new WebSocketManager({\n *   async retrieveSessionInfo(shardId): Awaitable<SessionInfo | null> {\n *     // Fetch this info from redis or similar\n *     return { sessionId: string, sequence: number };\n *     // Return null if no information is found\n *   },\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retrieveSessionInfo",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#retrieveSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 142,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "retrieveSessionInfo"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#shardCount:member",
              "docComment": "/**\n * The total number of shards across all WebsocketManagers you intend to instantiate. Use `null` to use Discord's recommended shard count\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardCount",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#shardCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 147,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardCount",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 5
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#shardIds:member",
              "docComment": "/**\n * The ids of the shards this WebSocketManager should manage. Use `null` to simply spawn 0 through `shardCount - 1`\n *\n * @example\n * ```ts\n * const manager = new WebSocketManager({\n *   shardIds: [1, 3, 7], // spawns shard 1, 3, and 7, nothing else\n * });\n * ```\n *\n * @example\n * ```ts\n * const manager = new WebSocketManager({\n *   shardIds: {\n *     start: 3,\n *     end: 6,\n *   }, // spawns shards 3, 4, 5, and 6\n * });\n * ```\n *\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardIds",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#shardIds"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[] | "
                },
                {
                  "kind": "Reference",
                  "text": "ShardRange",
                  "canonicalReference": "@discordjs/ws!ShardRange:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 168,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardIds",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 7
              }
            },
            {
              "kind": "MethodSignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#updateSessionInfo:member(1)",
              "docComment": "/**\n * Function used to store session information for a given shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateSessionInfo",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#updateSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sessionInfo",
                  "canonicalReference": "@discordjs/ws!~sessionInfo"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 172,
              "fileColumn": 2,
              "isOptional": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 16
              },
              "releaseTag": "Public",
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "sessionInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "name": "updateSessionInfo"
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#version:member",
              "docComment": "/**\n * The gateway version to use\n *\n * @defaultValue\n *\n * `'10'`\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "version",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions#version"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 178,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "version",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions:interface",
          "docComment": "/**\n * Required options for the WebSocketManager\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "RequiredWebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 55,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "RequiredWebSocketManagerOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#intents:member",
              "docComment": "/**\n * The intents to request\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "intents",
                  "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#intents"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewayIntentBits",
                  "canonicalReference": "discord-api-types!GatewayIntentBits:enum"
                },
                {
                  "kind": "Content",
                  "text": " | 0"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 59,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "intents",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#rest:member",
              "docComment": "/**\n * The REST instance to use for fetching gateway information\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "rest",
                  "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#rest"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "REST",
                  "canonicalReference": "@discordjs/rest!REST:class"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 63,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "rest",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#token:member",
              "docComment": "/**\n * The token to use for identifying with the gateway\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "token",
                  "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions#token"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 67,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "token",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!SendRateLimitState:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SendRateLimitState",
              "canonicalReference": "@discordjs/ws!SendRateLimitState:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 78,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SendRateLimitState",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SendRateLimitState#remaining:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "remaining",
                  "canonicalReference": "@discordjs/ws!SendRateLimitState#remaining"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 79,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "remaining",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SendRateLimitState#resetAt:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "resetAt",
                  "canonicalReference": "@discordjs/ws!SendRateLimitState#resetAt"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 80,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resetAt",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!SessionInfo:interface",
          "docComment": "/**\n * Session information for a given shard, used to resume a session\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "SessionInfo",
              "canonicalReference": "@discordjs/ws!SessionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 29,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "SessionInfo",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SessionInfo#resumeURL:member",
              "docComment": "/**\n * URL to use when resuming\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "resumeURL",
                  "canonicalReference": "@discordjs/ws!SessionInfo#resumeURL"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 33,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "resumeURL",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SessionInfo#sequence:member",
              "docComment": "/**\n * The sequence number of the last message sent by the shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "sequence",
                  "canonicalReference": "@discordjs/ws!SessionInfo#sequence"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 37,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sequence",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SessionInfo#sessionId:member",
              "docComment": "/**\n * Session id for this shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "sessionId",
                  "canonicalReference": "@discordjs/ws!SessionInfo#sessionId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 41,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "sessionId",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SessionInfo#shardCount:member",
              "docComment": "/**\n * The total number of shards at the time of this shard identifying\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardCount",
                  "canonicalReference": "@discordjs/ws!SessionInfo#shardCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 45,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardCount",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!SessionInfo#shardId:member",
              "docComment": "/**\n * The id of the shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!SessionInfo#shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 49,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardId",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!ShardRange:interface",
          "docComment": "/**\n * Represents a range of shard ids\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "ShardRange",
              "canonicalReference": "@discordjs/ws!ShardRange:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 21,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "ShardRange",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!ShardRange#end:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "end",
                  "canonicalReference": "@discordjs/ws!ShardRange#end"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 22,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "end",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!ShardRange#start:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "start",
                  "canonicalReference": "@discordjs/ws!ShardRange#start"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 23,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "start",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SimpleContextFetchingStrategy",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IContextFetchingStrategy",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/context/SimpleContextFetchingStrategy.ts",
          "fileLine": 5,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SimpleContextFetchingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SimpleContextFetchingStrategy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "manager",
                  "canonicalReference": "@discordjs/ws!~manager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManager",
                  "canonicalReference": "@discordjs/ws!WebSocketManager:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FetchingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 11,
              "fileColumn": 8,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FetchingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 3,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#retrieveSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retrieveSessionInfo",
                  "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#retrieveSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 27,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retrieveSessionInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#updateSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateSessionInfo",
                  "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#updateSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sessionInfo",
                  "canonicalReference": "@discordjs/ws!~sessionInfo"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Content",
                  "text": "import(\"@discordjs/util\")."
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 31,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 17
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "sessionInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateSessionInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#waitForIdentify:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "waitForIdentify",
                  "canonicalReference": "@discordjs/ws!SimpleContextFetchingStrategy#waitForIdentify"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/ws!~signal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 35,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "signal",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "waitForIdentify"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler:class",
          "docComment": "/**\n * Local, in-memory identify throttler.\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SimpleIdentifyThrottler",
              "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IIdentifyThrottler",
              "canonicalReference": "@discordjs/ws!IIdentifyThrottler:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/throttling/SimpleIdentifyThrottler.ts",
          "fileLine": 17,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SimpleIdentifyThrottler",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SimpleIdentifyThrottler` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "maxConcurrency",
                  "canonicalReference": "@discordjs/ws!~maxConcurrency"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 18,
              "fileColumn": 68,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "maxConcurrency",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler#waitForIdentify:member(1)",
              "docComment": "/**\n * Resolves once the given shard should be allowed to identify, or rejects if the operation was aborted.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "waitForIdentify",
                  "canonicalReference": "@discordjs/ws!SimpleIdentifyThrottler#waitForIdentify"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/ws!~signal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 25,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "signal",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "waitForIdentify"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!SimpleShardingStrategy:class",
          "docComment": "/**\n * Simple strategy that just spawns shards in the current process\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "SimpleShardingStrategy",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IShardingStrategy",
              "canonicalReference": "@discordjs/ws!IShardingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/SimpleShardingStrategy.ts",
          "fileLine": 12,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "SimpleShardingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `SimpleShardingStrategy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "manager",
                  "canonicalReference": "@discordjs/ws!~manager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManager",
                  "canonicalReference": "@discordjs/ws!WebSocketManager:class"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 15,
              "fileColumn": 69,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#connect:member(1)",
              "docComment": "/**\n * Initializes all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#connect"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 42,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#destroy:member(1)",
              "docComment": "/**\n * Destroys all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'recover'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 55,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#fetchStatus:member(1)",
              "docComment": "/**\n * Fetches the status of all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fetchStatus",
                  "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#fetchStatus"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", import(\"../../ws/WebSocketShard.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 81,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "fetchStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#send:member(1)",
              "docComment": "/**\n * Sends a payload to a shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "send",
                  "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#send"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "payload",
                  "canonicalReference": "@discordjs/ws!~payload"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewaySendPayload",
                  "canonicalReference": "discord-api-types!GatewaySendPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 69,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#spawn:member(1)",
              "docComment": "/**\n * Spawns all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "spawn",
                  "canonicalReference": "@discordjs/ws!SimpleShardingStrategy#spawn"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardIds",
                  "canonicalReference": "@discordjs/ws!~shardIds"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 24,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spawn"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Variable",
          "canonicalReference": "@discordjs/ws!version:var",
          "docComment": "/**\n * The {@link https://github.com/discordjs/discord.js/blob/main/packages/ws#readme | @discordjs/ws} version that you are currently using.\n */\n",
          "excerptTokens": [
            {
              "kind": "Reference",
              "text": "version",
              "canonicalReference": "@discordjs/ws!version"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            }
          ],
          "fileUrlPath": "src/index.ts",
          "fileLine": 23,
          "fileColumn": 14,
          "isReadonly": true,
          "releaseTag": "Public",
          "name": "version",
          "variableTypeTokenRange": {
            "startIndex": 2,
            "endIndex": 3
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!WebSocketManager:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WebSocketManager",
              "canonicalReference": "@discordjs/ws!WebSocketManager:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "AsyncEventEmitter",
              "canonicalReference": "@vladfrangu/async_event_emitter!AsyncEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "ManagerShardEventsMap",
              "canonicalReference": "@discordjs/ws!ManagerShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 189,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WebSocketManager",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!WebSocketManager:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WebSocketManager` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Partial",
                  "canonicalReference": "!Partial:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "OptionalWebSocketManagerOptions",
                  "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "> & "
                },
                {
                  "kind": "Reference",
                  "text": "RequiredWebSocketManagerOptions",
                  "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 213,
              "fileColumn": 47,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#connect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#connect"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 294,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#destroy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'recover'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 313,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#fetchGatewayInformation:member(1)",
              "docComment": "/**\n * Fetches the gateway information from Discord - or returns it from cache if available\n *\n * @param force - Whether to ignore the cache and force a fresh fetch\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fetchGatewayInformation",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#fetchGatewayInformation"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "force",
                  "canonicalReference": "@discordjs/ws!~force"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "APIGatewayBotInfo",
                  "canonicalReference": "discord-api-types!APIGatewayBotInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 226,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "fetchGatewayInformation"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#fetchStatus:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fetchStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#fetchStatus"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<import(\"@discordjs/collection\")."
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", import(\"./WebSocketShard.js\")."
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 321,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "fetchStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#getShardCount:member(1)",
              "docComment": "/**\n * Yields the total number of shards across for your bot, accounting for Discord recommendations\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getShardCount",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#getShardCount"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 260,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShardCount"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#getShardIds:member(1)",
              "docComment": "/**\n * Yields the ids of the shards this manager should manage\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "getShardIds",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#getShardIds"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "force",
                  "canonicalReference": "@discordjs/ws!~force"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "boolean"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[]>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 272,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "force",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "getShardIds"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WebSocketManager#options:member",
              "docComment": "/**\n * The options being used by this manager\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManagerOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketManagerOptions:type"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 193,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "send",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#send"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "payload",
                  "canonicalReference": "@discordjs/ws!~payload"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewaySendPayload",
                  "canonicalReference": "discord-api-types!GatewaySendPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Awaitable",
                  "canonicalReference": "@discordjs/util!Awaitable:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 317,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketManager#updateShardCount:member(1)",
              "docComment": "/**\n * Updates your total shard count on-the-fly, spawning shards as needed\n *\n * @param shardCount - The new shard count to use\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateShardCount",
                  "canonicalReference": "@discordjs/ws!WebSocketManager#updateShardCount"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardCount",
                  "canonicalReference": "@discordjs/ws!~shardCount"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<this>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 247,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 8,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardCount",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 7
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateShardCount"
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/ws!WebSocketManagerOptions:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "WebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!WebSocketManagerOptions:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Reference",
              "text": "OptionalWebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!OptionalWebSocketManagerOptions:interface"
            },
            {
              "kind": "Content",
              "text": " & "
            },
            {
              "kind": "Reference",
              "text": "RequiredWebSocketManagerOptions",
              "canonicalReference": "@discordjs/ws!RequiredWebSocketManagerOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ws/WebSocketManager.ts",
          "fileLine": 181,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketManagerOptions",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 6
          }
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!WebSocketShard:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShard",
              "canonicalReference": "@discordjs/ws!WebSocketShard:class"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "AsyncEventEmitter",
              "canonicalReference": "@vladfrangu/async_event_emitter!AsyncEventEmitter:class"
            },
            {
              "kind": "Content",
              "text": "<"
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEventsMap",
              "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": ">"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 89,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WebSocketShard",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!WebSocketShard:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WebSocketShard` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "strategy",
                  "canonicalReference": "@discordjs/ws!~strategy"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "IContextFetchingStrategy",
                  "canonicalReference": "@discordjs/ws!IContextFetchingStrategy:interface"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/ws!~id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 128,
              "fileColumn": 3,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "strategy",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "id",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketShard#connect:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!WebSocketShard#connect"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 136,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketShard#destroy:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!WebSocketShard#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 227,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WebSocketShard#id:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "id",
                  "canonicalReference": "@discordjs/ws!WebSocketShard#id"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 122,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "id",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WebSocketShard#send:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "send",
                  "canonicalReference": "@discordjs/ws!WebSocketShard#send"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "payload",
                  "canonicalReference": "@discordjs/ws!~payload"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewaySendPayload",
                  "canonicalReference": "discord-api-types!GatewaySendPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 358,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "payload",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WebSocketShard#status:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "get "
                },
                {
                  "kind": "Reference",
                  "text": "status",
                  "canonicalReference": "@discordjs/ws!WebSocketShard#status"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 126,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "status",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            }
          ],
          "extendsTokenRange": {
            "startIndex": 3,
            "endIndex": 7,
            "typeParameters": [
              {
                "startIndex": 5,
                "endIndex": 6
              }
            ]
          },
          "implementsTokenRanges": []
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardDestroyOptions",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 67,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketShardDestroyOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#code:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "code",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#code"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 68,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "code",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#reason:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "reason",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#reason"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 69,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "reason",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#recover:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "recover",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions#recover"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyRecovery",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery:enum"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 70,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "recover",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardDestroyRecovery",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 50,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketShardDestroyRecovery",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery.Reconnect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Reconnect",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery.Reconnect:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "fileLine": 51,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Reconnect"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery.Resume:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Resume",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyRecovery.Resume:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "fileLine": 52,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Resume"
            }
          ]
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!WebSocketShardEvents:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 32,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketShardEvents",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Closed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Closed",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Closed:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"closed\""
                }
              ],
              "fileLine": 33,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Closed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Debug:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Debug",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Debug:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"debug\""
                }
              ],
              "fileLine": 34,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Debug"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Dispatch:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Dispatch",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Dispatch:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"dispatch\""
                }
              ],
              "fileLine": 35,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Dispatch"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Error:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Error",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Error:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"error\""
                }
              ],
              "fileLine": 36,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Error"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.HeartbeatComplete:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "HeartbeatComplete",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.HeartbeatComplete:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"heartbeat\""
                }
              ],
              "fileLine": 37,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "HeartbeatComplete"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Hello:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Hello",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Hello:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"hello\""
                }
              ],
              "fileLine": 38,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Hello"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Ready:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Ready",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Ready:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"ready\""
                }
              ],
              "fileLine": 39,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Ready"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Resumed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Resumed",
                  "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Resumed:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "\"resumed\""
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Resumed"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEventsMap",
              "canonicalReference": "@discordjs/ws!WebSocketShardEventsMap:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Closed",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Closed:member"
            },
            {
              "kind": "Content",
              "text": "]: [{    "
            },
            {
              "kind": "Reference",
              "text": "code",
              "canonicalReference": "@discordjs/ws!~__type#code"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  }];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Debug",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Debug:member"
            },
            {
              "kind": "Content",
              "text": "]: [payload: {    "
            },
            {
              "kind": "Reference",
              "text": "message",
              "canonicalReference": "@discordjs/ws!~__type#message"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "string"
            },
            {
              "kind": "Content",
              "text": ";  }];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Dispatch",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Dispatch:member"
            },
            {
              "kind": "Content",
              "text": "]: [payload: {    "
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/ws!~__type#data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "GatewayDispatchPayload",
              "canonicalReference": "discord-api-types!GatewayDispatchPayload:type"
            },
            {
              "kind": "Content",
              "text": ";  }];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Error",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Error:member"
            },
            {
              "kind": "Content",
              "text": "]: [payload: {    "
            },
            {
              "kind": "Reference",
              "text": "error",
              "canonicalReference": "@discordjs/ws!~__type#error"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "Error",
              "canonicalReference": "!Error:interface"
            },
            {
              "kind": "Content",
              "text": ";  }];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Hello",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Hello:member"
            },
            {
              "kind": "Content",
              "text": "]: [];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Ready",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Ready:member"
            },
            {
              "kind": "Content",
              "text": "]: [payload: {    "
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/ws!~__type#data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "GatewayReadyDispatchData",
              "canonicalReference": "discord-api-types!GatewayReadyDispatchData:interface"
            },
            {
              "kind": "Content",
              "text": ";  }];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.Resumed",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.Resumed:member"
            },
            {
              "kind": "Content",
              "text": "]: [];  ["
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents.HeartbeatComplete",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents.HeartbeatComplete:member"
            },
            {
              "kind": "Content",
              "text": "]: [payload: {    "
            },
            {
              "kind": "Reference",
              "text": "ackAt",
              "canonicalReference": "@discordjs/ws!~__type#ackAt"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";    "
            },
            {
              "kind": "Reference",
              "text": "heartbeatAt",
              "canonicalReference": "@discordjs/ws!~__type#heartbeatAt"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";    "
            },
            {
              "kind": "Reference",
              "text": "latency",
              "canonicalReference": "@discordjs/ws!~__type#latency"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  }];}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 56,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketShardEventsMap",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 52
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardStatus",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/ws/WebSocketShard.ts",
          "fileLine": 43,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WebSocketShardStatus",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Connecting:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Connecting",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Connecting:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "fileLine": 45,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Connecting"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Idle:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Idle",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Idle:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "fileLine": 44,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Idle"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Ready:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Ready",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Ready:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "fileLine": 47,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Ready"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Resuming:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Resuming",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus.Resuming:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "fileLine": 46,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Resuming"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!WorkerBootstrapper:class",
          "docComment": "/**\n * Utility class for bootstrapping a worker thread to be used for sharding\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WorkerBootstrapper",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper:class"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/utils/WorkerBootstrapper.ts",
          "fileLine": 34,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WorkerBootstrapper",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WorkerBootstrapper` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor();"
                }
              ],
              "fileLine": 43,
              "fileColumn": 71,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": []
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#bootstrap:member(1)",
              "docComment": "/**\n * Bootstraps the worker thread with the provided options\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "bootstrap",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#bootstrap"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Readonly",
                  "canonicalReference": "!Readonly:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "BootstrapOptions",
                  "canonicalReference": "@discordjs/ws!BootstrapOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 146,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "bootstrap"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#connect:member(1)",
              "docComment": "/**\n * Helper method to initiate a shard's connection process\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#connect"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 54,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#data:member",
              "docComment": "/**\n * The data passed to the worker thread\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WorkerData",
                  "canonicalReference": "@discordjs/ws!WorkerData:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 38,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "data",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#destroy:member(1)",
              "docComment": "/**\n * Helper method to destroy a shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 66,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 11,
                "endIndex": 15
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 5,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 9,
                    "endIndex": 10
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#setupThreadEvents:member(1)",
              "docComment": "/**\n * Helper method to attach event listeners to the parentPort\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected "
                },
                {
                  "kind": "Reference",
                  "text": "setupThreadEvents",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#setupThreadEvents"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 78,
              "fileColumn": 2,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "releaseTag": "Public",
              "isProtected": true,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "setupThreadEvents"
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WorkerBootstrapper#shards:member",
              "docComment": "/**\n * The shards that are managed by this worker\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "protected readonly "
                },
                {
                  "kind": "Reference",
                  "text": "shards",
                  "canonicalReference": "@discordjs/ws!WorkerBootstrapper#shards"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShard",
                  "canonicalReference": "@discordjs/ws!WebSocketShard:class"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 43,
              "fileColumn": 2,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shards",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 9
              },
              "isStatic": false,
              "isProtected": true,
              "isAbstract": false
            }
          ],
          "implementsTokenRanges": []
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy:class",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WorkerContextFetchingStrategy",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IContextFetchingStrategy",
              "canonicalReference": "@discordjs/ws!IContextFetchingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/context/WorkerContextFetchingStrategy.ts",
          "fileLine": 12,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WorkerContextFetchingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WorkerContextFetchingStrategy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FetchingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 18,
              "fileColumn": 6,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Property",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#options:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "readonly "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "FetchingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 12,
              "fileColumn": 79,
              "isReadonly": true,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "options",
              "propertyTypeTokenRange": {
                "startIndex": 3,
                "endIndex": 4
              },
              "isStatic": false,
              "isProtected": false,
              "isAbstract": false
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#retrieveSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "retrieveSessionInfo",
                  "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#retrieveSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 45,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 6,
                "endIndex": 12
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "retrieveSessionInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#updateSessionInfo:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "updateSessionInfo",
                  "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#updateSessionInfo"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "sessionInfo",
                  "canonicalReference": "@discordjs/ws!~sessionInfo"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "SessionInfo",
                  "canonicalReference": "@discordjs/ws!SessionInfo:interface"
                },
                {
                  "kind": "Content",
                  "text": " | "
                },
                {
                  "kind": "Reference",
                  "text": "null"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 58,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 12,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "sessionInfo",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 11
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "updateSessionInfo"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#waitForIdentify:member(1)",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "waitForIdentify",
                  "canonicalReference": "@discordjs/ws!WorkerContextFetchingStrategy#waitForIdentify"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "signal",
                  "canonicalReference": "@discordjs/ws!~signal"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "AbortSignal",
                  "canonicalReference": "!AbortSignal:interface"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 67,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 14
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "signal",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "waitForIdentify"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!WorkerData:interface",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "WorkerData",
              "canonicalReference": "@discordjs/ws!WorkerData:interface"
            },
            {
              "kind": "Content",
              "text": " extends "
            },
            {
              "kind": "Reference",
              "text": "FetchingStrategyOptions",
              "canonicalReference": "@discordjs/ws!FetchingStrategyOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 16,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerData",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WorkerData#shardIds:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardIds",
                  "canonicalReference": "@discordjs/ws!WorkerData#shardIds"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 17,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardIds",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            }
          ],
          "extendsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/ws!WorkerReceivePayload:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayload",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayload:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{  "
            },
            {
              "kind": "Reference",
              "text": "data",
              "canonicalReference": "@discordjs/ws!~__type#data"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "any"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "event",
              "canonicalReference": "@discordjs/ws!~__type#event"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardEvents",
              "canonicalReference": "@discordjs/ws!WebSocketShardEvents:enum"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.Event",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Event:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.CancelIdentify",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.CancelIdentify:member"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.FetchStatusResponse",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.FetchStatusResponse:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "status",
              "canonicalReference": "@discordjs/ws!~__type#status"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardStatus",
              "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.RetrieveSessionInfo",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.RetrieveSessionInfo:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.WaitForIdentify",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WaitForIdentify:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.Connected",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Connected:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.Destroyed",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Destroyed:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.UpdateSessionInfo",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.UpdateSessionInfo:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "session",
              "canonicalReference": "@discordjs/ws!~__type#session"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "SessionInfo",
              "canonicalReference": "@discordjs/ws!SessionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp.WorkerReady",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WorkerReady:member"
            },
            {
              "kind": "Content",
              "text": ";}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 49,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerReceivePayload",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 98
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "WorkerReceivePayloadOp",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 37,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerReceivePayloadOp",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.CancelIdentify:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "CancelIdentify",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.CancelIdentify:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "8"
                }
              ],
              "fileLine": 46,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "CancelIdentify"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Connected:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Connected",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Connected:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "fileLine": 38,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Connected"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Destroyed:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Destroyed",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Destroyed:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "fileLine": 39,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Destroyed"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Event:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Event",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.Event:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "fileLine": 40,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Event"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.FetchStatusResponse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "FetchStatusResponse",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.FetchStatusResponse:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "6"
                }
              ],
              "fileLine": 44,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "FetchStatusResponse"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.RetrieveSessionInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "RetrieveSessionInfo",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.RetrieveSessionInfo:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "fileLine": 41,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "RetrieveSessionInfo"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.UpdateSessionInfo:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "UpdateSessionInfo",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.UpdateSessionInfo:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "fileLine": 42,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "UpdateSessionInfo"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WaitForIdentify:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "WaitForIdentify",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WaitForIdentify:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "fileLine": 43,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "WaitForIdentify"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WorkerReady:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "WorkerReady",
                  "canonicalReference": "@discordjs/ws!WorkerReceivePayloadOp.WorkerReady:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "7"
                }
              ],
              "fileLine": 45,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "WorkerReady"
            }
          ]
        },
        {
          "kind": "TypeAlias",
          "canonicalReference": "@discordjs/ws!WorkerSendPayload:type",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export type "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayload",
              "canonicalReference": "@discordjs/ws!WorkerSendPayload:type"
            },
            {
              "kind": "Content",
              "text": " = "
            },
            {
              "kind": "Content",
              "text": "{  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "ok",
              "canonicalReference": "@discordjs/ws!~__type#ok"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "boolean"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.ShardIdentifyResponse",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.ShardIdentifyResponse:member"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.FetchStatus",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.FetchStatus:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "nonce",
              "canonicalReference": "@discordjs/ws!~__type#nonce"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.SessionInfoResponse",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.SessionInfoResponse:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "session",
              "canonicalReference": "@discordjs/ws!~__type#session"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "SessionInfo",
              "canonicalReference": "@discordjs/ws!SessionInfo:interface"
            },
            {
              "kind": "Content",
              "text": " | "
            },
            {
              "kind": "Reference",
              "text": "null"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.Connect",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Connect:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.Destroy",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Destroy:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "options",
              "canonicalReference": "@discordjs/ws!~__type#options"
            },
            {
              "kind": "Content",
              "text": "?: "
            },
            {
              "kind": "Reference",
              "text": "WebSocketShardDestroyOptions",
              "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";} | {  "
            },
            {
              "kind": "Reference",
              "text": "op",
              "canonicalReference": "@discordjs/ws!~__type#op"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp.Send",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Send:member"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "payload",
              "canonicalReference": "@discordjs/ws!~__type#payload"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "GatewaySendPayload",
              "canonicalReference": "discord-api-types!GatewaySendPayload:type"
            },
            {
              "kind": "Content",
              "text": ";  "
            },
            {
              "kind": "Reference",
              "text": "shardId",
              "canonicalReference": "@discordjs/ws!~__type#shardId"
            },
            {
              "kind": "Content",
              "text": ": "
            },
            {
              "kind": "Reference",
              "text": "number"
            },
            {
              "kind": "Content",
              "text": ";}"
            },
            {
              "kind": "Content",
              "text": ";"
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 29,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerSendPayload",
          "typeTokenRange": {
            "startIndex": 3,
            "endIndex": 74
          }
        },
        {
          "kind": "Enum",
          "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp:enum",
          "docComment": "",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare enum "
            },
            {
              "kind": "Reference",
              "text": "WorkerSendPayloadOp",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp:enum"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 20,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerSendPayloadOp",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Connect:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Connect",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Connect:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "0"
                }
              ],
              "fileLine": 21,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Connect"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Destroy:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Destroy",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Destroy:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "1"
                }
              ],
              "fileLine": 22,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Destroy"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.FetchStatus:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "FetchStatus",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.FetchStatus:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "5"
                }
              ],
              "fileLine": 26,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "FetchStatus"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Send:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "Send",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.Send:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "2"
                }
              ],
              "fileLine": 23,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "Send"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.SessionInfoResponse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "SessionInfoResponse",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.SessionInfoResponse:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "3"
                }
              ],
              "fileLine": 24,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "SessionInfoResponse"
            },
            {
              "kind": "EnumMember",
              "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.ShardIdentifyResponse:member",
              "docComment": "",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "ShardIdentifyResponse",
                  "canonicalReference": "@discordjs/ws!WorkerSendPayloadOp.ShardIdentifyResponse:member"
                },
                {
                  "kind": "Content",
                  "text": " = "
                },
                {
                  "kind": "Content",
                  "text": "4"
                }
              ],
              "fileLine": 25,
              "fileColumn": 2,
              "initializerTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              },
              "releaseTag": "Public",
              "name": "ShardIdentifyResponse"
            }
          ]
        },
        {
          "kind": "Class",
          "canonicalReference": "@discordjs/ws!WorkerShardingStrategy:class",
          "docComment": "/**\n * Strategy used to spawn threads in worker_threads\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export declare class "
            },
            {
              "kind": "Reference",
              "text": "WorkerShardingStrategy",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy:class"
            },
            {
              "kind": "Content",
              "text": " implements "
            },
            {
              "kind": "Reference",
              "text": "IShardingStrategy",
              "canonicalReference": "@discordjs/ws!IShardingStrategy:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 78,
          "fileColumn": 1,
          "releaseTag": "Public",
          "isAbstract": false,
          "name": "WorkerShardingStrategy",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "Constructor",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy:constructor(1)",
              "docComment": "/**\n * Constructs a new instance of the `WorkerShardingStrategy` class\n */\n",
              "excerptTokens": [
                {
                  "kind": "Content",
                  "text": "constructor("
                },
                {
                  "kind": "Reference",
                  "text": "manager",
                  "canonicalReference": "@discordjs/ws!~manager"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketManager",
                  "canonicalReference": "@discordjs/ws!WebSocketManager:class"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "WorkerShardingStrategyOptions",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ");"
                }
              ],
              "fileLine": 95,
              "fileColumn": 41,
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "manager",
                  "parameterTypeTokenRange": {
                    "startIndex": 3,
                    "endIndex": 4
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 7,
                    "endIndex": 8
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ]
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#connect:member(1)",
              "docComment": "/**\n * Initializes all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "connect",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#connect"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 128,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 6
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "connect"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#destroy:member(1)",
              "docComment": "/**\n * Destroys all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "destroy",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#destroy"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "options",
                  "canonicalReference": "@discordjs/ws!~options"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "Omit",
                  "canonicalReference": "!Omit:type"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardDestroyOptions",
                  "canonicalReference": "@discordjs/ws!WebSocketShardDestroyOptions:interface"
                },
                {
                  "kind": "Content",
                  "text": ", 'recover'>"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 149,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 9,
                "endIndex": 13
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "options",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 8
                  },
                  "isOptional": true,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "destroy"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#fetchStatus:member(1)",
              "docComment": "/**\n * Fetches the status of all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "fetchStatus",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#fetchStatus"
                },
                {
                  "kind": "Content",
                  "text": "(): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "Collection",
                  "canonicalReference": "@discordjs/collection!Collection:class"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "WebSocketShardStatus",
                  "canonicalReference": "@discordjs/ws!WebSocketShardStatus:enum"
                },
                {
                  "kind": "Content",
                  "text": ">>"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 192,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 10
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [],
              "isOptional": false,
              "isAbstract": false,
              "name": "fetchStatus"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#send:member(1)",
              "docComment": "/**\n * Sends a payload to a shard\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "send",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#send"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardId",
                  "canonicalReference": "@discordjs/ws!~shardId"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": ", "
                },
                {
                  "kind": "Reference",
                  "text": "data",
                  "canonicalReference": "@discordjs/ws!~data"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "GatewaySendPayload",
                  "canonicalReference": "discord-api-types!GatewaySendPayload:type"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 175,
              "fileColumn": 9,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 10,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardId",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 5
                  },
                  "isOptional": false,
                  "isRest": false
                },
                {
                  "parameterName": "data",
                  "parameterTypeTokenRange": {
                    "startIndex": 8,
                    "endIndex": 9
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "send"
            },
            {
              "kind": "Method",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#spawn:member(1)",
              "docComment": "/**\n * Spawns all the shards\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "spawn",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategy#spawn"
                },
                {
                  "kind": "Content",
                  "text": "("
                },
                {
                  "kind": "Reference",
                  "text": "shardIds",
                  "canonicalReference": "@discordjs/ws!~shardIds"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": "[]"
                },
                {
                  "kind": "Content",
                  "text": "): "
                },
                {
                  "kind": "Reference",
                  "text": "Promise",
                  "canonicalReference": "!Promise:interface"
                },
                {
                  "kind": "Content",
                  "text": "<"
                },
                {
                  "kind": "Reference",
                  "text": "void"
                },
                {
                  "kind": "Content",
                  "text": ">"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 105,
              "fileColumn": 15,
              "isStatic": false,
              "returnTypeTokenRange": {
                "startIndex": 7,
                "endIndex": 11
              },
              "releaseTag": "Public",
              "isProtected": false,
              "overloadIndex": 1,
              "parameters": [
                {
                  "parameterName": "shardIds",
                  "parameterTypeTokenRange": {
                    "startIndex": 4,
                    "endIndex": 6
                  },
                  "isOptional": false,
                  "isRest": false
                }
              ],
              "isOptional": false,
              "isAbstract": false,
              "name": "spawn"
            }
          ],
          "implementsTokenRanges": [
            {
              "startIndex": 3,
              "endIndex": 4,
              "typeParameters": []
            }
          ]
        },
        {
          "kind": "Interface",
          "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions:interface",
          "docComment": "/**\n * Options for a {@link WorkerShardingStrategy}\n */\n",
          "excerptTokens": [
            {
              "kind": "Content",
              "text": "export interface "
            },
            {
              "kind": "Reference",
              "text": "WorkerShardingStrategyOptions",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions:interface"
            },
            {
              "kind": "Content",
              "text": " "
            }
          ],
          "fileUrlPath": "src/strategies/sharding/WorkerShardingStrategy.ts",
          "fileLine": 64,
          "fileColumn": 1,
          "releaseTag": "Public",
          "name": "WorkerShardingStrategyOptions",
          "preserveMemberOrder": false,
          "members": [
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions#shardsPerWorker:member",
              "docComment": "/**\n * Dictates how many shards should be spawned per worker thread.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "shardsPerWorker",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions#shardsPerWorker"
                },
                {
                  "kind": "Content",
                  "text": ": "
                },
                {
                  "kind": "Reference",
                  "text": "number"
                },
                {
                  "kind": "Content",
                  "text": " | 'all'"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 68,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": false,
              "releaseTag": "Public",
              "name": "shardsPerWorker",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 4
              }
            },
            {
              "kind": "PropertySignature",
              "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions#workerPath:member",
              "docComment": "/**\n * Path to the worker file to use. The worker requires quite a bit of setup, it is recommended you leverage the {@link WorkerBootstrapper} class.\n */\n",
              "excerptTokens": [
                {
                  "kind": "Reference",
                  "text": "workerPath",
                  "canonicalReference": "@discordjs/ws!WorkerShardingStrategyOptions#workerPath"
                },
                {
                  "kind": "Content",
                  "text": "?: "
                },
                {
                  "kind": "Reference",
                  "text": "string"
                },
                {
                  "kind": "Content",
                  "text": ";"
                }
              ],
              "fileLine": 72,
              "fileColumn": 2,
              "isReadonly": false,
              "isOptional": true,
              "releaseTag": "Public",
              "name": "workerPath",
              "propertyTypeTokenRange": {
                "startIndex": 2,
                "endIndex": 3
              }
            }
          ],
          "extendsTokenRanges": []
        }
      ]
    }
  ]
}
