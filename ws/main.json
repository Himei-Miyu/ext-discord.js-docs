{"meta":{"generator":"0.12.1","format":30,"date":1663363035883},"classes":[{"name":"IdentifyThrottler","construct":{"name":"new IdentifyThrottler","params":[{"name":"manager","optional":false,"type":[[["WebSocketManager"]]]}]},"props":[{"name":"identifyState","access":"private","type":[[["{"],["\nremaining",": "],["number",","],["\nresetsAt",": "],["number\n","}"]]],"meta":{"line":5,"file":"IdentifyThrottler.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/IdentifyThrottler.ts#L5"}}],"methods":[{"name":"waitForIdentify","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":12,"file":"IdentifyThrottler.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/IdentifyThrottler.ts#L12"}}],"meta":{"line":4,"file":"IdentifyThrottler.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/IdentifyThrottler.ts#L4"}},{"name":"SimpleContextFetchingStrategy","description":"Strategies responsible solely for making manager information accessible","implements":[[["IContextFetchingStrategy"]]],"construct":{"name":"new SimpleContextFetchingStrategy","params":[{"name":"manager","optional":false,"type":[[["WebSocketManager"]]]},{"name":"options","optional":false,"type":[[["FetchingStrategyOptions"]]]}]},"props":[{"name":"options","readonly":true,"type":[[["FetchingStrategyOptions"]]],"meta":{"line":5,"file":"SimpleContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/SimpleContextFetchingStrategy.ts#L5"}}],"methods":[{"name":"retrieveSessionInfo","params":[{"name":"shardId","optional":false,"type":[[["number"]]]}],"returns":[[[["Promise","<"],["null"," | "],["SessionInfo",">"]]]],"meta":{"line":7,"file":"SimpleContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/SimpleContextFetchingStrategy.ts#L7"}},{"name":"updateSessionInfo","params":[{"name":"shardId","optional":false,"type":[[["number"]]]},{"name":"sessionInfo","optional":false,"type":[[["null"," | "],["SessionInfo"]]]}],"returns":[[[["Awaitable","<"],["void",">"]]]],"meta":{"line":11,"file":"SimpleContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/SimpleContextFetchingStrategy.ts#L11"}}],"meta":{"line":4,"file":"SimpleContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/SimpleContextFetchingStrategy.ts#L4"}},{"name":"SimpleShardingStrategy","description":"Simple strategy that just spawns shards in the current process","implements":[[["IShardingStrategy"]]],"construct":{"name":"new SimpleShardingStrategy","params":[{"name":"manager","optional":false,"type":[[["WebSocketManager"]]]}]},"props":[{"name":"manager","access":"private","readonly":true,"type":[[["WebSocketManager"]]],"meta":{"line":14,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L14"}},{"name":"shards","access":"private","readonly":true,"type":[[["Collection","<"],["number",", "],["WebSocketShard",">"]]],"meta":{"line":16,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L16"}},{"name":"throttler","access":"private","readonly":true,"type":[[["IdentifyThrottler"]]],"meta":{"line":18,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L18"}}],"methods":[{"name":"connect","description":"Initializes all the shards","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":45,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L45"}},{"name":"destroy","description":"Destroys all the shards","params":[{"name":"options","optional":true,"type":[[["Omit","<"],["WebSocketShardDestroyOptions",", "],["'recover'",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":59,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L59"}},{"name":"send","description":"Sends a payload to a shard","params":[{"name":"shardId","optional":false,"type":[[["number"]]]},{"name":"payload","optional":false,"type":[[["GatewaySendPayload"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":73,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L73"}},{"name":"spawn","description":"Spawns all the shards","params":[{"name":"shardIds","optional":false,"type":[[["Array","<"],["number",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":28,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L28"}}],"meta":{"line":13,"file":"SimpleShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/SimpleShardingStrategy.ts#L13"}},{"name":"WebSocketManager","extends":[[["AsyncEventEmitter","<"],["ManagerShardEventsMap",">"]]],"construct":{"name":"new WebSocketManager","params":[{"name":"options","optional":false,"type":[[["Partial","<"],["OptionalWebSocketManagerOptions","> & "],["RequiredWebSocketManagerOptions"]]]}]},"props":[{"name":"#private","access":"private","type":[[["any"]]],"meta":{"line":2,"file":"index.d.ts"}},{"name":"gatewayInformation","description":"Internal cache for a GET /gateway/bot result","access":"private","default":"null","type":[[["null"," | {"],["\ndata",": "],["APIGatewayBotInfo",","],["\nexpiresAt",": "],["number\n","}"]]],"meta":{"line":180,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L180"}},{"name":"options","description":"The options being used by this manager","readonly":true,"type":[[["WebSocketManagerOptions"]]],"meta":{"line":175,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L175"}},{"name":"shardIds","description":"Internal cache for the shard ids","access":"private","default":"null","type":[[["null"," | "],["Array","<"],["number",">"]]],"meta":{"line":188,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L188"}},{"name":"strategy","description":"Strategy used to manage shards","access":"private","type":[[["IShardingStrategy"]]],"meta":{"line":195,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L195"}}],"methods":[{"name":"addListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":8,"file":"index.d.ts"}},{"name":"connect","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":278,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L278"}},{"name":"destroy","params":[{"name":"options","optional":true,"type":[[["Omit","<"],["WebSocketShardDestroyOptions",", "],["'recover'",">"]]]}],"returns":[[[["Awaitable","<"],["void",">"]]]],"meta":{"line":295,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L295"}},{"name":"emit","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"args","optional":false,"variable":true,"type":[[["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":18,"file":"index.d.ts"}},{"name":"eventNames","returns":[[[["Array","<"],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," | "],["keyof"," "],["WebSocketShardEventsMap",">"]]]],"meta":{"line":22,"file":"index.d.ts"}},{"name":"fetchGatewayInformation","description":"Fetches the gateway information from Discord - or returns it from cache if available","params":[{"name":"force","description":"Whether to ignore the cache and force a fresh fetch","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["APIGatewayBotInfo",">"]]]],"meta":{"line":212,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L212"}},{"name":"getMaxListeners","returns":[[[["number"]]]],"meta":{"line":15,"file":"index.d.ts"}},{"name":"getShardCount","description":"Yields the total number of shards across for your bot, accounting for Discord recommendations","returns":[[[["Promise","<"],["number",">"]]]],"meta":{"line":245,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L245"}},{"name":"getShardIds","description":"Yields the ids of the shards this manager should manage","params":[{"name":"force","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["Array","<"],["number",">>"]]]],"meta":{"line":257,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L257"}},{"name":"listenerCount","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["number"]]]],"meta":{"line":19,"file":"index.d.ts"}},{"name":"listeners","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["Array","<("],["args",": [{"],["\nmessage",": "],["string\n","} & {"],["\nshardId",": "],["number\n","}] | [{"],["\ndata",": "],["GatewayDispatchPayload\n","} & {"],["\nshardId",": "],["number\n","}] | [{"],["\nshardId",": "],["number\n","}]) => "],["Awaitable","<"],["void",">>"]]]],"meta":{"line":16,"file":"index.d.ts"}},{"name":"off","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":12,"file":"index.d.ts"}},{"name":"on","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":9,"file":"index.d.ts"}},{"name":"once","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":10,"file":"index.d.ts"}},{"name":"prependListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":20,"file":"index.d.ts"}},{"name":"prependOnceListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":21,"file":"index.d.ts"}},{"name":"rawListeners","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["Array","<"],["StoredListener","<[{"],["\nmessage",": "],["string\n","} & {"],["\nshardId",": "],["number\n","}] | [{"],["\ndata",": "],["GatewayDispatchPayload\n","} & {"],["\nshardId",": "],["number\n","}] | [{"],["\nshardId",": "],["number\n","}]>>"]]]],"meta":{"line":17,"file":"index.d.ts"}},{"name":"removeAllListeners","params":[{"name":"event","optional":true,"type":[[["K"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":13,"file":"index.d.ts"}},{"name":"removeListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["ManagerShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":11,"file":"index.d.ts"}},{"name":"send","params":[{"name":"shardId","optional":false,"type":[[["number"]]]},{"name":"payload","optional":false,"type":[[["GatewaySendPayload"]]]}],"returns":[[[["Awaitable","<"],["void",">"]]]],"meta":{"line":299,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L299"}},{"name":"setMaxListeners","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":14,"file":"index.d.ts"}},{"name":"setStrategy","params":[{"name":"strategy","optional":false,"type":[[["IShardingStrategy"]]]}],"returns":[[[["WebSocketManager"]]]],"meta":{"line":202,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L202"}},{"name":"updateShardCount","description":"Updates your total shard count on-the-fly, spawning shards as needed","params":[{"name":"shardCount","description":"The new shard count to use","optional":false,"type":[[["null"," | "],["number"]]]}],"returns":[[[["Promise","<"],["WebSocketManager",">"]]]],"meta":{"line":232,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L232"}},{"name":"waitForAllListenersToComplete","returns":[[[["Promise","<"],["boolean",">"]]]],"meta":{"line":23,"file":"index.d.ts"}}],"meta":{"line":171,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L171"}},{"name":"WebSocketShard","extends":[[["AsyncEventEmitter","<"],["WebSocketShardEventsMap",">"]]],"construct":{"name":"new WebSocketShard","params":[{"name":"strategy","optional":false,"type":[[["IContextFetchingStrategy"]]]},{"name":"id","optional":false,"type":[[["number"]]]}]},"props":[{"name":"#private","access":"private","type":[[["any"]]],"meta":{"line":2,"file":"index.d.ts"}},{"name":"connection","access":"private","default":"null","type":[[["null"," | "],["WebSocket"]]],"meta":{"line":72,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L72"}},{"name":"heartbeatInterval","access":"private","default":"null","type":[[["null"," | "],["Timer"]]],"meta":{"line":93,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L93"}},{"name":"id","access":"private","readonly":true,"type":[[["number"]]],"meta":{"line":74,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L74"}},{"name":"inflate","access":"private","default":"null","type":[[["null"," | "],["Inflate"]]],"meta":{"line":78,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L78"}},{"name":"isAck","access":"private","default":"true","type":[[["boolean"]]],"meta":{"line":86,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L86"}},{"name":"lastHeartbeatAt","access":"private","default":"-1","type":[[["number"]]],"meta":{"line":95,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L95"}},{"name":"replayedEvents","access":"private","default":"0","type":[[["number"]]],"meta":{"line":84,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L84"}},{"name":"sendQueue","access":"private","readonly":true,"type":[[["AsyncQueue"]]],"meta":{"line":99,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L99"}},{"name":"sendRateLimitState","access":"private","type":[[["{"],["\nremaining",": "],["number",","],["\nresetAt",": "],["number\n","}"]]],"meta":{"line":88,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L88"}},{"name":"session","access":"private","default":"null","type":[[["null"," | "],["SessionInfo"]]],"meta":{"line":97,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L97"}},{"name":"status","access":"private","default":"WebSocketShardStatus.Idle","type":[[["WebSocketShardStatus"]]],"meta":{"line":82,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L82"}},{"name":"strategy","readonly":true,"type":[[["IContextFetchingStrategy"]]],"meta":{"line":103,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L103"}},{"name":"textDecoder","access":"private","readonly":true,"type":[[["TextDecoder"]]],"meta":{"line":80,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L80"}},{"name":"timeouts","access":"private","readonly":true,"type":[[["Collection","<"],["WebSocketShardEvents",", "],["Timeout",">"]]],"meta":{"line":101,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L101"}},{"name":"useIdentifyCompress","access":"private","default":"false","type":[[["boolean"]]],"meta":{"line":76,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L76"}}],"methods":[{"name":"addListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":8,"file":"index.d.ts"}},{"name":"connect","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":111,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L111"}},{"name":"debug","access":"private","params":[{"name":"messages","optional":false,"type":[[["["],["string",", "],["unknown","]"]]]}],"returns":[[[["void"]]]],"meta":{"line":566,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L566"}},{"name":"destroy","params":[{"name":"options","optional":true,"default":"{}","type":[[["WebSocketShardDestroyOptions"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":158,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L158"}},{"name":"emit","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"args","optional":false,"variable":true,"type":[[["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]"]]]}],"returns":[[[["boolean"]]]],"meta":{"line":18,"file":"index.d.ts"}},{"name":"eventNames","returns":[[[["Array","<"],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," | "],["keyof"," "],["WebSocketShardEventsMap",">"]]]],"meta":{"line":22,"file":"index.d.ts"}},{"name":"getMaxListeners","returns":[[[["number"]]]],"meta":{"line":15,"file":"index.d.ts"}},{"name":"heartbeat","access":"private","params":[{"name":"requested","optional":true,"default":"false","type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":302,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L302"}},{"name":"identify","access":"private","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":255,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L255"}},{"name":"listenerCount","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["number"]]]],"meta":{"line":19,"file":"index.d.ts"}},{"name":"listeners","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["Array","<("],["args",": [] | ["],["unknown","] | ["],["unknown","]) => "],["Awaitable","<"],["void",">>"]]]],"meta":{"line":16,"file":"index.d.ts"}},{"name":"off","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":12,"file":"index.d.ts"}},{"name":"on","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":9,"file":"index.d.ts"}},{"name":"onClose","access":"private","params":[{"name":"code","optional":false,"type":[[["number"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":479,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L479"}},{"name":"onError","access":"private","params":[{"name":"err","optional":false,"type":[[["Error"]]]}],"returns":[[[["void"]]]],"meta":{"line":475,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L475"}},{"name":"onMessage","access":"private","params":[{"name":"data","optional":false,"type":[[["RawData"]]]},{"name":"isBinary","optional":false,"type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":377,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L377"}},{"name":"once","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":10,"file":"index.d.ts"}},{"name":"prependListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":20,"file":"index.d.ts"}},{"name":"prependOnceListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":21,"file":"index.d.ts"}},{"name":"rawListeners","params":[{"name":"eventName","optional":false,"type":[[["K"]]]}],"returns":[[[["Array","<"],["StoredListener","<[] | ["],["unknown","] | ["],["unknown","]>>"]]]],"meta":{"line":17,"file":"index.d.ts"}},{"name":"removeAllListeners","params":[{"name":"event","optional":true,"type":[[["K"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":13,"file":"index.d.ts"}},{"name":"removeListener","params":[{"name":"eventName","optional":false,"type":[[["K"]]]},{"name":"listener","optional":false,"type":[[["("],["args",": "],["K"," "],["extends"," "],["keyof"," "],["AsyncEventEmitterPredefinedEvents"," ? "],["AsyncEventEmitterPredefinedEvents","["],["K","] : "],["WebSocketShardEventsMap","["],["K","]) => "],["void"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":11,"file":"index.d.ts"}},{"name":"resume","access":"private","params":[{"name":"session","optional":false,"type":[[["SessionInfo"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":288,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L288"}},{"name":"send","params":[{"name":"payload","optional":false,"type":[[["GatewaySendPayload"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":229,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L229"}},{"name":"setMaxListeners","params":[{"name":"n","optional":false,"type":[[["number"]]]}],"returns":[[[["WebSocketShard"]]]],"meta":{"line":14,"file":"index.d.ts"}},{"name":"unpackMessage","access":"private","params":[{"name":"data","optional":false,"type":[[["ArrayBuffer"," | "],["Buffer"]]]},{"name":"isBinary","optional":false,"type":[[["boolean"]]]}],"returns":[[[["Promise","<"],["null"," | "],["GatewayReceivePayload",">"]]]],"meta":{"line":316,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L316"}},{"name":"waitForAllListenersToComplete","returns":[[[["Promise","<"],["boolean",">"]]]],"meta":{"line":23,"file":"index.d.ts"}},{"name":"waitForEvent","access":"private","params":[{"name":"event","optional":false,"type":[[["WebSocketShardEvents"]]]},{"name":"timeoutDuration","optional":true,"type":[[["null"," | "],["number"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":214,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L214"}}],"meta":{"line":71,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L71"}},{"name":"WorkerContextFetchingStrategy","description":"Strategies responsible solely for making manager information accessible","implements":[[["IContextFetchingStrategy"]]],"construct":{"name":"new WorkerContextFetchingStrategy","params":[{"name":"options","optional":false,"type":[[["FetchingStrategyOptions"]]]}]},"props":[{"name":"options","readonly":true,"type":[[["FetchingStrategyOptions"]]],"meta":{"line":15,"file":"WorkerContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/WorkerContextFetchingStrategy.ts#L15"}},{"name":"sessionPromises","access":"private","readonly":true,"type":[[["Collection","<"],["number",", ("],["session",": "],["null"," | "],["SessionInfo",") => "],["void",">"]]],"meta":{"line":13,"file":"WorkerContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/WorkerContextFetchingStrategy.ts#L13"}}],"methods":[{"name":"retrieveSessionInfo","params":[{"name":"shardId","optional":false,"type":[[["number"]]]}],"returns":[[[["Promise","<"],["null"," | "],["SessionInfo",">"]]]],"meta":{"line":29,"file":"WorkerContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/WorkerContextFetchingStrategy.ts#L29"}},{"name":"updateSessionInfo","params":[{"name":"shardId","optional":false,"type":[[["number"]]]},{"name":"sessionInfo","optional":false,"type":[[["null"," | "],["SessionInfo"]]]}],"returns":[[[["void"]]]],"meta":{"line":42,"file":"WorkerContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/WorkerContextFetchingStrategy.ts#L42"}}],"meta":{"line":12,"file":"WorkerContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/WorkerContextFetchingStrategy.ts#L12"}},{"name":"WorkerShardingStrategy","description":"Strategy used to spawn threads in worker_threads","implements":[[["IShardingStrategy"]]],"construct":{"name":"new WorkerShardingStrategy","params":[{"name":"manager","optional":false,"type":[[["WebSocketManager"]]]},{"name":"options","optional":false,"type":[[["WorkerShardingStrategyOptions"]]]}]},"props":[{"name":"#workerByShardId","access":"private","readonly":true,"type":[[["Collection","<"],["number",", "],["Worker",">"]]],"meta":{"line":65,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L65"}},{"name":"#workers","access":"private","default":"[]","type":[[["Array","<"],["Worker",">"]]],"meta":{"line":63,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L63"}},{"name":"connectPromises","access":"private","readonly":true,"type":[[["Collection","<"],["number",", (..."],["args",": "],["unknown","[]) => "],["void",">"]]],"meta":{"line":67,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L67"}},{"name":"destroyPromises","access":"private","readonly":true,"type":[[["Collection","<"],["number",", (..."],["args",": "],["unknown","[]) => "],["void",">"]]],"meta":{"line":69,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L69"}},{"name":"manager","access":"private","readonly":true,"type":[[["WebSocketManager"]]],"meta":{"line":59,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L59"}},{"name":"options","access":"private","readonly":true,"type":[[["WorkerShardingStrategyOptions"]]],"meta":{"line":61,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L61"}},{"name":"throttler","access":"private","readonly":true,"type":[[["IdentifyThrottler"]]],"meta":{"line":71,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L71"}}],"methods":[{"name":"connect","description":"Initializes all the shards","returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":117,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L117"}},{"name":"destroy","description":"Destroys all the shards","params":[{"name":"options","optional":true,"default":"{}","type":[[["Omit","<"],["WebSocketShardDestroyOptions",", "],["'recover'",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":140,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L140"}},{"name":"onMessage","access":"private","params":[{"name":"worker","optional":false,"type":[[["Worker"]]]},{"name":"payload","optional":false,"type":[[["WorkerRecievePayload"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":180,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L180"}},{"name":"send","description":"Sends a payload to a shard","params":[{"name":"shardId","optional":false,"type":[[["number"]]]},{"name":"data","optional":false,"type":[[["GatewaySendPayload"]]]}],"returns":[[[["void"]]]],"meta":{"line":166,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L166"}},{"name":"spawn","description":"Spawns all the shards","params":[{"name":"shardIds","optional":false,"type":[[["Array","<"],["number",">"]]]}],"returns":[[[["Promise","<"],["void",">"]]]],"meta":{"line":82,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L82"}}],"meta":{"line":58,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L58"}}],"functions":[{"name":"lazy","description":"Lazily evaluate a callback, storing its result","params":[{"name":"cb","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["T"]]]}],"returns":[[[["(..."],["args",": "],["unknown","[]) => "],["T"]]]],"meta":{"line":20,"file":"utils.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/utils.ts#L20"}},{"name":"managerToFetchingStrategyOptions","params":[{"name":"manager","optional":false,"type":[[["WebSocketManager"]]]}],"returns":[[[["Promise","<"],["FetchingStrategyOptions",">"]]]],"meta":{"line":23,"file":"IContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/IContextFetchingStrategy.ts#L23"}},{"name":"range","description":"Yields the numbers in the given range as an array","examples":["```ts\nrange({ start: 3, end: 5 }); // [3, 4, 5]\n```"],"params":[{"name":"__namedParameters","optional":false,"type":[[["ShardRange"]]]}],"returns":[[[["Array","<"],["number",">"]]]],"meta":{"line":13,"file":"utils.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/utils.ts#L13"}}],"interfaces":[],"typedefs":[{"name":"CloseCodes","meta":{"line":66,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L66"},"props":[{"name":"Normal","type":[[[1000]]]},{"name":"Resuming","type":[[[4200]]]}]},{"name":"CompressionMethod","description":"Valid compression methods","meta":{"line":19,"file":"constants.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/constants.ts#L19"},"props":[{"name":"ZlibStream","type":[[["zlib-stream"]]]}]},{"name":"Encoding","description":"Valid encoding types","meta":{"line":12,"file":"constants.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/constants.ts#L12"},"props":[{"name":"JSON","type":[[["json"]]]}]},{"name":"WebSocketShardDestroyRecovery","meta":{"line":46,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L46"},"props":[{"name":"Reconnect","type":[[[0]]]},{"name":"Resume","type":[[[1]]]}]},{"name":"WebSocketShardEvents","meta":{"line":31,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L31"},"props":[{"name":"Debug","type":[[["debug"]]]},{"name":"Dispatch","type":[[["dispatch"]]]},{"name":"Hello","type":[[["hello"]]]},{"name":"Ready","type":[[["ready"]]]},{"name":"Resumed","type":[[["resumed"]]]}]},{"name":"WebSocketShardStatus","meta":{"line":39,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L39"},"props":[{"name":"Connecting","type":[[[1]]]},{"name":"Idle","type":[[[0]]]},{"name":"Ready","type":[[[3]]]},{"name":"Resuming","type":[[[2]]]}]},{"name":"WorkerRecievePayloadOp","meta":{"line":29,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L29"},"props":[{"name":"Connected","type":[[[0]]]},{"name":"Destroyed","type":[[[1]]]},{"name":"Event","type":[[[2]]]},{"name":"RetrieveSessionInfo","type":[[[3]]]},{"name":"UpdateSessionInfo","type":[[[4]]]}]},{"name":"WorkerSendPayloadOp","meta":{"line":16,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L16"},"props":[{"name":"Connect","type":[[[0]]]},{"name":"Destroy","type":[[[1]]]},{"name":"Send","type":[[[2]]]},{"name":"SessionInfoResponse","type":[[[3]]]}]},{"name":"FetchingStrategyOptions","meta":{"line":5,"file":"IContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/IContextFetchingStrategy.ts#L5"},"props":[{"name":"compression","description":"The compression method to use","optional":false,"type":[[["null"," | "],["ZlibStream"]]]},{"name":"encoding","description":"The encoding to use","optional":false,"type":[[["JSON"]]]},{"name":"gatewayInformation","optional":false,"type":[[["APIGatewayBotInfo"]]]},{"name":"handshakeTimeout","description":"How long to wait for a shard to connect before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"helloTimeout","description":"How long to wait for a shard's HELLO packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"identifyProperties","description":"Properties to send to the gateway when identifying","optional":false,"type":[[["GatewayIdentifyProperties"]]]},{"name":"initialPresence","description":"Initial presence data to send to the gateway when identifying","optional":false,"type":[[["null"," | "],["GatewayPresenceUpdateData"]]]},{"name":"intents","description":"The intents to request","optional":false,"type":[[["GatewayIntentBits"]]]},{"name":"largeThreshold","description":"Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"readyTimeout","description":"How long to wait for a shard's READY packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"shardCount","optional":false,"type":[[["number"]]]},{"name":"token","description":"The token to use for identifying with the gateway","optional":false,"type":[[["string"]]]},{"name":"version","description":"The gateway version to use","optional":false,"type":[[["string"]]]}]},{"name":"IContextFetchingStrategy","description":"Strategies responsible solely for making manager information accessible","meta":{"line":17,"file":"IContextFetchingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/context/IContextFetchingStrategy.ts#L17"},"props":[{"name":"options","optional":false,"type":[[["FetchingStrategyOptions"]]]},{"name":"retrieveSessionInfo","optional":false,"type":[[["("],["shardId",": "],["number",") => "],["Awaitable","<"],["null"," | "],["SessionInfo",">"]]]},{"name":"updateSessionInfo","optional":false,"type":[[["("],["shardId",": "],["number",", "],["sessionInfo",": "],["null"," | "],["SessionInfo",") => "],["Awaitable","<"],["void",">"]]]}]},{"name":"IShardingStrategy","description":"Strategies responsible for spawning, initializing connections, destroying shards, and relaying events","meta":{"line":8,"file":"IShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/IShardingStrategy.ts#L8"},"props":[{"name":"connect","description":"Initializes all the shards","optional":false,"type":[[["(..."],["args",": "],["unknown","[]) => "],["Awaitable","<"],["void",">"]]]},{"name":"destroy","description":"Destroys all the shards","optional":false,"type":[[["("],["options",": "],["Omit","<"],["WebSocketShardDestroyOptions",", "],["'recover'",">) => "],["Awaitable","<"],["void",">"]]]},{"name":"send","description":"Sends a payload to a shard","optional":false,"type":[[["("],["shardId",": "],["number",", "],["payload",": "],["GatewaySendPayload",") => "],["Awaitable","<"],["void",">"]]]},{"name":"spawn","description":"Spawns all the shards","optional":false,"type":[[["("],["shardIds",": "],["Array","<"],["number",">) => "],["Awaitable","<"],["void",">"]]]}]},{"name":"OptionalWebSocketManagerOptions","description":"Optional additional configuration for the WebSocketManager","meta":{"line":73,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L73"},"props":[{"name":"compression","description":"The compression method to use","optional":false,"type":[[["null"," | "],["ZlibStream"]]]},{"name":"encoding","description":"The encoding to use","optional":false,"type":[[["JSON"]]]},{"name":"handshakeTimeout","description":"How long to wait for a shard to connect before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"helloTimeout","description":"How long to wait for a shard's HELLO packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"identifyProperties","description":"Properties to send to the gateway when identifying","optional":false,"type":[[["GatewayIdentifyProperties"]]]},{"name":"initialPresence","description":"Initial presence data to send to the gateway when identifying","optional":false,"type":[[["null"," | "],["GatewayPresenceUpdateData"]]]},{"name":"largeThreshold","description":"Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"readyTimeout","description":"How long to wait for a shard's READY packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"shardCount","description":"The total number of shards across all WebsocketManagers you intend to instantiate.\nUse `null` to use Discord's recommended shard count","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"shardIds","description":"The ids of the shards this WebSocketManager should manage.\nUse `null` to simply spawn 0 through `shardCount - 1`","optional":false,"type":[[["null"," | "],["Array","<"],["number","> | "],["ShardRange"]]]},{"name":"version","description":"The gateway version to use","optional":false,"type":[[["string"]]]},{"name":"retrieveSessionInfo","description":"Function used to retrieve session information (and attempt to resume) for a given shard","optional":false,"type":[[["("],["shardId",": "],["number",") => "],["Awaitable","<"],["null"," | "],["SessionInfo",">"]]]},{"name":"updateSessionInfo","description":"Function used to store session information for a given shard","optional":false,"type":[[["("],["shardId",": "],["number",", "],["sessionInfo",": "],["null"," | "],["SessionInfo",") => "],["Awaitable","<"],["void",">"]]]}]},{"name":"RequiredWebSocketManagerOptions","description":"Required options for the WebSocketManager","meta":{"line":55,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L55"},"props":[{"name":"intents","description":"The intents to request","optional":false,"type":[[["GatewayIntentBits"]]]},{"name":"rest","description":"The REST instance to use for fetching gateway information","optional":false,"type":[[["REST"]]]},{"name":"token","description":"The token to use for identifying with the gateway","optional":false,"type":[[["string"]]]}]},{"name":"SessionInfo","description":"Session information for a given shard, used to resume a session","meta":{"line":29,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L29"},"props":[{"name":"resumeURL","description":"URL to use when resuming","optional":false,"type":[[["string"]]]},{"name":"sequence","description":"The sequence number of the last message sent by the shard","optional":false,"type":[[["number"]]]},{"name":"sessionId","description":"Session id for this shard","optional":false,"type":[[["string"]]]},{"name":"shardCount","description":"The total number of shards at the time of this shard identifying","optional":false,"type":[[["number"]]]},{"name":"shardId","description":"The id of the shard","optional":false,"type":[[["number"]]]}]},{"name":"ShardRange","description":"Represents a range of shard ids","meta":{"line":21,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L21"},"props":[{"name":"end","optional":false,"type":[[["number"]]]},{"name":"start","optional":false,"type":[[["number"]]]}]},{"name":"WebSocketShardDestroyOptions","meta":{"line":60,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L60"},"props":[{"name":"code","optional":true,"type":[[["number"]]]},{"name":"reason","optional":true,"type":[[["string"]]]},{"name":"recover","optional":true,"type":[[["WebSocketShardDestroyRecovery"]]]}]},{"name":"WorkerData","meta":{"line":12,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L12"},"props":[{"name":"compression","description":"The compression method to use","optional":false,"type":[[["null"," | "],["ZlibStream"]]]},{"name":"encoding","description":"The encoding to use","optional":false,"type":[[["JSON"]]]},{"name":"gatewayInformation","optional":false,"type":[[["APIGatewayBotInfo"]]]},{"name":"handshakeTimeout","description":"How long to wait for a shard to connect before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"helloTimeout","description":"How long to wait for a shard's HELLO packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"identifyProperties","description":"Properties to send to the gateway when identifying","optional":false,"type":[[["GatewayIdentifyProperties"]]]},{"name":"initialPresence","description":"Initial presence data to send to the gateway when identifying","optional":false,"type":[[["null"," | "],["GatewayPresenceUpdateData"]]]},{"name":"intents","description":"The intents to request","optional":false,"type":[[["GatewayIntentBits"]]]},{"name":"largeThreshold","description":"Value between 50 and 250, total number of members where the gateway will stop sending offline members in the guild member list","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"readyTimeout","description":"How long to wait for a shard's READY packet before giving up","optional":false,"type":[[["null"," | "],["number"]]]},{"name":"shardCount","optional":false,"type":[[["number"]]]},{"name":"shardIds","optional":false,"type":[[["Array","<"],["number",">"]]]},{"name":"token","description":"The token to use for identifying with the gateway","optional":false,"type":[[["string"]]]},{"name":"version","description":"The gateway version to use","optional":false,"type":[[["string"]]]}]},{"name":"WorkerShardingStrategyOptions","description":"Options for a WorkerShardingStrategy","meta":{"line":48,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L48"},"props":[{"name":"shardsPerWorker","description":"Dictates how many shards should be spawned per worker thread.","optional":false,"type":[[["number"," | "],["'all'"]]]}]},{"name":"Awaitable","type":[[["Promise","<"],["T","> | "],["T"]]],"meta":{"line":3,"file":"utils.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/utils/utils.ts#L3"}},{"name":"ManagerShardEventsMap","type":[[["unknown"]]],"meta":{"line":165,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L165"}},{"name":"WebSocketManagerOptions","type":[[["OptionalWebSocketManagerOptions"," & "],["RequiredWebSocketManagerOptions"]]],"meta":{"line":163,"file":"WebSocketManager.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketManager.ts#L163"}},{"name":"WebSocketShardEventsMap","type":[[["{"],["\ndebug",": ["],["unknown","],"],["\ndispatch",": ["],["unknown","],"],["\nhello",": [],"],["\nready",": [],"],["\nresumed",": []"],["\n","}"]]],"meta":{"line":52,"file":"WebSocketShard.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/ws/WebSocketShard.ts#L52"},"props":[{"name":"debug","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"dispatch","optional":false,"type":[[["["],["unknown","]"]]]},{"name":"hello","optional":false,"type":[[["[]"]]]},{"name":"ready","optional":false,"type":[[["[]"]]]},{"name":"resumed","optional":false,"type":[[["[]"]]]}]},{"name":"WorkerRecievePayload","type":[[["{"],["\ndata",": "],["any",","],["\nevent",": "],["WebSocketShardEvents",","],["\nop",": "],["WorkerRecievePayloadOpEvent",","],["\nshardId",": "],["number\n","} | {"],["\nnonce",": "],["number",","],["\nop",": "],["WorkerRecievePayloadOpRetrieveSessionInfo",","],["\nshardId",": "],["number\n","} | {"],["\nop",": "],["WorkerRecievePayloadOpConnected",","],["\nshardId",": "],["number\n","} | {"],["\nop",": "],["WorkerRecievePayloadOpDestroyed",","],["\nshardId",": "],["number\n","} | {"],["\nop",": "],["WorkerRecievePayloadOpUpdateSessionInfo",","],["\nsession",": "],["SessionInfo"," | "],["null",","],["\nshardId",": "],["number\n","}"]]],"meta":{"line":37,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L37"}},{"name":"WorkerSendPayload","type":[[["{"],["\nnonce",": "],["number",","],["\nop",": "],["WorkerSendPayloadOpSessionInfoResponse",","],["\nsession",": "],["SessionInfo"," | "],["null\n","} | {"],["\nop",": "],["WorkerSendPayloadOpConnect",","],["\nshardId",": "],["number\n","} | {"],["\nop",": "],["WorkerSendPayloadOpDestroy",","],["\noptions",": "],["WebSocketShardDestroyOptions",","],["\nshardId",": "],["number\n","} | {"],["\nop",": "],["WorkerSendPayloadOpSend",","],["\npayload",": "],["GatewaySendPayload",","],["\nshardId",": "],["number\n","}"]]],"meta":{"line":23,"file":"WorkerShardingStrategy.ts","url":"https://github.com/discordjs/discord.js/blob/735e0bf52/packages/ws/src/strategies/sharding/WorkerShardingStrategy.ts#L23"}}],"externals":[],"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"<div align=\"center\">\n\t<br />\n\t<p>\n\t\t<a href=\"https://discord.js.org\"><img src=\"https://discord.js.org/static/logo.svg\" width=\"546\" alt=\"discord.js\" /></a>\n\t</p>\n\t<br />\n\t<p>\n\t\t<a href=\"https://discord.gg/djs\"><img src=\"https://img.shields.io/discord/222078108977594368?color=5865F2&logo=discord&logoColor=white\" alt=\"Discord server\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/ws\"><img src=\"https://img.shields.io/npm/v/@discordjs/ws.svg?maxAge=3600\" alt=\"npm version\" /></a>\n\t\t<a href=\"https://www.npmjs.com/package/@discordjs/ws\"><img src=\"https://img.shields.io/npm/dt/@discordjs/ws.svg?maxAge=3600\" alt=\"npm downloads\" /></a>\n\t\t<a href=\"https://github.com/discordjs/discord.js/actions\"><img src=\"https://github.com/discordjs/discord.js/actions/workflows/test.yml/badge.svg\" alt=\"Build status\" /></a>\n\t\t<a href=\"https://codecov.io/gh/discordjs/discord.js\" ><img src=\"https://codecov.io/gh/discordjs/discord.js/branch/main/graph/badge.svg?precision=2&flag=ws\" alt=\"Code coverage\" /></a>\n\t</p>\n\t<p>\n\t\t<a href=\"https://vercel.com/?utm_source=discordjs&utm_campaign=oss\"><img src=\"https://raw.githubusercontent.com/discordjs/discord.js/main/.github/powered-by-vercel.svg\" alt=\"Vercel\" /></a>\n\t</p>\n</div>\n\n## About\n\n`@discordjs/ws` is a powerful wrapper around Discord's gateway.\n\n## Installation\n\n**Node.js 16.9.0 or newer is required.**\n\n```sh-session\nnpm install @discordjs/ws\nyarn add @discordjs/ws\npnpm add @discordjs/ws\n```\n\n## Example usage\n\n```ts\nimport { WebSocketManager, WebSocketShardEvents } from '@discordjs/ws';\nimport { REST } from '@discordjs/rest';\n\nconst rest = new REST().setToken(process.env.DISCORD_TOKEN);\n// This example will spawn Discord's recommended shard count, all under the current process.\nconst manager = new WebSocketManager({\n\ttoken: process.env.DISCORD_TOKEN,\n\tintents: 0, // for no intents\n\trest,\n});\n\nawait manager.connect();\n```\n\n### Specify shards\n\n```ts\n// Spawn 4 shards\nconst manager = new WebSocketManager({\n\ttoken: process.env.DISCORD_TOKEN,\n\tintents: 0,\n\trest,\n\tshardCount: 4,\n});\n\n// The manager also supports being responsible for only a subset of your shards:\n\n// Your bot will run 8 shards overall\n// This manager will only take care of 0, 2, 4, and 6\nconst manager = new WebSocketManager({\n\ttoken: process.env.DISCORD_TOKEN,\n\tintents: 0,\n\trest,\n\tshardCount: 8,\n\tshardIds: [0, 2, 4, 6],\n});\n\n// Alternatively, if your shards are consecutive, you can pass in a range\nconst manager = new WebSocketManager({\n\ttoken: process.env.DISCORD_TOKEN,\n\tintents: 0,\n\trest,\n\tshardCount: 8,\n\tshardIds: {\n\t\tstart: 0,\n\t\tend: 4,\n\t},\n});\n```\n\n### Specify `worker_threads`\n\nYou can also have the shards spawn in worker threads:\n\n```ts\nimport { WebSocketManager, WebSocketShardEvents, WorkerShardingStrategy } from '@discordjs/ws';\n\nconst manager = new WebSocketManager({\n\ttoken: process.env.DISCORD_TOKEN,\n\tintents: 0,\n\trest,\n\tshardCount: 6,\n});\n\n// This will cause 3 workers to spawn, 2 shards per each\nmanager.setStrategy(new WorkerShardingStrategy(manager, { shardsPerWorker: 2 }));\n// Or maybe you want all your shards under a single worker\nmanager.setStrategy(new WorkerShardingStrategy(manager, { shardsPerWorker: 'all' }));\n```\n\n## Links\n\n- [Website](https://discord.js.org/) ([source](https://github.com/discordjs/discord.js/tree/main/packages/website))\n- [Documentation](https://discord.js.org/#/docs/ws)\n- [Guide](https://discordjs.guide/) ([source](https://github.com/discordjs/guide))\n  See also the [Update Guide](https://discordjs.guide/additional-info/changes-in-v14.html), including updated and removed items in the library.\n- [discord.js Discord server](https://discord.gg/djs)\n- [Discord API Discord server](https://discord.gg/discord-api)\n- [GitHub](https://github.com/discordjs/discord.js/tree/main/packages/ws)\n- [npm](https://www.npmjs.com/package/@discordjs/ws)\n- [Related libraries](https://discord.com/developers/docs/topics/community-resources#libraries)\n\n## Contributing\n\nBefore creating an issue, please ensure that it hasn't already been reported/suggested, and double-check the\n[documentation](https://discord.js.org/#/docs/ws).  \nSee [the contribution guide](https://github.com/discordjs/discord.js/blob/main/.github/CONTRIBUTING.md) if you'd like to submit a PR.\n\n## Help\n\nIf you don't understand something in the documentation, you are experiencing problems, or you just need a gentle\nnudge in the right direction, please don't hesitate to join our official [discord.js Server](https://discord.gg/djs).\n","path":"README.md"}}}}}